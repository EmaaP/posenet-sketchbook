{"version":3,"sources":["node_modules/core-js/library/modules/_to-integer.js","node_modules/core-js/library/modules/_defined.js","node_modules/core-js/library/modules/_string-at.js","node_modules/core-js/library/modules/_library.js","node_modules/core-js/library/modules/_global.js","node_modules/core-js/library/modules/_core.js","node_modules/core-js/library/modules/_a-function.js","node_modules/core-js/library/modules/_ctx.js","node_modules/core-js/library/modules/_is-object.js","node_modules/core-js/library/modules/_an-object.js","node_modules/core-js/library/modules/_fails.js","node_modules/core-js/library/modules/_descriptors.js","node_modules/core-js/library/modules/_dom-create.js","node_modules/core-js/library/modules/_ie8-dom-define.js","node_modules/core-js/library/modules/_to-primitive.js","node_modules/core-js/library/modules/_object-dp.js","node_modules/core-js/library/modules/_property-desc.js","node_modules/core-js/library/modules/_hide.js","node_modules/core-js/library/modules/_has.js","node_modules/core-js/library/modules/_export.js","node_modules/core-js/library/modules/_redefine.js","node_modules/core-js/library/modules/_iterators.js","node_modules/core-js/library/modules/_cof.js","node_modules/core-js/library/modules/_iobject.js","node_modules/core-js/library/modules/_to-iobject.js","node_modules/core-js/library/modules/_to-length.js","node_modules/core-js/library/modules/_to-absolute-index.js","node_modules/core-js/library/modules/_array-includes.js","node_modules/core-js/library/modules/_shared.js","node_modules/core-js/library/modules/_uid.js","node_modules/core-js/library/modules/_shared-key.js","node_modules/core-js/library/modules/_object-keys-internal.js","node_modules/core-js/library/modules/_enum-bug-keys.js","node_modules/core-js/library/modules/_object-keys.js","node_modules/core-js/library/modules/_object-dps.js","node_modules/core-js/library/modules/_html.js","node_modules/core-js/library/modules/_object-create.js","node_modules/core-js/library/modules/_wks.js","node_modules/core-js/library/modules/_set-to-string-tag.js","node_modules/core-js/library/modules/_iter-create.js","node_modules/core-js/library/modules/_to-object.js","node_modules/core-js/library/modules/_object-gpo.js","node_modules/core-js/library/modules/_iter-define.js","node_modules/core-js/library/modules/es6.string.iterator.js","node_modules/core-js/library/modules/_add-to-unscopables.js","node_modules/core-js/library/modules/_iter-step.js","node_modules/core-js/library/modules/es6.array.iterator.js","node_modules/core-js/library/modules/web.dom.iterable.js","node_modules/core-js/library/modules/_classof.js","node_modules/core-js/library/modules/_an-instance.js","node_modules/core-js/library/modules/_iter-call.js","node_modules/core-js/library/modules/_is-array-iter.js","node_modules/core-js/library/modules/core.get-iterator-method.js","node_modules/core-js/library/modules/_for-of.js","node_modules/core-js/library/modules/_species-constructor.js","node_modules/core-js/library/modules/_invoke.js","node_modules/core-js/library/modules/_task.js","node_modules/core-js/library/modules/_microtask.js","node_modules/core-js/library/modules/_new-promise-capability.js","node_modules/core-js/library/modules/_perform.js","node_modules/core-js/library/modules/_user-agent.js","node_modules/core-js/library/modules/_promise-resolve.js","node_modules/core-js/library/modules/_redefine-all.js","node_modules/core-js/library/modules/_set-species.js","node_modules/core-js/library/modules/_iter-detect.js","node_modules/core-js/library/modules/es6.promise.js","node_modules/core-js/library/modules/es7.promise.finally.js","node_modules/core-js/library/modules/es7.promise.try.js","node_modules/core-js/library/fn/promise.js","node_modules/babel-runtime/core-js/promise.js","../src/dat/color/toString.js","../src/dat/utils/common.js","../src/dat/color/interpret.js","../src/dat/color/math.js","../src/dat/color/Color.js","../src/dat/controllers/Controller.js","../src/dat/dom/dom.js","../src/dat/controllers/BooleanController.js","../src/dat/controllers/OptionController.js","../src/dat/controllers/StringController.js","../src/dat/controllers/NumberController.js","../src/dat/controllers/NumberControllerBox.js","../src/dat/controllers/NumberControllerSlider.js","../src/dat/controllers/FunctionController.js","../src/dat/controllers/ColorController.js","../src/dat/utils/css.js","../src/dat/gui/saveDialogue.html.js","../src/dat/controllers/ControllerFactory.js","../src/dat/utils/requestAnimationFrame.js","../src/dat/dom/CenteredDiv.js","../src/dat/gui/GUI.js","../src/dat/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/buffer/index.js","node_modules/safe-buffer/index.js","node_modules/process/browser.js","node_modules/randombytes/browser.js","node_modules/inherits/inherits_browser.js","node_modules/events/events.js","node_modules/process-nextick-args/index.js","node_modules/readable-stream/lib/internal/streams/stream-browser.js","node_modules/core-util-is/lib/util.js","node_modules/readable-stream/lib/internal/streams/BufferList.js","node_modules/readable-stream/lib/internal/streams/destroy.js","node_modules/util-deprecate/browser.js","node_modules/readable-stream/lib/_stream_writable.js","node_modules/readable-stream/lib/_stream_duplex.js","node_modules/readable-stream/node_modules/string_decoder/lib/string_decoder.js","node_modules/readable-stream/lib/_stream_readable.js","node_modules/readable-stream/lib/_stream_transform.js","node_modules/readable-stream/lib/_stream_passthrough.js","node_modules/readable-stream/readable-browser.js","node_modules/readable-stream/writable-browser.js","node_modules/readable-stream/duplex-browser.js","node_modules/readable-stream/transform.js","node_modules/readable-stream/passthrough.js","node_modules/stream-browserify/index.js","node_modules/hash-base/index.js","node_modules/md5.js/index.js","node_modules/ripemd160/index.js","node_modules/sha.js/hash.js","node_modules/sha.js/sha.js","node_modules/sha.js/sha1.js","node_modules/sha.js/sha256.js","node_modules/sha.js/sha224.js","node_modules/sha.js/sha512.js","node_modules/sha.js/sha384.js","node_modules/sha.js/index.js","node_modules/string_decoder/lib/string_decoder.js","node_modules/cipher-base/index.js","node_modules/create-hash/browser.js","node_modules/create-hmac/legacy.js","node_modules/create-hash/md5.js","node_modules/create-hmac/browser.js","node_modules/browserify-sign/algos.js","node_modules/pbkdf2/lib/precondition.js","node_modules/pbkdf2/lib/default-encoding.js","node_modules/pbkdf2/lib/sync-browser.js","node_modules/pbkdf2/lib/async.js","node_modules/pbkdf2/browser.js","node_modules/des.js/lib/des/utils.js","node_modules/minimalistic-assert/index.js","node_modules/des.js/lib/des/cipher.js","node_modules/des.js/lib/des/des.js","node_modules/des.js/lib/des/cbc.js","node_modules/des.js/lib/des/ede.js","node_modules/des.js/lib/des.js","node_modules/browserify-des/index.js","node_modules/browserify-aes/modes/ecb.js","node_modules/buffer-xor/index.js","node_modules/browserify-aes/modes/cbc.js","node_modules/browserify-aes/modes/cfb.js","node_modules/browserify-aes/modes/cfb8.js","node_modules/browserify-aes/modes/cfb1.js","node_modules/browserify-aes/modes/ofb.js","node_modules/browserify-aes/incr32.js","node_modules/browserify-aes/modes/ctr.js","node_modules/browserify-aes/modes/index.js","node_modules/browserify-aes/aes.js","node_modules/browserify-aes/ghash.js","node_modules/browserify-aes/authCipher.js","node_modules/browserify-aes/streamCipher.js","node_modules/evp_bytestokey/index.js","node_modules/browserify-aes/encrypter.js","node_modules/browserify-aes/decrypter.js","node_modules/browserify-aes/browser.js","node_modules/browserify-des/modes.js","node_modules/browserify-cipher/browser.js","node_modules/bn.js/lib/bn.js","node_modules/brorand/index.js","node_modules/miller-rabin/lib/mr.js","node_modules/diffie-hellman/lib/generatePrime.js","node_modules/diffie-hellman/lib/dh.js","node_modules/diffie-hellman/browser.js","node_modules/browserify-rsa/index.js","node_modules/minimalistic-crypto-utils/lib/utils.js","node_modules/elliptic/lib/elliptic/utils.js","node_modules/elliptic/lib/elliptic/curve/base.js","node_modules/elliptic/lib/elliptic/curve/short.js","node_modules/elliptic/lib/elliptic/curve/mont.js","node_modules/elliptic/lib/elliptic/curve/edwards.js","node_modules/elliptic/lib/elliptic/curve/index.js","node_modules/hash.js/lib/hash/utils.js","node_modules/hash.js/lib/hash/common.js","node_modules/hash.js/lib/hash/sha/common.js","node_modules/hash.js/lib/hash/sha/1.js","node_modules/hash.js/lib/hash/sha/256.js","node_modules/hash.js/lib/hash/sha/224.js","node_modules/hash.js/lib/hash/sha/512.js","node_modules/hash.js/lib/hash/sha/384.js","node_modules/hash.js/lib/hash/sha.js","node_modules/hash.js/lib/hash/ripemd.js","node_modules/hash.js/lib/hash/hmac.js","node_modules/hash.js/lib/hash.js","node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","node_modules/elliptic/lib/elliptic/curves.js","node_modules/hmac-drbg/lib/hmac-drbg.js","node_modules/elliptic/lib/elliptic/ec/key.js","node_modules/elliptic/lib/elliptic/ec/signature.js","node_modules/elliptic/lib/elliptic/ec/index.js","node_modules/elliptic/lib/elliptic/eddsa/key.js","node_modules/elliptic/lib/elliptic/eddsa/signature.js","node_modules/elliptic/lib/elliptic/eddsa/index.js","node_modules/elliptic/lib/elliptic.js","node_modules/vm-browserify/index.js","node_modules/asn1.js/lib/asn1/api.js","node_modules/asn1.js/lib/asn1/base/reporter.js","node_modules/asn1.js/lib/asn1/base/buffer.js","node_modules/asn1.js/lib/asn1/base/node.js","node_modules/asn1.js/lib/asn1/base/index.js","node_modules/asn1.js/lib/asn1/constants/der.js","node_modules/asn1.js/lib/asn1/constants/index.js","node_modules/asn1.js/lib/asn1/decoders/der.js","node_modules/asn1.js/lib/asn1/decoders/pem.js","node_modules/asn1.js/lib/asn1/decoders/index.js","node_modules/asn1.js/lib/asn1/encoders/der.js","node_modules/asn1.js/lib/asn1/encoders/pem.js","node_modules/asn1.js/lib/asn1/encoders/index.js","node_modules/asn1.js/lib/asn1.js","node_modules/parse-asn1/certificate.js","node_modules/parse-asn1/asn1.js","node_modules/parse-asn1/fixProc.js","node_modules/parse-asn1/index.js","node_modules/browserify-sign/browser/sign.js","node_modules/browserify-sign/browser/verify.js","node_modules/browserify-sign/browser/index.js","node_modules/create-ecdh/browser.js","node_modules/public-encrypt/mgf.js","node_modules/public-encrypt/xor.js","node_modules/public-encrypt/withPublic.js","node_modules/public-encrypt/publicEncrypt.js","node_modules/public-encrypt/privateDecrypt.js","node_modules/public-encrypt/browser.js","node_modules/randomfill/browser.js","node_modules/crypto-browserify/index.js","node_modules/node-fetch/browser.js","node_modules/util/support/isBufferBrowser.js","node_modules/util/node_modules/inherits/inherits_browser.js","node_modules/util/util.js","../src/environment.ts","../src/util.ts","../src/profiler.ts","../src/tensor_format.ts","../src/tensor.ts","../src/types.ts","../src/tensor_util.ts","../src/engine.ts","../src/tape.ts","../src/device_util.ts","../src/flags.ts","../src/backends/webgl/canvas_util.ts","../src/backends/webgl/webgl_util.ts","../src/globals.ts","../src/log.ts","../src/tensor_util_env.ts","../src/ops/axis_util.ts","../src/ops/concat_util.ts","../src/ops/operation.ts","../src/backends/webgl/flags_webgl.ts","../src/ops/complex_ops.ts","../src/ops/tensor_ops.ts","../src/ops/concat_split.ts","../node_modules/seedrandom/lib/alea.js","../node_modules/seedrandom/lib/xor128.js","../node_modules/seedrandom/lib/xorwow.js","../node_modules/seedrandom/lib/xorshift7.js","../node_modules/seedrandom/lib/xor4096.js","../node_modules/seedrandom/lib/tychei.js","../node_modules/seedrandom/seedrandom.js","../node_modules/seedrandom/index.js","../src/ops/rand.ts","../src/ops/array_ops.ts","../src/ops/array_ops_util.ts","../src/ops/gather_nd_util.ts","../src/ops/reduce_util.ts","../src/ops/scatter_nd_util.ts","../src/ops/slice_util.ts","../src/gradients.ts","../src/ops/softmax.ts","../src/backends/backend.ts","../src/ops/broadcast_util.ts","../src/ops/conv_util.ts","../src/backends/backend_util.ts","../src/backends/complex_util.ts","../src/backends/non_max_suppression_impl.ts","../src/backends/split_shared.ts","../src/backends/tile_impl.ts","../src/backends/topk_impl.ts","../src/backends/where_impl.ts","../src/backends/webgl/addn_gpu.ts","../src/backends/webgl/addn_packed_gpu.ts","../src/backends/webgl/argminmax_gpu.ts","../src/backends/packing_util.ts","../src/backends/webgl/glsl_version.ts","../src/backends/webgl/shader_compiler_util.ts","../src/backends/webgl/shader_compiler.ts","../src/backends/webgl/argminmax_packed_gpu.ts","../src/backends/webgl/avg_pool_backprop_gpu.ts","../src/backends/webgl/batchnorm_gpu.ts","../src/backends/webgl/batchnorm_packed_gpu.ts","../src/backends/webgl/binaryop_complex_gpu.ts","../src/backends/webgl/binaryop_gpu.ts","../src/backends/webgl/binaryop_packed_gpu.ts","../src/backends/webgl/clip_gpu.ts","../src/backends/webgl/clip_packed_gpu.ts","../src/backends/webgl/complex_abs_gpu.ts","../src/backends/webgl/concat_gpu.ts","../src/backends/webgl/concat_packed_gpu.ts","../src/backends/webgl/conv_backprop_gpu.ts","../src/backends/webgl/conv_backprop_gpu_depthwise.ts","../src/backends/webgl/conv_gpu.ts","../src/backends/webgl/conv_gpu_depthwise.ts","../src/backends/webgl/conv_packed_gpu_depthwise.ts","../src/backends/webgl/crop_and_resize_gpu.ts","../src/backends/webgl/cumsum_gpu.ts","../src/backends/webgl/decode_matrix_gpu.ts","../src/backends/webgl/decode_matrix_packed_gpu.ts","../src/backends/webgl/depth_to_space_gpu.ts","../src/backends/webgl/encode_float_gpu.ts","../src/backends/webgl/encode_float_packed_gpu.ts","../src/backends/webgl/encode_matrix_gpu.ts","../src/backends/webgl/encode_matrix_packed_gpu.ts","../src/backends/webgl/fft_gpu.ts","../src/backends/webgl/fill_gpu.ts","../src/backends/webgl/from_pixels_gpu.ts","../src/backends/webgl/from_pixels_packed_gpu.ts","../src/backends/webgl/gather_gpu.ts","../src/backends/webgl/gather_nd_gpu.ts","../src/backends/webgl/tex_util.ts","../src/backends/webgl/gpgpu_util.ts","../src/backends/webgl/gpgpu_context.ts","../src/backends/webgl/gpgpu_math.ts","../src/backends/webgl/im2col_packed_gpu.ts","../src/backends/webgl/lrn_gpu.ts","../src/backends/webgl/lrn_grad_gpu.ts","../src/backends/webgl/lrn_packed_gpu.ts","../src/backends/webgl/max_pool_backprop_gpu.ts","../src/backends/webgl/mulmat_packed_gpu.ts","../src/backends/webgl/multinomial_gpu.ts","../src/backends/webgl/onehot_gpu.ts","../src/backends/webgl/pack_gpu.ts","../src/backends/webgl/pad_gpu.ts","../src/backends/webgl/pad_packed_gpu.ts","../src/backends/webgl/pool_gpu.ts","../src/backends/webgl/reduce_gpu.ts","../src/backends/webgl/reshape_packed_gpu.ts","../src/backends/webgl/resize_bilinear_backprop_gpu.ts","../src/backends/webgl/resize_bilinear_gpu.ts","../src/backends/webgl/resize_bilinear_packed_gpu.ts","../src/backends/webgl/resize_nearest_neighbor_backprop_gpu.ts","../src/backends/webgl/resize_nearest_neighbor_gpu.ts","../src/backends/webgl/reverse_gpu.ts","../src/backends/webgl/reverse_packed_gpu.ts","../src/backends/webgl/scatter_gpu.ts","../src/backends/webgl/segment_gpu.ts","../src/backends/webgl/select_gpu.ts","../src/backends/webgl/slice_gpu.ts","../src/backends/webgl/slice_packed_gpu.ts","../src/backends/webgl/strided_slice_gpu.ts","../src/backends/webgl/texture_manager.ts","../src/backends/webgl/tile_gpu.ts","../src/backends/webgl/transpose_gpu.ts","../src/backends/webgl/transpose_packed_gpu.ts","../src/ops/selu_util.ts","../src/backends/webgl/unaryop_gpu.ts","../src/backends/webgl/unaryop_packed_gpu.ts","../src/backends/webgl/unpack_gpu.ts","../src/backends/webgl/backend_webgl.ts","../src/ops/segment_util.ts","../src/ops/unary_ops.ts","../src/ops/batchnorm.ts","../src/ops/conv.ts","../src/ops/matmul.ts","../src/ops/reverse.ts","../src/ops/pool.ts","../src/ops/slice.ts","../src/ops/reduction_ops.ts","../src/ops/compare.ts","../src/ops/binary_ops.ts","../src/ops/logical_ops.ts","../src/ops/relu_ops.ts","../src/ops/transpose.ts","../src/ops/lrn.ts","../src/ops/norm.ts","../src/ops/segment_ops.ts","../src/ops/lstm.ts","../src/ops/moving_average.ts","../src/ops/strided_slice.ts","../src/ops/topk.ts","../src/ops/scatter_nd.ts","../src/ops/spectral_ops.ts","../src/ops/sparse_to_dense.ts","../src/ops/sparse_to_dense_util.ts","../src/ops/gather_nd.ts","../src/ops/dropout.ts","../src/ops/signal_ops.ts","../src/ops/loss_ops.ts","../src/ops/linalg_ops.ts","../src/ops/image_ops.ts","../src/ops/fused_ops.ts","../src/backends/cpu/backend_cpu.ts","../src/ops/erf_util.ts","../src/platforms/platform_browser.ts","../src/platforms/platform_node.ts","../src/io/types.ts","../src/io/io_utils.ts","../src/io/router_registry.ts","../src/io/model_management.ts","../src/io/indexed_db.ts","../src/io/local_storage.ts","../src/io/browser_files.ts","../src/io/progress.ts","../src/io/weights_loader.ts","../src/io/http.ts","../src/io/passthrough.ts","../src/ops/confusion_matrix.ts","../src/ops/browser.ts","../src/serialization.ts","../src/test_util.ts","../src/version.ts","../src/optimizers/optimizer.ts","../src/optimizers/adadelta_optimizer.ts","../src/optimizers/adagrad_optimizer.ts","../src/optimizers/adam_optimizer.ts","../src/optimizers/adamax_optimizer.ts","../src/optimizers/sgd_optimizer.ts","../src/optimizers/momentum_optimizer.ts","../src/optimizers/rmsprop_optimizer.ts","../src/optimizers/optimizer_constructors.ts","../src/train.ts","../src/browser_util.ts","../src/index.ts","../src/data/compiled_api.ts","../src/operations/custom_op/register.ts","../src/operations/executors/utils.ts","../src/operations/op_list/arithmetic.ts","../src/operations/op_list/basic_math.ts","../src/operations/op_list/control.ts","../src/operations/op_list/convolution.ts","../src/operations/op_list/creation.ts","../src/operations/op_list/dynamic.ts","../src/operations/op_list/evaluation.ts","../src/operations/op_list/graph.ts","../src/operations/op_list/image.ts","../src/operations/op_list/logical.ts","../src/operations/op_list/matrices.ts","../src/operations/op_list/normalization.ts","../src/operations/op_list/reduction.ts","../src/operations/op_list/slice_join.ts","../src/operations/op_list/spectral.ts","../src/operations/op_list/transformation.ts","../src/operations/operation_mapper.ts","../src/operations/custom_op/node_value_impl.ts","../src/operations/executors/arithmetic_executor.ts","../src/operations/executors/basic_math_executor.ts","../src/executor/tensor_array.ts","../src/operations/executors/control_executor.ts","../src/operations/executors/convolution_executor.ts","../src/operations/executors/creation_executor.ts","../src/operations/executors/dynamic_executor.ts","../src/operations/executors/evaluation_executor.ts","../src/operations/executors/graph_executor.ts","../src/operations/executors/image_executor.ts","../src/operations/executors/logical_executor.ts","../src/operations/executors/matrices_executor.ts","../src/operations/executors/normalization_executor.ts","../src/operations/executors/reduction_executor.ts","../src/operations/executors/slice_join_executor.ts","../src/operations/executors/spectral_executor.ts","../src/operations/executors/transformation_executor.ts","../src/operations/operation_executor.ts","../src/executor/execution_context.ts","../src/executor/model_analysis.ts","../src/executor/graph_executor.ts","../src/executor/graph_model.ts","node_modules/@tensorflow-models/posenet/dist/posenet.esm.js","sketches/PoseDetection.js","sketches/collagecreator/js/sketch.js","sketches/collagecreator/js/main.js"],"names":["color","forceCSSHex","colorFormat","__state","conversionName","toString","r","Math","round","g","b","a","h","s","toFixed","v","str","hex","length","ARR_EACH","Array","prototype","forEach","ARR_SLICE","slice","Common","target","each","call","arguments","obj","keys","isObject","Object","key","isUndefined","bind","toCall","args","i","apply","itr","scope","l","BREAK","fnc","func","threshold","callImmediately","timeout","delayed","callNow","setTimeout","toArray","undefined","isNaN","isArray","constructor","INTERPRETATIONS","common","isString","original","test","match","parseInt","parseFloat","isNumber","result","toReturn","interpret","family","litmus","conversions","conversion","read","tmpComponent","ColorMath","hi","floor","f","p","q","t","c","min","max","delta","NaN","hex_with_component","componentIndex","value","Color","Error","colorToString","write","defineRGBComponent","component","componentHexIndex","defineProperty","space","recalculateRGB","defineHSVComponent","recalculateHSV","math","component_from_hex","extend","hsv_to_rgb","rgb_to_hsv","COMPONENTS","rgb_to_hex","Controller","object","property","initialValue","domElement","document","createElement","__onChange","__onFinishChange","newValue","updateDisplay","getValue","EVENT_MAP","EVENT_MAP_INV","k","e","CSS_VALUE_PIXELS","cssValueToPixels","val","isNull","dom","elem","selectable","style","onselectstart","MozUserSelect","KhtmlUserSelect","unselectable","hor","vert","vertical","horizontal","position","left","right","top","bottom","eventType","pars","aux","params","className","evt","createEvent","clientX","x","clientY","y","initMouseEvent","bubbles","cancelable","window","clickCount","init","initKeyboardEvent","initKeyEvent","defaults","ctrlKey","altKey","shiftKey","metaKey","keyCode","charCode","initEvent","dispatchEvent","event","newBool","bool","addEventListener","attachEvent","removeEventListener","detachEvent","classes","split","indexOf","push","join","replace","removeAttribute","index","splice","RegExp","getComputedStyle","width","height","el","offset","offsetParent","offsetLeft","offsetTop","activeElement","type","href","BooleanController","_this","__prev","__checkbox","setAttribute","onChange","setValue","appendChild","checked","OptionController","opts","options","__select","map","element","opt","innerHTML","desiredValue","selectedIndex","isActive","StringController","__input","onBlur","blur","numDecimals","_x","NumberController","_params","__min","__max","__step","step","__impliedStep","pow","log","abs","LN10","__precision","_v","minValue","maxValue","stepValue","roundToDecimal","decimals","tenTo","NumberControllerBox","__truncationSuspended","prevY","attempted","onFinish","onMouseDrag","diff","onMouseUp","unbind","onMouseDown","i1","i2","o1","o2","NumberControllerSlider","__background","__foreground","onTouchStart","addClass","preventDefault","bgRect","getBoundingClientRect","touches","onTouchMove","onTouchEnd","pct","FunctionController","text","__button","fire","ColorController","__color","__temp","makeSelectable","__selector","__saturation_field","__field_knob","__field_knob_border","__hue_knob","__hue_field","__input_textShadow","removeClass","valueField","fieldDown","fieldDownH","setSV","fieldUpSV","setH","fieldUpH","toOriginal","fieldRect","mismatch","flip","_flip","toHexString","marginTop","vendors","linearGradient","background","vendor","cssText","hueGradient","css","url","indoc","doc","link","rel","getElementsByTagName","cssContent","injected","head","saveDialogContents","ControllerFactory","isFunction","isBoolean","requestAnimationFrame","callback","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","CenteredDiv","backgroundElement","makeFullscreen","body","hide","display","opacity","webkitTransform","layout","defer","innerWidth","getWidth","innerHeight","getHeight","inject","styleSheet","CSS_NAMESPACE","HIDE_KEY_CODE","CLOSE_BUTTON_HEIGHT","DEFAULT_DEFAULT_PRESET_NAME","SUPPORTS_LOCAL_STORAGE","localStorage","SAVE_DIALOGUE","autoPlaceVirgin","autoPlaceContainer","hideableGuis","GUI","__ul","__folders","__controllers","__rememberedObjects","__rememberedObjectIndecesToControllers","__listening","DEFAULT_WIDTH","autoPlace","load","preset","parent","hideable","resizable","scrollable","useLocalStorage","getItem","getLocalStorageHash","saveToLocalStorage","titleRow","defineProperties","closeOnTop","getRoot","revert","name","closed","CLASS_CLOSED","onResize","__closeButton","TEXT_OPEN","TEXT_CLOSED","setItem","CLASS_MAIN","savedGui","JSON","parse","CLASS_CLOSE_BUTTON","CLASS_CLOSE_TOP","insertBefore","childNodes","CLASS_CLOSE_BOTTOM","titleRowName","createTextNode","addRow","onClickTitle","CLASS_AUTO_PLACE_CONTAINER","CLASS_AUTO_PLACE","__resizeHandler","onResizeDebounced","stringify","getSaveObject","saveToLocalStorageIfPossible","resetWidth","root","toggleHide","gui","CLASS_CONTROLLER_ROW","CLASS_TOO_TALL","CLASS_DRAG","_keydownHandler","which","add","controller","removeChild","__li","subfolder","removeFolder","newGuiParams","folders","li","folder","parentElement","getOffset","node","__save_row","__resize_handle","offsetHeight","debounce","saveDialogueContents","remembered","getCurrentPreset","presetName","newDom","liBefore","removeListeners","markPresetModified","modified","__preset_select","augmentController","__gui","nextSibling","nextElementSibling","remove","firstElementChild","listen","box","method","pc","pb","returned","oldName","wasListening","newController","compose","fakeEvent","stopPropagation","borderLeftColor","isModified","recallSavedValue","matchedIndex","controllerMap","presetMap","factoryArgs","concat","before","container","location","addPresetOption","setSelected","showHideExplain","explain","addSaveMenu","div","firstChild","gears","button","button2","button3","select","getElementById","localStorageCheckBox","saveLocally","newConstructorTextArea","show","focus","save","prompt","saveAs","addResizeHandle","pmouseX","drag","dragStop","dragStart","setWidth","w","useInitialValues","savedValues","setPresetSelectIndex","updateDisplays","controllerArray","controllers","domImport","GUIImport","process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","len","run","nextTick","Item","array","title","browser","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","R","Reflect","ReflectApply","receiver","Function","ReflectOwnKeys","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","ProcessEmitWarning","warning","console","warn","NumberIsNaN","Number","EventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","enumerable","get","set","arg","RangeError","getPrototypeOf","create","setMaxListeners","n","$getMaxListeners","that","getMaxListeners","doError","events","error","er","err","message","context","handler","arrayClone","_addListener","listener","prepend","m","existing","TypeError","newListener","unshift","warned","String","emitter","count","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","list","originalListener","shift","spliceOne","_listeners","unwrap","evlistener","unwrapListeners","rawListeners","listenerCount","eventNames","arr","copy","pop","ret","Buffer","require","Transform","inherits","throwIfNotStringOrBuffer","prefix","isBuffer","HashBase","blockSize","_block","allocUnsafe","_blockSize","_blockOffset","_length","_finalized","_transform","chunk","encoding","update","_flush","digest","data","from","block","_update","j","carry","_digest","fill","MAX_ALLOC","checkBuffer","buf","password","salt","iterations","keylen","defaultEncoding","pVersionMajor","md5","RIPEMD160","sha","checkParameters","ZEROS","alloc","sizes","sha1","sha224","sha256","sha384","sha512","rmd160","ripemd160","Hmac","alg","saltLen","hash","getDigest","blocksize","ipad","opad","ipad1","ipad2","size","shaFunc","rmd160Func","pbkdf2","hmac","DK","block1","destPos","hLen","ceil","writeUInt32BE","T","U","sync","ZERO_BUF","subtle","global","crypto","toBrowser","checks","checkNative","algo","Promise","resolve","importKey","deriveBits","prom","browserPbkdf2","then","catch","res","resolvePromise","promise","out","toLowerCase","resp","pbkdf2Sync","fetch","default","Headers","Request","Response","getOwnPropertyDescriptors","descriptors","getOwnPropertyDescriptor","formatRegExp","format","objects","inspect","_","deprecate","fn","msg","noDeprecation","deprecated","throwDeprecation","traceDeprecation","trace","debugs","debugEnviron","debuglog","toUpperCase","pid","ctx","seen","stylize","stylizeNoColor","depth","colors","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styles","styleType","arrayToHash","idx","recurseTimes","primitive","formatPrimitive","visibleKeys","isError","formatError","isRegExp","isDate","Date","base","braces","toUTCString","output","formatArray","formatProperty","reduceToSingleString","simple","hasOwnProperty","desc","line","substr","numLinesEst","reduce","prev","cur","ar","isNullOrUndefined","isSymbol","re","objectToString","d","isPrimitive","o","pad","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","origin","prop","kCustomPromisifiedSymbol","Symbol","promisify","writable","configurable","promiseResolve","promiseReject","reject","setPrototypeOf","custom","callbackifyOnRejected","reason","cb","newReason","callbackify","callbackified","maybeCb","self","rej","this","populateURLFlags","Environment","platformName","platform","flagName","evaluationFn","setHook","flagRegistry","urlFlags","flagValue","flags","evaluateFlag","assign","search","urlParams","getQueryParams","keyValue","_a","parseValue","queryString","_i","decodeURIComponent","decodeParam","ENV","setEnvironmentGlobal","environment","shuffle","counter","temp","random","clamp","nearestLargerEven","sum","assert","expr","assertShapesMatch","shapeA","shapeB","errorMessagePrefix","arraysEqual","assertNonNull","flatten","isTypedArray","sizeFromShape","shape","n1","n2","isInt","tanh","Infinity","e2x","exp","sizeToSquarishShape","sqrt","rightPad","repeat","repeatedTry","checkFn","delayFn","maxCounter","tryCount","tryFn","nextBackoff","inferFromImplicitShape","shapeProd","implicitIdx","newShape","parseAxisParam","axis","rank","every","ax","squeezeShape","keptDims","axes","sort","getTypedArrayFromDType","dtype","values","Float32Array","Int32Array","Uint8Array","getArrayFromDType","checkComputationForErrors","vals","num","isFinite","checkConversionForErrors","isValidDtype","hasEncodingLoss","oldType","newType","bytesPerElement","bytesFromStringArray","bytes","inferDtype","nearestDivisor","start","computeStrides","strides","toTypedArray","debugMode","noConversionNeeded","toNestedArray","acc","createNestedArray","rest","makeOnesTypedArray","makeZerosTypedArray","now","performance","hrtime","assertNonNegativeIntegerDimensions","dimSize","isInteger","path","requestInits","shuffledIndices","Uint32Array","backendTimer","logger","Logger","Profiler","timer","dataSync","util.checkComputationForErrors","timing","extraInfo","getExtraProfileInfo","logKernelProfile","kernelMs","timeMs","util.rightPad","paddedName","FORMAT_LIMIT_NUM_VALS","FORMAT_NUM_FIRST_LAST_VALS","FORMAT_NUM_SIG_DIGITS","tensorToString","verbose","padPerCol","numCols","valuesOrTuples","createComplexTuples","row","valToString","computeMaxSizePerColumn","valsLines","subTensorToString","isLast","storagePerElement","complexTuple","boolNumToString","firstValsSize","firstVals","lastVals","displayVals","subshape","substrides","stride","lines","end","sep","newLineSep","complexTuples","util.sizeFromShape","n_1","util.assert","util.getArrayFromDType","TensorBuffer","locs","locToIndex","locs_1","loc","i_1","Tensor","make","trackerFn","opHandler","deprecationWarningFn","dataId","backend","id","nextTensorId","rankType","registerTensor","throwIfDisposed","as1D","reshape","rows","columns","depth2","depth3","cast","buffer","readSync","isDisposed","disposeTensor","isDisposedInternal","asType","print","expandDims","exclusive","reverse","cumsum","squeeze","clone","onValue","offValue","oneHot","reps","tile","indices","gather","transposeA","transposeB","matMul","dot","ord","keepDims","norm","begin","numOrSizeSplits","stack","unstack","paddings","constantValue","mean","variance","varianceEpsilon","scale","batchNorm","all","any","logSumExp","prod","argMin","argMax","addStrict","atan2","sub","subStrict","powStrict","mul","mulStrict","floorDiv","divStrict","minimum","minimumStrict","maximum","maximumStrict","mod","modStrict","squaredDifference","squaredDifferenceStrict","perm","transpose","notEqual","notEqualStrict","less","lessStrict","equal","equalStrict","lessEqual","lessEqualStrict","greater","greaterStrict","greaterEqual","greaterEqualStrict","logicalAnd","logicalOr","logicalNot","logicalXor","condition","where","neg","sign","isInf","expm1","log1p","rsqrt","square","reciprocal","clipByValue","relu","elu","selu","alpha","leakyRelu","prelu","sigmoid","logSigmoid","softplus","zerosLike","onesLike","sin","cos","tan","asin","acos","atan","sinh","cosh","asinh","acosh","atanh","erf","dim","softmax","logSoftmax","newShape2D","alignCorners","image","resizeBilinear","resizeNearestNeighbor","filter","dataFormat","dilation","dimRoundingMode","conv1d","dilations","conv2d","outputShape","conv2dTranspose","depthwiseConv2d","depthwiseFilter","pointwiseFilter","separableConv2d","filterSize","avgPool","maxPool","radius","bias","beta","localResponseNormalization","windowShape","poolingType","padding","dilationRate","pool","trainable","Variable","variable","segmentIds","numSegments","unsortedSegmentSum","blockShape","crops","batchToSpaceND","spaceToBatchND","sorted","topk","beginMask","endMask","ellipsisMask","newAxisMask","shrinkAxisMask","stridedSlice","depthToSpace","spectral","fft","ifft","rfft","irfft","hasInstance","instance","_super","nextVariableId","registerVariable","ex","tslib_1.__extends","util.arraysEqual","disposeVariable","Rank","UpcastInt32AndMap","UpcastBoolAndMap","UpcastFloat32AndMap","UpcastComplex64AndMap","upcastTypeMap","float32","int32","complex64","upcastType","typeA","typeB","sumOutType","makeTypesMatch","assertTypesMatch","getTensorsInContainer","walkTensorContainer","iterable","has","Set","GLOBAL","tensor","tensorList","WeakMap","newBytes","newTensors","peakBytes","kernels","EngineState","variableName","registeredVariables","dispose","Engine","pendingBackendInit","backendInstance","sortedBackends","getSortedBackends","backendName","initializeBackend","success","setBackend","name_1","registryFactory","registry","factory","priority","_b","_c","profiler","registryFactoryEntry","ENGINE","promiseId_1","pendingBackendInitId","asyncInit","destBackend","nameOrFn","scopedRun","startScope","endScope","addTapeNode","dy","toFloat","forwardFunc","inputs","backwardsFunc","saved","isTapeOn","scopeName","activeScope","saveFunc","tensors","keep","startingBytecount","numBytes","startingNumTensors","numTensors","kernelDepth","getBool","profileKernel","tapeNode","nextTapeNodeId","outputs","gradient","activeTape","profiling","activeProfile","bytesAdded","totalBytesSnapshot","tensorsAdded","totalTensorsSnapshot","inputShapes","item","refCount","tensorInfo","numStringTensors","numDataBuffers","util.bytesPerElement","register","track","info","disposeData","delete","varName","memory","unreliable","reasons","query","startBytes","startNumTensors","gradientDepth","gradientsFunc","inputsMap","input","resMap","kept","scopeInfo","nextScopeId","scopeStack","tensorsToTrackInParent","tensorsToTrackInParentSet","oldScope","scopeId","xs","allowNoGradients","startTape","endTape","tidy","filteredTape","tape","tensorsFromX","nodesFromX","nodeInputs","inputName","anyInputFromX","tensorsLeadToY","nodesToY","prunedInputs","nodeInput","prunedNode","getFilteredNodesXToY","accumulatedGradientMap","tensorAccumulatedGradientMap","dys","gradTensor","util.makeZerosTypedArray","inputGradients","dx","curGradient","backpropagateGradients","grads","util.isFunction","inputMap","runKernel","gradFunc","gradRes","gradMap","grad","srcBackend","pixels","numChannels","fromPixels","timingInfo","wallMs","reset","ns","getGlobalNamespace","_tfengine","getOrMakeEngine","isBrowser","WorkerGlobalScope","registerFlag","debugValue","device_util.isBrowser","navigator","userAgent","contexts","WEBGL_ATTRIBUTES","antialias","premultipliedAlpha","preserveDrawingBuffer","stencil","failIfMajorPerformanceCaveat","setWebGLContext","webGLVersion","gl","getWebGLContext","canvas","OffscreenCanvas","createCanvas","ev","getContext","getWebGLRenderingContext","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","callAndCheck","returnValue","getError","NO_ERROR","getWebGLErrorMessage","checkWebGLError","MIN_FLOAT16","MAX_FLOAT16","canBeRepresented","status","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","INVALID_FRAMEBUFFER_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","getExtensionOrThrow","debug","extensionName","throwIfNull","getExtension","createVertexShader","vertexShaderSource","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createFragmentShader","fragmentShaderSource","fragmentShader","FRAGMENT_SHADER","shaderInfoLog","lineNumberRegexResult","lineNumberRegex","exec","lineNumber","shaderLines","linesWithLineNumbers","maxLineLength","beforeErrorLines","errorLine","afterErrorLines","logShaderSourceAndInfoLog","MAX_TEXTURE_SIZE","MAX_TEXTURES_IN_SHADER","createProgram","linkProgram","program","getProgramParameter","LINK_STATUS","getProgramInfoLog","validateProgram","VALIDATE_STATUS","createStaticVertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","createStaticIndexBuffer","ELEMENT_ARRAY_BUFFER","createTexture","validateTextureSize","maxTextureSize","getNumber","requested","createFramebuffer","bindVertexBufferToProgramAttribute","attribute","arrayEntriesPerItem","itemStrideInBytes","itemOffsetInBytes","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","bindTextureUnit","texture","textureUnit","validateTextureUnit","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","getProgramUniformLocationOrThrow","uniformName","getUniformLocation","getProgramUniformLocation","bindTextureToProgramUniformSampler","uniformSamplerLocation","uniform1i","bindColorTextureToFramebuffer","framebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","unbindColorTextureFromFramebuffer","validateFramebuffer","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","getFramebufferErrorMessage","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_UNSUPPORTED","returnTOrNull","failureMessage","tOrNull","maxTextureUnit","MAX_COMBINED_TEXTURE_IMAGE_UNITS","glTextureUnit","getBatchDim","dimsToSkip","getRowsCols","getShapeAs3D","shapeAs3D","getTextureShapeFromLogicalShape","logShape","isPacked","maxTexSize","util.nearestLargerEven","squeezeResult","util.squeezeShape","batchDim","cols","util.sizeToSquarishShape","isEven","isReshapeFree","shape1","shape2","shape1Cols","shape2Cols","getWebGLMaxTextureSize","getParameter","getMaxTexturesInShader","MAX_TEXTURE_IMAGE_UNITS","getWebGLDisjointQueryTimerVersion","hasExtension","isWebGLVersionEnabled","isRenderToFloatTextureEnabled","createFloatTextureAndBindToFramebuffer","isDownloadFloatTextureEnabled","frameBuffer","internalFormat","RGBA32F","RGBA","texImage2D","isFrameBufferComplete","deleteTexture","deleteFramebuffer","isWebGLFenceEnabled","fenceSync","viewport","scissor","enableProdMode","enableDebugMode","disableDeprecationWarnings","deprecationWarn","disposeVariables","profile","ready","getBackend","removeBackend","findBackend","findBackendFactory","registerBackend","setPlatform","inferShape","firstElem","deepAssertShapeConsistency","subShape","assertDtype","expectedDtype","actualDType","argName","functionName","convertToTensor","parseAsDtype","inferredDtype","inferredShape","convertToTensorArray","axesAreInnerMostDims","combineLocations","outputLoc","reduceLoc","outIdx","reduceIdx","computeOutAndReduceShapes","aShape","outShape","expandShapeToKeepDim","assertAxesAreInnerMostDims","getAxesPermutation","getUndoAxesPermutation","getInnerMostAxes","numAxes","assertParamsConsistent","shapes","firstShape","computeOutShape","op","opName","endsWith","substring","f2","webgl_util.isWebGLVersionEnabled","webgl_util.getWebGLMaxTextureSize","webgl_util.getMaxTexturesInShader","webgl_util.getWebGLDisjointQueryTimerVersion","opera","webgl_util.isRenderToFloatTextureEnabled","webgl_util.isDownloadFloatTextureEnabled","webgl_util.isWebGLFenceEnabled","complex","complex_","real","imag","$real","$imag","util.assertShapesMatch","real_","$input","imag_","makeTensor","providedSize_1","inferredSize_1","inferred","flatDimsDontMatch","scalar","tensor1d","tensor2d","tensor3d","tensor4d","tensor5d","tensor6d","ones","real_1","imag_1","zeros","real_2","imag_2","linspace","stop","range","onesLike_","$x","zerosLike_","concat_","$tensors","sizeSplits","concat1d","concat1d_","concat2d","concat2d_","concat3d","concat3d_","concat4d","concat4d_","split_","splitSizes","define","Alea","seed","me","mash","charCodeAt","next","s0","s1","s2","impl","xg","prng","double","quick","amd","alea","XorGen","strseed","z","xor128","xorwow","X","xorshift7","limit","xor4096","tychei","nodecrypto","chunks","rngname","startdenom","significance","overflow","mask","seedrandom","shortseed","mixkey","typ","entropy","tostring","randomBytes","msCrypto","getRandomValues","plugins","screen","autoseed","arc4","ARC4","S","pass","is_math_call","smear","stringseed","fromCharCode","sr","stdDeviation","truncated","stdDev","nextVal","upper","lower","seedValue","seedrandom.alea","MPRandGauss","resultX","resultY","isValid","v1","v2","isValidTruncated","convertValue","canReturnFloat","UniformRandom","util.assertNonNegativeIntegerDimensions","batchToSpaceND_","cast_","util.isValidDtype","clone_","cumsum_","permutation","permutedX","permutedAxis","depthToSpace_","inputHeight","inputWidth","inputDepth","expandDims_","eye","eye_","numRows","numColumns","batchShape","buff","toTensor","as2D","multinomial","multinomial_","logits","numSamples","normalized","$logits","numOutcomes","origRank","logits2D","oneHot_","$indices","pad_","pad1d","pad1d_","pad2d","pad2d_","pad3d","pad3d_","pad4d","pad4d_","rand","rand_","randFunction","randomNormal","randomNormal_","randGauss","nextValue","randomUniform","randomUniform_","minval","maxval","reshape_","util.inferFromImplicitShape","spaceToBatchND_","squeeze_","stack_","expandedTensors","tile_","xGrad","truncatedNormal","truncatedNormal_","unstack_","setdiff1dAsync","$y","xVals","yVals","ySet","outputSize","getReshaped","inputShape","batchToSpace","reshaped","spatialLength","getPermuted","reshapedRank","blockShapeRank","permuted","permutedBeforeBatch","permutedAfterBatch","getReshapedPermuted","reshapedPermuted","getSliceBeginCoords","sliceBeginCoords","getSliceSize","uncroppedShape","sliceSize","prepareAndValidate","indicesShape","sliceRank","nResult","resultShape","PARALLELIZE_THRESHOLD","computeOptimalWindowSize","inSize","validateInput","updates","sliceDim","shapeError","validateUpdateShape","calculateShapes","totalNd","safeSliceDim","numUpdates","getStridedSlicedInfo","startIndex","endIndex","shrinkAxis","startForAxis","stopForAxis","startIndices","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","axisSize","util.clamp","stopIndices","isSliceContinous","firstNonOneAxis","computeFlatOffset","flatOffset","$dy","checkGrads","$args","valueAndGrad","valueAndGrads","gradients","variableGrads","varList","specifiedVarList","specifiedNonTrainable","originalVarCount","some","namedGrads","customGrad","softmax_","lse","dyTimesY","logSoftmax_","xMax","shifted","dataMover","DataStorage","moveData","KernelBackend","floatPrecision","activation","convInfo","dY","newHeight","newWidth","newHEight","inputImage","outputImage","boxes","scores","maxOutputSize","iouThreshold","scoreThreshold","boxIndex","cropSize","extrapolationValue","sparseIndices","sparseValues","defaultValue","getBroadcastDims","inShape","inRank","dims","getReductionAxes","inDim","outAxis","outDim","assertAndGetBroadcastShape","computePool2DInfo","roundingMode","filterShape","filterHeight","filterWidth","computeConv2DInfo","depthwise","batchSize","inHeight","inWidth","inChannels","filterChannels","strideHeight","strideWidth","dilationHeight","dilationWidth","effectiveFilterHeight","getEffectiveFilterSize","effectiveFilterWidth","_d","padInfo","outHeight","outWidth","padType","fieldSize","outDepth","zeroPad","computeDefaultPad","inputRows","inputCols","outputRows","conditionalRound","util.isInt","outputCols","computeOutputShape3D","padAlongHeight","padAlongWidth","top_1","outChannels","computeConv3DInfo","inDepth","filterDepth","strideDepth","dilationDepth","padAlongDepth","front","back","top_2","effectiveFieldSize","parseTupleParam","param","parse3TupleParam","tupleValuesAreOne","dimA","dimB","eitherStridesOrDilationsAreOne","castTensor","zerosTensor","floatX","int","zero","reshapeTensor","linspaceImpl","mergeRealAndImagArrays","getComplexWithIndex","assignToTypedArray","exponent","inverse","PI","nonMaxSuppressionImpl","candidates","score","c1","c2","selected","ignoreCandidate","intersectionOverUnion","iCoord","subarray","jCoord","yminI","xminI","ymaxI","xmaxI","yminJ","xminJ","ymaxJ","xmaxJ","areaI","areaJ","intersectionYmin","intersectionXmin","intersectionYmax","intersectionXmax","intersectionArea","xBuf","newLoc","indexToLoc","originalLoc","originalIndex","topkImpl","xShape","xDtype","lastDim","batch","allTopKVals","allTopKIndices","valAndInd","outOffset","topKVals","topKIndices","whereImpl","condShape","condVals","inBuffer","variableNames","snippets","operation","userCode","reduceInfo","firstPass","windowSize","outSize","compOp","indexSnippet","getVecChannels","getChannels","getGlslDifferences","varyingVs","varyingFs","texture2D","defineOutput","defineSpecialNaN","defineSpecialInf","defineRound","getLogicalCoordinatesFromFlatIndex","coords","util.computeStrides","getFlatIndexFrom3D","ENCODE_FLOAT_SNIPPET","makeShader","inputsInfo","usesPackedTextures","prefixSnippets","shapeInfo","logicalShape","isUniform","outputSamplingSnippet","floatTextureSetOutputSnippet","inputPrefixSnippet","inputSamplingSnippet","inInfo","outShapeInfo","getPackedSamplerFromInInfo","getSamplerFromInInfo","inputInfo","coordsSnippet","texName","texFuncSnippet","charAt","funcName","outRank","broadcastDims","getCoordsDataType","rankDiff","fields","unpackedCoordsSnippet","isInputScalar","isOutputScalar","getPackedSamplerAtOutputCoords","outTexShape","texShape","inTexShape","getSamplerAtOutputCoords","getInputSamplingSnippet","glsl","floatTextureSampleSnippet","getFloatTextureSampleSnippet","shaderPrefix","SAMPLE_1D_SNIPPET","SAMPLE_2D_SNIPPET","SAMPLE_3D_SNIPPET","getShaderPrefix","packedTexShape","getOutputPacked1DCoords","texelsInLogicalRow","getOutputPacked2DCoords","texelsInBatch","texelsInBatchN","batches","getOutputPackedNDCoords","getPackedOutputSamplingSnippet","getFloatTextureSetRGBASnippet","getOutput1DCoords","getOutput2DCoords","coordsFromIndexSnippet","shader_util.getLogicalCoordinatesFromFlatIndex","getOutput4DCoords","getOutput5DCoords","getOutput6DCoords","getOutputSamplingSnippet","getFloatTextureSetRSnippet","SHADER_PACKED_PREFIX","texNumR","texNumC","tNumR","tNumC","getFlatOffsetUniformName","getSamplerScalar","getUniformSampler","getSampler1D","texNumR_1","texNumC_1","squeezedShape","newInputInfo","squeezeInputInfo","getSqueezedParams","getSampler2D","stride0","stride1","getSampler3D","stride2","getSampler4D","stride3","getSampler5D","stride4","getSampler6D","getPackedSampler1D","valuesPerRow","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","sourceLocSetup","sourceRank","sourceLocDType","channels","inChannel","intChannels","srcRCoords","srcGCoords","srcBCoords","srcACoords","fetchCandidateIdx","fetchValue","getBestIndicesAChannelSnippet","padTop","padLeft","avgMultiplier","meanShape","varianceShape","offsetShape","scaleShape","broadcast_util.assertAndGetBroadcastShape","offsetSnippet","scaleSnippet","COMPLEX_MULTIPLY","bShape","ADD","SUB","MUL","checkOutOfBounds","checkOutOfBoundsString","ClipProgram","gpgpu","webGLProgram","minLoc","getUniformLocationNoThrow","maxLoc","uniform1f","ClipPackedProgram","concat_util.computeOutShape","offsets","lastIndex","lastShift","channel","lastChannels","allChannels","getValueSnippet","shift_1","padFront","channelMul","inputDepthNearestVec4","inputDepthVec4Remainder","xNumRows","xNumCols","texelsAcross","mainLoop","texelC","nextTexelOffset","imageShape","boxShape","imageHeight","imageWidth","numBoxes","cropHeight","cropWidth","methodId","inputHeightFloat","inputWidthFloat","heightRatio","heightScale","inY","widthRatio","widthScale","inX","finalDim","comparator","getFinalCoord","getCoords","getHeightCoordString","getWidthCoordString","getDepthCoordString","getOutputDepthSize","getInputSamplingString","DepthToSpaceProgram","inputIsUnsignedByte","shader_util.getFlatIndexFrom3D","col","COMPLEX_FFT","innerDim","exponentMultiplierSnippet","resultDenominator","FillProgram","valueLoc","indicesLength","sourceCoords","currentCoords","getSourceCoords","TextureUsage","PhysicalTextureType","stridesType","strideString","getUnpackedMatrixTextureShapeWidthHeight","getDenseTexShape","getPackedMatrixTextureShapeWidthHeight","webgl_util.createVertexShader","createVertexBuffer","webgl_util.createStaticVertexBuffer","createIndexBuffer","webgl_util.createStaticIndexBuffer","Uint16Array","getTextureConfig","textureHalfFloatExtension","internalFormatFloat","internalFormatHalfFloat","internalFormatPackedHalfFloat","internalFormatPackedFloat","textureFormatFloat","downloadUnpackNumChannels","defaultNumChannels","textureTypeHalfFloat","glany","R32F","R16F","RGBA16F","RED","HALF_FLOAT","HALF_FLOAT_OES","downloadTextureFormat","createAndConfigureTexture","textureFormat","textureType","webgl_util.validateTextureSize","webgl_util.createTexture","tex2d","webgl_util.callAndCheck","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","createFloat32MatrixTexture","textureConfig","createFloat16MatrixTexture","createUnsignedBytesMatrixTexture","UNSIGNED_BYTE","createPackedMatrixTexture","createFloat16PackedMatrixTexture","bindVertexProgramAttributeStreams","vertexBuffer","webgl_util.bindVertexBufferToProgramAttribute","uploadDenseMatrixToTexture","dataForUpload","texelDataType","uploadPixelDataToTexture","createBufferFromOutputTexture","gl2","PIXEL_PACK_BUFFER","bufferSizeBytes","bytesPerFloat","STREAM_READ","readPixels","downloadFloat32MatrixFromBuffer","downloadTarget","getBufferSubData","downloadByteEncodedFloatMatrixFromOutputTexture","downloadPackedMatrixFromBuffer","physicalRows","physicalCols","tex_util.getPackedRGBAArraySizeFromMatrixShape","downloadMatrixFromPackedOutputTexture","packedRGBA","glVersion","textureFloatExtension","webgl_util.getExtensionOrThrow","colorBufferFloatExtension","colorBufferHalfFloatExtension","gpgpu_util.createVertexBuffer","indexBuffer","gpgpu_util.createIndexBuffer","webgl_util.createFramebuffer","gpgpu_util.getTextureConfig","GPGPUContext","disposed","outputTexture","finish","deleteBuffer","gpgpu_util.createFloat32MatrixTexture","gpgpu_util.createFloat16MatrixTexture","gpgpu_util.createUnsignedBytesMatrixTexture","gpgpu_util.uploadPixelDataToTexture","gpgpu_util.uploadDenseMatrixToTexture","gpgpu_util.createFloat16PackedMatrixTexture","gpgpu_util.createPackedMatrixTexture","webgl_util.unbindColorTextureFromFramebuffer","downloadMatrixDriver","gpgpu_util.downloadByteEncodedFloatMatrixFromOutputTexture","gpgpu_util.downloadPackedMatrixFromBuffer","gpgpu_util.downloadFloat32MatrixFromBuffer","bindTextureToFrameBuffer","gpgpu_util.createBufferFromOutputTexture","unbindTextureToFrameBuffer","fenceContext","createFence","pollFence","isFencePassed","gl2_1","sync_1","SYNC_GPU_COMMANDS_COMPLETE","flush","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","beginQuery","endQuery","isQueryAvailable","gpgpu_util.downloadMatrixFromPackedOutputTexture","webgl_util.createFragmentShader","gpgpu_util.createVertexShader","webgl_util.createProgram","attachShader","webgl_util.linkProgram","webgl_util.validateProgram","vertexAttrsAreBound","setProgram","gpgpu_util.bindVertexProgramAttributeStreams","deleteProgram","useProgram","shouldThrow","webgl_util.getProgramUniformLocationOrThrow","webgl_util.getProgramUniformLocation","inputMatrixTexture","uniformLocation","throwIfNoProgram","webgl_util.bindTextureToProgramUniformSampler","outputMatrixTexture","setOutputMatrixTextureDriver","outputPackedMatrixTexture","startRow","startColumn","setOutputMatrixWriteRegionDriver","webgl_util.validateFramebuffer","debugValidate","drawElements","TRIANGLES","UNSIGNED_SHORT","disjointQueryTimerExtension","getQueryTimerExtension","ext_1","getQueryTimerExtensionWebGL2","query_1","createQuery","TIME_ELAPSED_EXT","ext","getQueryTimerExtensionWebGL1","createQueryEXT","beginQueryEXT","endQueryEXT","ext_2","util.repeatedTry","getQueryTime","queryTimerVersion","getQueryParameter","QUERY_RESULT","getQueryObjectEXT","QUERY_RESULT_EXT","available","QUERY_RESULT_AVAILABLE","disjoint","GPU_DISJOINT_EXT","QUERY_RESULT_AVAILABLE_EXT","addItemToPoll","isDone","linearSearchLastTrue","itemsToPoll","isDoneFn","resolveFn","pollItems","webgl_util.bindColorTextureToFramebuffer","downloadAndDecode","outputMatrixTextureMaybePacked","validateBinaryAndProgram","shapeInfos","texShapeA","texShapeB","texData","itemsPerBlockRow","powOperator","rad","maxD","basis","depthRadius","addBias","sharedDim","sharedDimensionPacked","aSample","bSample","aSwizzle","bSwizzle","activationSnippet","applyActivationSnippet","addBiasSnippet","MultinomialProgram","seedLoc","numIndices","outOfBoundsCondition","cond","getOutOfBoundsCondition","setup","innerDims","getSetup","coord","getSourceCoordsArr","getOutput","unpackedCoords","source","cLimit","componentSetup","paddingArea","poolType","computePositions","isAvgPool","initializationValue","filterWidthNearestVec4","filterWidthVec4Remainder","updateSnippet","reduceType","compareOp","windowSizeNearestVec4","windowSizeVec4Remainder","vecType","thisRC","xHeight","xWidth","yHeight","yWidth","effectiveXSize","effectiveYSize","invHeightScale","invWidthScale","winHeight","winWidth","oldHeight","oldWidth","effectiveInSize","effectiveOutSize","roundBase","inCoords","getInCoord","nextColumn","nextRow","getChannel","inCoordsArray","channels1","getR","getG","getB","getA","updateSize","indicesRank","updatesRank","summingDupeIndex","indicesString","indicesSnippet","updatesString","updatesSnippet","segOpInfo","segOpType","checkValueOutOfBounds","checkSegmentIdOutOfBounds","cRank","cCoords","abCoords","cCoordVars","abCoordVars","destSize","uniformPart","SliceProgram","startLoc","uniform1iv","sourceLoc","upperRow","lowerRow","SlicePackedProgram","inputDtype","newCoords","outputAxis_1","TextureManager","shapeRC","usage","newTexture","physicalTexType","getPhysicalFromLogicalTextureType","shapeKey","getKeyFromTextureShape","freeTextures","usedTextures","numFreeTextures","numUsedTextures","newTexture_1","PACKED_2X2_FLOAT32","PACKED_2X2_FLOAT16","UNPACKED_FLOAT32","UNPACKED_FLOAT16","PACKED_4X1_UNSIGNED_BYTE","logicalTexType","texList","texIndex","logEnabled","total","tex","deleteMatrixTexture","UPLOAD","RENDER","DOWNLOAD","PIXELS","shapeRowsCol","newDim","switched","originalOrder","switchedCoords","getSwitchedCoords","outputOrder","switchedOrder","getc","SELU_SCALEALPHA","SELU_SCALE","opSnippet","CHECK_NAN_SNIPPET","LINEAR","RELU","SELU","selu_util.SELU_SCALEALPHA","selu_util.SELU_SCALE","EXP","SIN","COS","ATAN","ACOSH","ATANH","binaryCaches","BEFORE_PAGING_CONSTANT","WeakSet","binaryCache","gpgpuCreatedLocally","textureManager","numMBBeforeWarning","devicePixelRatio","MathBackendWebGL","HTMLVideoElement","HTMLImageElement","HTMLCanvasElement","ImageData","fromPixels2DContext","readyState","drawImage","tempPixelHandle","makeTensorHandle","getTexture","FromPixelsPackedProgram","packedOutput","makePackedTensor","compileAndRun","FromPixelsProgram","webgl_util.canBeRepresented","releaseGPUData","complexTensors","UnaryOpProgram","convertAndCacheOnCPU","shouldTimeProgram","activeTimers","getValuesFromTexture","downloadWaitMs","pendingRead","subscribers_1","tmpTarget","decode","tmpData","createBufferFromTexture","tex_util.getDenseTexShape","createAndWaitForFence","realValues","imagValues","dTypeVals","subscribers","pendingDisposal","tmpTarget_1","tmpData_1","vals_1","downloadMatrixFromPackedTexture","shouldUsePackedProgram","webgl_util.getShapeAs3D","EncodeFloatPackedProgram","EncodeFloatProgram","oldActiveTimers","newActiveTimers","outerMostTime","programTimersStack","flattenedActiveTimerQueries","util.flatten","flattenedActiveTimerNames","uploadWaitMs","util.sum","ms","numBytesInGPU","startMs","endMs","waitForQueryAndGetTime","timerQuery","origDataId","dataRefCount","computeBytes","releaseTexture","uploadToGPU","cpuBackend","sizeThreshold","getCPUBackend","makeOutputArray","shouldExecuteOnCPU","isContinous","customSetup","getCustomSetupFunc","shallowSlice","xTexData","newTexData","beginIndex","StridedSliceProgram","ReversePackedProgram","ReverseProgram","midIndex","leftSide","rightSide","program_1","ConcatPackedProgram","tensors2D","ConcatProgram","outerShapeA","outerShapeB","a3D","as3D","b3D","multiply","MatMulPackedProgram","packed","unary_packed_op.LINEAR","unary_op.LINEAR","unary_packed_op.RELU","unary_op.RELU","mapActivationToShaderProgram","aData","bData","realProgram","BinaryOpComplexProgram","binaryop_complex_gpu.COMPLEX_MULTIPLY","imagProgram","makeComplexComponentTensorHandle","packedBinaryOp","binaryop_gpu.MUL","BinaryOpProgram","batchNormPackedProgram","BatchNormPackedProgram","batchNormProgram","BatchNormProgram","LRNPackedProgram","LRNProgram","LRNGradProgram","TileProgram","PadPackedProgram","PadProgram","TransposePackedProgram","TransposeProgram","GatherProgram","array_ops_util.getReshaped","array_ops_util.getPermuted","array_ops_util.getReshapedPermuted","array_ops_util.getSliceBeginCoords","array_ops_util.getSliceSize","completePaddings","paddedX","reshapedPaddedShape","permutedReshapedPaddedPermutation","flattenShape","reduce_util.computeOptimalWindowSize","ReduceProgram","bestIndicesA","ArgMinMaxProgram","argReduce","ArgMinMaxPackedProgram","argReducePacked","axis_util.assertAxesAreInnerMostDims","a2D","outputDType","axis_util.getAxesPermutation","axis_util.getInnerMostAxes","segment_util.computeOutShape","segOpCompute","axis_util.getUndoAxesPermutation","done","segment_util.segOpComputeOptimalWindowSize","SegmentOpProgram","argMinMaxReduce","CumSumProgram","SelectProgram","BinaryOpPackedProgram","complexSeparableBinaryOp","binaryop_gpu.ADD","complexTensor","complexPart","addN","d1","d2","usePackedOp","AddNPackedProgram","AddNProgram","binaryop_gpu.SUB","subtract","UnaryOpPackedProgram","unary_op.EXP","unary_op.SELU","xData","ComplexAbsProgram","unary_op.SIN","unary_op.COS","unary_op.ATAN","unary_op.ACOSH","unary_op.ATANH","unary_op.STEP","sharedMatMulDim","outerShapeX","outerShapeFilter","batchMatMulWillBeUnpacked","reshapeWillBeExpensive","xReshaped_1","filterReshaped_1","batchMatMul","xReshaped","originalXTexDataShape","webgl_util.isReshapeFree","filterReshaped","pointwiseConv","pointwiseConvTexData","x2ColShape","xSqueezed","w2Row","im2ColProgram","Im2ColPackedProgram","im2Col","matmulProgram","conv2dByMatMul","conv2dWithIm2Row","Conv2DProgram","Conv2DDerInputProgram","Conv2DDerFilterProgram","DepthwiseConvPacked2DProgram","DepthwiseConv2DProgram","DepthwiseConv2DDerInputProgram","DepthwiseConv2DDerFilterProgram","Conv3DProgram","Conv3DDerInputProgram","Conv3DDerFilterProgram","Pool2DProgram","maxPoolPositionsProgram","maxPoolPositions","maxPoolBackPropProgram","MaxPool2DBackpropProgram","avgPoolBackpropProgram","AvgPool2DBackpropProgram","backend_util.castTensor","outIndex","backend_util.reshapeTensor","packedReshape","ResizeBilinearPackedProgram","ResizeBilinearProgram","ResizeBilinearBackpropProgram","ResizeNearestNeighborProgram","ResizeNearestNeigborBackpropProgram","probs","OneHotProgram","CropAndResizeProgram","outputHeight","outputWidth","outputDepth","flattenIndices","flattenX","ScatterProgram","fftImpl","FFTProgram","fft_gpu.COMPLEX_FFT","numSlices","GatherNDProgram","backend_util.linspaceImpl","packedTensor","UnpackProgram","PackProgram","afterShape","inputAs3D","webgl_util.getBatchDim","webgl_util.getRowsCols","afterShapeAs3D","ReshapePackedProgram","denseTexShape","DecodeMatrixPackedProgram","DecodeMatrixProgram","preventEagerUnpackingOfOutput","inputsData","uniformValues","unpackTensor","packTensor","savedInput","targetShape","outputData","keyInputs","hasOffset","keyUserCode","gpgpu_math.makeShaderKey","binary","getAndSaveBinary","inputInfos","inShapeInfos","shader_compiler.makeShader","infLoc","nanLoc","uniformLocations","gpgpu_math.compileProgram","startTimer","outTex","setOutputPackedMatrixTexture","setOutputMatrixTexture","varLoc","varOffsetLoc","uniform1fv","setInputMatrixTexture","executeProgram","gpgpu_math.runProgram","endTimer","getBinary","floatPrecisionValue","debugFlag","underflowCheckValue","webgl_util.getTextureShapeFromLogicalShape","isByteArray","EncodeMatrixPackedProgram","EncodeMatrixProgram","tempDenseInputHandle","encodedOutputTarget","outputTexData","acquireTexture","float32Values","float32ToTypedArray","texType","warnedAboutMemory","mb","abs_","complexAbs","acos_","acosh_","asin_","asinh_","atan_","atanh_","ceil_","clipByValue_","clipValueMin","clipValueMax","clip","cos_","cosh_","erf_","exp_","expm1_","floor_","log_","log1p_","logSigmoid_","neg_","reciprocal_","round_","rsqrt_","sigmoid_","sign_","isNaN_","isInf_","isFinite_","sin_","sinh_","softplus_","sqrt_","square_","step_","tan_","tanh_","batchNorm2d_","$scale","$offset","$mean","$variance","batchNorm_","batchNorm3d_","batchNorm4d_","x4D","as4D","batchNormalization","batchnormReshape4D","scaleValue","reductionAxes","tileShape","xMinusMean","dyTimesScaleValue","oneOverSqrtVariance","minusHalfRCube","meanDer","varianceDer","xMinusMean2TimesRsqrt","scaleDer","offsetDer","warnDeprecation","batchNormalization2d","batchNormalization2d_","batchNormalization3d","batchNormalization3d_","batchNormalization4d","batchNormalization4d_","batchNormalization_","batchNorm2d","batchNorm3d","batchNorm4d","conv2dDerInput_","xShape4D","dy4D","reshapedTo4D","conv_util.computeConv2DInfo","conv2dDerInput","ddx","conv2dDerFilter","conv2dDerFilter_","dimC","conv1d_","$filter","x3D","reshapedTo3D","conv_util.eitherStridesOrDilationsAreOne","filter4D","input4D","conv2d_","conv_util.tupleValuesAreOne","conv3d","conv3d_","x5D","reshapedTo5D","as5D","conv_util.computeConv3DInfo","xShape5D","dy5D","conv3dDerInput","conv3dDerInput_","conv3dDerFilter","conv3dDerFilter_","depthwiseConv2d_","depthwiseConv2D","depthwiseConv2DDerInput","depthwiseConv2dDerInput","depthwiseConv2DDerFilter","depthwiseConv2dDerFilter","separableConv2d_","$depthwiseFilter","$pointwiseFilter","channelMultiplier","conv2dTranspose_","matMul_","$a","$b","innerShapeA","innerShapeB","outerDimsA","outerDimsB","batchDimA","batchDimB","dot_","t1","t2","$t1","$t2","t1Inner","t2Inner","asScalar","outerProduct","outerProduct_","$v1","$v2","reverse_","util.parseAxisParam","reshapeAs","reverse1d","reverse1d_","reverse2d","reverse2d_","reverse3d","reverse3d_","reverse4d","reverse4d_","maxPoolImpl_","conv_util.computePool2DInfo","$output","maxPoolBackprop","avgPoolImpl_","avgPoolBackprop","maxPool_","avgPool_","pool_","basePadding","padExtraShape","padExtraStart","padExtraEnd","withSpaceToBatchBasePaddings","isDilationOne","padStart","origPadEnd","fullInputShape","padEndExtra","padEnd","adjustedPadding","adjustedCrops","convertedPad","convertedX","slice_","begin_","size_","slice_util.assertParamsValid","slice1d","slice1d_","slice2d","slice2d_","slice3d","slice3d_","slice4d","slice4d_","gradForMinAndMax","xOrig","origAxes","permutedAxes","axis_util.expandShapeToKeepDim","all_","any_","argMax_","argMin_","logSumExp_","max_","mean_","reduceSize","axis_util.computeOutAndReduceShapes","reduceSizeScalar","expandedDyShape","min_","moments","moments_","keepDimsShape","devSquared","sum_","toInt","prod_","equal_","equalStrict_","greater_","greaterEqual_","greaterEqualStrict_","greaterStrict_","less_","lessEqual_","lessEqualStrict_","lessStrict_","notEqual_","notEqualStrict_","add_","reduceAxes","broadcast_util.getReductionAxes","addN_","firstTensor","ders","addStrict_","atan2_","div_","realDivide","tmp","divStrict_","floorDiv_","maximum_","maximumStrict_","minimum_","minimumStrict_","mod_","modStrict_","mul_","mulStrict_","pow_","$base","$exp","expFloat","logBase","powStrict_","squaredDifference_","two","squaredDifferenceStrict_","sub_","subStrict_","logicalAnd_","logicalNot_","logicalOr_","logicalXor_","where_","$condition","whereAsync","elu_","eluDer","leakyRelu_","prelu_","$alpha","relu_","selu_","scaleAlpha","greaterThanZeroDer","lessEqualZeroDer","transpose_","undoPerm","localResponseNormalization_","localResponseNormalization4D","LRNGrad","norm_","normImpl","arrayRange","arrayConcat","arrays","gather_","collectGatherOpShapeInfo","paramsShape","indicesSize","outerShape","outerDims","innerShape","outerAxesIndices","innerAxesIndices","valuesShape","reshapedIndices","transposeDims","valuesTranspose","paramsGrad","invertTransposeDims","unsortedSegmentSum_","$segmentIds","zeroClippedIndices","gathered","isPositive","numIters","zeroSlice","gatherDropNegatives","basicLSTMCell","basicLSTMCell_","forgetBias","lstmKernel","lstmBias","$forgetBias","$lstmKernel","$lstmBias","$data","$c","$h","sliceCols","newC","newH","multiRNNCell","multiRNNCell_","lstmCells","newStates","movingAverage","movingAverage_","decay","zeroDebias","$v","$decay","one","oneMinusDecay","$step","stridedSlice_","shrinkAxis_1","topk_","scatterND","scatterND_","$updates","scatter_nd_util.validateInput","fft_","innerDimensionSize","input2D","ifft_","rfft_","fftLength","adjustedInput","zerosShape","zerosInput","complexInput","half","realComplexConjugate","imagComplexConjugate","irfft_","realInput","imagInput","realConjugate","imagConjugate","sparseToDense","sparseToDense_","$sparseIndices","$sparseValues","$defaultValue","defaultValues","numElems","numDims","numValues","sparse_to_dense.validateInput","gatherND","gatherND_","dropout","dropout_","rate","noiseShape","multiplier","cosineWindow","windowLength","even","newValues","cosArg","Reduction","hannWindow","hannWindow_","hammingWindow","hammingWindow_","frame","frame_","signal","frameLength","frameStep","padValue","padLen","absoluteDifference","absoluteDifference_","labels","predictions","weights","reduction","SUM_BY_NONZERO_WEIGHTS","$labels","$predictions","$weights","losses","computeWeightedLoss","computeWeightedLoss_","$losses","weightedLoss","NONE","SUM","MEAN","broadcastFactor","numNonZeros","cosineDistance","cosineDistance_","hingeLoss","hingeLoss_","huberLoss","huberLoss_","deltaScalar","quadratic","linear","logLoss","logLoss_","epsilon","epsilonScalar","meanSquaredError","meanSquaredError_","sigmoidCrossEntropy","sigmoidCrossEntropy_","multiClassLabels","labelSmoothing","$multiClassLabels","labelSmoothingScalar","maxOutput","outputXTarget","sigmoidOutput","sigmoidCrossEntropyWithLogits_","softmaxCrossEntropy","softmaxCrossEntropy_","onehotLabels","$onehotLabels","numClasses","logResult","dyShape","softmaxCrossEntropyWithLogits_","qr2d","fullMatrices","one2D","iters","rTemp","wTemp","qTemp","gramSchmidt","gramSchmidt_","inputIsTensor2D","dim_1","ys","xs1d","proj","qr","qr_","outerDimsProd","x2ds","q2ds_1","r2ds_1","x2d","q2d","r2d","nonMaxSuppSanityCheck","NEGATIVE_INFINITY","resizeBilinear_","images","$images","batchImages","resizeBilinearBackprop","resizeNearestNeighbor_","resizeNearestNeighborBackprop","nonMaxSuppression","nonMaxSuppression_","$boxes","$scores","nonMaxSuppressionAsync","boxesVals","scoresVals","cropAndResize","cropAndResize_","boxInd","$image","$boxInd","$bias","fusedBatchMatMul","dyActivation","biasGradient","MathBackendCPU","firstUse","getImageData","numPixels","complex_util.mergeRealAndImagArrays","assertNotComplex","length_1","ops.buffer","bufferSync","xLoc","ops.tensor","outLoc","inLoc","innerSize","offset_1","colOffset_1","tVals","tIdx","resIdx","finalOutShape","ops.scalar","broadcastedBinaryComplexOp","aReal","aImag","bReal","bImag","broadcastedBinaryOp","aValue","bValue","resultVals","currVals","leftDim","rightDim","aValues","bValues","aBatch","aOuterStep","aInnerStep","bInnerStep","bOuterStep","bBatch","resVals","b_1","i0","j0","k0","iBlock","jBlock","kBlock","mapActivation","reduceShape","ops.zeros","aVals","segmentId","ops.equal","ops.stack","minIndex","maxIndex","resultDtype","indexAdjuster","prevIdx","aVal","bVal","rem","anyVal","inVals","xValue","resultValues","dyValues","hypot","tooLarge","tooSmall","expX","util.tanh","wVals","xOffset1","yOffset1","yR","yOffset2","xRCorner","wR","xR","wOffset1","xOffset2","yC","yOffset3","xCCorner","wC","xC","wOffset2","xOffset3","wOffset3","xVal","yF","xFCorner","wF","xF","yOffset4","xOffset4","wOffset4","dxValues","dxS0","dxS1","dxS2","dyS0","dyS1","dyS2","fltValues","fltS0","fltS1","fltS2","topPad","leftPad","xRMin","yRMax","xCMin","yCMax","dotProd","dyOffset","fltOffset","dxS3","dyS3","fltS3","frontPad","xFMin","yFMax","dW","dyBuf","yRMin","yCMin","dw","dwValues","dwS0","dwS1","dwS2","dwS3","xValues","xS0","xS1","xS2","xS3","yFMin","chMul","dm","trunc","xBuffer","outCoords","newIndex","indicesValues","POSITIVE_INFINITY","outputVals","outputBatchStrides","outputRowStrides","outputColStrides","outputBatchOffset","inputBatchOffset","xRMax","outputRowOffset","xCMax","minMaxValue","avgValue","xROffset","pixel","maxPositions","maxPosition","maxPosBuf","dxR","dxC","dyRCorner","dyCCorner","dyR","dyC","effectiveInputSize","effectiveOutputSize","outputIdx","effectiveRowSizeRatio","effectiveColSizeRatio","sourceFracRow","sourceRowFloor","rowFrac","sourceRowCeil","topRowOffset","botRowOffset","sourceFracCol","sourceColFloor","colFrac","sourceColCeil","topLeftOffest","botLeftOffset","topRightOffset","botRightOffest","topLeft","bottomLeft","bOffset","topDxRIndex","bottomDxRIndex","topDxROffset","bottomDxROffset","dxRLerp","inverseDxRLerp","leftDxCIndex","rightDxCIndex","dxCLerp","inverseDxCLerp","topLeftRCOffset","topRightRCOffset","bottomLeftRCOffset","bottomRightRCOffset","inverseDxRLerpTimesInverseDxCLerp","inverseDxRLerpTimesDxCLerp","dxRLerpTimesInverseDxCLerp","dxRLerpTimesDxCLerp","dyVal","ops.tensor4d","outputOffset","batchOffset","rowOffset","colOffset","newVal","startRLerp","startDyR","startCLerp","startDyC","accum","dyRIndex","dyROffset","dyCIndex","dyCOffset","mVals","varVals","sVals","offVals","outVals","offValsLength","sValsLength","varValsLength","mValsLength","offi","mi","si","vi","sumAcrossChannels","currentChannel","beginSumOffset","endSumOffset","inputImageValues","outputImageValues","depthBegin","depthEnd","dyi","probabilities","ops.softmax","numEvents","probVals","cdf","event_1","sampleId","event_2","indicesVal","event_3","ops.tensor2d","fftBatch","realResult","imagResult","ops.real","ops.imag","ops.complex","complex_util.getComplexWithIndex","x1D","isExponentOf2","fftRadix2","complex_util.splitRealAndImagArrays","fourierTransformByMatmul","evenComplex","complex_util.complexWithEvenIndex","evenTensor","oddComplex","complex_util.complexWithOddIndex","oddTensor","complex_util.exponents","addPart","subPart","realTensor","imagTensor","complex_util.exponent","term","complex_util.assignToTypedArray","inH","offsetH","inW","offsetD","inputIdx","bVals","aBroadcastDims","broadcast_util.getBroadcastDims","bBroadcastDims","aBuf","bBuf","aLoc","aIndex","bLoc","bIndex","realVals","imagVals","aIdx","bIdx","aRealBuf","bRealBuf","opResult","boxVals","boxIndVals","imageVals","inStride","outStride","startInd","y1","x1","y2","x2","bInd","yInd","ind","topInd","bottomInd","yLerp","xInd","leftInd","rightInd","xLerp","topRight","closestX","closestY","inInd","outInd","scatter","indicesData","flattenIndex","sumDupeIndices","updatesData","textEncoder","TextEncoder","textDecoder","TextDecoder","PlatformBrowser","encode","systemFetch","getNodeFetch","util","PlatformNode","DTYPE_VALUE_SIZE_MAP","uint16","uint8","STRING_DELIMITER","decodeWeights","specs","spec","name_2","quantization_1","quantization","quantizationSizeFactor","byteBuffer","quantizedArray","stringSpec","byteLength","decodeUTF8","delimiter","dtypeFactor","specs_1","concatenateTypedArrays","totalByteLength","normalizedXs","useNodeBuffer","Blob","atob","btoa","stringByteLength","concatenateArrayBuffers","buffers","basename","trim","items","getModelArtifactsInfoForJSON","modelArtifacts","modelTopology","ArrayBuffer","dateSaved","modelTopologyType","modelTopologyBytes","weightSpecsBytes","weightSpecs","weightDataBytes","weightData","saveRouters","loadRouters","IORouterRegistry","saveRouter","getInstance","loadRouter","getHandlers","onProgress","handlerType","validHandlers","router","URL_SCHEME_SUFFIX","managers","ModelStoreManagerRegistry","scheme","manager","parseURL","getSchemes","cloneModelInternal","sourceURL","destURL","deleteSource","loadHandlers","getLoadHandlers","loadHandler","saveHandlers","getSaveHandlers","saveHandler","sourceScheme","sourcePath","sameMedium","getManager","removeModel","saveResult","modelArtifactsInfo","MODEL_STORE_NAME","INFO_STORE_NAME","getIndexedDBFactory","theWindow","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","shimIndexedDB","setUpDatabase","openRequest","db","createObjectStore","keyPath","modelPath","BrowserIndexedDB","databaseAction","open","onupgradeneeded","onsuccess","modelTx","transaction","getRequest_1","objectStore","close","onerror","oncomplete","modelTx_1","modelArtifactsInfo_1","infoTx_1","infoStore_1","putInfoRequest_1","put","putModelRequest","deleteInfoRequest","indexedDBRouter","startsWith","URL_SCHEME","registerSaveRouter","registerLoadRouter","BrowserIndexedDBManager","tx","getAllInfoRequest","getAll","infoTx","infoStore","getInfoRequest","deleteModelData_1","deleteModelRequest","registerManager","PATH_SEPARATOR","PATH_PREFIX","INFO_SUFFIX","MODEL_TOPOLOGY_SUFFIX","WEIGHT_SPECS_SUFFIX","WEIGHT_DATA_SUFFIX","MODEL_METADATA_SUFFIX","getModelKeys","topology","modelMetadata","getModelPathFromKey","LS","BrowserLocalStorage","generatedBy","convertedBy","removeItem","metadataString","metadata","weightDataBase64","byteOffset","base64StringToArrayBuffer","localStorageRouter","BrowserLocalStorageManager","suffix","DEFAULT_FILE_NAME_PREFIX","DEFAULT_JSON_EXTENSION_NAME","DEFAULT_WEIGHT_DATA_EXTENSION_NAME","fileNamePrefix","BrowserDownloads","modelTopologyFileName","weightDataFileName","weightsURL","URL","createObjectURL","weightsManifest","paths","modelTopologyAndWeightManifest","modelTopologyAndWeightManifestURL","jsonAnchor_1","jsonAnchor","download","MouseEvent","weightDataAnchor_1","weightDataAnchor","files","BrowserFiles","jsonFile","weightFiles","jsonReader","FileReader","onload","modelJSON","pathToFile","checkManifestAndWeightFiles","perFileBuffers","weightsGroup","weightFileReader","readAsArrayBuffer","readAsText","manifest","basenames","fileNames","file","manifest_1","pathBasename","monitorPromisesProgress","promises","startFraction","endFraction","checkPromises","checkFraction","resolvedPromise","fraction","loadWeightsAsArrayBuffer","fetchURLs","loadOptions","fetchFunc","util.fetch","requests","fetchURL","requestInit","fetchStartFraction","fetchEndFraction","bufferPromises","response","arrayBuffer","bufferStartFraction","bufferEndFraction","weightsLoaderFactory","fetchWeightsFunction","filePathPrefix","weightNames","groupIndicesToFetchMap","groupWeightsToFetch","weightsFound","allManifestWeightNames","manifestGroupConfig","groupIndex","groupOffset","weightsEntry","rawDtype","weightsBytes","enqueueWeightsForFetchingFn","manifestEntry","sizeBytes","weightName","weightIndex","found","weightsNotFound","groupIndicesToFetch","accumulator","shouldFetch","fetchUrls","filepath","fetchUrl","weightsTensorMap","bufferIndexOffset","numBuffers","groupBytes","groupBuffer","groupByteBuffer","groupBufferOffset","i_2","nameToTensorMap","weightPathPrefix","HTTPRequest","DEFAULT_METHOD","FormData","append","ok","responses","modelConfigRequest","json","modelConfig","loadWeights","results","weightPath","lastSlash","lastIndexOf","lastSearchParam","parseUrl","pathPrefix","weightsManifest_1","entry","isHTTPScheme","URL_SCHEME_REGEX","httpRouter","urlItem","http","trainingConfig","PassthroughLoader","PassthroughSaver","group","dataPromises","names","utf8bytes","encodeUTF8","loudRouter","schemes","schemes_1","listModels","schemeOut","schemeAndPath","confusionMatrix","confusionMatrix_","oneHotLabels","oneHotPredictions","fromPixels_","img","$img","minTensor","maxTensor","minVals","maxVals","Uint8ClampedArray","imageData","putImageData","Serializable","cls","config","classNameMap","SerializationMap","getMap","fromConfig","registerClass","TEST_EPSILON_FLOAT32","TEST_EPSILON_FLOAT16","testEpsilon","expectArraysPredicate","actual","expected","predicate","checkClassType","aType","bType","actualShape","expectedShape","actualFlat","expectedFlat","areClose","fail","low","high","expect","toEqual","Optimizer","returnCost","gradArray","applyGradients","iterations_","weightValues","getClassName","minimize","computeGradients","learningRate","rho","AdadeltaOptimizer","variableGradients","accumulatedGrads","originalName","accumulatedUpdates","accumulatedGrad","accumulatedUpdate","newAccumulatedGrad","newAccumulatedUpdate","incrementIterations","variables","saveIterations","extractIterations","variableCount","initialAccumulatorValue","AdagradOptimizer","beta1","beta2","accBeta1","accBeta2","AdamOptimizer","varNames","oneMinusAccBeta1","oneMinusAccBeta2","accumulatedFirstMoment","accumulatedSecondMoment","firstMoment","secondMoment","newFirstMoment","newSecondMoment","biasCorrectedFirstMoment","biasCorrectedSecondMoment","iteration","AdamaxOptimizer","lr","accumulatedWeightedInfNorm","weightedInfNorm","ut0","ut1","newWeightedInfNorm","setLearningRate","SGDOptimizer","momentum","useNesterov","MomentumOptimizer","accumulations","accumulation","newAccumulation","centered","RMSPropOptimizer","accumulatedMeanSquares","accumulatedMoments","accumulatedMeanGrads","accumulatedMeanSquare","newAccumulatedMeanSquare","accumulatedMeanGrad","newAccumulatedMeanGrad","newAccumulatedMoments","newAccumulatedMeanSquare_1","OptimizerConstructors","train","sgd","adadelta","adagrad","rmsprop","adamax","adam","delayCallback","setImmediate","nextFrame","ops","DataType","SaverDef","CheckpointFormatVersion","CUSTOM_OPS","registerOp","opFunc","opMapper","tfOpName","category","attrs","customExecutor","getRegisteredOp","deregisterOp","getParamValue","paramName","tensorMap","inputParam","inputParams","inputIndexStart","inputIndexEnd","getTensor","inputNames","attrParam","attrParams","tensorsMap","nodeName","contextId","currentContextIds","find","getNodeNameWithContextId","getTensorsForCurrentContenxt","currentContextId","getNodeNameAndIndex","parseNodeName","tfName","notSupported","tfDeprecatedName","arithmetic","basicMath","control","convolution","creation","dynamic","evaluation","logical","graph","matrices","normalization","sliceJoin","transformation","mappersJson","opMappers","mapper","OperationMapper","_instance","placeholders","nodes","mapNode","allNodes","children","attr","newNode","rawAttrs","getStringParam","getStringArrayParam","getNumberParam","getNumericArrayParam","getBoolParam","getBoolArrayParam","getTensorShapeParam","getTensorShapeArrayParam","getDtypeParam","getDtypeArrayParam","decodeBase64","parseStringParam","keepCase","def","parseDtypeParam","tensorflow.DataType","DT_FLOAT","DT_INT32","DT_BOOL","DT_DOUBLE","DT_STRING","parseTensorShapeParam","unknownRank","getInput","getAttr","NodeValueImpl","executeOp","tfc.add","tfc.addN","tfc.mod","tfc.mul","tfc.div","tfc.floorDiv","tfc.sub","tfc.minimum","tfc.maximum","tfc.pow","tfc.squaredDifference","tfc.abs","tfc.acos","tfc.acosh","tfc.asin","tfc.asinh","tfc.atan","tfc.atan2","tfc.atanh","tfc.ceil","tfc.complex","tfc.cos","tfc.cosh","tfc.elu","tfc.erf","tfc.exp","tfc.expm1","tfc.floor","tfc.log","tfc.log1p","tfc.neg","tfc.reciprocal","tfc.relu","tfc.round","tfc.selu","tfc.sigmoid","tfc.sin","tfc.sign","tfc.sinh","tfc.softplus","tfc.sqrt","tfc.square","tfc.tanh","tfc.tan","tfc.clipByValue","tfc.rsqrt","tfc.prod","tfc.leakyRelu","maxSize","elementShape","identicalElementShapes","dynamicSize","clearAfterRead","TensorArray","nextId","closed_","tensorWithState","cleared","assertShapesMatchAllowUndefinedSize","written","readMany","writeMany","totalLength","cumulativeLengths","elementPerRow","indices_1","shapesEqualAllowUndefinedSize","pred","data_1","frameId","enterFrame","exitFrame","nextIteration","tensorArray","addTensorArray","writeTensor","getTensorArray","readId","readIndex","gatherId","gatherIndices","gatherDtype","scatterId","scatterIndices","scatterTensor","concatId","concatTensorArray","concatDtype","splitId","splitTensor","lengths","sizeId","sizeTensorArray","closeId","clearAndClose","tfc.conv1d","tfc.conv2d","tfc.conv2dTranspose","tfc.depthwiseConv2d","kernelSize","tfc.avgPool","tfc.maxPool","tfc.fill","stop_1","tfc.linspace","tfc.oneHot","tfc.ones","tfc.onesLike","tfc.randomUniform","stop_2","tfc.range","tfc.truncatedNormal","tfc.zeros","tfc.zerosLike","tfc.image","tfc.whereAsync","tfc.setdiff1dAsync","tfc.topk","tfc.tensor1d","tfc.scalar","summarize","tfc.equal","tfc.notEqual","tfc.greater","tfc.greaterEqual","tfc.less","tfc.lessEqual","tfc.logicalAnd","tfc.logicalNot","tfc.logicalOr","tfc.where","tfc.matMul","tfc.transpose","tfc.batchNorm","tfc.localResponseNormalization","tfc.softmax","tfc.logSoftmax","tfc.sparseToDense","tfc.max","tfc.mean","tfc.min","tfc.sum","tfc.all","tfc.any","tfc.argMax","tfc.argMin","tfc.concat","tfc.gather","tfc.reverse","tfc.slice","tfc.stridedSlice","tfc.tidy","mapped","sameShape","tfc.util","tfc.stack","tfc.unstack","tfc.tile","tfc.split","tfc.scatterND","tfc.gatherND","tfc.fft","tfc.ifft","tfc.rfft","tfc.irfft","tfc.cast","tfc.expandDims","tfc.squeeze","tfc.reshape","tfc.pad","tfc.spaceToBatchND","tfc.batchToSpaceND","tfc.depthToSpace","arithmetic.executeOp","basicMath.executeOp","control.executeOp","convolution.executeOp","creation.executeOp","dynamic.executeOp","evaluation.executeOp","image.executeOp","graph.executeOp","logical.executeOp","matrices.executeOp","normalization.executeOp","reduction.executeOp","sliceJoin.executeOp","spectral.executeOp","transformation.executeOp","weightMap","tensorArrayMap","frameName","iterationId","rootContext","generateCurrentContextIds","ExecutionContext","_currentContextIds","contextIdforContexts","lastId","newFrame","getExecutionSubgraph","usedNodes","missingInputs","dynamicNode","syncInputs","frontier","isControlFlow","isDynamicShape","child","getNodesInTopologicalOrder","executionInfo","weight","orderedNodes","CONTROL_FLOW_OPS","DYNAMIC_SHAPE_OPS","Map","_outputs","GraphExecutor","_weightMap","weightIds","sortedInputs","sortedOutputs","SEPERATOR","outNames","inNames","checkInputs","checkInputShapeAndType","checkOutputs","inputNodes","outputNodes","compilationKey","getCompilationKey","compiledMap","compile","tensorsToKeep","getFrozenTensorIds","intermediateTensorConsumerCount","checkTensorForDisposal","ids","outputNames","executeWithControlFlow","outputIds","inputIds","currentContext","added","processStack","missingOutputs","alternativeMsg","currentContext_1","processChildNodes","this_1","childNode","shape_1","notInGraph","normalizedName","TFHUB_SEARCH_PARAM","DEFAULT_MODEL_NAME","modelUrl","GraphModel","executor","io","browserHTTPRequest","handlers","findIOHandler","artifacts","producer","minConsumer","Instance","transformGraph","convertTensorMapToTensorsMap","execute","normalizeInputs","normalizeOutputs","executeAsync","newMap","loadGraphModel","fromTFHub","model","VALID_OUTPUT_STRIDES","assertValidOutputStride","assertValidResolution","toFloatIfInt","MobileNet","outputStride","predict","heatmapScores","displacementFwd","displacementBwd","MaxHeap","priorityQueue","numberOfElements","getElementValue","enqueue","swim","dequeue","exchange","sink","empty","getValueAt","scoreIsMaximumInLocalWindow","u","buildPartWithScoreQueue","part","heatmapY","heatmapX","partNames","NUM_KEYPOINTS","partIds","connectedPartNames","poseChain","connectedPartIndices","partChannels","getOffsetPoint","getImageCoords","squaredDistance","addVectors","parentChildrenTuples","parentToChildEdges","childToParentEdges","getDisplacement","getStridedIndexNearPoint","traverseToTargetKeypoint","decodePose","withinNmsRadiusOfCorrespondingPoint","keypoints","getInstanceScore","kLocalMaximumRadius","decodeMultiplePoses","__assign","__awaiter","throw","__generator","label","sent","trys","return","iterator","eitherPointDoesntMeetConfidence","getAdjacentKeyPoints","getBoundingBox","maxX","maxY","minX","minY","getBoundingBoxPoints","toTensorBuffer","toTensorBuffers3D","scalePose","scalePoses","flipPoseHorizontal","flipPosesHorizontal","getInputTensorDimensions","toInputTensor","padAndResizeTo","resized","scaleAndFlipPoses","argmax2d","getPointsConfidence","getOffsetPoint$1","getOffsetVectors","valueOf","getOffsetPoints","decodeSinglePose","MOBILENET_BASE_URL","RESNET50_BASE_URL","resNet50Checkpoint","mobileNetCheckpoint","toFloatIfInt$1","ResNet","MOBILENET_V1_CONFIG","architecture","inputResolution","VALID_ARCHITECTURE","VALID_STRIDE","MobileNetV1","ResNet50","VALID_INPUT_RESOLUTION","VALID_MULTIPLIER","VALID_QUANT_BYTES","validateModelConfig","quantBytes","SINGLE_PERSON_INFERENCE_CONFIG","flipHorizontal","MULTI_PERSON_INFERENCE_CONFIG","maxDetections","nmsRadius","validateMultiPersonInputConfig","PoseNet","baseModel","estimateMultiplePoses","I","E","N","estimateSinglePose","estimatePoses","decodingMethod","loadMobileNet","tf","loadResNet","PoseDetection","video","mobile","guiState","isMobile","algorithm","smoothFactor","smoothPrevPose","smoothPrevPoses","initPoseDetection","net","posenet","initGui","smoothing","mobileNetArchitecture","imageScaleFactor","singlePoseDetection","minPoseConfidence","minPartConfidence","multiPoseDetection","maxPoseDetections","algorithmController","smoothingController","addFolder","architectureController","single","multi","changeToArchitecture","useMultiPose","useSinglePose","getPoses","flipHorizonal","poses","pose","newPoses","smoothPose","parts","point","minConfidence","getDistance","distX","distY","getKeypoint","keypoint","getKeypoints","prevKeypoints","smoothKeypoints","pos","prevPos","smoothPos","headPaths","head0","heads","Image","src","torsoPaths","torso0","torsos","leftForearmPaths","leftForearm0","leftForearms","leftShinPaths","leftShin0","leftShins","leftThighPaths","leftThigh0","leftThighs","leftUpperarmPaths","leftUpperarm0","leftUpperarms","rightForearmPaths","rightForearm0","rightForearms","rightShinPaths","rightShin0","rightShins","rightThighPaths","rightThigh0","rightThighs","rightUpperarmPaths","rightUpperarm0","rightUpperarms","livestreamCanvas","livestreamCtx","poseDetection","videoWidth","videoHeight","sketchGuiState","showVideo","showSideVideo","backgroundColor","collageIndex","showPoints","pointsColor","pointsStyle","pointSize","setupSketch","thePoseDetection","theVideo","theVideoWidth","theVideoHeight","sketchLoop","initSketchGui","sideVideoController","addColor","pointIndexesInOrder","newArray","getNewFrame","clearRect","fillStyle","fillRect","translate","restore","singlePose","distanceScale","leftEye","leftEar","drawLimb","leftShoulder","leftElbow","leftWrist","rightElbow","rightWrist","rightShoulder","leftHip","leftKnee","leftAnkle","rightHip","rightKnee","rightAnkle","torsoImage","headImage","headWidth","rightEar","headHeight","rightEye","nose","drawKeypoints","part1","part2","theImage","pos1","pos2","rotation","rotate","currentIndex","temporaryValue","randomIndex","drawPoint","beginPath","arc","strokeStyle","stroke","isAndroid","isiOS","setupCamera","mediaDevices","getUserMedia","stream","audio","facingMode","srcObject","onloadedmetadata","loadVideo","play","bindPage","textContent","dat","detectionGui","sketchGui","webkitGetUserMedia","mozGetUserMedia"],"mappings":";AklI3GA,AkI4GA;AlI3GA,AkI4GA;AlI3GA,AkI4GA;AlI3GA,AkI4GA;AlI3GA,AkI4GA;AlI3GA,AkI4GA;AlI3GA,AkI4GA;AACA;AjInHA,AiIoHA;AjInHA,AiIoHA;AjInHA,AiIoHA;AjInHA,AiIoHA;AjInHA,AiIoHA;AjInHA,AiIoHA;AACA;AhI1HA,AgI2HA;AhI1HA,AgI2HA;AhI1HA,AgI2HA;AhI1HA,AgI2HA;AhI1HA,AgI2HA;AhI1HA,AgI2HA;AhI1HA,AgI2HA;AhI1HA,AgI2HA;AhI1HA,AgI2HA;AhI1HA,AgI2HA;AhI1HA,AgI2HA;AhI1HA,AgI2HA;AhI1HA,AgI2HA;AhI1HA,AgI2HA;AhI1HA,AgI2HA;AhI1HA,AgI2HA;AhI1HA,AgI2HA;AhI1HA,AgI2HA;AACA;A/H7IA,A+H8IA;A/H7IA,A+H8IA;AACA;AACA;A9HjJA,A8HkJA;A9HjJA,A8HkJA;A9HjJA,A8HkJA;A9HjJA,A8HkJA;A9HjJA,A8HkJA;A9HjJA,A8HkJA;A9HjJA,A8HkJA;AACA;A7HzJA,A6H0JA;A7HzJA,A6H0JA;A7HzJA,A6H0JA;AACA;A5H7JA,A4H8JA;A5H7JA,A4H8JA;A5H7JA,A4H8JA;A5H7JA,A4H8JA;A5H7JA,A4H8JA;AACA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;A3HnKA,A2HoKA;AACA;A1HzLA,A0H0LA;A1HzLA,A0H0LA;A1HzLA,A0H0LA;A1HzLA,A0H0LA;AACA;AzH9LA,AyH+LA;AzH9LA,AyH+LA;AzH9LA,AyH+LA;AzH9LA,AyH+LA;AzH9LA,AyH+LA;AzH9LA,AyH+LA;AACA;AxHrMA,AwHsMA;AxHrMA,AwHsMA;AxHrMA,AwHsMA;AxHrMA,AwHsMA;AxHrMA,AwHsMA;AxHrMA,AwHsMA;AxHrMA,AwHsMA;AxHrMA,AwHsMA;AACA;AvH9MA,AuH+MA;AvH9MA,AuH+MA;AvH9MA,AuH+MA;AvH9MA,AuH+MA;AvH9MA,AuH+MA;AACA;AtHpNA,AsHqNA;AtHpNA,AsHqNA;AtHpNA,AsHqNA;AtHpNA,AsHqNA;AtHpNA,AsHqNA;AtHpNA,AsHqNA;AtHpNA,AsHqNA;AtHpNA,AsHqNA;AACA;ArH7NA,AqH8NA;ArH7NA,AqH8NA;ArH7NA,AqH8NA;ArH7NA,AqH8NA;AACA;ApHlOA,AoHmOA;ApHlOA,AoHmOA;ApHlOA,AoHmOA;ApHlOA,AoHmOA;ApHlOA,AoHmOA;ApHlOA,AoHmOA;ApHlOA,AoHmOA;ApHlOA,AoHmOA;ApHlOA,AoHmOA;ApHlOA,AoHmOA;ApHlOA,AoHmOA;ApHlOA,AoHmOA;ApHlOA,AoHmOA;AACA;AnHhPA,AmHiPA;AnHhPA,AmHiPA;AnHhPA,AmHiPA;AnHhPA,AmHiPA;AnHhPA,AmHiPA;AnHhPA,AmHiPA;AnHhPA,AmHiPA;AnHhPA,AmHiPA;AnHhPA,AmHiPA;AnHhPA,AmHiPA;AnHhPA,AmHiPA;AnHhPA,AmHiPA;AnHhPA,AmHiPA;AnHhPA,AmHiPA;AnHhPA,AmHiPA;AnHhPA,AmHiPA;AnHhPA,AmHiPA;AACA;AlHlQA,AkHmQA;AlHlQA,AkHmQA;AlHlQA,AkHmQA;AlHlQA,AkHmQA;AlHlQA,AkHmQA;AlHlQA,AkHmQA;AlHlQA,AkHmQA;AlHlQA,AkHmQA;AlHlQA,AkHmQA;AACA;AjH5QA,AiH6QA;AjH5QA,AiH6QA;AjH5QA,AiH6QA;AjH5QA,AiH6QA;AjH5QA,AiH6QA;AjH5QA,AiH6QA;AjH5QA,AiH6QA;AjH5QA,AiH6QA;AjH5QA,AiH6QA;AACA;AhHtRA,AgHuRA;AhHtRA,AgHuRA;AhHtRA,AgHuRA;AhHtRA,AgHuRA;AhHtRA,AgHuRA;AACA;AACA;A/G7RA,A+G8RA;A/G7RA,A+G8RA;A/G7RA,A+G8RA;A/G7RA,A+G8RA;A/G7RA,A+G8RA;A/G7RA,A+G8RA;A/G7RA,A+G8RA;A/G7RA,A+G8RA;A/G7RA,A+G8RA;A/G7RA,A+G8RA;A/G7RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9DA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;;ACDA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACtpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACae,SAAA,aAAA,CAASA,KAAT,EAAgBC,WAAhB,EAA6B;MACpCC,WAAAA,GAAcF,KAAAA,CAAMG,OAANH,CAAcI,cAAdJ,CAA6BK,QAA7BL;;MAEdM,CAAAA,GAAIC,IAAAA,CAAKC,KAALD,CAAWP,KAAAA,CAAMM,CAAjBC;MACJE,CAAAA,GAAIF,IAAAA,CAAKC,KAALD,CAAWP,KAAAA,CAAMS,CAAjBF;MACJG,CAAAA,GAAIH,IAAAA,CAAKC,KAALD,CAAWP,KAAAA,CAAMU,CAAjBH;MACJI,CAAAA,GAAIX,KAAAA,CAAMW;MACVC,CAAAA,GAAIL,IAAAA,CAAKC,KAALD,CAAWP,KAAAA,CAAMY,CAAjBL;MACJM,CAAAA,GAAIb,KAAAA,CAAMa,CAANb,CAAQc,OAARd,CAAgB,CAAhBA;MACJe,CAAAA,GAAIf,KAAAA,CAAMe,CAANf,CAAQc,OAARd,CAAgB,CAAhBA;;MAENC,WAAAA,IAAgBC,WAAAA,KAAgB,gBAAhCD,IAAsDC,WAAAA,KAAgB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AIPW,gBAJO;oBAKPM,gBALO;uBAMJmB,mBANI;0BAODc,sBAPC;sBAQLY,kBARK;mBASRI;AATQ,CAA3B;;AAYA,IAAapJ,KAAAA,GAAM;AAAEA,EAAAA,GAAAA,EAAKyX;AAAP,CAAnB;;AAEA,IAAahG,GAAAA,GAAM;AAAEvD,EAAAA,GAAAA,EAAKwJ;AAAP,CAAnB;;AAEA,IAAaxJ,KAAAA,GAAMwJ,GAAnB;;AAEA,IAAA,KAAA,GAAe;cAAA;0BAAA;YAAA;UAAA;;AAAA,CAAf;;;;ACtvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9DA;AACA,IAAIC,OAAO,GAAGC,MAAM,CAACC,OAAP,GAAiB,EAA/B,EAEA;AACA;AACA;AACA;;AAEA,IAAIC,gBAAJ;AACA,IAAIC,kBAAJ;;AAEA,SAASC,gBAAT,GAA4B;AACxB,QAAM,IAAIta,KAAJ,CAAU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B,IAAAA,GAAG,CAAC5kB,CAAD,CAAH,GAASykB,GAAG,CAACzkB,CAAD,CAAH,CAAO6iB,QAAP,IAAmB4B,GAAG,CAACzkB,CAAD,CAA/B;AACD;;AACD,SAAO4kB,GAAP;AACD;;;AC/bzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACnqlvrNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjnvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACrpQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AEfnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClpOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACzrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AClbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnn2GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzpxxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtxlhbtjznlJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfwjttjjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbrzpnBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACpUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjvSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrzjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnnxzjGAvH,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAG9V,MAAM,CAACsjB,KAAlC,EAEA;;AACAxN,OAAO,CAACyN,OAAR,GAAkBvjB,MAAM,CAACsjB,KAAP,CAAanrB,IAAb,CAAkB6H,MAAlB,CAAlB;AAEA8V,OAAO,CAAC0N,OAAR,GAAkBxjB,MAAM,CAACwjB,OAAzB;AACA1N,OAAO,CAAC2N,OAAR,GAAkBzjB,MAAM,CAACyjB,OAAzB;AACA3N,OAAO,CAAC4N,QAAR,GAAmB1jB,MAAM,CAAC0jB,QAA1B;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIC,yBAAyB,GAAG3rB,MAAM,CAAC2rB,yBAAP,IAC9B,SAASA,yBAAT,CAAmC9rB,GAAnC,EAAwC;AACtC,MAAIC,IAAI,GAAGE,MAAM,CAACF,IAAP,CAAYD,GAAZ,CAAX;AACA,MAAI+rB,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAItrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,IAAI,CAACb,MAAzB,EAAiCqB,CAAC,EAAlC,EAAsC;AACpCsrB,IAAAA,WAAW,CAAC9rB,IAAI,CAACQ,CAAD,CAAL,CAAX,GAAuBN,MAAM,CAAC6rB,wBAAP,CAAgChsB,GAAhC,EAAqCC,IAAI,CAACQ,CAAD,CAAzC,CAAvB;AACD;;AACD,SAAOsrB,WAA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","file":"main.fd2c7af4.map","sourceRoot":"..","sourcesContent":["// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","var toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n","module.exports = true;\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var core = module.exports = { version: '2.6.9' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","module.exports = require('./_hide');\n","module.exports = {};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'\n});\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","'use strict';\nvar $at = require('./_string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./_iter-define')(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n","module.exports = function () { /* empty */ };\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","require('./es6.array.iterator');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar TO_STRING_TAG = require('./_wks')('toStringTag');\n\nvar DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +\n  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +\n  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +\n  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +\n  'TextTrackList,TouchList').split(',');\n\nfor (var i = 0; i < DOMIterables.length; i++) {\n  var NAME = DOMIterables[i];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  if (proto && !proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n  Iterators[NAME] = Iterators.Array;\n}\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","var hide = require('./_hide');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n","'use strict';\nvar global = require('./_global');\nvar core = require('./_core');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","'use strict';\n// https://github.com/tc39/proposal-promise-try\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nrequire('../modules/es7.promise.finally');\nrequire('../modules/es7.promise.try');\nmodule.exports = require('../modules/_core').Promise;\n","module.exports = { \"default\": require(\"core-js/library/fn/promise\"), __esModule: true };","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nexport default function(color, forceCSSHex) {\n  const colorFormat = color.__state.conversionName.toString();\n\n  const r = Math.round(color.r);\n  const g = Math.round(color.g);\n  const b = Math.round(color.b);\n  const a = color.a;\n  const h = Math.round(color.h);\n  const s = color.s.toFixed(1);\n  const v = color.v.toFixed(1);\n\n  if (forceCSSHex || (colorFormat === 'THREE_CHAR_HEX') || (colorFormat === 'SIX_CHAR_HEX')) {\n    let str = color.hex.toString(16);\n    while (str.length < 6) {\n      str = '0' + str;\n    }\n    return '#' + str;\n  } else if (colorFormat === 'CSS_RGB') {\n    return 'rgb(' + r + ',' + g + ',' + b + ')';\n  } else if (colorFormat === 'CSS_RGBA') {\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n  } else if (colorFormat === 'HEX') {\n    return '0x' + color.hex.toString(16);\n  } else if (colorFormat === 'RGB_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ']';\n  } else if (colorFormat === 'RGBA_ARRAY') {\n    return '[' + r + ',' + g + ',' + b + ',' + a + ']';\n  } else if (colorFormat === 'RGB_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + '}';\n  } else if (colorFormat === 'RGBA_OBJ') {\n    return '{r:' + r + ',g:' + g + ',b:' + b + ',a:' + a + '}';\n  } else if (colorFormat === 'HSV_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + '}';\n  } else if (colorFormat === 'HSVA_OBJ') {\n    return '{h:' + h + ',s:' + s + ',v:' + v + ',a:' + a + '}';\n  }\n\n  return 'unknown format';\n}\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst ARR_EACH = Array.prototype.forEach;\nconst ARR_SLICE = Array.prototype.slice;\n\n/**\n * Band-aid methods for things that should be a lot easier in JavaScript.\n * Implementation and structure inspired by underscore.js\n * http://documentcloud.github.com/underscore/\n */\n\nconst Common = {\n  BREAK: {},\n\n  extend: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (!this.isUndefined(obj[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  defaults: function(target) {\n    this.each(ARR_SLICE.call(arguments, 1), function(obj) {\n      const keys = this.isObject(obj) ? Object.keys(obj) : [];\n      keys.forEach(function(key) {\n        if (this.isUndefined(target[key])) {\n          target[key] = obj[key];\n        }\n      }.bind(this));\n    }, this);\n\n    return target;\n  },\n\n  compose: function() {\n    const toCall = ARR_SLICE.call(arguments);\n    return function() {\n      let args = ARR_SLICE.call(arguments);\n      for (let i = toCall.length - 1; i >= 0; i--) {\n        args = [toCall[i].apply(this, args)];\n      }\n      return args[0];\n    };\n  },\n\n  each: function(obj, itr, scope) {\n    if (!obj) {\n      return;\n    }\n\n    if (ARR_EACH && obj.forEach && obj.forEach === ARR_EACH) {\n      obj.forEach(itr, scope);\n    } else if (obj.length === obj.length + 0) { // Is number but not NaN\n      let key;\n      let l;\n      for (key = 0, l = obj.length; key < l; key++) {\n        if (key in obj && itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    } else {\n      for (const key in obj) {\n        if (itr.call(scope, obj[key], key) === this.BREAK) {\n          return;\n        }\n      }\n    }\n  },\n\n  defer: function(fnc) {\n    setTimeout(fnc, 0);\n  },\n\n  // if the function is called repeatedly, wait until threshold passes until we execute the function\n  debounce: function(func, threshold, callImmediately) {\n    let timeout;\n\n    return function() {\n      const obj = this;\n      const args = arguments;\n      function delayed() {\n        timeout = null;\n        if (!callImmediately) func.apply(obj, args);\n      }\n\n      const callNow = callImmediately || !timeout;\n\n      clearTimeout(timeout);\n      timeout = setTimeout(delayed, threshold);\n\n      if (callNow) {\n        func.apply(obj, args);\n      }\n    };\n  },\n\n  toArray: function(obj) {\n    if (obj.toArray) return obj.toArray();\n    return ARR_SLICE.call(obj);\n  },\n\n  isUndefined: function(obj) {\n    return obj === undefined;\n  },\n\n  isNull: function(obj) {\n    return obj === null;\n  },\n\n  isNaN: function(obj) {\n    return isNaN(obj);\n  },\n\n  isArray: Array.isArray || function(obj) {\n    return obj.constructor === Array;\n  },\n\n  isObject: function(obj) {\n    return obj === Object(obj);\n  },\n\n  isNumber: function(obj) {\n    return obj === obj + 0;\n  },\n\n  isString: function(obj) {\n    return obj === obj + '';\n  },\n\n  isBoolean: function(obj) {\n    return obj === false || obj === true;\n  },\n\n  isFunction: function(obj) {\n    return Object.prototype.toString.call(obj) === '[object Function]';\n  }\n\n};\n\nexport default Common;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport toString from './toString';\nimport common from '../utils/common';\n\nconst INTERPRETATIONS = [\n  // Strings\n  {\n    litmus: common.isString,\n    conversions: {\n      THREE_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9])([A-F0-9])([A-F0-9])$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt(\n              '0x' +\n              test[1].toString() + test[1].toString() +\n              test[2].toString() + test[2].toString() +\n              test[3].toString() + test[3].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      SIX_CHAR_HEX: {\n        read: function(original) {\n          const test = original.match(/^#([A-F0-9]{6})$/i);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'HEX',\n            hex: parseInt('0x' + test[1].toString(), 0)\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGB: {\n        read: function(original) {\n          const test = original.match(/^rgb\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3])\n          };\n        },\n\n        write: toString\n      },\n\n      CSS_RGBA: {\n        read: function(original) {\n          const test = original.match(/^rgba\\(\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*,\\s*(.+)\\s*\\)/);\n          if (test === null) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: parseFloat(test[1]),\n            g: parseFloat(test[2]),\n            b: parseFloat(test[3]),\n            a: parseFloat(test[4])\n          };\n        },\n\n        write: toString\n      }\n    }\n  },\n\n  // Numbers\n  {\n    litmus: common.isNumber,\n\n    conversions: {\n\n      HEX: {\n        read: function(original) {\n          return {\n            space: 'HEX',\n            hex: original,\n            conversionName: 'HEX'\n          };\n        },\n\n        write: function(color) {\n          return color.hex;\n        }\n      }\n\n    }\n\n  },\n\n  // Arrays\n  {\n    litmus: common.isArray,\n    conversions: {\n      RGB_ARRAY: {\n        read: function(original) {\n          if (original.length !== 3) {\n            return false;\n          }\n\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b];\n        }\n      },\n\n      RGBA_ARRAY: {\n        read: function(original) {\n          if (original.length !== 4) return false;\n          return {\n            space: 'RGB',\n            r: original[0],\n            g: original[1],\n            b: original[2],\n            a: original[3]\n          };\n        },\n\n        write: function(color) {\n          return [color.r, color.g, color.b, color.a];\n        }\n      }\n    }\n  },\n\n  // Objects\n  {\n    litmus: common.isObject,\n    conversions: {\n\n      RGBA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b,\n            a: color.a\n          };\n        }\n      },\n\n      RGB_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.r) &&\n            common.isNumber(original.g) &&\n            common.isNumber(original.b)) {\n            return {\n              space: 'RGB',\n              r: original.r,\n              g: original.g,\n              b: original.b\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            r: color.r,\n            g: color.g,\n            b: color.b\n          };\n        }\n      },\n\n      HSVA_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v) &&\n            common.isNumber(original.a)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v,\n              a: original.a\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v,\n            a: color.a\n          };\n        }\n      },\n\n      HSV_OBJ: {\n        read: function(original) {\n          if (common.isNumber(original.h) &&\n            common.isNumber(original.s) &&\n            common.isNumber(original.v)) {\n            return {\n              space: 'HSV',\n              h: original.h,\n              s: original.s,\n              v: original.v\n            };\n          }\n          return false;\n        },\n\n        write: function(color) {\n          return {\n            h: color.h,\n            s: color.s,\n            v: color.v\n          };\n        }\n      }\n    }\n  }\n];\n\nlet result;\nlet toReturn;\n\nconst interpret = function() {\n  toReturn = false;\n\n  const original = arguments.length > 1 ? common.toArray(arguments) : arguments[0];\n  common.each(INTERPRETATIONS, function(family) {\n    if (family.litmus(original)) {\n      common.each(family.conversions, function(conversion, conversionName) {\n        result = conversion.read(original);\n\n        if (toReturn === false && result !== false) {\n          toReturn = result;\n          result.conversionName = conversionName;\n          result.conversion = conversion;\n          return common.BREAK;\n        }\n      });\n\n      return common.BREAK;\n    }\n  });\n\n  return toReturn;\n};\n\nexport default interpret;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nlet tmpComponent;\n\nconst ColorMath = {\n  hsv_to_rgb: function(h, s, v) {\n    const hi = Math.floor(h / 60) % 6;\n\n    const f = h / 60 - Math.floor(h / 60);\n    const p = v * (1.0 - s);\n    const q = v * (1.0 - (f * s));\n    const t = v * (1.0 - ((1.0 - f) * s));\n\n    const c = [\n      [v, t, p],\n      [q, v, p],\n      [p, v, t],\n      [p, q, v],\n      [t, p, v],\n      [v, p, q]\n    ][hi];\n\n    return {\n      r: c[0] * 255,\n      g: c[1] * 255,\n      b: c[2] * 255\n    };\n  },\n\n  rgb_to_hsv: function(r, g, b) {\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n    const delta = max - min;\n    let h;\n    let s;\n\n    if (max !== 0) {\n      s = delta / max;\n    } else {\n      return {\n        h: NaN,\n        s: 0,\n        v: 0\n      };\n    }\n\n    if (r === max) {\n      h = (g - b) / delta;\n    } else if (g === max) {\n      h = 2 + (b - r) / delta;\n    } else {\n      h = 4 + (r - g) / delta;\n    }\n    h /= 6;\n    if (h < 0) {\n      h += 1;\n    }\n\n    return {\n      h: h * 360,\n      s: s,\n      v: max / 255\n    };\n  },\n\n  rgb_to_hex: function(r, g, b) {\n    let hex = this.hex_with_component(0, 2, r);\n    hex = this.hex_with_component(hex, 1, g);\n    hex = this.hex_with_component(hex, 0, b);\n    return hex;\n  },\n\n  component_from_hex: function(hex, componentIndex) {\n    return (hex >> (componentIndex * 8)) & 0xFF;\n  },\n\n  hex_with_component: function(hex, componentIndex, value) {\n    return value << (tmpComponent = componentIndex * 8) | (hex & ~(0xFF << tmpComponent));\n  }\n};\n\nexport default ColorMath;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport interpret from './interpret';\nimport math from './math';\nimport colorToString from './toString';\nimport common from '../utils/common';\n\nclass Color {\n  constructor() {\n    this.__state = interpret.apply(this, arguments);\n\n    if (this.__state === false) {\n      throw new Error('Failed to interpret color arguments');\n    }\n\n    this.__state.a = this.__state.a || 1;\n  }\n\n  toString() {\n    return colorToString(this);\n  }\n\n  toHexString() {\n    return colorToString(this, true);\n  }\n\n  toOriginal() {\n    return this.__state.conversion.write(this);\n  }\n}\n\nfunction defineRGBComponent(target, component, componentHexIndex) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'RGB') {\n        return this.__state[component];\n      }\n\n      Color.recalculateRGB(this, component, componentHexIndex);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'RGB') {\n        Color.recalculateRGB(this, component, componentHexIndex);\n        this.__state.space = 'RGB';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\nfunction defineHSVComponent(target, component) {\n  Object.defineProperty(target, component, {\n    get: function() {\n      if (this.__state.space === 'HSV') {\n        return this.__state[component];\n      }\n\n      Color.recalculateHSV(this);\n\n      return this.__state[component];\n    },\n\n    set: function(v) {\n      if (this.__state.space !== 'HSV') {\n        Color.recalculateHSV(this);\n        this.__state.space = 'HSV';\n      }\n\n      this.__state[component] = v;\n    }\n  });\n}\n\n\nColor.recalculateRGB = function(color, component, componentHexIndex) {\n  if (color.__state.space === 'HEX') {\n    color.__state[component] = math.component_from_hex(color.__state.hex, componentHexIndex);\n  } else if (color.__state.space === 'HSV') {\n    common.extend(color.__state, math.hsv_to_rgb(color.__state.h, color.__state.s, color.__state.v));\n  } else {\n    throw new Error('Corrupted color state');\n  }\n};\n\nColor.recalculateHSV = function(color) {\n  const result = math.rgb_to_hsv(color.r, color.g, color.b);\n\n  common.extend(color.__state,\n    {\n      s: result.s,\n      v: result.v\n    }\n  );\n\n  if (!common.isNaN(result.h)) {\n    color.__state.h = result.h;\n  } else if (common.isUndefined(color.__state.h)) {\n    color.__state.h = 0;\n  }\n};\n\nColor.COMPONENTS = ['r', 'g', 'b', 'h', 's', 'v', 'hex', 'a'];\n\ndefineRGBComponent(Color.prototype, 'r', 2);\ndefineRGBComponent(Color.prototype, 'g', 1);\ndefineRGBComponent(Color.prototype, 'b', 0);\n\ndefineHSVComponent(Color.prototype, 'h');\ndefineHSVComponent(Color.prototype, 's');\ndefineHSVComponent(Color.prototype, 'v');\n\nObject.defineProperty(Color.prototype, 'a', {\n  get: function() {\n    return this.__state.a;\n  },\n\n  set: function(v) {\n    this.__state.a = v;\n  }\n});\n\nObject.defineProperty(Color.prototype, 'hex', {\n  get: function() {\n    if (!this.__state.space !== 'HEX') {\n      this.__state.hex = math.rgb_to_hex(this.r, this.g, this.b);\n    }\n\n    return this.__state.hex;\n  },\n\n  set: function(v) {\n    this.__state.space = 'HEX';\n    this.__state.hex = v;\n  }\n});\n\nexport default Color;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\n/**\n * @class An \"abstract\" class that represents a given property of an object.\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass Controller {\n  constructor(object, property) {\n    this.initialValue = object[property];\n\n    /**\n     * Those who extend this class will put their DOM elements in here.\n     * @type {DOMElement}\n     */\n    this.domElement = document.createElement('div');\n\n    /**\n     * The object to manipulate\n     * @type {Object}\n     */\n    this.object = object;\n\n    /**\n     * The name of the property to manipulate\n     * @type {String}\n     */\n    this.property = property;\n\n    /**\n     * The function to be called on change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onChange = undefined;\n\n    /**\n     * The function to be called on finishing change.\n     * @type {Function}\n     * @ignore\n     */\n    this.__onFinishChange = undefined;\n  }\n\n  /**\n   * Specify that a function fire every time someone changes the value with\n   * this Controller.\n   *\n   * @param {Function} fnc This function will be called whenever the value\n   * is modified via this Controller.\n   * @returns {Controller} this\n   */\n  onChange(fnc) {\n    this.__onChange = fnc;\n    return this;\n  }\n\n  /**\n   * Specify that a function fire every time someone \"finishes\" changing\n   * the value wih this Controller. Useful for values that change\n   * incrementally like numbers or strings.\n   *\n   * @param {Function} fnc This function will be called whenever\n   * someone \"finishes\" changing the value via this Controller.\n   * @returns {Controller} this\n   */\n  onFinishChange(fnc) {\n    this.__onFinishChange = fnc;\n    return this;\n  }\n\n  /**\n   * Change the value of <code>object[property]</code>\n   *\n   * @param {Object} newValue The new value of <code>object[property]</code>\n   */\n  setValue(newValue) {\n    this.object[this.property] = newValue;\n    if (this.__onChange) {\n      this.__onChange.call(this, newValue);\n    }\n\n    this.updateDisplay();\n    return this;\n  }\n\n  /**\n   * Gets the value of <code>object[property]</code>\n   *\n   * @returns {Object} The current value of <code>object[property]</code>\n   */\n  getValue() {\n    return this.object[this.property];\n  }\n\n  /**\n   * Refreshes the visual display of a Controller in order to keep sync\n   * with the object's current value.\n   * @returns {Controller} this\n   */\n  updateDisplay() {\n    return this;\n  }\n\n  /**\n   * @returns {Boolean} true if the value has deviated from initialValue\n   */\n  isModified() {\n    return this.initialValue !== this.getValue();\n  }\n}\n\nexport default Controller;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport common from '../utils/common';\n\nconst EVENT_MAP = {\n  HTMLEvents: ['change'],\n  MouseEvents: ['click', 'mousemove', 'mousedown', 'mouseup', 'mouseover'],\n  KeyboardEvents: ['keydown']\n};\n\nconst EVENT_MAP_INV = {};\ncommon.each(EVENT_MAP, function(v, k) {\n  common.each(v, function(e) {\n    EVENT_MAP_INV[e] = k;\n  });\n});\n\nconst CSS_VALUE_PIXELS = /(\\d+(\\.\\d+)?)px/;\n\nfunction cssValueToPixels(val) {\n  if (val === '0' || common.isUndefined(val)) {\n    return 0;\n  }\n\n  const match = val.match(CSS_VALUE_PIXELS);\n\n  if (!common.isNull(match)) {\n    return parseFloat(match[1]);\n  }\n\n  // TODO ...ems? %?\n\n  return 0;\n}\n\n/**\n * @namespace\n * @member dat.dom\n */\nconst dom = {\n\n  /**\n   *\n   * @param elem\n   * @param selectable\n   */\n  makeSelectable: function(elem, selectable) {\n    if (elem === undefined || elem.style === undefined) return;\n\n    elem.onselectstart = selectable ? function() {\n      return false;\n    } : function() {\n    };\n\n    elem.style.MozUserSelect = selectable ? 'auto' : 'none';\n    elem.style.KhtmlUserSelect = selectable ? 'auto' : 'none';\n    elem.unselectable = selectable ? 'on' : 'off';\n  },\n\n  /**\n   *\n   * @param elem\n   * @param horizontal\n   * @param vert\n   */\n  makeFullscreen: function(elem, hor, vert) {\n    let vertical = vert;\n    let horizontal = hor;\n\n    if (common.isUndefined(horizontal)) {\n      horizontal = true;\n    }\n\n    if (common.isUndefined(vertical)) {\n      vertical = true;\n    }\n\n    elem.style.position = 'absolute';\n\n    if (horizontal) {\n      elem.style.left = 0;\n      elem.style.right = 0;\n    }\n    if (vertical) {\n      elem.style.top = 0;\n      elem.style.bottom = 0;\n    }\n  },\n\n  /**\n   *\n   * @param elem\n   * @param eventType\n   * @param params\n   */\n  fakeEvent: function(elem, eventType, pars, aux) {\n    const params = pars || {};\n    const className = EVENT_MAP_INV[eventType];\n    if (!className) {\n      throw new Error('Event type ' + eventType + ' not supported.');\n    }\n    const evt = document.createEvent(className);\n    switch (className) {\n      case 'MouseEvents':\n        {\n          const clientX = params.x || params.clientX || 0;\n          const clientY = params.y || params.clientY || 0;\n          evt.initMouseEvent(eventType, params.bubbles || false,\n            params.cancelable || true, window, params.clickCount || 1,\n            0, // screen X\n            0, // screen Y\n            clientX, // client X\n            clientY, // client Y\n            false, false, false, false, 0, null);\n          break;\n        }\n      case 'KeyboardEvents':\n        {\n          const init = evt.initKeyboardEvent || evt.initKeyEvent; // webkit || moz\n          common.defaults(params, {\n            cancelable: true,\n            ctrlKey: false,\n            altKey: false,\n            shiftKey: false,\n            metaKey: false,\n            keyCode: undefined,\n            charCode: undefined\n          });\n          init(eventType, params.bubbles || false,\n            params.cancelable, window,\n            params.ctrlKey, params.altKey,\n            params.shiftKey, params.metaKey,\n            params.keyCode, params.charCode);\n          break;\n        }\n      default:\n        {\n          evt.initEvent(eventType, params.bubbles || false, params.cancelable || true);\n          break;\n        }\n    }\n    common.defaults(evt, aux);\n    elem.dispatchEvent(evt);\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  bind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.addEventListener) {\n      elem.addEventListener(event, func, bool);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param event\n   * @param func\n   * @param bool\n   */\n  unbind: function(elem, event, func, newBool) {\n    const bool = newBool || false;\n    if (elem.removeEventListener) {\n      elem.removeEventListener(event, func, bool);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + event, func);\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  addClass: function(elem, className) {\n    if (elem.className === undefined) {\n      elem.className = className;\n    } else if (elem.className !== className) {\n      const classes = elem.className.split(/ +/);\n      if (classes.indexOf(className) === -1) {\n        classes.push(className);\n        elem.className = classes.join(' ').replace(/^\\s+/, '').replace(/\\s+$/, '');\n      }\n    }\n    return dom;\n  },\n\n  /**\n   *\n   * @param elem\n   * @param className\n   */\n  removeClass: function(elem, className) {\n    if (className) {\n      if (elem.className === className) {\n        elem.removeAttribute('class');\n      } else {\n        const classes = elem.className.split(/ +/);\n        const index = classes.indexOf(className);\n        if (index !== -1) {\n          classes.splice(index, 1);\n          elem.className = classes.join(' ');\n        }\n      }\n    } else {\n      elem.className = undefined;\n    }\n    return dom;\n  },\n\n  hasClass: function(elem, className) {\n    return new RegExp('(?:^|\\\\s+)' + className + '(?:\\\\s+|$)').test(elem.className) || false;\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getWidth: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-left-width']) +\n      cssValueToPixels(style['border-right-width']) +\n      cssValueToPixels(style['padding-left']) +\n      cssValueToPixels(style['padding-right']) +\n      cssValueToPixels(style.width);\n  },\n\n  /**\n   *\n   * @param elem\n   */\n  getHeight: function(elem) {\n    const style = getComputedStyle(elem);\n\n    return cssValueToPixels(style['border-top-width']) +\n      cssValueToPixels(style['border-bottom-width']) +\n      cssValueToPixels(style['padding-top']) +\n      cssValueToPixels(style['padding-bottom']) +\n      cssValueToPixels(style.height);\n  },\n\n  /**\n   *\n   * @param el\n   */\n  getOffset: function(el) {\n    let elem = el;\n    const offset = { left: 0, top: 0 };\n    if (elem.offsetParent) {\n      do {\n        offset.left += elem.offsetLeft;\n        offset.top += elem.offsetTop;\n        elem = elem.offsetParent;\n      } while (elem);\n    }\n    return offset;\n  },\n\n  // http://stackoverflow.com/posts/2684561/revisions\n  /**\n   *\n   * @param elem\n   */\n  isActive: function(elem) {\n    return elem === document.activeElement && (elem.type || elem.href);\n  }\n\n};\n\nexport default dom;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a checkbox input to alter the boolean property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass BooleanController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n    this.__prev = this.getValue();\n\n    this.__checkbox = document.createElement('input');\n    this.__checkbox.setAttribute('type', 'checkbox');\n\n    function onChange() {\n      _this.setValue(!_this.__prev);\n    }\n\n    dom.bind(this.__checkbox, 'change', onChange, false);\n\n    this.domElement.appendChild(this.__checkbox);\n\n    // Match original value\n    this.updateDisplay();\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    this.__prev = this.getValue();\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (this.getValue() === true) {\n      this.__checkbox.setAttribute('checked', 'checked');\n      this.__checkbox.checked = true;\n      this.__prev = true;\n    } else {\n      this.__checkbox.checked = false;\n      this.__prev = false;\n    }\n\n    return super.updateDisplay();\n  }\n}\n\nexport default BooleanController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\n/**\n * @class Provides a select input to alter the property of an object, using a\n * list of accepted values.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object|string[]} options A map of labels to acceptable values, or\n * a list of acceptable string values.\n */\nclass OptionController extends Controller {\n  constructor(object, property, opts) {\n    super(object, property);\n\n    let options = opts;\n\n    const _this = this;\n\n    /**\n     * The drop down menu\n     * @ignore\n     */\n    this.__select = document.createElement('select');\n\n    if (common.isArray(options)) {\n      const map = {};\n      common.each(options, function(element) {\n        map[element] = element;\n      });\n      options = map;\n    }\n\n    common.each(options, function(value, key) {\n      const opt = document.createElement('option');\n      opt.innerHTML = key;\n      opt.setAttribute('value', value);\n      _this.__select.appendChild(opt);\n    });\n\n    // Acknowledge original value\n    this.updateDisplay();\n\n    dom.bind(this.__select, 'change', function() {\n      const desiredValue = this.options[this.selectedIndex].value;\n      _this.setValue(desiredValue);\n    });\n\n    this.domElement.appendChild(this.__select);\n  }\n\n  setValue(v) {\n    const toReturn = super.setValue(v);\n\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n    return toReturn;\n  }\n\n  updateDisplay() {\n    if (dom.isActive(this.__select)) return this; // prevent number from updating if user is trying to manually update\n    this.__select.value = this.getValue();\n    return super.updateDisplay();\n  }\n}\n\nexport default OptionController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a text input to alter the string property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass StringController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    const _this = this;\n\n    function onChange() {\n      _this.setValue(_this.__input.value);\n    }\n\n    function onBlur() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    dom.bind(this.__input, 'keyup', onChange);\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) {\n        this.blur();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    // Stops the caret from moving on account of:\n    // keyup -> setValue -> updateDisplay\n    if (!dom.isActive(this.__input)) {\n      this.__input.value = this.getValue();\n    }\n    return super.updateDisplay();\n  }\n}\n\nexport default StringController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport common from '../utils/common';\n\nfunction numDecimals(x) {\n  const _x = x.toString();\n  if (_x.indexOf('.') > -1) {\n    return _x.length - _x.indexOf('.') - 1;\n  }\n\n  return 0;\n}\n\n/**\n * @class Represents a given property of an object that is a number.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberController extends Controller {\n  constructor(object, property, params) {\n    super(object, property);\n\n    const _params = params || {};\n\n    this.__min = _params.min;\n    this.__max = _params.max;\n    this.__step = _params.step;\n\n    if (common.isUndefined(this.__step)) {\n      if (this.initialValue === 0) {\n        this.__impliedStep = 1; // What are we, psychics?\n      } else {\n        // Hey Doug, check this out.\n        this.__impliedStep = Math.pow(10, Math.floor(Math.log(Math.abs(this.initialValue)) / Math.LN10)) / 10;\n      }\n    } else {\n      this.__impliedStep = this.__step;\n    }\n\n    this.__precision = numDecimals(this.__impliedStep);\n  }\n\n  setValue(v) {\n    let _v = v;\n\n    if (this.__min !== undefined && _v < this.__min) {\n      _v = this.__min;\n    } else if (this.__max !== undefined && _v > this.__max) {\n      _v = this.__max;\n    }\n\n    if (this.__step !== undefined && _v % this.__step !== 0) {\n      _v = Math.round(_v / this.__step) * this.__step;\n    }\n\n    return super.setValue(_v);\n  }\n\n  /**\n   * Specify a minimum value for <code>object[property]</code>.\n   *\n   * @param {Number} minValue The minimum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  min(minValue) {\n    this.__min = minValue;\n    return this;\n  }\n\n  /**\n   * Specify a maximum value for <code>object[property]</code>.\n   *\n   * @param {Number} maxValue The maximum value for\n   * <code>object[property]</code>\n   * @returns {dat.controllers.NumberController} this\n   */\n  max(maxValue) {\n    this.__max = maxValue;\n    return this;\n  }\n\n  /**\n   * Specify a step value that dat.controllers.NumberController\n   * increments by.\n   *\n   * @param {Number} stepValue The step value for\n   * dat.controllers.NumberController\n   * @default if minimum and maximum specified increment is 1% of the\n   * difference otherwise stepValue is 1\n   * @returns {dat.controllers.NumberController} this\n   */\n  step(stepValue) {\n    this.__step = stepValue;\n    this.__impliedStep = stepValue;\n    this.__precision = numDecimals(stepValue);\n    return this;\n  }\n}\n\nexport default NumberController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nfunction roundToDecimal(value, decimals) {\n  const tenTo = Math.pow(10, decimals);\n  return Math.round(value * tenTo) / tenTo;\n}\n\n/**\n * @class Represents a given property of an object that is a number and\n * provides an input element with which to manipulate it.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Object} [params] Optional parameters\n * @param {Number} [params.min] Minimum allowed value\n * @param {Number} [params.max] Maximum allowed value\n * @param {Number} [params.step] Increment by which to change value\n */\nclass NumberControllerBox extends NumberController {\n  constructor(object, property, params) {\n    super(object, property, params);\n\n    this.__truncationSuspended = false;\n\n    const _this = this;\n\n    /**\n     * {Number} Previous mouse y position\n     * @ignore\n     */\n    let prevY;\n\n    function onChange() {\n      const attempted = parseFloat(_this.__input.value);\n      if (!common.isNaN(attempted)) {\n        _this.setValue(attempted);\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onBlur() {\n      onFinish();\n    }\n\n    function onMouseDrag(e) {\n      const diff = prevY - e.clientY;\n      _this.setValue(_this.getValue() + diff * _this.__impliedStep);\n\n      prevY = e.clientY;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      onFinish();\n    }\n\n    function onMouseDown(e) {\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n      prevY = e.clientY;\n    }\n\n    this.__input = document.createElement('input');\n    this.__input.setAttribute('type', 'text');\n\n    // Makes it so manually specified values are not truncated.\n\n    dom.bind(this.__input, 'change', onChange);\n    dom.bind(this.__input, 'blur', onBlur);\n    dom.bind(this.__input, 'mousedown', onMouseDown);\n    dom.bind(this.__input, 'keydown', function(e) {\n      // When pressing enter, you can be as precise as you want.\n      if (e.keyCode === 13) {\n        _this.__truncationSuspended = true;\n        this.blur();\n        _this.__truncationSuspended = false;\n        onFinish();\n      }\n    });\n\n    this.updateDisplay();\n\n    this.domElement.appendChild(this.__input);\n  }\n\n  updateDisplay() {\n    this.__input.value = this.__truncationSuspended ? this.getValue() : roundToDecimal(this.getValue(), this.__precision);\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerBox;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport NumberController from './NumberController';\nimport dom from '../dom/dom';\n\nfunction map(v, i1, i2, o1, o2) {\n  return o1 + (o2 - o1) * ((v - i1) / (i2 - i1));\n}\n\n/**\n * @class Represents a given property of an object that is a number, contains\n * a minimum and maximum, and provides a slider element with which to\n * manipulate it. It should be noted that the slider element is made up of\n * <code>&lt;div&gt;</code> tags, <strong>not</strong> the html5\n * <code>&lt;slider&gt;</code> element.\n *\n * @extends dat.controllers.Controller\n * @extends dat.controllers.NumberController\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n * @param {Number} minValue Minimum allowed value\n * @param {Number} maxValue Maximum allowed value\n * @param {Number} stepValue Increment by which to change value\n */\nclass NumberControllerSlider extends NumberController {\n  constructor(object, property, min, max, step) {\n    super(object, property, { min: min, max: max, step: step });\n\n    const _this = this;\n\n    this.__background = document.createElement('div');\n    this.__foreground = document.createElement('div');\n\n    dom.bind(this.__background, 'mousedown', onMouseDown);\n    dom.bind(this.__background, 'touchstart', onTouchStart);\n\n    dom.addClass(this.__background, 'slider');\n    dom.addClass(this.__foreground, 'slider-fg');\n\n    function onMouseDown(e) {\n      document.activeElement.blur();\n\n      dom.bind(window, 'mousemove', onMouseDrag);\n      dom.bind(window, 'mouseup', onMouseUp);\n\n      onMouseDrag(e);\n    }\n\n    function onMouseDrag(e) {\n      e.preventDefault();\n\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(e.clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n\n      return false;\n    }\n\n    function onMouseUp() {\n      dom.unbind(window, 'mousemove', onMouseDrag);\n      dom.unbind(window, 'mouseup', onMouseUp);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    function onTouchStart(e) {\n      if (e.touches.length !== 1) { return; }\n      dom.bind(window, 'touchmove', onTouchMove);\n      dom.bind(window, 'touchend', onTouchEnd);\n      onTouchMove(e);\n    }\n\n    function onTouchMove(e) {\n      const clientX = e.touches[0].clientX;\n      const bgRect = _this.__background.getBoundingClientRect();\n\n      _this.setValue(\n        map(clientX, bgRect.left, bgRect.right, _this.__min, _this.__max)\n      );\n    }\n\n    function onTouchEnd() {\n      dom.unbind(window, 'touchmove', onTouchMove);\n      dom.unbind(window, 'touchend', onTouchEnd);\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.getValue());\n      }\n    }\n\n    this.updateDisplay();\n\n    this.__background.appendChild(this.__foreground);\n    this.domElement.appendChild(this.__background);\n  }\n\n  updateDisplay() {\n    const pct = (this.getValue() - this.__min) / (this.__max - this.__min);\n    this.__foreground.style.width = pct * 100 + '%';\n    return super.updateDisplay();\n  }\n}\n\nexport default NumberControllerSlider;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\n\n/**\n * @class Provides a GUI interface to fire a specified method, a property of an object.\n *\n * @extends dat.controllers.Controller\n *\n * @param {Object} object The object to be manipulated\n * @param {string} property The name of the property to be manipulated\n */\nclass FunctionController extends Controller {\n  constructor(object, property, text) {\n    super(object, property);\n\n    const _this = this;\n\n    this.__button = document.createElement('div');\n    this.__button.innerHTML = text === undefined ? 'Fire' : text;\n\n    dom.bind(this.__button, 'click', function(e) {\n      e.preventDefault();\n      _this.fire();\n      return false;\n    });\n\n    dom.addClass(this.__button, 'button');\n\n    this.domElement.appendChild(this.__button);\n  }\n\n  fire() {\n    if (this.__onChange) {\n      this.__onChange.call(this);\n    }\n    this.getValue().call(this.object);\n    if (this.__onFinishChange) {\n      this.__onFinishChange.call(this, this.getValue());\n    }\n  }\n}\n\nexport default FunctionController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Controller from './Controller';\nimport dom from '../dom/dom';\nimport Color from '../color/Color';\nimport interpret from '../color/interpret';\nimport common from '../utils/common';\n\n/**\n * @class Represents a given property of an object that is a color.\n * @param {Object} object\n * @param {string} property\n */\nclass ColorController extends Controller {\n  constructor(object, property) {\n    super(object, property);\n\n    this.__color = new Color(this.getValue());\n    this.__temp = new Color(0);\n\n    const _this = this;\n\n    this.domElement = document.createElement('div');\n\n    dom.makeSelectable(this.domElement, false);\n\n    this.__selector = document.createElement('div');\n    this.__selector.className = 'selector';\n\n    this.__saturation_field = document.createElement('div');\n    this.__saturation_field.className = 'saturation-field';\n\n    this.__field_knob = document.createElement('div');\n    this.__field_knob.className = 'field-knob';\n    this.__field_knob_border = '2px solid ';\n\n    this.__hue_knob = document.createElement('div');\n    this.__hue_knob.className = 'hue-knob';\n\n    this.__hue_field = document.createElement('div');\n    this.__hue_field.className = 'hue-field';\n\n    this.__input = document.createElement('input');\n    this.__input.type = 'text';\n    this.__input_textShadow = '0 1px 1px ';\n\n    dom.bind(this.__input, 'keydown', function(e) {\n      if (e.keyCode === 13) { // on enter\n        onBlur.call(this);\n      }\n    });\n\n    dom.bind(this.__input, 'blur', onBlur);\n\n    dom.bind(this.__selector, 'mousedown', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'mouseup', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    dom.bind(this.__selector, 'touchstart', function(/* e */) {\n      dom\n        .addClass(this, 'drag')\n        .bind(window, 'touchend', function(/* e */) {\n          dom.removeClass(_this.__selector, 'drag');\n        });\n    });\n\n    const valueField = document.createElement('div');\n\n    common.extend(this.__selector.style, {\n      width: '122px',\n      height: '102px',\n      padding: '3px',\n      backgroundColor: '#222',\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.3)'\n    });\n\n    common.extend(this.__field_knob.style, {\n      position: 'absolute',\n      width: '12px',\n      height: '12px',\n      border: this.__field_knob_border + (this.__color.v < 0.5 ? '#fff' : '#000'),\n      boxShadow: '0px 1px 3px rgba(0,0,0,0.5)',\n      borderRadius: '12px',\n      zIndex: 1\n    });\n\n    common.extend(this.__hue_knob.style, {\n      position: 'absolute',\n      width: '15px',\n      height: '2px',\n      borderRight: '4px solid #fff',\n      zIndex: 1\n    });\n\n    common.extend(this.__saturation_field.style, {\n      width: '100px',\n      height: '100px',\n      border: '1px solid #555',\n      marginRight: '3px',\n      display: 'inline-block',\n      cursor: 'pointer'\n    });\n\n    common.extend(valueField.style, {\n      width: '100%',\n      height: '100%',\n      background: 'none'\n    });\n\n    linearGradient(valueField, 'top', 'rgba(0,0,0,0)', '#000');\n\n    common.extend(this.__hue_field.style, {\n      width: '15px',\n      height: '100px',\n      border: '1px solid #555',\n      cursor: 'ns-resize',\n      position: 'absolute',\n      top: '3px',\n      right: '3px'\n    });\n\n    hueGradient(this.__hue_field);\n\n    common.extend(this.__input.style, {\n      outline: 'none',\n//      width: '120px',\n      textAlign: 'center',\n//      padding: '4px',\n//      marginBottom: '6px',\n      color: '#fff',\n      border: 0,\n      fontWeight: 'bold',\n      textShadow: this.__input_textShadow + 'rgba(0,0,0,0.7)'\n    });\n\n    dom.bind(this.__saturation_field, 'mousedown', fieldDown);\n    dom.bind(this.__saturation_field, 'touchstart', fieldDown);\n\n    dom.bind(this.__field_knob, 'mousedown', fieldDown);\n    dom.bind(this.__field_knob, 'touchstart', fieldDown);\n\n    dom.bind(this.__hue_field, 'mousedown', fieldDownH);\n    dom.bind(this.__hue_field, 'touchstart', fieldDownH);\n\n    function fieldDown(e) {\n      setSV(e);\n      dom.bind(window, 'mousemove', setSV);\n      dom.bind(window, 'touchmove', setSV);\n      dom.bind(window, 'mouseup', fieldUpSV);\n      dom.bind(window, 'touchend', fieldUpSV);\n    }\n\n    function fieldDownH(e) {\n      setH(e);\n      dom.bind(window, 'mousemove', setH);\n      dom.bind(window, 'touchmove', setH);\n      dom.bind(window, 'mouseup', fieldUpH);\n      dom.bind(window, 'touchend', fieldUpH);\n    }\n\n    function fieldUpSV() {\n      dom.unbind(window, 'mousemove', setSV);\n      dom.unbind(window, 'touchmove', setSV);\n      dom.unbind(window, 'mouseup', fieldUpSV);\n      dom.unbind(window, 'touchend', fieldUpSV);\n      onFinish();\n    }\n\n    function fieldUpH() {\n      dom.unbind(window, 'mousemove', setH);\n      dom.unbind(window, 'touchmove', setH);\n      dom.unbind(window, 'mouseup', fieldUpH);\n      dom.unbind(window, 'touchend', fieldUpH);\n      onFinish();\n    }\n\n    function onBlur() {\n      const i = interpret(this.value);\n      if (i !== false) {\n        _this.__color.__state = i;\n        _this.setValue(_this.__color.toOriginal());\n      } else {\n        this.value = _this.__color.toString();\n      }\n    }\n\n    function onFinish() {\n      if (_this.__onFinishChange) {\n        _this.__onFinishChange.call(_this, _this.__color.toOriginal());\n      }\n    }\n\n    this.__saturation_field.appendChild(valueField);\n    this.__selector.appendChild(this.__field_knob);\n    this.__selector.appendChild(this.__saturation_field);\n    this.__selector.appendChild(this.__hue_field);\n    this.__hue_field.appendChild(this.__hue_knob);\n\n    this.domElement.appendChild(this.__input);\n    this.domElement.appendChild(this.__selector);\n\n    this.updateDisplay();\n\n    function setSV(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__saturation_field.getBoundingClientRect();\n      const { clientX, clientY } = (e.touches && e.touches[0]) || e;\n      let s = (clientX - fieldRect.left) / (fieldRect.right - fieldRect.left);\n      let v = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (v > 1) {\n        v = 1;\n      } else if (v < 0) {\n        v = 0;\n      }\n\n      if (s > 1) {\n        s = 1;\n      } else if (s < 0) {\n        s = 0;\n      }\n\n      _this.__color.v = v;\n      _this.__color.s = s;\n\n      _this.setValue(_this.__color.toOriginal());\n\n\n      return false;\n    }\n\n    function setH(e) {\n      if (e.type.indexOf('touch') === -1) { e.preventDefault(); }\n\n      const fieldRect = _this.__hue_field.getBoundingClientRect();\n      const { clientY } = (e.touches && e.touches[0]) || e;\n      let h = 1 - (clientY - fieldRect.top) / (fieldRect.bottom - fieldRect.top);\n\n      if (h > 1) {\n        h = 1;\n      } else if (h < 0) {\n        h = 0;\n      }\n\n      _this.__color.h = h * 360;\n\n      _this.setValue(_this.__color.toOriginal());\n\n      return false;\n    }\n  }\n\n  updateDisplay() {\n    const i = interpret(this.getValue());\n\n    if (i !== false) {\n      let mismatch = false;\n\n      // Check for mismatch on the interpreted value.\n\n      common.each(Color.COMPONENTS, function(component) {\n        if (!common.isUndefined(i[component]) && !common.isUndefined(this.__color.__state[component]) &&\n          i[component] !== this.__color.__state[component]) {\n          mismatch = true;\n          return {}; // break\n        }\n      }, this);\n\n      // If nothing diverges, we keep our previous values\n      // for statefulness, otherwise we recalculate fresh\n      if (mismatch) {\n        common.extend(this.__color.__state, i);\n      }\n    }\n\n    common.extend(this.__temp.__state, this.__color.__state);\n\n    this.__temp.a = 1;\n\n    const flip = (this.__color.v < 0.5 || this.__color.s > 0.5) ? 255 : 0;\n    const _flip = 255 - flip;\n\n    common.extend(this.__field_knob.style, {\n      marginLeft: 100 * this.__color.s - 7 + 'px',\n      marginTop: 100 * (1 - this.__color.v) - 7 + 'px',\n      backgroundColor: this.__temp.toHexString(),\n      border: this.__field_knob_border + 'rgb(' + flip + ',' + flip + ',' + flip + ')'\n    });\n\n    this.__hue_knob.style.marginTop = (1 - this.__color.h / 360) * 100 + 'px';\n\n    this.__temp.s = 1;\n    this.__temp.v = 1;\n\n    linearGradient(this.__saturation_field, 'left', '#fff', this.__temp.toHexString());\n\n    this.__input.value = this.__color.toString();\n\n    common.extend(this.__input.style, {\n      backgroundColor: this.__color.toHexString(),\n      color: 'rgb(' + flip + ',' + flip + ',' + flip + ')',\n      textShadow: this.__input_textShadow + 'rgba(' + _flip + ',' + _flip + ',' + _flip + ',.7)'\n    });\n  }\n}\n\nconst vendors = ['-moz-', '-o-', '-webkit-', '-ms-', ''];\n\nfunction linearGradient(elem, x, a, b) {\n  elem.style.background = '';\n  common.each(vendors, function(vendor) {\n    elem.style.cssText += 'background: ' + vendor + 'linear-gradient(' + x + ', ' + a + ' 0%, ' + b + ' 100%); ';\n  });\n}\n\nfunction hueGradient(elem) {\n  elem.style.background = '';\n  elem.style.cssText += 'background: -moz-linear-gradient(top,  #ff0000 0%, #ff00ff 17%, #0000ff 34%, #00ffff 50%, #00ff00 67%, #ffff00 84%, #ff0000 100%);';\n  elem.style.cssText += 'background: -webkit-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -o-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: -ms-linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n  elem.style.cssText += 'background: linear-gradient(top,  #ff0000 0%,#ff00ff 17%,#0000ff 34%,#00ffff 50%,#00ff00 67%,#ffff00 84%,#ff0000 100%);';\n}\n\nexport default ColorController;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nconst css = {\n  load: function(url, indoc) {\n    const doc = indoc || document;\n    const link = doc.createElement('link');\n    link.type = 'text/css';\n    link.rel = 'stylesheet';\n    link.href = url;\n    doc.getElementsByTagName('head')[0].appendChild(link);\n  },\n\n  inject: function(cssContent, indoc) {\n    const doc = indoc || document;\n    const injected = document.createElement('style');\n    injected.type = 'text/css';\n    injected.innerHTML = cssContent;\n    const head = doc.getElementsByTagName('head')[0];\n    try {\n      head.appendChild(injected);\n    } catch (e) { // Unable to inject CSS, probably because of a Content Security Policy\n    }\n  }\n};\n\nexport default css;\n","const saveDialogContents = `<div id=\"dg-save\" class=\"dg dialogue\">\n\n  Here's the new load parameter for your <code>GUI</code>'s constructor:\n\n  <textarea id=\"dg-new-constructor\"></textarea>\n\n  <div id=\"dg-save-locally\">\n\n    <input id=\"dg-local-storage\" type=\"checkbox\"/> Automatically save\n    values to <code>localStorage</code> on exit.\n\n    <div id=\"dg-local-explain\">The values saved to <code>localStorage</code> will\n      override those passed to <code>dat.GUI</code>'s constructor. This makes it\n      easier to work incrementally, but <code>localStorage</code> is fragile,\n      and your friends may not see the same values you do.\n\n    </div>\n\n  </div>\n\n</div>`;\n\nexport default saveDialogContents;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport OptionController from './OptionController';\nimport NumberControllerBox from './NumberControllerBox';\nimport NumberControllerSlider from './NumberControllerSlider';\nimport StringController from './StringController';\nimport FunctionController from './FunctionController';\nimport BooleanController from './BooleanController';\nimport common from '../utils/common';\n\nconst ControllerFactory = function(object, property) {\n  const initialValue = object[property];\n\n  // Providing options?\n  if (common.isArray(arguments[2]) || common.isObject(arguments[2])) {\n    return new OptionController(object, property, arguments[2]);\n  }\n\n  // Providing a map?\n  if (common.isNumber(initialValue)) {\n    // Has min and max? (slider)\n    if (common.isNumber(arguments[2]) && common.isNumber(arguments[3])) {\n      // has step?\n      if (common.isNumber(arguments[4])) {\n        return new NumberControllerSlider(object, property,\n                        arguments[2], arguments[3], arguments[4]);\n      }\n\n      return new NumberControllerSlider(object, property, arguments[2], arguments[3]);\n    }\n\n    // number box\n    if (common.isNumber(arguments[4])) { // has step\n      return new NumberControllerBox(object, property,\n                        { min: arguments[2], max: arguments[3], step: arguments[4] });\n    }\n    return new NumberControllerBox(object, property, { min: arguments[2], max: arguments[3] });\n  }\n\n  if (common.isString(initialValue)) {\n    return new StringController(object, property);\n  }\n\n  if (common.isFunction(initialValue)) {\n    return new FunctionController(object, property, '');\n  }\n\n  if (common.isBoolean(initialValue)) {\n    return new BooleanController(object, property);\n  }\n\n  return null;\n};\n\nexport default ControllerFactory;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction requestAnimationFrame(callback) {\n  setTimeout(callback, 1000 / 60);\n}\n\nexport default window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    requestAnimationFrame;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nclass CenteredDiv {\n  constructor() {\n    this.backgroundElement = document.createElement('div');\n    common.extend(this.backgroundElement.style, {\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      top: 0,\n      left: 0,\n      display: 'none',\n      zIndex: '1000',\n      opacity: 0,\n      WebkitTransition: 'opacity 0.2s linear',\n      transition: 'opacity 0.2s linear'\n    });\n\n    dom.makeFullscreen(this.backgroundElement);\n    this.backgroundElement.style.position = 'fixed';\n\n    this.domElement = document.createElement('div');\n    common.extend(this.domElement.style, {\n      position: 'fixed',\n      display: 'none',\n      zIndex: '1001',\n      opacity: 0,\n      WebkitTransition: '-webkit-transform 0.2s ease-out, opacity 0.2s linear',\n      transition: 'transform 0.2s ease-out, opacity 0.2s linear'\n    });\n\n\n    document.body.appendChild(this.backgroundElement);\n    document.body.appendChild(this.domElement);\n\n    const _this = this;\n    dom.bind(this.backgroundElement, 'click', function() {\n      _this.hide();\n    });\n  }\n\n  show() {\n    const _this = this;\n\n    this.backgroundElement.style.display = 'block';\n\n    this.domElement.style.display = 'block';\n    this.domElement.style.opacity = 0;\n//    this.domElement.style.top = '52%';\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n\n    this.layout();\n\n    common.defer(function() {\n      _this.backgroundElement.style.opacity = 1;\n      _this.domElement.style.opacity = 1;\n      _this.domElement.style.webkitTransform = 'scale(1)';\n    });\n  }\n\n  /**\n   * Hide centered div\n   */\n  hide() {\n    const _this = this;\n\n    const hide = function() {\n      _this.domElement.style.display = 'none';\n      _this.backgroundElement.style.display = 'none';\n\n      dom.unbind(_this.domElement, 'webkitTransitionEnd', hide);\n      dom.unbind(_this.domElement, 'transitionend', hide);\n      dom.unbind(_this.domElement, 'oTransitionEnd', hide);\n    };\n\n    dom.bind(this.domElement, 'webkitTransitionEnd', hide);\n    dom.bind(this.domElement, 'transitionend', hide);\n    dom.bind(this.domElement, 'oTransitionEnd', hide);\n\n    this.backgroundElement.style.opacity = 0;\n//    this.domElement.style.top = '48%';\n    this.domElement.style.opacity = 0;\n    this.domElement.style.webkitTransform = 'scale(1.1)';\n  }\n\n  layout() {\n    this.domElement.style.left = window.innerWidth / 2 - dom.getWidth(this.domElement) / 2 + 'px';\n    this.domElement.style.top = window.innerHeight / 2 - dom.getHeight(this.domElement) / 2 + 'px';\n  }\n}\n\nexport default CenteredDiv;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport css from '../utils/css';\nimport saveDialogueContents from './saveDialogue.html';\nimport ControllerFactory from '../controllers/ControllerFactory';\nimport Controller from '../controllers/Controller';\nimport BooleanController from '../controllers/BooleanController';\nimport FunctionController from '../controllers/FunctionController';\nimport NumberControllerBox from '../controllers/NumberControllerBox';\nimport NumberControllerSlider from '../controllers/NumberControllerSlider';\nimport ColorController from '../controllers/ColorController';\nimport requestAnimationFrame from '../utils/requestAnimationFrame';\nimport CenteredDiv from '../dom/CenteredDiv';\nimport dom from '../dom/dom';\nimport common from '../utils/common';\n\nimport styleSheet from './style.scss'; // CSS to embed in build\n\ncss.inject(styleSheet);\n\n/** @ignore Outer-most className for GUI's */\nconst CSS_NAMESPACE = 'dg';\n\nconst HIDE_KEY_CODE = 72;\n\n/** @ignore The only value shared between the JS and SCSS. Use caution. */\nconst CLOSE_BUTTON_HEIGHT = 20;\n\nconst DEFAULT_DEFAULT_PRESET_NAME = 'Default';\n\nconst SUPPORTS_LOCAL_STORAGE = (function() {\n  try {\n    return !!window.localStorage;\n  } catch (e) {\n    return false;\n  }\n}());\n\nlet SAVE_DIALOGUE;\n\n/** @ignore Have we yet to create an autoPlace GUI? */\nlet autoPlaceVirgin = true;\n\n/** @ignore Fixed position div that auto place GUI's go inside */\nlet autoPlaceContainer;\n\n/** @ignore Are we hiding the GUI's ? */\nlet hide = false;\n\n/** @private GUI's which should be hidden */\nconst hideableGuis = [];\n\n/**\n * @class A lightweight controller library for JavaScript. It allows you to easily\n * manipulate variables and fire functions on the fly.\n *\n * @typicalname gui\n *\n * @example\n * // Creating a GUI with options.\n * var gui = new dat.GUI({name: 'My GUI'});\n *\n * @example\n * // Creating a GUI and a subfolder.\n * var gui = new dat.GUI();\n * var folder1 = gui.addFolder('Flow Field');\n *\n * @param {Object} [params]\n * @param {String} [params.name] The name of this GUI.\n * @param {Object} [params.load] JSON object representing the saved state of\n * this GUI.\n * @param {dat.gui.GUI} [params.parent] The GUI I'm nested in.\n * @param {Boolean} [params.autoPlace=true]\n * @param {Boolean} [params.hideable=true] If true, GUI is shown/hidden by <kbd>h</kbd> keypress.\n * @param {Boolean} [params.closed=false] If true, starts closed\n * @param {Boolean} [params.closeOnTop=false] If true, close/open button shows on top of the GUI\n */\nconst GUI = function(pars) {\n  const _this = this;\n\n  let params = pars || {};\n\n  /**\n   * Outermost DOM Element\n   * @type {DOMElement}\n   */\n  this.domElement = document.createElement('div');\n  this.__ul = document.createElement('ul');\n  this.domElement.appendChild(this.__ul);\n\n  dom.addClass(this.domElement, CSS_NAMESPACE);\n\n  /**\n   * Nested GUI's by name\n   * @ignore\n   */\n  this.__folders = {};\n\n  this.__controllers = [];\n\n  /**\n   * List of objects I'm remembering for save, only used in top level GUI\n   * @ignore\n   */\n  this.__rememberedObjects = [];\n\n  /**\n   * Maps the index of remembered objects to a map of controllers, only used\n   * in top level GUI.\n   *\n   * @private\n   * @ignore\n   *\n   * @example\n   * [\n   *  {\n     *    propertyName: Controller,\n     *    anotherPropertyName: Controller\n     *  },\n   *  {\n     *    propertyName: Controller\n     *  }\n   * ]\n   */\n  this.__rememberedObjectIndecesToControllers = [];\n\n  this.__listening = [];\n\n  // Default parameters\n  params = common.defaults(params, {\n    closeOnTop: false,\n    autoPlace: true,\n    width: GUI.DEFAULT_WIDTH\n  });\n\n  params = common.defaults(params, {\n    resizable: params.autoPlace,\n    hideable: params.autoPlace\n  });\n\n  if (!common.isUndefined(params.load)) {\n    // Explicit preset\n    if (params.preset) {\n      params.load.preset = params.preset;\n    }\n  } else {\n    params.load = { preset: DEFAULT_DEFAULT_PRESET_NAME };\n  }\n\n  if (common.isUndefined(params.parent) && params.hideable) {\n    hideableGuis.push(this);\n  }\n\n  // Only root level GUI's are resizable.\n  params.resizable = common.isUndefined(params.parent) && params.resizable;\n\n  if (params.autoPlace && common.isUndefined(params.scrollable)) {\n    params.scrollable = true;\n  }\n//    params.scrollable = common.isUndefined(params.parent) && params.scrollable === true;\n\n  // Not part of params because I don't want people passing this in via\n  // constructor. Should be a 'remembered' value.\n  let useLocalStorage =\n    SUPPORTS_LOCAL_STORAGE &&\n    localStorage.getItem(getLocalStorageHash(this, 'isLocal')) === 'true';\n\n  let saveToLocalStorage;\n  let titleRow;\n\n  Object.defineProperties(this,\n    /** @lends GUI.prototype */\n    {\n      /**\n       * The parent <code>GUI</code>\n       * @type dat.gui.GUI\n       */\n      parent: {\n        get: function() {\n          return params.parent;\n        }\n      },\n\n      scrollable: {\n        get: function() {\n          return params.scrollable;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s element placement for you\n       * @type Boolean\n       */\n      autoPlace: {\n        get: function() {\n          return params.autoPlace;\n        }\n      },\n\n      /**\n       * Handles <code>GUI</code>'s position of open/close button\n       * @type Boolean\n       */\n      closeOnTop: {\n        get: function() {\n          return params.closeOnTop;\n        }\n      },\n\n      /**\n       * The identifier for a set of saved values\n       * @type String\n       */\n      preset: {\n        get: function() {\n          if (_this.parent) {\n            return _this.getRoot().preset;\n          }\n\n          return params.load.preset;\n        },\n\n        set: function(v) {\n          if (_this.parent) {\n            _this.getRoot().preset = v;\n          } else {\n            params.load.preset = v;\n          }\n          setPresetSelectIndex(this);\n          _this.revert();\n        }\n      },\n\n      /**\n       * The width of <code>GUI</code> element\n       * @type Number\n       */\n      width: {\n        get: function() {\n          return params.width;\n        },\n        set: function(v) {\n          params.width = v;\n          setWidth(_this, v);\n        }\n      },\n\n      /**\n       * The name of <code>GUI</code>. Used for folders. i.e\n       * a folder's name\n       * @type String\n       */\n      name: {\n        get: function() {\n          return params.name;\n        },\n        set: function(v) {\n          // TODO Check for collisions among sibling folders\n          params.name = v;\n          if (titleRow) {\n            titleRow.innerHTML = params.name;\n          }\n        }\n      },\n\n      /**\n       * Whether the <code>GUI</code> is collapsed or not\n       * @type Boolean\n       */\n      closed: {\n        get: function() {\n          return params.closed;\n        },\n        set: function(v) {\n          params.closed = v;\n          if (params.closed) {\n            dom.addClass(_this.__ul, GUI.CLASS_CLOSED);\n          } else {\n            dom.removeClass(_this.__ul, GUI.CLASS_CLOSED);\n          }\n          // For browsers that aren't going to respect the CSS transition,\n          // Lets just check our height against the window height right off\n          // the bat.\n          this.onResize();\n\n          if (_this.__closeButton) {\n            _this.__closeButton.innerHTML = v ? GUI.TEXT_OPEN : GUI.TEXT_CLOSED;\n          }\n        }\n      },\n\n      /**\n       * Contains all presets\n       * @type Object\n       */\n      load: {\n        get: function() {\n          return params.load;\n        }\n      },\n\n      /**\n       * Determines whether or not to use <a href=\"https://developer.mozilla.org/en/DOM/Storage#localStorage\">localStorage</a> as the means for\n       * <code>remember</code>ing\n       * @type Boolean\n       */\n      useLocalStorage: {\n\n        get: function() {\n          return useLocalStorage;\n        },\n        set: function(bool) {\n          if (SUPPORTS_LOCAL_STORAGE) {\n            useLocalStorage = bool;\n            if (bool) {\n              dom.bind(window, 'unload', saveToLocalStorage);\n            } else {\n              dom.unbind(window, 'unload', saveToLocalStorage);\n            }\n            localStorage.setItem(getLocalStorageHash(_this, 'isLocal'), bool);\n          }\n        }\n      }\n    });\n\n  // Are we a root level GUI?\n  if (common.isUndefined(params.parent)) {\n    this.closed = params.closed || false;\n\n    dom.addClass(this.domElement, GUI.CLASS_MAIN);\n    dom.makeSelectable(this.domElement, false);\n\n    // Are we supposed to be loading locally?\n    if (SUPPORTS_LOCAL_STORAGE) {\n      if (useLocalStorage) {\n        _this.useLocalStorage = true;\n\n        const savedGui = localStorage.getItem(getLocalStorageHash(this, 'gui'));\n\n        if (savedGui) {\n          params.load = JSON.parse(savedGui);\n        }\n      }\n    }\n\n    this.__closeButton = document.createElement('div');\n    this.__closeButton.innerHTML = GUI.TEXT_CLOSED;\n    dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BUTTON);\n    if (params.closeOnTop) {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_TOP);\n      this.domElement.insertBefore(this.__closeButton, this.domElement.childNodes[0]);\n    } else {\n      dom.addClass(this.__closeButton, GUI.CLASS_CLOSE_BOTTOM);\n      this.domElement.appendChild(this.__closeButton);\n    }\n\n    dom.bind(this.__closeButton, 'click', function() {\n      _this.closed = !_this.closed;\n    });\n    // Oh, you're a nested GUI!\n  } else {\n    if (params.closed === undefined) {\n      params.closed = true;\n    }\n\n    const titleRowName = document.createTextNode(params.name);\n    dom.addClass(titleRowName, 'controller-name');\n\n    titleRow = addRow(_this, titleRowName);\n\n    const onClickTitle = function(e) {\n      e.preventDefault();\n      _this.closed = !_this.closed;\n      return false;\n    };\n\n    dom.addClass(this.__ul, GUI.CLASS_CLOSED);\n\n    dom.addClass(titleRow, 'title');\n    dom.bind(titleRow, 'click', onClickTitle);\n\n    if (!params.closed) {\n      this.closed = false;\n    }\n  }\n\n  if (params.autoPlace) {\n    if (common.isUndefined(params.parent)) {\n      if (autoPlaceVirgin) {\n        autoPlaceContainer = document.createElement('div');\n        dom.addClass(autoPlaceContainer, CSS_NAMESPACE);\n        dom.addClass(autoPlaceContainer, GUI.CLASS_AUTO_PLACE_CONTAINER);\n        document.body.appendChild(autoPlaceContainer);\n        autoPlaceVirgin = false;\n      }\n\n      // Put it in the dom for you.\n      autoPlaceContainer.appendChild(this.domElement);\n\n      // Apply the auto styles\n      dom.addClass(this.domElement, GUI.CLASS_AUTO_PLACE);\n    }\n\n\n    // Make it not elastic.\n    if (!this.parent) {\n      setWidth(_this, params.width);\n    }\n  }\n\n  this.__resizeHandler = function() {\n    _this.onResizeDebounced();\n  };\n\n  dom.bind(window, 'resize', this.__resizeHandler);\n  dom.bind(this.__ul, 'webkitTransitionEnd', this.__resizeHandler);\n  dom.bind(this.__ul, 'transitionend', this.__resizeHandler);\n  dom.bind(this.__ul, 'oTransitionEnd', this.__resizeHandler);\n  this.onResize();\n\n  if (params.resizable) {\n    addResizeHandle(this);\n  }\n\n  saveToLocalStorage = function() {\n    if (SUPPORTS_LOCAL_STORAGE && localStorage.getItem(getLocalStorageHash(_this, 'isLocal')) === 'true') {\n      localStorage.setItem(getLocalStorageHash(_this, 'gui'), JSON.stringify(_this.getSaveObject()));\n    }\n  };\n\n  // expose this method publicly\n  this.saveToLocalStorageIfPossible = saveToLocalStorage;\n\n  function resetWidth() {\n    const root = _this.getRoot();\n    root.width += 1;\n    common.defer(function() {\n      root.width -= 1;\n    });\n  }\n\n  if (!params.parent) {\n    resetWidth();\n  }\n};\n\nGUI.toggleHide = function() {\n  hide = !hide;\n  common.each(hideableGuis, function(gui) {\n    gui.domElement.style.display = hide ? 'none' : '';\n  });\n};\n\nGUI.CLASS_AUTO_PLACE = 'a';\nGUI.CLASS_AUTO_PLACE_CONTAINER = 'ac';\nGUI.CLASS_MAIN = 'main';\nGUI.CLASS_CONTROLLER_ROW = 'cr';\nGUI.CLASS_TOO_TALL = 'taller-than-window';\nGUI.CLASS_CLOSED = 'closed';\nGUI.CLASS_CLOSE_BUTTON = 'close-button';\nGUI.CLASS_CLOSE_TOP = 'close-top';\nGUI.CLASS_CLOSE_BOTTOM = 'close-bottom';\nGUI.CLASS_DRAG = 'drag';\n\nGUI.DEFAULT_WIDTH = 245;\nGUI.TEXT_CLOSED = 'Close Controls';\nGUI.TEXT_OPEN = 'Open Controls';\n\nGUI._keydownHandler = function(e) {\n  if (document.activeElement.type !== 'text' &&\n    (e.which === HIDE_KEY_CODE || e.keyCode === HIDE_KEY_CODE)) {\n    GUI.toggleHide();\n  }\n};\ndom.bind(window, 'keydown', GUI._keydownHandler, false);\n\ncommon.extend(\n  GUI.prototype,\n\n  /** @lends GUI.prototype */\n  {\n\n    /**\n     * Adds a new {@link Controller} to the GUI. The type of controller created\n     * is inferred from the initial value of <code>object[property]</code>. For\n     * color properties, see {@link addColor}.\n     *\n     * @param {Object} object The object to be manipulated\n     * @param {String} property The name of the property to be manipulated\n     * @param {Number} [min] Minimum allowed value\n     * @param {Number} [max] Maximum allowed value\n     * @param {Number} [step] Increment by which to change value\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * // Add a string controller.\n     * var person = {name: 'Sam'};\n     * gui.add(person, 'name');\n     *\n     * @example\n     * // Add a number controller slider.\n     * var person = {age: 45};\n     * gui.add(person, 'age', 0, 100);\n     */\n    add: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          factoryArgs: Array.prototype.slice.call(arguments, 2)\n        }\n      );\n    },\n\n    /**\n     * Adds a new color controller to the GUI.\n     *\n     * @param object\n     * @param property\n     * @returns {Controller} The controller that was added to the GUI.\n     * @instance\n     *\n     * @example\n     * var palette = {\n     *   color1: '#FF0000', // CSS string\n     *   color2: [ 0, 128, 255 ], // RGB array\n     *   color3: [ 0, 128, 255, 0.3 ], // RGB with alpha\n     *   color4: { h: 350, s: 0.9, v: 0.3 } // Hue, saturation, value\n     * };\n     * gui.addColor(palette, 'color1');\n     * gui.addColor(palette, 'color2');\n     * gui.addColor(palette, 'color3');\n     * gui.addColor(palette, 'color4');\n     */\n    addColor: function(object, property) {\n      return add(\n        this,\n        object,\n        property,\n        {\n          color: true\n        }\n      );\n    },\n\n    /**\n     * Removes the given controller from the GUI.\n     * @param {Controller} controller\n     * @instance\n     */\n    remove: function(controller) {\n      // TODO listening?\n      this.__ul.removeChild(controller.__li);\n      this.__controllers.splice(this.__controllers.indexOf(controller), 1);\n      const _this = this;\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Removes the root GUI from the document and unbinds all event listeners.\n     * For subfolders, use `gui.removeFolder(folder)` instead.\n     * @instance\n     */\n    destroy: function() {\n      if (this.parent) {\n        throw new Error(\n          'Only the root GUI should be removed with .destroy(). ' +\n          'For subfolders, use gui.removeFolder(folder) instead.'\n        );\n      }\n\n      if (this.autoPlace) {\n        autoPlaceContainer.removeChild(this.domElement);\n      }\n\n      const _this = this;\n      common.each(this.__folders, function(subfolder) {\n        _this.removeFolder(subfolder);\n      });\n\n      dom.unbind(window, 'keydown', GUI._keydownHandler, false);\n\n      removeListeners(this);\n    },\n\n    /**\n     * Creates a new subfolder GUI instance.\n     * @param name\n     * @returns {dat.gui.GUI} The new folder.\n     * @throws {Error} if this GUI already has a folder by the specified\n     * name\n     * @instance\n     */\n    addFolder: function(name) {\n      // We have to prevent collisions on names in order to have a key\n      // by which to remember saved values\n      if (this.__folders[name] !== undefined) {\n        throw new Error('You already have a folder in this GUI by the' +\n          ' name \"' + name + '\"');\n      }\n\n      const newGuiParams = { name: name, parent: this };\n\n      // We need to pass down the autoPlace trait so that we can\n      // attach event listeners to open/close folder actions to\n      // ensure that a scrollbar appears if the window is too short.\n      newGuiParams.autoPlace = this.autoPlace;\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[name]) { // Did daddy remember me?\n        // Start me closed if I was closed\n        newGuiParams.closed = this.load.folders[name].closed;\n\n        // Pass down the loaded data\n        newGuiParams.load = this.load.folders[name];\n      }\n\n      const gui = new GUI(newGuiParams);\n      this.__folders[name] = gui;\n\n      const li = addRow(this, gui.domElement);\n      dom.addClass(li, 'folder');\n      return gui;\n    },\n\n    /**\n     * Removes a subfolder GUI instance.\n     * @param {dat.gui.GUI} folder The folder to remove.\n     * @instance\n     */\n    removeFolder: function(folder) {\n      this.__ul.removeChild(folder.domElement.parentElement);\n\n      delete this.__folders[folder.name];\n\n      // Do we have saved appearance data for this folder?\n      if (this.load && // Anything loaded?\n        this.load.folders && // Was my parent a dead-end?\n        this.load.folders[folder.name]) {\n        delete this.load.folders[folder.name];\n      }\n\n      removeListeners(folder);\n\n      const _this = this;\n\n      common.each(folder.__folders, function(subfolder) {\n        folder.removeFolder(subfolder);\n      });\n\n      common.defer(function() {\n        _this.onResize();\n      });\n    },\n\n    /**\n     * Opens the GUI.\n     */\n    open: function() {\n      this.closed = false;\n    },\n\n    /**\n     * Closes the GUI.\n     */\n    close: function() {\n      this.closed = true;\n    },\n\n    /**\n    * Hides the GUI.\n    */\n    hide: function() {\n      this.domElement.style.display = 'none';\n    },\n\n    /**\n    * Shows the GUI.\n    */\n    show: function() {\n      this.domElement.style.display = '';\n    },\n\n\n    onResize: function() {\n      // we debounce this function to prevent performance issues when rotating on tablet/mobile\n      const root = this.getRoot();\n      if (root.scrollable) {\n        const top = dom.getOffset(root.__ul).top;\n        let h = 0;\n\n        common.each(root.__ul.childNodes, function(node) {\n          if (!(root.autoPlace && node === root.__save_row)) {\n            h += dom.getHeight(node);\n          }\n        });\n\n        if (window.innerHeight - top - CLOSE_BUTTON_HEIGHT < h) {\n          dom.addClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = window.innerHeight - top - CLOSE_BUTTON_HEIGHT + 'px';\n        } else {\n          dom.removeClass(root.domElement, GUI.CLASS_TOO_TALL);\n          root.__ul.style.height = 'auto';\n        }\n      }\n\n      if (root.__resize_handle) {\n        common.defer(function() {\n          root.__resize_handle.style.height = root.__ul.offsetHeight + 'px';\n        });\n      }\n\n      if (root.__closeButton) {\n        root.__closeButton.style.width = root.width + 'px';\n      }\n    },\n\n    onResizeDebounced: common.debounce(function() { this.onResize(); }, 50),\n\n    /**\n     * Mark objects for saving. The order of these objects cannot change as\n     * the GUI grows. When remembering new objects, append them to the end\n     * of the list.\n     *\n     * @param {...Object} objects\n     * @throws {Error} if not called on a top level GUI.\n     * @instance\n     * @ignore\n     */\n    remember: function() {\n      if (common.isUndefined(SAVE_DIALOGUE)) {\n        SAVE_DIALOGUE = new CenteredDiv();\n        SAVE_DIALOGUE.domElement.innerHTML = saveDialogueContents;\n      }\n\n      if (this.parent) {\n        throw new Error('You can only call remember on a top level GUI.');\n      }\n\n      const _this = this;\n\n      common.each(Array.prototype.slice.call(arguments), function(object) {\n        if (_this.__rememberedObjects.length === 0) {\n          addSaveMenu(_this);\n        }\n        if (_this.__rememberedObjects.indexOf(object) === -1) {\n          _this.__rememberedObjects.push(object);\n        }\n      });\n\n      if (this.autoPlace) {\n        // Set save row width\n        setWidth(this, this.width);\n      }\n    },\n\n    /**\n     * @returns {dat.gui.GUI} the topmost parent GUI of a nested GUI.\n     * @instance\n     */\n    getRoot: function() {\n      let gui = this;\n      while (gui.parent) {\n        gui = gui.parent;\n      }\n      return gui;\n    },\n\n    /**\n     * @returns {Object} a JSON object representing the current state of\n     * this GUI as well as its remembered properties.\n     * @instance\n     */\n    getSaveObject: function() {\n      const toReturn = this.load;\n      toReturn.closed = this.closed;\n\n      // Am I remembering any values?\n      if (this.__rememberedObjects.length > 0) {\n        toReturn.preset = this.preset;\n\n        if (!toReturn.remembered) {\n          toReturn.remembered = {};\n        }\n\n        toReturn.remembered[this.preset] = getCurrentPreset(this);\n      }\n\n      toReturn.folders = {};\n      common.each(this.__folders, function(element, key) {\n        toReturn.folders[key] = element.getSaveObject();\n      });\n\n      return toReturn;\n    },\n\n    save: function() {\n      if (!this.load.remembered) {\n        this.load.remembered = {};\n      }\n\n      this.load.remembered[this.preset] = getCurrentPreset(this);\n      markPresetModified(this, false);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    saveAs: function(presetName) {\n      if (!this.load.remembered) {\n        // Retain default values upon first save\n        this.load.remembered = {};\n        this.load.remembered[DEFAULT_DEFAULT_PRESET_NAME] = getCurrentPreset(this, true);\n      }\n\n      this.load.remembered[presetName] = getCurrentPreset(this);\n      this.preset = presetName;\n      addPresetOption(this, presetName, true);\n      this.saveToLocalStorageIfPossible();\n    },\n\n    revert: function(gui) {\n      common.each(this.__controllers, function(controller) {\n        // Make revert work on Default.\n        if (!this.getRoot().load.remembered) {\n          controller.setValue(controller.initialValue);\n        } else {\n          recallSavedValue(gui || this.getRoot(), controller);\n        }\n\n        // fire onFinishChange callback\n        if (controller.__onFinishChange) {\n          controller.__onFinishChange.call(controller, controller.getValue());\n        }\n      }, this);\n\n      common.each(this.__folders, function(folder) {\n        folder.revert(folder);\n      });\n\n      if (!gui) {\n        markPresetModified(this.getRoot(), false);\n      }\n    },\n\n    listen: function(controller) {\n      const init = this.__listening.length === 0;\n      this.__listening.push(controller);\n      if (init) {\n        updateDisplays(this.__listening);\n      }\n    },\n\n    updateDisplay: function() {\n      common.each(this.__controllers, function(controller) {\n        controller.updateDisplay();\n      });\n      common.each(this.__folders, function(folder) {\n        folder.updateDisplay();\n      });\n    }\n  }\n);\n\n/**\n * Add a row to the end of the GUI or before another row.\n *\n * @param gui\n * @param [newDom] If specified, inserts the dom content in the new row\n * @param [liBefore] If specified, places the new row before another row\n *\n * @ignore\n */\nfunction addRow(gui, newDom, liBefore) {\n  const li = document.createElement('li');\n  if (newDom) {\n    li.appendChild(newDom);\n  }\n\n  if (liBefore) {\n    gui.__ul.insertBefore(li, liBefore);\n  } else {\n    gui.__ul.appendChild(li);\n  }\n  gui.onResize();\n  return li;\n}\n\nfunction removeListeners(gui) {\n  dom.unbind(window, 'resize', gui.__resizeHandler);\n\n  if (gui.saveToLocalStorageIfPossible) {\n    dom.unbind(window, 'unload', gui.saveToLocalStorageIfPossible);\n  }\n}\n\nfunction markPresetModified(gui, modified) {\n  const opt = gui.__preset_select[gui.__preset_select.selectedIndex];\n\n  if (modified) {\n    opt.innerHTML = opt.value + '*';\n  } else {\n    opt.innerHTML = opt.value;\n  }\n}\n\nfunction augmentController(gui, li, controller) {\n  controller.__li = li;\n  controller.__gui = gui;\n\n  common.extend(controller, /** @lends Controller.prototype */ {\n    /**\n     * @param  {Array|Object} options\n     * @return {Controller}\n     */\n    options: function(options) {\n      if (arguments.length > 1) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [common.toArray(arguments)]\n          }\n        );\n      }\n\n      if (common.isArray(options) || common.isObject(options)) {\n        const nextSibling = controller.__li.nextElementSibling;\n        controller.remove();\n\n        return add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: nextSibling,\n            factoryArgs: [options]\n          }\n        );\n      }\n    },\n\n    /**\n     * Sets the name of the controller.\n     * @param  {string} name\n     * @return {Controller}\n     */\n    name: function(name) {\n      controller.__li.firstElementChild.firstElementChild.innerHTML = name;\n      return controller;\n    },\n\n    /**\n     * Sets controller to listen for changes on its underlying object.\n     * @return {Controller}\n     */\n    listen: function() {\n      controller.__gui.listen(controller);\n      return controller;\n    },\n\n    /**\n     * Removes the controller from its parent GUI.\n     * @return {Controller}\n     */\n    remove: function() {\n      controller.__gui.remove(controller);\n      return controller;\n    }\n  });\n\n  // All sliders should be accompanied by a box.\n  if (controller instanceof NumberControllerSlider) {\n    const box = new NumberControllerBox(controller.object, controller.property,\n      { min: controller.__min, max: controller.__max, step: controller.__step });\n\n    common.each(['updateDisplay', 'onChange', 'onFinishChange', 'step', 'min', 'max'], function(method) {\n      const pc = controller[method];\n      const pb = box[method];\n      controller[method] = box[method] = function() {\n        const args = Array.prototype.slice.call(arguments);\n        pb.apply(box, args);\n        return pc.apply(controller, args);\n      };\n    });\n\n    dom.addClass(li, 'has-slider');\n    controller.domElement.insertBefore(box.domElement, controller.domElement.firstElementChild);\n  } else if (controller instanceof NumberControllerBox) {\n    const r = function(returned) {\n      // Have we defined both boundaries?\n      if (common.isNumber(controller.__min) && common.isNumber(controller.__max)) {\n        // Well, then lets just replace this with a slider.\n\n        // lets remember if the old controller had a specific name or was listening\n        const oldName = controller.__li.firstElementChild.firstElementChild.innerHTML;\n        const wasListening = controller.__gui.__listening.indexOf(controller) > -1;\n\n        controller.remove();\n        const newController = add(\n          gui,\n          controller.object,\n          controller.property,\n          {\n            before: controller.__li.nextElementSibling,\n            factoryArgs: [controller.__min, controller.__max, controller.__step]\n          });\n\n        newController.name(oldName);\n        if (wasListening) newController.listen();\n\n        return newController;\n      }\n\n      return returned;\n    };\n\n    controller.min = common.compose(r, controller.min);\n    controller.max = common.compose(r, controller.max);\n  } else if (controller instanceof BooleanController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__checkbox, 'click');\n    });\n\n    dom.bind(controller.__checkbox, 'click', function(e) {\n      e.stopPropagation(); // Prevents double-toggle\n    });\n  } else if (controller instanceof FunctionController) {\n    dom.bind(li, 'click', function() {\n      dom.fakeEvent(controller.__button, 'click');\n    });\n\n    dom.bind(li, 'mouseover', function() {\n      dom.addClass(controller.__button, 'hover');\n    });\n\n    dom.bind(li, 'mouseout', function() {\n      dom.removeClass(controller.__button, 'hover');\n    });\n  } else if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n    controller.updateDisplay = common.compose(function(val) {\n      li.style.borderLeftColor = controller.__color.toString();\n      return val;\n    }, controller.updateDisplay);\n\n    controller.updateDisplay();\n  }\n\n  controller.setValue = common.compose(function(val) {\n    if (gui.getRoot().__preset_select && controller.isModified()) {\n      markPresetModified(gui.getRoot(), true);\n    }\n\n    return val;\n  }, controller.setValue);\n}\n\nfunction recallSavedValue(gui, controller) {\n  // Find the topmost GUI, that's where remembered objects live.\n  const root = gui.getRoot();\n\n  // Does the object we're controlling match anything we've been told to\n  // remember?\n  const matchedIndex = root.__rememberedObjects.indexOf(controller.object);\n\n  // Why yes, it does!\n  if (matchedIndex !== -1) {\n    // Let me fetch a map of controllers for thcommon.isObject.\n    let controllerMap = root.__rememberedObjectIndecesToControllers[matchedIndex];\n\n    // Ohp, I believe this is the first controller we've created for this\n    // object. Lets make the map fresh.\n    if (controllerMap === undefined) {\n      controllerMap = {};\n      root.__rememberedObjectIndecesToControllers[matchedIndex] =\n        controllerMap;\n    }\n\n    // Keep track of this controller\n    controllerMap[controller.property] = controller;\n\n    // Okay, now have we saved any values for this controller?\n    if (root.load && root.load.remembered) {\n      const presetMap = root.load.remembered;\n\n      // Which preset are we trying to load?\n      let preset;\n\n      if (presetMap[gui.preset]) {\n        preset = presetMap[gui.preset];\n      } else if (presetMap[DEFAULT_DEFAULT_PRESET_NAME]) {\n        // Uhh, you can have the default instead?\n        preset = presetMap[DEFAULT_DEFAULT_PRESET_NAME];\n      } else {\n        // Nada.\n        return;\n      }\n\n      // Did the loaded object remember thcommon.isObject? &&  Did we remember this particular property?\n      if (preset[matchedIndex] && preset[matchedIndex][controller.property] !== undefined) {\n        // We did remember something for this guy ...\n        const value = preset[matchedIndex][controller.property];\n\n        // And that's what it is.\n        controller.initialValue = value;\n        controller.setValue(value);\n      }\n    }\n  }\n}\n\nfunction add(gui, object, property, params) {\n  if (object[property] === undefined) {\n    throw new Error(`Object \"${object}\" has no property \"${property}\"`);\n  }\n\n  let controller;\n\n  if (params.color) {\n    controller = new ColorController(object, property);\n  } else {\n    const factoryArgs = [object, property].concat(params.factoryArgs);\n    controller = ControllerFactory.apply(gui, factoryArgs);\n  }\n\n  if (params.before instanceof Controller) {\n    params.before = params.before.__li;\n  }\n\n  recallSavedValue(gui, controller);\n\n  dom.addClass(controller.domElement, 'c');\n\n  const name = document.createElement('span');\n  dom.addClass(name, 'property-name');\n  name.innerHTML = controller.property;\n\n  const container = document.createElement('div');\n  container.appendChild(name);\n  container.appendChild(controller.domElement);\n\n  const li = addRow(gui, container, params.before);\n\n  dom.addClass(li, GUI.CLASS_CONTROLLER_ROW);\n  if (controller instanceof ColorController) {\n    dom.addClass(li, 'color');\n  } else {\n    dom.addClass(li, typeof controller.getValue());\n  }\n\n  augmentController(gui, li, controller);\n\n  gui.__controllers.push(controller);\n\n  return controller;\n}\n\nfunction getLocalStorageHash(gui, key) {\n  // TODO how does this deal with multiple GUI's?\n  return document.location.href + '.' + key;\n}\n\nfunction addPresetOption(gui, name, setSelected) {\n  const opt = document.createElement('option');\n  opt.innerHTML = name;\n  opt.value = name;\n  gui.__preset_select.appendChild(opt);\n  if (setSelected) {\n    gui.__preset_select.selectedIndex = gui.__preset_select.length - 1;\n  }\n}\n\nfunction showHideExplain(gui, explain) {\n  explain.style.display = gui.useLocalStorage ? 'block' : 'none';\n}\n\nfunction addSaveMenu(gui) {\n  const div = gui.__save_row = document.createElement('li');\n\n  dom.addClass(gui.domElement, 'has-save');\n\n  gui.__ul.insertBefore(div, gui.__ul.firstChild);\n\n  dom.addClass(div, 'save-row');\n\n  const gears = document.createElement('span');\n  gears.innerHTML = '&nbsp;';\n  dom.addClass(gears, 'button gears');\n\n  // TODO replace with FunctionController\n  const button = document.createElement('span');\n  button.innerHTML = 'Save';\n  dom.addClass(button, 'button');\n  dom.addClass(button, 'save');\n\n  const button2 = document.createElement('span');\n  button2.innerHTML = 'New';\n  dom.addClass(button2, 'button');\n  dom.addClass(button2, 'save-as');\n\n  const button3 = document.createElement('span');\n  button3.innerHTML = 'Revert';\n  dom.addClass(button3, 'button');\n  dom.addClass(button3, 'revert');\n\n  const select = gui.__preset_select = document.createElement('select');\n\n  if (gui.load && gui.load.remembered) {\n    common.each(gui.load.remembered, function(value, key) {\n      addPresetOption(gui, key, key === gui.preset);\n    });\n  } else {\n    addPresetOption(gui, DEFAULT_DEFAULT_PRESET_NAME, false);\n  }\n\n  dom.bind(select, 'change', function() {\n    for (let index = 0; index < gui.__preset_select.length; index++) {\n      gui.__preset_select[index].innerHTML = gui.__preset_select[index].value;\n    }\n\n    gui.preset = this.value;\n  });\n\n  div.appendChild(select);\n  div.appendChild(gears);\n  div.appendChild(button);\n  div.appendChild(button2);\n  div.appendChild(button3);\n\n  if (SUPPORTS_LOCAL_STORAGE) {\n    const explain = document.getElementById('dg-local-explain');\n    const localStorageCheckBox = document.getElementById('dg-local-storage');\n    const saveLocally = document.getElementById('dg-save-locally');\n\n    saveLocally.style.display = 'block';\n\n    if (localStorage.getItem(getLocalStorageHash(gui, 'isLocal')) === 'true') {\n      localStorageCheckBox.setAttribute('checked', 'checked');\n    }\n\n    showHideExplain(gui, explain);\n\n    // TODO: Use a boolean controller, fool!\n    dom.bind(localStorageCheckBox, 'change', function() {\n      gui.useLocalStorage = !gui.useLocalStorage;\n      showHideExplain(gui, explain);\n    });\n  }\n\n  const newConstructorTextArea = document.getElementById('dg-new-constructor');\n\n  dom.bind(newConstructorTextArea, 'keydown', function(e) {\n    if (e.metaKey && (e.which === 67 || e.keyCode === 67)) {\n      SAVE_DIALOGUE.hide();\n    }\n  });\n\n  dom.bind(gears, 'click', function() {\n    newConstructorTextArea.innerHTML = JSON.stringify(gui.getSaveObject(), undefined, 2);\n    SAVE_DIALOGUE.show();\n    newConstructorTextArea.focus();\n    newConstructorTextArea.select();\n  });\n\n  dom.bind(button, 'click', function() {\n    gui.save();\n  });\n\n  dom.bind(button2, 'click', function() {\n    const presetName = prompt('Enter a new preset name.');\n    if (presetName) {\n      gui.saveAs(presetName);\n    }\n  });\n\n  dom.bind(button3, 'click', function() {\n    gui.revert();\n  });\n\n  // div.appendChild(button2);\n}\n\nfunction addResizeHandle(gui) {\n  let pmouseX;\n\n  gui.__resize_handle = document.createElement('div');\n\n  common.extend(gui.__resize_handle.style, {\n\n    width: '6px',\n    marginLeft: '-3px',\n    height: '200px',\n    cursor: 'ew-resize',\n    position: 'absolute'\n    // border: '1px solid blue'\n\n  });\n\n  function drag(e) {\n    e.preventDefault();\n\n    gui.width += pmouseX - e.clientX;\n    gui.onResize();\n    pmouseX = e.clientX;\n\n    return false;\n  }\n\n  function dragStop() {\n    dom.removeClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.unbind(window, 'mousemove', drag);\n    dom.unbind(window, 'mouseup', dragStop);\n  }\n\n  function dragStart(e) {\n    e.preventDefault();\n\n    pmouseX = e.clientX;\n\n    dom.addClass(gui.__closeButton, GUI.CLASS_DRAG);\n    dom.bind(window, 'mousemove', drag);\n    dom.bind(window, 'mouseup', dragStop);\n\n    return false;\n  }\n\n  dom.bind(gui.__resize_handle, 'mousedown', dragStart);\n  dom.bind(gui.__closeButton, 'mousedown', dragStart);\n\n  gui.domElement.insertBefore(gui.__resize_handle, gui.domElement.firstElementChild);\n}\n\nfunction setWidth(gui, w) {\n  gui.domElement.style.width = w + 'px';\n  // Auto placed save-rows are position fixed, so we have to\n  // set the width manually if we want it to bleed to the edge\n  if (gui.__save_row && gui.autoPlace) {\n    gui.__save_row.style.width = w + 'px';\n  }\n  if (gui.__closeButton) {\n    gui.__closeButton.style.width = w + 'px';\n  }\n}\n\nfunction getCurrentPreset(gui, useInitialValues) {\n  const toReturn = {};\n\n  // For each object I'm remembering\n  common.each(gui.__rememberedObjects, function(val, index) {\n    const savedValues = {};\n\n    // The controllers I've made for thcommon.isObject by property\n    const controllerMap =\n      gui.__rememberedObjectIndecesToControllers[index];\n\n    // Remember each value for each property\n    common.each(controllerMap, function(controller, property) {\n      savedValues[property] = useInitialValues ? controller.initialValue : controller.getValue();\n    });\n\n    // Save the values for thcommon.isObject\n    toReturn[index] = savedValues;\n  });\n\n  return toReturn;\n}\n\nfunction setPresetSelectIndex(gui) {\n  for (let index = 0; index < gui.__preset_select.length; index++) {\n    if (gui.__preset_select[index].value === gui.preset) {\n      gui.__preset_select.selectedIndex = index;\n    }\n  }\n}\n\nfunction updateDisplays(controllerArray) {\n  if (controllerArray.length !== 0) {\n    requestAnimationFrame.call(window, function() {\n      updateDisplays(controllerArray);\n    });\n  }\n\n  common.each(controllerArray, function(c) {\n    c.updateDisplay();\n  });\n}\n\nexport default GUI;\n","/**\n * dat-gui JavaScript Controller Library\n * http://code.google.com/p/dat-gui\n *\n * Copyright 2011 Data Arts Team, Google Creative Lab\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nimport Color from './color/Color';\nimport math from './color/math';\nimport interpret from './color/interpret';\n\nimport Controller from './controllers/Controller';\nimport BooleanController from './controllers/BooleanController';\nimport OptionController from './controllers/OptionController';\nimport StringController from './controllers/StringController';\nimport NumberController from './controllers/NumberController';\nimport NumberControllerBox from './controllers/NumberControllerBox';\nimport NumberControllerSlider from './controllers/NumberControllerSlider';\nimport FunctionController from './controllers/FunctionController';\nimport ColorController from './controllers/ColorController';\n\nimport domImport from './dom/dom';\nimport GUIImport from './gui/GUI';\n\nexport const color = {\n  Color: Color,\n  math: math,\n  interpret: interpret\n};\n\nexport const controllers = {\n  Controller: Controller,\n  BooleanController: BooleanController,\n  OptionController: OptionController,\n  StringController: StringController,\n  NumberController: NumberController,\n  NumberControllerBox: NumberControllerBox,\n  NumberControllerSlider: NumberControllerSlider,\n  FunctionController: FunctionController,\n  ColorController: ColorController\n};\n\nexport const dom = { dom: domImport };\n\nexport const gui = { GUI: GUIImport };\n\nexport const GUI = GUIImport;\n\nexport default {\n  color,\n  controllers,\n  dom,\n  gui,\n  GUI\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","'use strict';\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","module.exports = require('events').EventEmitter;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./lib/_stream_writable.js');\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./readable').PassThrough\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n","'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n","'use strict'\nvar Buffer = require('buffer').Buffer\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","var Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar StringDecoder = require('string_decoder').StringDecoder\nvar inherits = require('inherits')\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n","'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar Base = require('cipher-base')\n\nvar ZEROS = Buffer.alloc(128)\nvar blocksize = 64\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = alg(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = [ipad]\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.push(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._alg(Buffer.concat(this._hash))\n  return this._alg(Buffer.concat([this._opad, h]))\n}\nmodule.exports = Hmac\n","var MD5 = require('md5.js')\n\nmodule.exports = function (buffer) {\n  return new MD5().update(buffer).digest()\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Legacy = require('./legacy')\nvar Base = require('cipher-base')\nvar Buffer = require('safe-buffer').Buffer\nvar md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\n\nvar sha = require('sha.js')\n\nvar ZEROS = Buffer.alloc(128)\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n    key = hash.update(key).digest()\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n  this._hash.update(ipad)\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest()\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)\n  return hash.update(this._opad).update(h).digest()\n}\n\nmodule.exports = function createHmac (alg, key) {\n  alg = alg.toLowerCase()\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key)\n  }\n  if (alg === 'md5') {\n    return new Legacy(md5, key)\n  }\n  return new Hmac(alg, key)\n}\n","module.exports = require('./browser/algorithms.json')\n","var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nfunction checkBuffer (buf, name) {\n  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {\n    throw new TypeError(name + ' must be a buffer or string')\n  }\n}\n\nmodule.exports = function (password, salt, iterations, keylen) {\n  checkBuffer(password, 'Password')\n  checkBuffer(salt, 'Salt')\n\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n","var defaultEncoding\n/* istanbul ignore next */\nif (process.browser) {\n  defaultEncoding = 'utf-8'\n} else {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n}\nmodule.exports = defaultEncoding\n","var md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar Buffer = require('safe-buffer').Buffer\nvar ZEROS = Buffer.alloc(128)\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nfunction Hmac (alg, key, saltLen) {\n  var hash = getDigest(alg)\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  if (key.length > blocksize) {\n    key = hash(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\n  ipad.copy(ipad1, 0, 0, blocksize)\n  this.ipad1 = ipad1\n  this.ipad2 = ipad\n  this.opad = opad\n  this.alg = alg\n  this.blocksize = blocksize\n  this.hash = hash\n  this.size = sizes[alg]\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize)\n  var h = this.hash(ipad)\n  h.copy(this.opad, this.blocksize)\n  return this.hash(this.opad)\n}\n\nfunction getDigest (alg) {\n  function shaFunc (data) {\n    return sha(alg).update(data).digest()\n  }\n  function rmd160Func (data) {\n    return new RIPEMD160().update(data).digest()\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func\n  if (alg === 'md5') return md5\n  return shaFunc\n}\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(password, salt, iterations, keylen)\n\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\n\n  digest = digest || 'sha1'\n\n  var hmac = new Hmac(digest, password, salt.length)\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = hmac.run(block1, hmac.ipad1)\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2)\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n","var checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar sync = require('./sync')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ZERO_BUF\nvar subtle = global.crypto && global.crypto.subtle\nvar toBrowser = {\n  'sha': 'SHA-1',\n  'sha-1': 'SHA-1',\n  'sha1': 'SHA-1',\n  'sha256': 'SHA-256',\n  'sha-256': 'SHA-256',\n  'sha384': 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  'sha512': 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\n\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, {name: 'PBKDF2'}, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    process.nextTick(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    process.nextTick(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof global.Promise !== 'function') {\n    return process.nextTick(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n  }\n\n  checkParameters(password, salt, iterations, keylen)\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n","exports.pbkdf2 = require('./lib/async')\nexports.pbkdf2Sync = require('./lib/sync')\n","'use strict';\n\nexports.readUInt32BE = function readUInt32BE(bytes, off) {\n  var res =  (bytes[0 + off] << 24) |\n             (bytes[1 + off] << 16) |\n             (bytes[2 + off] << 8) |\n             bytes[3 + off];\n  return res >>> 0;\n};\n\nexports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {\n  bytes[0 + off] = value >>> 24;\n  bytes[1 + off] = (value >>> 16) & 0xff;\n  bytes[2 + off] = (value >>> 8) & 0xff;\n  bytes[3 + off] = value & 0xff;\n};\n\nexports.ip = function ip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.rip = function rip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 0; i < 4; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n  for (var i = 4; i < 8; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.pc1 = function pc1(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  // 7, 15, 23, 31, 39, 47, 55, 63\n  // 6, 14, 22, 30, 39, 47, 55, 63\n  // 5, 13, 21, 29, 39, 47, 55, 63\n  // 4, 12, 20, 28\n  for (var i = 7; i >= 5; i--) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outL <<= 1;\n    outL |= (inR >> (j + i)) & 1;\n  }\n\n  // 1, 9, 17, 25, 33, 41, 49, 57\n  // 2, 10, 18, 26, 34, 42, 50, 58\n  // 3, 11, 19, 27, 35, 43, 51, 59\n  // 36, 44, 52, 60\n  for (var i = 1; i <= 3; i++) {\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outR <<= 1;\n    outR |= (inL >> (j + i)) & 1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.r28shl = function r28shl(num, shift) {\n  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));\n};\n\nvar pc2table = [\n  // inL => outL\n  14, 11, 17, 4, 27, 23, 25, 0,\n  13, 22, 7, 18, 5, 9, 16, 24,\n  2, 20, 12, 21, 1, 8, 15, 26,\n\n  // inR => outR\n  15, 4, 25, 19, 9, 1, 26, 16,\n  5, 11, 23, 8, 12, 7, 17, 0,\n  22, 3, 10, 14, 6, 20, 27, 24\n];\n\nexports.pc2 = function pc2(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  var len = pc2table.length >>> 1;\n  for (var i = 0; i < len; i++) {\n    outL <<= 1;\n    outL |= (inL >>> pc2table[i]) & 0x1;\n  }\n  for (var i = len; i < pc2table.length; i++) {\n    outR <<= 1;\n    outR |= (inR >>> pc2table[i]) & 0x1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.expand = function expand(r, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  outL = ((r & 1) << 5) | (r >>> 27);\n  for (var i = 23; i >= 15; i -= 4) {\n    outL <<= 6;\n    outL |= (r >>> i) & 0x3f;\n  }\n  for (var i = 11; i >= 3; i -= 4) {\n    outR |= (r >>> i) & 0x3f;\n    outR <<= 6;\n  }\n  outR |= ((r & 0x1f) << 1) | (r >>> 31);\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nvar sTable = [\n  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,\n  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,\n  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,\n  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,\n\n  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,\n  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,\n  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,\n  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,\n\n  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,\n  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,\n  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,\n  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,\n\n  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,\n  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,\n  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,\n  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,\n\n  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,\n  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,\n  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,\n  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,\n\n  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,\n  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,\n  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,\n  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,\n\n  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,\n  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,\n  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,\n  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,\n\n  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,\n  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,\n  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,\n  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11\n];\n\nexports.substitute = function substitute(inL, inR) {\n  var out = 0;\n  for (var i = 0; i < 4; i++) {\n    var b = (inL >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  for (var i = 0; i < 4; i++) {\n    var b = (inR >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[4 * 0x40 + i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  return out >>> 0;\n};\n\nvar permuteTable = [\n  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,\n  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7\n];\n\nexports.permute = function permute(num) {\n  var out = 0;\n  for (var i = 0; i < permuteTable.length; i++) {\n    out <<= 1;\n    out |= (num >>> permuteTable[i]) & 0x1;\n  }\n  return out >>> 0;\n};\n\nexports.padSplit = function padSplit(num, size, group) {\n  var str = num.toString(2);\n  while (str.length < size)\n    str = '0' + str;\n\n  var out = [];\n  for (var i = 0; i < size; i += group)\n    out.push(str.slice(i, i + group));\n  return out.join(' ');\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\n\nfunction Cipher(options) {\n  this.options = options;\n\n  this.type = this.options.type;\n  this.blockSize = 8;\n  this._init();\n\n  this.buffer = new Array(this.blockSize);\n  this.bufferOff = 0;\n}\nmodule.exports = Cipher;\n\nCipher.prototype._init = function _init() {\n  // Might be overrided\n};\n\nCipher.prototype.update = function update(data) {\n  if (data.length === 0)\n    return [];\n\n  if (this.type === 'decrypt')\n    return this._updateDecrypt(data);\n  else\n    return this._updateEncrypt(data);\n};\n\nCipher.prototype._buffer = function _buffer(data, off) {\n  // Append data to buffer\n  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);\n  for (var i = 0; i < min; i++)\n    this.buffer[this.bufferOff + i] = data[off + i];\n  this.bufferOff += min;\n\n  // Shift next\n  return min;\n};\n\nCipher.prototype._flushBuffer = function _flushBuffer(out, off) {\n  this._update(this.buffer, 0, out, off);\n  this.bufferOff = 0;\n  return this.blockSize;\n};\n\nCipher.prototype._updateEncrypt = function _updateEncrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;\n  var out = new Array(count * this.blockSize);\n\n  if (this.bufferOff !== 0) {\n    inputOff += this._buffer(data, inputOff);\n\n    if (this.bufferOff === this.buffer.length)\n      outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Write blocks\n  var max = data.length - ((data.length - inputOff) % this.blockSize);\n  for (; inputOff < max; inputOff += this.blockSize) {\n    this._update(data, inputOff, out, outputOff);\n    outputOff += this.blockSize;\n  }\n\n  // Queue rest\n  for (; inputOff < data.length; inputOff++, this.bufferOff++)\n    this.buffer[this.bufferOff] = data[inputOff];\n\n  return out;\n};\n\nCipher.prototype._updateDecrypt = function _updateDecrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;\n  var out = new Array(count * this.blockSize);\n\n  // TODO(indutny): optimize it, this is far from optimal\n  for (; count > 0; count--) {\n    inputOff += this._buffer(data, inputOff);\n    outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Buffer rest of the input\n  inputOff += this._buffer(data, inputOff);\n\n  return out;\n};\n\nCipher.prototype.final = function final(buffer) {\n  var first;\n  if (buffer)\n    first = this.update(buffer);\n\n  var last;\n  if (this.type === 'encrypt')\n    last = this._finalEncrypt();\n  else\n    last = this._finalDecrypt();\n\n  if (first)\n    return first.concat(last);\n  else\n    return last;\n};\n\nCipher.prototype._pad = function _pad(buffer, off) {\n  if (off === 0)\n    return false;\n\n  while (off < buffer.length)\n    buffer[off++] = 0;\n\n  return true;\n};\n\nCipher.prototype._finalEncrypt = function _finalEncrypt() {\n  if (!this._pad(this.buffer, this.bufferOff))\n    return [];\n\n  var out = new Array(this.blockSize);\n  this._update(this.buffer, 0, out, 0);\n  return out;\n};\n\nCipher.prototype._unpad = function _unpad(buffer) {\n  return buffer;\n};\n\nCipher.prototype._finalDecrypt = function _finalDecrypt() {\n  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');\n  var out = new Array(this.blockSize);\n  this._flushBuffer(out, 0);\n\n  return this._unpad(out);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar des = require('../des');\nvar utils = des.utils;\nvar Cipher = des.Cipher;\n\nfunction DESState() {\n  this.tmp = new Array(2);\n  this.keys = null;\n}\n\nfunction DES(options) {\n  Cipher.call(this, options);\n\n  var state = new DESState();\n  this._desState = state;\n\n  this.deriveKeys(state, options.key);\n}\ninherits(DES, Cipher);\nmodule.exports = DES;\n\nDES.create = function create(options) {\n  return new DES(options);\n};\n\nvar shiftTable = [\n  1, 1, 2, 2, 2, 2, 2, 2,\n  1, 2, 2, 2, 2, 2, 2, 1\n];\n\nDES.prototype.deriveKeys = function deriveKeys(state, key) {\n  state.keys = new Array(16 * 2);\n\n  assert.equal(key.length, this.blockSize, 'Invalid key length');\n\n  var kL = utils.readUInt32BE(key, 0);\n  var kR = utils.readUInt32BE(key, 4);\n\n  utils.pc1(kL, kR, state.tmp, 0);\n  kL = state.tmp[0];\n  kR = state.tmp[1];\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var shift = shiftTable[i >>> 1];\n    kL = utils.r28shl(kL, shift);\n    kR = utils.r28shl(kR, shift);\n    utils.pc2(kL, kR, state.keys, i);\n  }\n};\n\nDES.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._desState;\n\n  var l = utils.readUInt32BE(inp, inOff);\n  var r = utils.readUInt32BE(inp, inOff + 4);\n\n  // Initial Permutation\n  utils.ip(l, r, state.tmp, 0);\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  if (this.type === 'encrypt')\n    this._encrypt(state, l, r, state.tmp, 0);\n  else\n    this._decrypt(state, l, r, state.tmp, 0);\n\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  utils.writeUInt32BE(out, l, outOff);\n  utils.writeUInt32BE(out, r, outOff + 4);\n};\n\nDES.prototype._pad = function _pad(buffer, off) {\n  var value = buffer.length - off;\n  for (var i = off; i < buffer.length; i++)\n    buffer[i] = value;\n\n  return true;\n};\n\nDES.prototype._unpad = function _unpad(buffer) {\n  var pad = buffer[buffer.length - 1];\n  for (var i = buffer.length - pad; i < buffer.length; i++)\n    assert.equal(buffer[i], pad);\n\n  return buffer.slice(0, buffer.length - pad);\n};\n\nDES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {\n  var l = lStart;\n  var r = rStart;\n\n  // Apply f() x16 times\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(r, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = r;\n    r = (l ^ f) >>> 0;\n    l = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(r, l, out, off);\n};\n\nDES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {\n  var l = rStart;\n  var r = lStart;\n\n  // Apply f() x16 times\n  for (var i = state.keys.length - 2; i >= 0; i -= 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(l, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = l;\n    l = (r ^ f) >>> 0;\n    r = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(l, r, out, off);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar proto = {};\n\nfunction CBCState(iv) {\n  assert.equal(iv.length, 8, 'Invalid IV length');\n\n  this.iv = new Array(8);\n  for (var i = 0; i < this.iv.length; i++)\n    this.iv[i] = iv[i];\n}\n\nfunction instantiate(Base) {\n  function CBC(options) {\n    Base.call(this, options);\n    this._cbcInit();\n  }\n  inherits(CBC, Base);\n\n  var keys = Object.keys(proto);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    CBC.prototype[key] = proto[key];\n  }\n\n  CBC.create = function create(options) {\n    return new CBC(options);\n  };\n\n  return CBC;\n}\n\nexports.instantiate = instantiate;\n\nproto._cbcInit = function _cbcInit() {\n  var state = new CBCState(this.options.iv);\n  this._cbcState = state;\n};\n\nproto._update = function _update(inp, inOff, out, outOff) {\n  var state = this._cbcState;\n  var superProto = this.constructor.super_.prototype;\n\n  var iv = state.iv;\n  if (this.type === 'encrypt') {\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] ^= inp[inOff + i];\n\n    superProto._update.call(this, iv, 0, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = out[outOff + i];\n  } else {\n    superProto._update.call(this, inp, inOff, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      out[outOff + i] ^= iv[i];\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = inp[inOff + i];\n  }\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar des = require('../des');\nvar Cipher = des.Cipher;\nvar DES = des.DES;\n\nfunction EDEState(type, key) {\n  assert.equal(key.length, 24, 'Invalid key length');\n\n  var k1 = key.slice(0, 8);\n  var k2 = key.slice(8, 16);\n  var k3 = key.slice(16, 24);\n\n  if (type === 'encrypt') {\n    this.ciphers = [\n      DES.create({ type: 'encrypt', key: k1 }),\n      DES.create({ type: 'decrypt', key: k2 }),\n      DES.create({ type: 'encrypt', key: k3 })\n    ];\n  } else {\n    this.ciphers = [\n      DES.create({ type: 'decrypt', key: k3 }),\n      DES.create({ type: 'encrypt', key: k2 }),\n      DES.create({ type: 'decrypt', key: k1 })\n    ];\n  }\n}\n\nfunction EDE(options) {\n  Cipher.call(this, options);\n\n  var state = new EDEState(this.type, this.options.key);\n  this._edeState = state;\n}\ninherits(EDE, Cipher);\n\nmodule.exports = EDE;\n\nEDE.create = function create(options) {\n  return new EDE(options);\n};\n\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._edeState;\n\n  state.ciphers[0]._update(inp, inOff, out, outOff);\n  state.ciphers[1]._update(out, outOff, out, outOff);\n  state.ciphers[2]._update(out, outOff, out, outOff);\n};\n\nEDE.prototype._pad = DES.prototype._pad;\nEDE.prototype._unpad = DES.prototype._unpad;\n","'use strict';\n\nexports.utils = require('./des/utils');\nexports.Cipher = require('./des/cipher');\nexports.DES = require('./des/des');\nexports.CBC = require('./des/cbc');\nexports.EDE = require('./des/ede');\n","var CipherBase = require('cipher-base')\nvar des = require('des.js')\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n}\nmodes.des = modes['des-cbc']\nmodes.des3 = modes['des-ede3-cbc']\nmodule.exports = DES\ninherits(DES, CipherBase)\nfunction DES (opts) {\n  CipherBase.call(this)\n  var modeName = opts.mode.toLowerCase()\n  var mode = modes[modeName]\n  var type\n  if (opts.decrypt) {\n    type = 'decrypt'\n  } else {\n    type = 'encrypt'\n  }\n  var key = opts.key\n  if (!Buffer.isBuffer(key)) {\n    key = Buffer.from(key)\n  }\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)])\n  }\n  var iv = opts.iv\n  if (!Buffer.isBuffer(iv)) {\n    iv = Buffer.from(iv)\n  }\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  })\n}\nDES.prototype._update = function (data) {\n  return Buffer.from(this._des.update(data))\n}\nDES.prototype._final = function () {\n  return Buffer.from(this._des.final())\n}\n","exports.encrypt = function (self, block) {\n  return self._cipher.encryptBlock(block)\n}\n\nexports.decrypt = function (self, block) {\n  return self._cipher.decryptBlock(block)\n}\n","module.exports = function xor (a, b) {\n  var length = Math.min(a.length, b.length)\n  var buffer = new Buffer(length)\n\n  for (var i = 0; i < length; ++i) {\n    buffer[i] = a[i] ^ b[i]\n  }\n\n  return buffer\n}\n","var xor = require('buffer-xor')\n\nexports.encrypt = function (self, block) {\n  var data = xor(block, self._prev)\n\n  self._prev = self._cipher.encryptBlock(data)\n  return self._prev\n}\n\nexports.decrypt = function (self, block) {\n  var pad = self._prev\n\n  self._prev = block\n  var out = self._cipher.decryptBlock(block)\n\n  return xor(out, pad)\n}\n","var Buffer = require('safe-buffer').Buffer\nvar xor = require('buffer-xor')\n\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = Buffer.allocUnsafe(0)\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = Buffer.allocUnsafe(0)\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\n","var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad = self._cipher.encryptBlock(self._prev)\n  var out = pad[0] ^ byteParam\n\n  self._prev = Buffer.concat([\n    self._prev.slice(1),\n    Buffer.from([decrypt ? byteParam : out])\n  ])\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n","var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad\n  var i = -1\n  var len = 8\n  var out = 0\n  var bit, value\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev)\n    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0\n    value = pad[0] ^ bit\n    out += ((value & 0x80) >> (i % 8))\n    self._prev = shiftIn(self._prev, decrypt ? bit : value)\n  }\n  return out\n}\n\nfunction shiftIn (buffer, value) {\n  var len = buffer.length\n  var i = -1\n  var out = Buffer.allocUnsafe(buffer.length)\n  buffer = Buffer.concat([buffer, Buffer.from([value])])\n\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)\n  }\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n","var xor = require('buffer-xor')\n\nfunction getBlock (self) {\n  self._prev = self._cipher.encryptBlock(self._prev)\n  return self._prev\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","function incr32 (iv) {\n  var len = iv.length\n  var item\n  while (len--) {\n    item = iv.readUInt8(len)\n    if (item === 255) {\n      iv.writeUInt8(0, len)\n    } else {\n      item++\n      iv.writeUInt8(item, len)\n      break\n    }\n  }\n}\nmodule.exports = incr32\n","var xor = require('buffer-xor')\nvar Buffer = require('safe-buffer').Buffer\nvar incr32 = require('../incr32')\n\nfunction getBlock (self) {\n  var out = self._cipher.encryptBlockRaw(self._prev)\n  incr32(self._prev)\n  return out\n}\n\nvar blockSize = 16\nexports.encrypt = function (self, chunk) {\n  var chunkNum = Math.ceil(chunk.length / blockSize)\n  var start = self._cache.length\n  self._cache = Buffer.concat([\n    self._cache,\n    Buffer.allocUnsafe(chunkNum * blockSize)\n  ])\n  for (var i = 0; i < chunkNum; i++) {\n    var out = getBlock(self)\n    var offset = start + i * blockSize\n    self._cache.writeUInt32BE(out[0], offset + 0)\n    self._cache.writeUInt32BE(out[1], offset + 4)\n    self._cache.writeUInt32BE(out[2], offset + 8)\n    self._cache.writeUInt32BE(out[3], offset + 12)\n  }\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","var modeModules = {\n  ECB: require('./ecb'),\n  CBC: require('./cbc'),\n  CFB: require('./cfb'),\n  CFB8: require('./cfb8'),\n  CFB1: require('./cfb1'),\n  OFB: require('./ofb'),\n  CTR: require('./ctr'),\n  GCM: require('./ctr')\n}\n\nvar modes = require('./list.json')\n\nfor (var key in modes) {\n  modes[key].module = modeModules[modes[key].mode]\n}\n\nmodule.exports = modes\n","// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\n\nvar Buffer = require('safe-buffer').Buffer\n\nfunction asUInt32Array (buf) {\n  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n\n  var len = (buf.length / 4) | 0\n  var out = new Array(len)\n\n  for (var i = 0; i < len; i++) {\n    out[i] = buf.readUInt32BE(i * 4)\n  }\n\n  return out\n}\n\nfunction scrubVec (v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0\n  }\n}\n\nfunction cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {\n  var SUB_MIX0 = SUB_MIX[0]\n  var SUB_MIX1 = SUB_MIX[1]\n  var SUB_MIX2 = SUB_MIX[2]\n  var SUB_MIX3 = SUB_MIX[3]\n\n  var s0 = M[0] ^ keySchedule[0]\n  var s1 = M[1] ^ keySchedule[1]\n  var s2 = M[2] ^ keySchedule[2]\n  var s3 = M[3] ^ keySchedule[3]\n  var t0, t1, t2, t3\n  var ksRow = 4\n\n  for (var round = 1; round < nRounds; round++) {\n    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]\n    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]\n    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]\n    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]\n    s0 = t0\n    s1 = t1\n    s2 = t2\n    s3 = t3\n  }\n\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\n  t0 = t0 >>> 0\n  t1 = t1 >>> 0\n  t2 = t2 >>> 0\n  t3 = t3 >>> 0\n\n  return [t0, t1, t2, t3]\n}\n\n// AES constants\nvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\nvar G = (function () {\n  // Compute double table\n  var d = new Array(256)\n  for (var j = 0; j < 256; j++) {\n    if (j < 128) {\n      d[j] = j << 1\n    } else {\n      d[j] = (j << 1) ^ 0x11b\n    }\n  }\n\n  var SBOX = []\n  var INV_SBOX = []\n  var SUB_MIX = [[], [], [], []]\n  var INV_SUB_MIX = [[], [], [], []]\n\n  // Walk GF(2^8)\n  var x = 0\n  var xi = 0\n  for (var i = 0; i < 256; ++i) {\n    // Compute sbox\n    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\n    SBOX[x] = sx\n    INV_SBOX[sx] = x\n\n    // Compute multiplication\n    var x2 = d[x]\n    var x4 = d[x2]\n    var x8 = d[x4]\n\n    // Compute sub bytes, mix columns tables\n    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)\n    SUB_MIX[0][x] = (t << 24) | (t >>> 8)\n    SUB_MIX[1][x] = (t << 16) | (t >>> 16)\n    SUB_MIX[2][x] = (t << 8) | (t >>> 24)\n    SUB_MIX[3][x] = t\n\n    // Compute inv sub bytes, inv mix columns tables\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\n    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\n    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\n    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\n    INV_SUB_MIX[3][sx] = t\n\n    if (x === 0) {\n      x = xi = 1\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]]\n      xi ^= d[d[xi]]\n    }\n  }\n\n  return {\n    SBOX: SBOX,\n    INV_SBOX: INV_SBOX,\n    SUB_MIX: SUB_MIX,\n    INV_SUB_MIX: INV_SUB_MIX\n  }\n})()\n\nfunction AES (key) {\n  this._key = asUInt32Array(key)\n  this._reset()\n}\n\nAES.blockSize = 4 * 4\nAES.keySize = 256 / 8\nAES.prototype.blockSize = AES.blockSize\nAES.prototype.keySize = AES.keySize\nAES.prototype._reset = function () {\n  var keyWords = this._key\n  var keySize = keyWords.length\n  var nRounds = keySize + 6\n  var ksRows = (nRounds + 1) * 4\n\n  var keySchedule = []\n  for (var k = 0; k < keySize; k++) {\n    keySchedule[k] = keyWords[k]\n  }\n\n  for (k = keySize; k < ksRows; k++) {\n    var t = keySchedule[k - 1]\n\n    if (k % keySize === 0) {\n      t = (t << 8) | (t >>> 24)\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n\n      t ^= RCON[(k / keySize) | 0] << 24\n    } else if (keySize > 6 && k % keySize === 4) {\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n    }\n\n    keySchedule[k] = keySchedule[k - keySize] ^ t\n  }\n\n  var invKeySchedule = []\n  for (var ik = 0; ik < ksRows; ik++) {\n    var ksR = ksRows - ik\n    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]\n\n    if (ik < 4 || ksR <= 4) {\n      invKeySchedule[ik] = tt\n    } else {\n      invKeySchedule[ik] =\n        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^\n        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^\n        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^\n        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]\n    }\n  }\n\n  this._nRounds = nRounds\n  this._keySchedule = keySchedule\n  this._invKeySchedule = invKeySchedule\n}\n\nAES.prototype.encryptBlockRaw = function (M) {\n  M = asUInt32Array(M)\n  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)\n}\n\nAES.prototype.encryptBlock = function (M) {\n  var out = this.encryptBlockRaw(M)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\n\nAES.prototype.decryptBlock = function (M) {\n  M = asUInt32Array(M)\n\n  // swap\n  var m1 = M[1]\n  M[1] = M[3]\n  M[3] = m1\n\n  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[3], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[1], 12)\n  return buf\n}\n\nAES.prototype.scrub = function () {\n  scrubVec(this._keySchedule)\n  scrubVec(this._invKeySchedule)\n  scrubVec(this._key)\n}\n\nmodule.exports.AES = AES\n","var Buffer = require('safe-buffer').Buffer\nvar ZEROES = Buffer.alloc(16, 0)\n\nfunction toArray (buf) {\n  return [\n    buf.readUInt32BE(0),\n    buf.readUInt32BE(4),\n    buf.readUInt32BE(8),\n    buf.readUInt32BE(12)\n  ]\n}\n\nfunction fromArray (out) {\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0] >>> 0, 0)\n  buf.writeUInt32BE(out[1] >>> 0, 4)\n  buf.writeUInt32BE(out[2] >>> 0, 8)\n  buf.writeUInt32BE(out[3] >>> 0, 12)\n  return buf\n}\n\nfunction GHASH (key) {\n  this.h = key\n  this.state = Buffer.alloc(16, 0)\n  this.cache = Buffer.allocUnsafe(0)\n}\n\n// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n// by Juho Vähä-Herttua\nGHASH.prototype.ghash = function (block) {\n  var i = -1\n  while (++i < block.length) {\n    this.state[i] ^= block[i]\n  }\n  this._multiply()\n}\n\nGHASH.prototype._multiply = function () {\n  var Vi = toArray(this.h)\n  var Zi = [0, 0, 0, 0]\n  var j, xi, lsbVi\n  var i = -1\n  while (++i < 128) {\n    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0\n    if (xi) {\n      // Z_i+1 = Z_i ^ V_i\n      Zi[0] ^= Vi[0]\n      Zi[1] ^= Vi[1]\n      Zi[2] ^= Vi[2]\n      Zi[3] ^= Vi[3]\n    }\n\n    // Store the value of LSB(V_i)\n    lsbVi = (Vi[3] & 1) !== 0\n\n    // V_i+1 = V_i >> 1\n    for (j = 3; j > 0; j--) {\n      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)\n    }\n    Vi[0] = Vi[0] >>> 1\n\n    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n    if (lsbVi) {\n      Vi[0] = Vi[0] ^ (0xe1 << 24)\n    }\n  }\n  this.state = fromArray(Zi)\n}\n\nGHASH.prototype.update = function (buf) {\n  this.cache = Buffer.concat([this.cache, buf])\n  var chunk\n  while (this.cache.length >= 16) {\n    chunk = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    this.ghash(chunk)\n  }\n}\n\nGHASH.prototype.final = function (abl, bl) {\n  if (this.cache.length) {\n    this.ghash(Buffer.concat([this.cache, ZEROES], 16))\n  }\n\n  this.ghash(fromArray([0, abl, 0, bl]))\n  return this.state\n}\n\nmodule.exports = GHASH\n","var aes = require('./aes')\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar GHASH = require('./ghash')\nvar xor = require('buffer-xor')\nvar incr32 = require('./incr32')\n\nfunction xorTest (a, b) {\n  var out = 0\n  if (a.length !== b.length) out++\n\n  var len = Math.min(a.length, b.length)\n  for (var i = 0; i < len; ++i) {\n    out += (a[i] ^ b[i])\n  }\n\n  return out\n}\n\nfunction calcIv (self, iv, ck) {\n  if (iv.length === 12) {\n    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])\n    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])\n  }\n  var ghash = new GHASH(ck)\n  var len = iv.length\n  var toPad = len % 16\n  ghash.update(iv)\n  if (toPad) {\n    toPad = 16 - toPad\n    ghash.update(Buffer.alloc(toPad, 0))\n  }\n  ghash.update(Buffer.alloc(8, 0))\n  var ivBits = len * 8\n  var tail = Buffer.alloc(8)\n  tail.writeUIntBE(ivBits, 0, 8)\n  ghash.update(tail)\n  self._finID = ghash.state\n  var out = Buffer.from(self._finID)\n  incr32(out)\n  return out\n}\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  var h = Buffer.alloc(4, 0)\n\n  this._cipher = new aes.AES(key)\n  var ck = this._cipher.encryptBlock(h)\n  this._ghash = new GHASH(ck)\n  iv = calcIv(this, iv, ck)\n\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._alen = 0\n  this._len = 0\n  this._mode = mode\n\n  this._authTag = null\n  this._called = false\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  if (!this._called && this._alen) {\n    var rump = 16 - (this._alen % 16)\n    if (rump < 16) {\n      rump = Buffer.alloc(rump, 0)\n      this._ghash.update(rump)\n    }\n  }\n\n  this._called = true\n  var out = this._mode.encrypt(this, chunk)\n  if (this._decrypt) {\n    this._ghash.update(chunk)\n  } else {\n    this._ghash.update(out)\n  }\n  this._len += chunk.length\n  return out\n}\n\nStreamCipher.prototype._final = function () {\n  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')\n\n  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))\n  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')\n\n  this._authTag = tag\n  this._cipher.scrub()\n}\n\nStreamCipher.prototype.getAuthTag = function getAuthTag () {\n  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')\n\n  return this._authTag\n}\n\nStreamCipher.prototype.setAuthTag = function setAuthTag (tag) {\n  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')\n\n  this._authTag = tag\n}\n\nStreamCipher.prototype.setAAD = function setAAD (buf) {\n  if (this._called) throw new Error('Attempting to set AAD in unsupported state')\n\n  this._ghash.update(buf)\n  this._alen += buf.length\n}\n\nmodule.exports = StreamCipher\n","var aes = require('./aes')\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\n\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._mode = mode\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  return this._mode.encrypt(this, chunk, this._decrypt)\n}\n\nStreamCipher.prototype._final = function () {\n  this._cipher.scrub()\n}\n\nmodule.exports = StreamCipher\n","var Buffer = require('safe-buffer').Buffer\nvar MD5 = require('md5.js')\n\n/* eslint-disable camelcase */\nfunction EVP_BytesToKey (password, salt, keyBits, ivLen) {\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')\n  if (salt) {\n    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')\n    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')\n  }\n\n  var keyLen = keyBits / 8\n  var key = Buffer.alloc(keyLen)\n  var iv = Buffer.alloc(ivLen || 0)\n  var tmp = Buffer.alloc(0)\n\n  while (keyLen > 0 || ivLen > 0) {\n    var hash = new MD5()\n    hash.update(tmp)\n    hash.update(password)\n    if (salt) hash.update(salt)\n    tmp = hash.digest()\n\n    var used = 0\n\n    if (keyLen > 0) {\n      var keyStart = key.length - keyLen\n      used = Math.min(keyLen, tmp.length)\n      tmp.copy(key, keyStart, 0, used)\n      keyLen -= used\n    }\n\n    if (used < tmp.length && ivLen > 0) {\n      var ivStart = iv.length - ivLen\n      var length = Math.min(ivLen, tmp.length - used)\n      tmp.copy(iv, ivStart, used, used + length)\n      ivLen -= length\n    }\n  }\n\n  tmp.fill(0)\n  return { key: key, iv: iv }\n}\n\nmodule.exports = EVP_BytesToKey\n","var MODES = require('./modes')\nvar AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Cipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Cipher, Transform)\n\nCipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n\n  while ((chunk = this._cache.get())) {\n    thing = this._mode.encrypt(this, chunk)\n    out.push(thing)\n  }\n\n  return Buffer.concat(out)\n}\n\nvar PADDING = Buffer.alloc(16, 0x10)\n\nCipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    chunk = this._mode.encrypt(this, chunk)\n    this._cipher.scrub()\n    return chunk\n  }\n\n  if (!chunk.equals(PADDING)) {\n    this._cipher.scrub()\n    throw new Error('data not multiple of block length')\n  }\n}\n\nCipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function () {\n  if (this.cache.length > 15) {\n    var out = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    return out\n  }\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  var len = 16 - this.cache.length\n  var padBuff = Buffer.allocUnsafe(len)\n\n  var i = -1\n  while (++i < len) {\n    padBuff.writeUInt8(len, i)\n  }\n\n  return Buffer.concat([this.cache, padBuff])\n}\n\nfunction createCipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv)\n  }\n\n  return new Cipher(config.module, password, iv)\n}\n\nfunction createCipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createCipheriv = createCipheriv\nexports.createCipher = createCipher\n","var AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar MODES = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Decipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Decipher, Transform)\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) return this.cache\n}\n\nfunction unpad (last) {\n  var padded = last[15]\n  if (padded < 1 || padded > 16) {\n    throw new Error('unable to decrypt data')\n  }\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) return\n\n  return last.slice(0, 16 - padded)\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv, true)\n  }\n\n  return new Decipher(config.module, password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n","var ciphers = require('./encrypter')\nvar deciphers = require('./decrypter')\nvar modes = require('./modes/list.json')\n\nfunction getCiphers () {\n  return Object.keys(modes)\n}\n\nexports.createCipher = exports.Cipher = ciphers.createCipher\nexports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv\nexports.createDecipher = exports.Decipher = deciphers.createDecipher\nexports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","exports['des-ecb'] = {\n  key: 8,\n  iv: 0\n}\nexports['des-cbc'] = exports.des = {\n  key: 8,\n  iv: 8\n}\nexports['des-ede3-cbc'] = exports.des3 = {\n  key: 24,\n  iv: 8\n}\nexports['des-ede3'] = {\n  key: 24,\n  iv: 0\n}\nexports['des-ede-cbc'] = {\n  key: 16,\n  iv: 8\n}\nexports['des-ede'] = {\n  key: 16,\n  iv: 0\n}\n","var DES = require('browserify-des')\nvar aes = require('browserify-aes/browser')\nvar aesModes = require('browserify-aes/modes')\nvar desModes = require('browserify-des/modes')\nvar ebtk = require('evp_bytestokey')\n\nfunction createCipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createDecipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\n\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","var bn = require('bn.js');\nvar brorand = require('brorand');\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._randbelow = function _randbelow(n) {\n  var len = n.bitLength();\n  var min_bytes = Math.ceil(len / 8);\n\n  // Generage random bytes until a number less than n is found.\n  // This ensures that 0..n-1 have an equal probability of being selected.\n  do\n    var a = new bn(this.rand.generate(min_bytes));\n  while (a.cmp(n) >= 0);\n\n  return a;\n};\n\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\n  // Generate a random number greater than or equal to start and less than stop.\n  var size = stop.sub(start);\n  return start.add(this._randbelow(size));\n};\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  var prime = true;\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n    if (cb)\n      cb(a);\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return false;\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s)\n      return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0)\n      return g;\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n","var randomBytes = require('randombytes');\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\nvar BN = require('bn.js');\nvar TWENTYFOUR = new BN(24);\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\n\nfunction _getPrimes() {\n  if (primes !== null)\n    return primes;\n\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n    for (var j = 0; j < i && res[j] <= sqrt; j++)\n      if (k % res[j] === 0)\n        break;\n\n    if (i !== j && res[j] <= sqrt)\n      continue;\n\n    res[i++] = k;\n  }\n  primes = res;\n  return res;\n}\n\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n\n  for (var i = 0; i < primes.length; i++)\n    if (p.modn(primes[i]) === 0) {\n      if (p.cmpn(primes[i]) === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  return true;\n}\n\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n  gen = new BN(gen);\n\n  var num, n2;\n\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n    n2 = num.shrn(1);\n    if (simpleSieve(n2) && simpleSieve(num) &&\n      fermatTest(n2) && fermatTest(num) &&\n      millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n\n}\n","var BN = require('bn.js');\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar TWENTYFOUR = new BN(24);\nvar ELEVEN = new BN(11);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar primes = require('./generatePrime');\nvar randomBytes = require('randombytes');\nmodule.exports = DH;\n\nfunction setPublicKey(pub, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n  this._pub = new BN(pub);\n  return this;\n}\n\nfunction setPrivateKey(priv, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n  this._priv = new BN(priv);\n  return this;\n}\n\nvar primeCache = {};\nfunction checkPrime(prime, generator) {\n  var gen = generator.toString('hex');\n  var hex = [gen, prime.toString(16)].join('_');\n  if (hex in primeCache) {\n    return primeCache[hex];\n  }\n  var error = 0;\n\n  if (prime.isEven() ||\n    !primes.simpleSieve ||\n    !primes.fermatTest(prime) ||\n    !millerRabin.test(prime)) {\n    //not a prime so +1\n    error += 1;\n\n    if (gen === '02' || gen === '05') {\n      // we'd be able to check the generator\n      // it would fail so +8\n      error += 8;\n    } else {\n      //we wouldn't be able to test the generator\n      // so +4\n      error += 4;\n    }\n    primeCache[hex] = error;\n    return error;\n  }\n  if (!millerRabin.test(prime.shrn(1))) {\n    //not a safe prime\n    error += 2;\n  }\n  var rem;\n  switch (gen) {\n    case '02':\n      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        // unsuidable generator\n        error += 8;\n      }\n      break;\n    case '05':\n      rem = prime.mod(TEN);\n      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {\n        // prime mod 10 needs to equal 3 or 7\n        error += 8;\n      }\n      break;\n    default:\n      error += 4;\n  }\n  primeCache[hex] = error;\n  return error;\n}\n\nfunction DH(prime, generator, malleable) {\n  this.setGenerator(generator);\n  this.__prime = new BN(prime);\n  this._prime = BN.mont(this.__prime);\n  this._primeLen = prime.length;\n  this._pub = undefined;\n  this._priv = undefined;\n  this._primeCode = undefined;\n  if (malleable) {\n    this.setPublicKey = setPublicKey;\n    this.setPrivateKey = setPrivateKey;\n  } else {\n    this._primeCode = 8;\n  }\n}\nObject.defineProperty(DH.prototype, 'verifyError', {\n  enumerable: true,\n  get: function () {\n    if (typeof this._primeCode !== 'number') {\n      this._primeCode = checkPrime(this.__prime, this.__gen);\n    }\n    return this._primeCode;\n  }\n});\nDH.prototype.generateKeys = function () {\n  if (!this._priv) {\n    this._priv = new BN(randomBytes(this._primeLen));\n  }\n  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();\n  return this.getPublicKey();\n};\n\nDH.prototype.computeSecret = function (other) {\n  other = new BN(other);\n  other = other.toRed(this._prime);\n  var secret = other.redPow(this._priv).fromRed();\n  var out = new Buffer(secret.toArray());\n  var prime = this.getPrime();\n  if (out.length < prime.length) {\n    var front = new Buffer(prime.length - out.length);\n    front.fill(0);\n    out = Buffer.concat([front, out]);\n  }\n  return out;\n};\n\nDH.prototype.getPublicKey = function getPublicKey(enc) {\n  return formatReturnValue(this._pub, enc);\n};\n\nDH.prototype.getPrivateKey = function getPrivateKey(enc) {\n  return formatReturnValue(this._priv, enc);\n};\n\nDH.prototype.getPrime = function (enc) {\n  return formatReturnValue(this.__prime, enc);\n};\n\nDH.prototype.getGenerator = function (enc) {\n  return formatReturnValue(this._gen, enc);\n};\n\nDH.prototype.setGenerator = function (gen, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(gen)) {\n    gen = new Buffer(gen, enc);\n  }\n  this.__gen = gen;\n  this._gen = new BN(gen);\n  return this;\n};\n\nfunction formatReturnValue(bn, enc) {\n  var buf = new Buffer(bn.toArray());\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}\n","var generatePrime = require('./lib/generatePrime')\nvar primes = require('./lib/primes.json')\n\nvar DH = require('./lib/dh')\n\nfunction getDiffieHellman (mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex')\n  var gen = new Buffer(primes[mod].gen, 'hex')\n\n  return new DH(prime, gen)\n}\n\nvar ENCODINGS = {\n  'binary': true, 'hex': true, 'base64': true\n}\n\nfunction createDiffieHellman (prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator)\n  }\n\n  enc = enc || 'binary'\n  genc = genc || 'binary'\n  generator = generator || new Buffer([2])\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc)\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true)\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc)\n  }\n\n  return new DH(prime, generator, true)\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman\n","var bn = require('bn.js');\nvar randomBytes = require('randombytes');\nmodule.exports = crt;\nfunction blind(priv) {\n  var r = getr(priv);\n  var blinder = r.toRed(bn.mont(priv.modulus))\n  .redPow(new bn(priv.publicExponent)).fromRed();\n  return {\n    blinder: blinder,\n    unblinder:r.invm(priv.modulus)\n  };\n}\nfunction crt(msg, priv) {\n  var blinds = blind(priv);\n  var len = priv.modulus.byteLength();\n  var mod = bn.mont(priv.modulus);\n  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);\n  var c1 = blinded.toRed(bn.mont(priv.prime1));\n  var c2 = blinded.toRed(bn.mont(priv.prime2));\n  var qinv = priv.coefficient;\n  var p = priv.prime1;\n  var q = priv.prime2;\n  var m1 = c1.redPow(priv.exponent1);\n  var m2 = c2.redPow(priv.exponent2);\n  m1 = m1.fromRed();\n  m2 = m2.fromRed();\n  var h = m1.isub(m2).imul(qinv).umod(p);\n  h.imul(q);\n  m2.iadd(h);\n  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));\n}\ncrt.getr = getr;\nfunction getr(priv) {\n  var len = priv.modulus.byteLength();\n  var r = new bn(randomBytes(len));\n  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {\n    r = new bn(randomBytes(len));\n  }\n  return r;\n}\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n  while (k.cmpn(1) >= 0) {\n    var z;\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n    naf.push(z);\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n    for (var i = 1; i < shift; i++)\n      naf.push(0);\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n  ]\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n  ]\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n  ]\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n  ]\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n  ]\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9'\n  ]\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658'\n  ]\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0 && (r[1] & 0x80)) {\n    r = r.slice(1);\n  }\n  if (s[0] === 0 && (s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ?\n        options.k(iter) :\n        new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  var curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n               .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","var indexOf = function (xs, item) {\n    if (xs.indexOf) return xs.indexOf(item);\n    else for (var i = 0; i < xs.length; i++) {\n        if (xs[i] === item) return i;\n    }\n    return -1;\n};\nvar Object_keys = function (obj) {\n    if (Object.keys) return Object.keys(obj)\n    else {\n        var res = [];\n        for (var key in obj) res.push(key)\n        return res;\n    }\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nvar defineProp = (function() {\n    try {\n        Object.defineProperty({}, '_', {});\n        return function(obj, name, value) {\n            Object.defineProperty(obj, name, {\n                writable: true,\n                enumerable: false,\n                configurable: true,\n                value: value\n            })\n        };\n    } catch(e) {\n        return function(obj, name, value) {\n            obj[name] = value;\n        };\n    }\n}());\n\nvar globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',\n'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',\n'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',\n'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',\n'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];\n\nfunction Context() {}\nContext.prototype = {};\n\nvar Script = exports.Script = function NodeScript (code) {\n    if (!(this instanceof Script)) return new Script(code);\n    this.code = code;\n};\n\nScript.prototype.runInContext = function (context) {\n    if (!(context instanceof Context)) {\n        throw new TypeError(\"needs a 'context' argument.\");\n    }\n    \n    var iframe = document.createElement('iframe');\n    if (!iframe.style) iframe.style = {};\n    iframe.style.display = 'none';\n    \n    document.body.appendChild(iframe);\n    \n    var win = iframe.contentWindow;\n    var wEval = win.eval, wExecScript = win.execScript;\n\n    if (!wEval && wExecScript) {\n        // win.eval() magically appears when this is called in IE:\n        wExecScript.call(win, 'null');\n        wEval = win.eval;\n    }\n    \n    forEach(Object_keys(context), function (key) {\n        win[key] = context[key];\n    });\n    forEach(globals, function (key) {\n        if (context[key]) {\n            win[key] = context[key];\n        }\n    });\n    \n    var winKeys = Object_keys(win);\n\n    var res = wEval.call(win, this.code);\n    \n    forEach(Object_keys(win), function (key) {\n        // Avoid copying circular objects like `top` and `window` by only\n        // updating existing context properties or new properties in the `win`\n        // that was only introduced after the eval.\n        if (key in context || indexOf(winKeys, key) === -1) {\n            context[key] = win[key];\n        }\n    });\n\n    forEach(globals, function (key) {\n        if (!(key in context)) {\n            defineProp(context, key, win[key]);\n        }\n    });\n    \n    document.body.removeChild(iframe);\n    \n    return res;\n};\n\nScript.prototype.runInThisContext = function () {\n    return eval(this.code); // maybe...\n};\n\nScript.prototype.runInNewContext = function (context) {\n    var ctx = Script.createContext(context);\n    var res = this.runInContext(ctx);\n\n    if (context) {\n        forEach(Object_keys(ctx), function (key) {\n            context[key] = ctx[key];\n        });\n    }\n\n    return res;\n};\n\nforEach(Object_keys(Script.prototype), function (name) {\n    exports[name] = Script[name] = function (code) {\n        var s = Script(code);\n        return s[name].apply(s, [].slice.call(arguments, 1));\n    };\n});\n\nexports.isContext = function (context) {\n    return context instanceof Context;\n};\n\nexports.createScript = function (code) {\n    return exports.Script(code);\n};\n\nexports.createContext = Script.createContext = function (context) {\n    var copy = new Context();\n    if(typeof context === 'object') {\n        forEach(Object_keys(context), function (key) {\n            copy[key] = context[key];\n        });\n    }\n    return copy;\n};\n","var asn1 = require('../asn1');\nvar inherits = require('inherits');\n\nvar api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n};\n\nEntity.prototype._createNamed = function createNamed(base) {\n  var named;\n  try {\n    named = require('vm').runInThisContext(\n      '(function ' + this.name + '(entity) {\\n' +\n      '  this._initNamed(entity);\\n' +\n      '})'\n    );\n  } catch (e) {\n    named = function (entity) {\n      this._initNamed(entity);\n    };\n  }\n  inherits(named, base);\n  named.prototype._initNamed = function initnamed(entity) {\n    base.call(this, entity);\n  };\n\n  return new named(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  enc = enc || 'der';\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  enc = enc || 'der';\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n","var inherits = require('inherits');\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  var state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  var state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.exitKey = function exitKey(index) {\n  var state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  var state = this._reporterState;\n\n  this.exitKey(index);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.path = function path() {\n  return this._reporterState.path.join('/');\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  var state = this._reporterState;\n\n  var prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  var state = this._reporterState;\n\n  var now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  var err;\n  var state = this._reporterState;\n\n  var inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  var state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n};\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, ReporterError);\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message);\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n  return this;\n};\n","var inherits = require('inherits');\nvar Reporter = require('../base').Reporter;\nvar Buffer = require('buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  var res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n}\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  var res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n}\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n}\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!(item instanceof EncoderBuffer))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = new Buffer(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n","var Reporter = require('../base').Reporter;\nvar EncoderBuffer = require('../base').EncoderBuffer;\nvar DecoderBuffer = require('../base').DecoderBuffer;\nvar assert = require('minimalistic-assert');\n\n// Supported tags\nvar tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n];\n\n// Public methods list\nvar methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags);\n\n// Overrided methods list\nvar overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent) {\n  var state = {};\n  this._baseState = state;\n\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nvar stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n];\n\nNode.prototype.clone = function clone() {\n  var state = this._baseState;\n  var cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  var res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  var state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      var clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  var state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  var state = this._baseState;\n\n  // Filter children and args\n  var children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      var res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        var value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    var state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    var state = this._baseState;\n    var args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  var state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  var state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  var state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  var state = this._baseState;\n  var args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  var state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  var state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  var state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  var state = this._baseState;\n\n  assert(state.use === null);\n  state.contains = item;\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input, options));\n\n  var result = state['default'];\n  var present = true;\n\n  var prevKey = null;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    var tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      var save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input, options);\n        else\n          this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  var prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      var explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    var start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      if (state.any)\n        var save = input.save();\n      var body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), start, input.length, 'tagged');\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any)\n      result = result;\n    else if (state.choice === null)\n      result = this._decodeGeneric(state.tag, input, options);\n    else\n      result = this._decodeChoice(input, options);\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      var data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)\n          ._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n  else if (prevKey !== null)\n    input.exitKey(prevKey);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  var state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0], options);\n  else if (/str$/.test(tag))\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null, options);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag, options);\n  else if (tag === 'null_')\n    return this._decodeNull(input, options);\n  else if (tag === 'bool')\n    return this._decodeBool(input, options);\n  else if (tag === 'objDesc')\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n        ._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  var state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  var state = this._baseState;\n  var result = null;\n  var match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    var save = input.save();\n    var node = state.choice[key];\n    try {\n      var value = node._decode(input, options);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  var state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  var result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  var state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  var result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default']\n    else\n      return;\n  }\n\n  // Encode children first\n  var content = null;\n  var primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      var prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      var res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      var child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        var state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  var result;\n  if (!state.any && state.choice === null) {\n    var tag = state.implicit !== null ? state.implicit : state.tag;\n    var cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  var state = this._baseState;\n\n  var node = state.choice[data.type];\n  if (!node) {\n    assert(\n        false,\n        data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  var state = this._baseState;\n\n  if (/str$/.test(tag))\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else if (tag === 'objDesc')\n    return this._encodeStr(data, tag);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '\\(\\)\\+,\\-\\.\\/:=\\?]*$/.test(str);\n};\n","var base = exports;\n\nbase.Reporter = require('./reporter').Reporter;\nbase.DecoderBuffer = require('./buffer').DecoderBuffer;\nbase.EncoderBuffer = require('./buffer').EncoderBuffer;\nbase.Node = require('./node');\n","var constants = require('../constants');\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = constants._reverse(exports.tagClass);\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = constants._reverse(exports.tag);\n","var constants = exports;\n\n// Helper\nconstants._reverse = function reverse(map) {\n  var res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    var value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n};\n\nconstants.der = require('./der');\n","var inherits = require('inherits');\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\nvar bignum = asn1.bignum;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!(data instanceof base.DecoderBuffer))\n    data = new base.DecoderBuffer(data, options);\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  var state = buffer.save();\n  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag ||\n    (decodedTag.tagStr + 'of') === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  var decodedTag = derDecodeTag(buffer,\n                                'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  var len = derDecodeLen(buffer,\n                         decodedTag.primitive,\n                         'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  var state = buffer.save();\n  var res = this._skipUntilEnd(\n      buffer,\n      'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  while (true) {\n    var tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    var len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    var res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len)\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,\n                                                    options) {\n  var result = [];\n  while (!buffer.isEmpty()) {\n    var possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    var res = decoder.decode(buffer, 'der', options);\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    var unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'bmpstr') {\n    var raw = buffer.raw();\n    if (raw.length % 2 === 1)\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n\n    var str = '';\n    for (var i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n    return str;\n  } else if (tag === 'numstr') {\n    var numstr = buffer.raw().toString('ascii');\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'numstr unsupported characters');\n    }\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    var printstr = buffer.raw().toString('ascii');\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'printstr unsupported characters');\n    }\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  var result;\n  var identifiers = [];\n  var ident = 0;\n  while (!buffer.isEmpty()) {\n    var subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  var first = (identifiers[0] / 40) | 0;\n  var second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    var tmp = values[result.join(' ')];\n    if (tmp === undefined)\n      tmp = values[result.join('.')];\n    if (tmp !== undefined)\n      result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  var str = buffer.raw().toString();\n  if (tag === 'gentime') {\n    var year = str.slice(0, 4) | 0;\n    var mon = str.slice(4, 6) | 0;\n    var day = str.slice(6, 8) | 0;\n    var hour = str.slice(8, 10) | 0;\n    var min = str.slice(10, 12) | 0;\n    var sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    var year = str.slice(0, 2) | 0;\n    var mon = str.slice(2, 4) | 0;\n    var day = str.slice(4, 6) | 0;\n    var hour = str.slice(6, 8) | 0;\n    var min = str.slice(8, 10) | 0;\n    var sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull(buffer) {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  var res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  var raw = buffer.raw();\n  var res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  var tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  var cls = der.tagClass[tag >> 6];\n  var primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    var oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  var tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  var len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  var num = len & 0x7f;\n  if (num > 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (var i = 0; i < num; i++) {\n    len <<= 8;\n    var j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n","var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  var lines = data.toString().split(/[\\r\\n]+/g);\n\n  var label = options.label.toUpperCase();\n\n  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  var start = -1;\n  var end = -1;\n  for (var i = 0; i < lines.length; i++) {\n    var match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  var base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n\n  var input = new Buffer(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n","var decoders = exports;\n\ndecoders.der = require('./der');\ndecoders.pem = require('./pem');\n","var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar asn1 = require('../../asn1');\nvar base = asn1.base;\n\n// Import DER constants\nvar der = asn1.constants.der;\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n};\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  base.Node.call(this, 'der', parent);\n}\ninherits(DERNode, base.Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n                                                              primitive,\n                                                              cls,\n                                                              content) {\n  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    var header = new Buffer(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  var lenOctets = 1;\n  for (var i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  var header = new Buffer(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  } else if (tag === 'bmpstr') {\n    var buf = new Buffer(str.length * 2);\n    for (var i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' +\n                                 'only digits and space');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' +\n                                 'only latin upper and lower case letters, ' +\n                                 'digits, space, apostrophe, left and rigth ' +\n                                 'parenthesis, plus sign, comma, hyphen, ' +\n                                 'dot, slash, colon, equal sign, ' +\n                                 'question mark');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag +\n                               ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s\\.]+/g);\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (var i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  var size = 0;\n  for (var i = 0; i < id.length; i++) {\n    var ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  var objid = new Buffer(size);\n  var offset = objid.length - 1;\n  for (var i = id.length - 1; i >= 0; i--) {\n    var ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  var str;\n  var date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    var numArray = num.toArray();\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = new Buffer(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    var size = num.length;\n    if (num.length === 0)\n      size++;\n\n    var out = new Buffer(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  var size = 1;\n  for (var i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  var out = new Array(size);\n  for (var i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(new Buffer(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  var state = this._baseState;\n  var i;\n  if (state['default'] === null)\n    return false;\n\n  var data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  var res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n","var inherits = require('inherits');\n\nvar DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  var buf = DEREncoder.prototype.encode.call(this, data);\n\n  var p = buf.toString('base64');\n  var out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (var i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n","var encoders = exports;\n\nencoders.der = require('./der');\nencoders.pem = require('./pem');\n","var asn1 = exports;\n\nasn1.bignum = require('bn.js');\n\nasn1.define = require('./asn1/api').define;\nasn1.base = require('./asn1/base');\nasn1.constants = require('./asn1/constants');\nasn1.decoders = require('./asn1/decoders');\nasn1.encoders = require('./asn1/encoders');\n","// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js\n// thanks to @Rantanen\n\n'use strict'\n\nvar asn = require('asn1.js')\n\nvar Time = asn.define('Time', function () {\n  this.choice({\n    utcTime: this.utctime(),\n    generalTime: this.gentime()\n  })\n})\n\nvar AttributeTypeValue = asn.define('AttributeTypeValue', function () {\n  this.seq().obj(\n    this.key('type').objid(),\n    this.key('value').any()\n  )\n})\n\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('parameters').optional(),\n    this.key('curve').objid().optional()\n  )\n})\n\nvar SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\n\nvar RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {\n  this.setof(AttributeTypeValue)\n})\n\nvar RDNSequence = asn.define('RDNSequence', function () {\n  this.seqof(RelativeDistinguishedName)\n})\n\nvar Name = asn.define('Name', function () {\n  this.choice({\n    rdnSequence: this.use(RDNSequence)\n  })\n})\n\nvar Validity = asn.define('Validity', function () {\n  this.seq().obj(\n    this.key('notBefore').use(Time),\n    this.key('notAfter').use(Time)\n  )\n})\n\nvar Extension = asn.define('Extension', function () {\n  this.seq().obj(\n    this.key('extnID').objid(),\n    this.key('critical').bool().def(false),\n    this.key('extnValue').octstr()\n  )\n})\n\nvar TBSCertificate = asn.define('TBSCertificate', function () {\n  this.seq().obj(\n    this.key('version').explicit(0).int().optional(),\n    this.key('serialNumber').int(),\n    this.key('signature').use(AlgorithmIdentifier),\n    this.key('issuer').use(Name),\n    this.key('validity').use(Validity),\n    this.key('subject').use(Name),\n    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),\n    this.key('issuerUniqueID').implicit(1).bitstr().optional(),\n    this.key('subjectUniqueID').implicit(2).bitstr().optional(),\n    this.key('extensions').explicit(3).seqof(Extension).optional()\n  )\n})\n\nvar X509Certificate = asn.define('X509Certificate', function () {\n  this.seq().obj(\n    this.key('tbsCertificate').use(TBSCertificate),\n    this.key('signatureAlgorithm').use(AlgorithmIdentifier),\n    this.key('signatureValue').bitstr()\n  )\n})\n\nmodule.exports = X509Certificate\n","// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n'use strict'\n\nvar asn1 = require('asn1.js')\n\nexports.certificate = require('./certificate')\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('modulus').int(),\n    this.key('publicExponent').int(),\n    this.key('privateExponent').int(),\n    this.key('prime1').int(),\n    this.key('prime2').int(),\n    this.key('exponent1').int(),\n    this.key('exponent2').int(),\n    this.key('coefficient').int()\n  )\n})\nexports.RSAPrivateKey = RSAPrivateKey\n\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n  this.seq().obj(\n    this.key('modulus').int(),\n    this.key('publicExponent').int()\n  )\n})\nexports.RSAPublicKey = RSAPublicKey\n\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\nexports.PublicKey = PublicKey\n\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('none').null_().optional(),\n    this.key('curve').objid().optional(),\n    this.key('params').seq().obj(\n      this.key('p').int(),\n      this.key('q').int(),\n      this.key('g').int()\n    ).optional()\n  )\n})\n\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\nexports.PrivateKey = PrivateKeyInfo\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').seq().obj(\n      this.key('id').objid(),\n      this.key('decrypt').seq().obj(\n        this.key('kde').seq().obj(\n          this.key('id').objid(),\n          this.key('kdeparams').seq().obj(\n            this.key('salt').octstr(),\n            this.key('iters').int()\n          )\n        ),\n        this.key('cipher').seq().obj(\n          this.key('algo').objid(),\n          this.key('iv').octstr()\n        )\n      )\n    ),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\n\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo\n\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('p').int(),\n    this.key('q').int(),\n    this.key('g').int(),\n    this.key('pub_key').int(),\n    this.key('priv_key').int()\n  )\n})\nexports.DSAPrivateKey = DSAPrivateKey\n\nexports.DSAparam = asn1.define('DSAparam', function () {\n  this.int()\n})\n\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('privateKey').octstr(),\n    this.key('parameters').optional().explicit(0).use(ECParameters),\n    this.key('publicKey').optional().explicit(1).bitstr()\n  )\n})\nexports.ECPrivateKey = ECPrivateKey\n\nvar ECParameters = asn1.define('ECParameters', function () {\n  this.choice({\n    namedCurve: this.objid()\n  })\n})\n\nexports.signature = asn1.define('signature', function () {\n  this.seq().obj(\n    this.key('r').int(),\n    this.key('s').int()\n  )\n})\n","// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r\\+\\/\\=]+)[\\n\\r]+/m\nvar startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m\nvar fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\\n\\r\\+\\/\\=]+)-----END \\1-----$/m\nvar evp = require('evp_bytestokey')\nvar ciphers = require('browserify-aes')\nvar Buffer = require('safe-buffer').Buffer\nmodule.exports = function (okey, password) {\n  var key = okey.toString()\n  var match = key.match(findProc)\n  var decrypted\n  if (!match) {\n    var match2 = key.match(fullRegex)\n    decrypted = new Buffer(match2[2].replace(/[\\r\\n]/g, ''), 'base64')\n  } else {\n    var suite = 'aes' + match[1]\n    var iv = Buffer.from(match[2], 'hex')\n    var cipherText = Buffer.from(match[3].replace(/[\\r\\n]/g, ''), 'base64')\n    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key\n    var out = []\n    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)\n    out.push(cipher.update(cipherText))\n    out.push(cipher.final())\n    decrypted = Buffer.concat(out)\n  }\n  var tag = key.match(startRegex)[1]\n  return {\n    tag: tag,\n    data: decrypted\n  }\n}\n","var asn1 = require('./asn1')\nvar aesid = require('./aesid.json')\nvar fixProc = require('./fixProc')\nvar ciphers = require('browserify-aes')\nvar compat = require('pbkdf2')\nvar Buffer = require('safe-buffer').Buffer\nmodule.exports = parseKeys\n\nfunction parseKeys (buffer) {\n  var password\n  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n    password = buffer.passphrase\n    buffer = buffer.key\n  }\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer)\n  }\n\n  var stripped = fixProc(buffer, password)\n\n  var type = stripped.tag\n  var data = stripped.data\n  var subtype, ndata\n  switch (type) {\n    case 'CERTIFICATE':\n      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo\n      // falls through\n    case 'PUBLIC KEY':\n      if (!ndata) {\n        ndata = asn1.PublicKey.decode(data, 'der')\n      }\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')\n        case '1.2.840.10045.2.1':\n          ndata.subjectPrivateKey = ndata.subjectPublicKey\n          return {\n            type: 'ec',\n            data: ndata\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')\n          return {\n            type: 'dsa',\n            data: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      throw new Error('unknown key type ' + type)\n    case 'ENCRYPTED PRIVATE KEY':\n      data = asn1.EncryptedPrivateKey.decode(data, 'der')\n      data = decrypt(data, password)\n      // falls through\n    case 'PRIVATE KEY':\n      ndata = asn1.PrivateKey.decode(data, 'der')\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')\n        case '1.2.840.10045.2.1':\n          return {\n            curve: ndata.algorithm.curve,\n            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')\n          return {\n            type: 'dsa',\n            params: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      throw new Error('unknown key type ' + type)\n    case 'RSA PUBLIC KEY':\n      return asn1.RSAPublicKey.decode(data, 'der')\n    case 'RSA PRIVATE KEY':\n      return asn1.RSAPrivateKey.decode(data, 'der')\n    case 'DSA PRIVATE KEY':\n      return {\n        type: 'dsa',\n        params: asn1.DSAPrivateKey.decode(data, 'der')\n      }\n    case 'EC PRIVATE KEY':\n      data = asn1.ECPrivateKey.decode(data, 'der')\n      return {\n        curve: data.parameters.value,\n        privateKey: data.privateKey\n      }\n    default: throw new Error('unknown key type ' + type)\n  }\n}\nparseKeys.signature = asn1.signature\nfunction decrypt (data, password) {\n  var salt = data.algorithm.decrypt.kde.kdeparams.salt\n  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)\n  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]\n  var iv = data.algorithm.decrypt.cipher.iv\n  var cipherText = data.subjectPrivateKey\n  var keylen = parseInt(algo.split('-')[1], 10) / 8\n  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1')\n  var cipher = ciphers.createDecipheriv(algo, key, iv)\n  var out = []\n  out.push(cipher.update(cipherText))\n  out.push(cipher.final())\n  return Buffer.concat(out)\n}\n","// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar createHmac = require('create-hmac')\nvar crt = require('browserify-rsa')\nvar EC = require('elliptic').ec\nvar BN = require('bn.js')\nvar parseKeys = require('parse-asn1')\nvar curves = require('./curves.json')\n\nfunction sign (hash, key, hashType, signType, tag) {\n  var priv = parseKeys(key)\n  if (priv.curve) {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\n    return ecSign(hash, priv)\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong private key type')\n    return dsaSign(hash, priv, hashType)\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\n  }\n  hash = Buffer.concat([tag, hash])\n  var len = priv.modulus.byteLength()\n  var pad = [ 0, 1 ]\n  while (hash.length + pad.length + 1 < len) pad.push(0xff)\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) pad.push(hash[i])\n\n  var out = crt(pad, priv)\n  return out\n}\n\nfunction ecSign (hash, priv) {\n  var curveId = curves[priv.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var key = curve.keyFromPrivate(priv.privateKey)\n  var out = key.sign(hash)\n\n  return new Buffer(out.toDER())\n}\n\nfunction dsaSign (hash, priv, algo) {\n  var x = priv.params.priv_key\n  var p = priv.params.p\n  var q = priv.params.q\n  var g = priv.params.g\n  var r = new BN(0)\n  var k\n  var H = bits2int(hash, q).mod(q)\n  var s = false\n  var kv = getKey(x, q, hash, algo)\n  while (s === false) {\n    k = makeKey(q, kv, algo)\n    r = makeR(g, k, p, q)\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)\n    if (s.cmpn(0) === 0) {\n      s = false\n      r = new BN(0)\n    }\n  }\n  return toDER(r, s)\n}\n\nfunction toDER (r, s) {\n  r = r.toArray()\n  s = s.toArray()\n\n  // Pad values\n  if (r[0] & 0x80) r = [ 0 ].concat(r)\n  if (s[0] & 0x80) s = [ 0 ].concat(s)\n\n  var total = r.length + s.length + 4\n  var res = [ 0x30, total, 0x02, r.length ]\n  res = res.concat(r, [ 0x02, s.length ], s)\n  return new Buffer(res)\n}\n\nfunction getKey (x, q, hash, algo) {\n  x = new Buffer(x.toArray())\n  if (x.length < q.byteLength()) {\n    var zeros = new Buffer(q.byteLength() - x.length)\n    zeros.fill(0)\n    x = Buffer.concat([ zeros, x ])\n  }\n  var hlen = hash.length\n  var hbits = bits2octets(hash, q)\n  var v = new Buffer(hlen)\n  v.fill(1)\n  var k = new Buffer(hlen)\n  k.fill(0)\n  k = createHmac(algo, k).update(v).update(new Buffer([ 0 ])).update(x).update(hbits).digest()\n  v = createHmac(algo, k).update(v).digest()\n  k = createHmac(algo, k).update(v).update(new Buffer([ 1 ])).update(x).update(hbits).digest()\n  v = createHmac(algo, k).update(v).digest()\n  return { k: k, v: v }\n}\n\nfunction bits2int (obits, q) {\n  var bits = new BN(obits)\n  var shift = (obits.length << 3) - q.bitLength()\n  if (shift > 0) bits.ishrn(shift)\n  return bits\n}\n\nfunction bits2octets (bits, q) {\n  bits = bits2int(bits, q)\n  bits = bits.mod(q)\n  var out = new Buffer(bits.toArray())\n  if (out.length < q.byteLength()) {\n    var zeros = new Buffer(q.byteLength() - out.length)\n    zeros.fill(0)\n    out = Buffer.concat([ zeros, out ])\n  }\n  return out\n}\n\nfunction makeKey (q, kv, algo) {\n  var t\n  var k\n\n  do {\n    t = new Buffer(0)\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest()\n      t = Buffer.concat([ t, kv.v ])\n    }\n\n    k = bits2int(t, q)\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(new Buffer([ 0 ])).digest()\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest()\n  } while (k.cmp(q) !== -1)\n\n  return k\n}\n\nfunction makeR (g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)\n}\n\nmodule.exports = sign\nmodule.exports.getKey = getKey\nmodule.exports.makeKey = makeKey\n","// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar BN = require('bn.js')\nvar EC = require('elliptic').ec\nvar parseKeys = require('parse-asn1')\nvar curves = require('./curves.json')\n\nfunction verify (sig, hash, key, signType, tag) {\n  var pub = parseKeys(key)\n  if (pub.type === 'ec') {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')\n    return ecVerify(sig, hash, pub)\n  } else if (pub.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong public key type')\n    return dsaVerify(sig, hash, pub)\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')\n  }\n  hash = Buffer.concat([tag, hash])\n  var len = pub.modulus.byteLength()\n  var pad = [ 1 ]\n  var padNum = 0\n  while (hash.length + pad.length + 2 < len) {\n    pad.push(0xff)\n    padNum++\n  }\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) {\n    pad.push(hash[i])\n  }\n  pad = new Buffer(pad)\n  var red = BN.mont(pub.modulus)\n  sig = new BN(sig).toRed(red)\n\n  sig = sig.redPow(new BN(pub.publicExponent))\n  sig = new Buffer(sig.fromRed().toArray())\n  var out = padNum < 8 ? 1 : 0\n  len = Math.min(sig.length, pad.length)\n  if (sig.length !== pad.length) out = 1\n\n  i = -1\n  while (++i < len) out |= sig[i] ^ pad[i]\n  return out === 0\n}\n\nfunction ecVerify (sig, hash, pub) {\n  var curveId = curves[pub.data.algorithm.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var pubkey = pub.data.subjectPrivateKey.data\n\n  return curve.verify(hash, sig, pubkey)\n}\n\nfunction dsaVerify (sig, hash, pub) {\n  var p = pub.data.p\n  var q = pub.data.q\n  var g = pub.data.g\n  var y = pub.data.pub_key\n  var unpacked = parseKeys.signature.decode(sig, 'der')\n  var s = unpacked.s\n  var r = unpacked.r\n  checkValue(s, q)\n  checkValue(r, q)\n  var montp = BN.mont(p)\n  var w = s.invm(q)\n  var v = g.toRed(montp)\n    .redPow(new BN(hash).mul(w).mod(q))\n    .fromRed()\n    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())\n    .mod(p)\n    .mod(q)\n  return v.cmp(r) === 0\n}\n\nfunction checkValue (b, q) {\n  if (b.cmpn(0) <= 0) throw new Error('invalid sig')\n  if (b.cmp(q) >= q) throw new Error('invalid sig')\n}\n\nmodule.exports = verify\n","var createHash = require('create-hash')\nvar stream = require('stream')\nvar inherits = require('inherits')\nvar sign = require('./sign')\nvar verify = require('./verify')\n\nvar algorithms = require('./algorithms.json')\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = new Buffer(algorithms[key].id, 'hex')\n  algorithms[key.toLowerCase()] = algorithms[key]\n})\n\nfunction Sign (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hashType = data.hash\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Sign, stream.Writable)\n\nSign.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nSign.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = new Buffer(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nSign.prototype.sign = function signMethod (key, enc) {\n  this.end()\n  var hash = this._hash.digest()\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag)\n\n  return enc ? sig.toString(enc) : sig\n}\n\nfunction Verify (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Verify, stream.Writable)\n\nVerify.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nVerify.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = new Buffer(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nVerify.prototype.verify = function verifyMethod (key, sig, enc) {\n  if (typeof sig === 'string') sig = new Buffer(sig, enc)\n\n  this.end()\n  var hash = this._hash.digest()\n  return verify(sig, hash, key, this._signType, this._tag)\n}\n\nfunction createSign (algorithm) {\n  return new Sign(algorithm)\n}\n\nfunction createVerify (algorithm) {\n  return new Verify(algorithm)\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n}\n","var elliptic = require('elliptic')\nvar BN = require('bn.js')\n\nmodule.exports = function createECDH (curve) {\n  return new ECDH(curve)\n}\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n}\n\naliases.p224 = aliases.secp224r1\naliases.p256 = aliases.secp256r1 = aliases.prime256v1\naliases.p192 = aliases.secp192r1 = aliases.prime192v1\naliases.p384 = aliases.secp384r1\naliases.p521 = aliases.secp521r1\n\nfunction ECDH (curve) {\n  this.curveType = aliases[curve]\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    }\n  }\n  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap\n  this.keys = void 0\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair()\n  return this.getPublicKey(enc, format)\n}\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8'\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc)\n  }\n  var otherPub = this.curve.keyFromPublic(other).getPublic()\n  var out = otherPub.mul(this.keys.getPrivate()).getX()\n  return formatReturnValue(out, enc, this.curveType.byteLength)\n}\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true)\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7\n    } else {\n      key[0] = 6\n    }\n  }\n  return formatReturnValue(key, enc)\n}\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc)\n}\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc)\n  }\n  this.keys._importPublic(pub)\n  return this\n}\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc)\n  }\n\n  var _priv = new BN(priv)\n  _priv = _priv.toString(16)\n  this.keys = this.curve.genKeyPair()\n  this.keys._importPrivate(_priv)\n  return this\n}\n\nfunction formatReturnValue (bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray()\n  }\n  var buf = new Buffer(bn)\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length)\n    zeros.fill(0)\n    buf = Buffer.concat([zeros, buf])\n  }\n  if (!enc) {\n    return buf\n  } else {\n    return buf.toString(enc)\n  }\n}\n","var createHash = require('create-hash')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (seed, len) {\n  var t = Buffer.alloc(0)\n  var i = 0\n  var c\n  while (t.length < len) {\n    c = i2ops(i++)\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])\n  }\n  return t.slice(0, len)\n}\n\nfunction i2ops (c) {\n  var out = Buffer.allocUnsafe(4)\n  out.writeUInt32BE(c, 0)\n  return out\n}\n","module.exports = function xor (a, b) {\n  var len = a.length\n  var i = -1\n  while (++i < len) {\n    a[i] ^= b[i]\n  }\n  return a\n}\n","var BN = require('bn.js')\nvar Buffer = require('safe-buffer').Buffer\n\nfunction withPublic (paddedMsg, key) {\n  return Buffer.from(paddedMsg\n    .toRed(BN.mont(key.modulus))\n    .redPow(new BN(key.publicExponent))\n    .fromRed()\n    .toArray())\n}\n\nmodule.exports = withPublic\n","var parseKeys = require('parse-asn1')\nvar randomBytes = require('randombytes')\nvar createHash = require('create-hash')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar withPublic = require('./withPublic')\nvar crt = require('browserify-rsa')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function publicEncrypt (publicKey, msg, reverse) {\n  var padding\n  if (publicKey.padding) {\n    padding = publicKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n  var key = parseKeys(publicKey)\n  var paddedMsg\n  if (padding === 4) {\n    paddedMsg = oaep(key, msg)\n  } else if (padding === 1) {\n    paddedMsg = pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    paddedMsg = new BN(msg)\n    if (paddedMsg.cmp(key.modulus) >= 0) {\n      throw new Error('data too long for modulus')\n    }\n  } else {\n    throw new Error('unknown padding')\n  }\n  if (reverse) {\n    return crt(paddedMsg, key)\n  } else {\n    return withPublic(paddedMsg, key)\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var mLen = msg.length\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  var hLen2 = 2 * hLen\n  if (mLen > k - hLen2 - 2) {\n    throw new Error('message too long')\n  }\n  var ps = Buffer.alloc(k - mLen - hLen2 - 2)\n  var dblen = k - hLen - 1\n  var seed = randomBytes(hLen)\n  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))\n  var maskedSeed = xor(seed, mgf(maskedDb, hLen))\n  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))\n}\nfunction pkcs1 (key, msg, reverse) {\n  var mLen = msg.length\n  var k = key.modulus.byteLength()\n  if (mLen > k - 11) {\n    throw new Error('message too long')\n  }\n  var ps\n  if (reverse) {\n    ps = Buffer.alloc(k - mLen - 3, 0xff)\n  } else {\n    ps = nonZero(k - mLen - 3)\n  }\n  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))\n}\nfunction nonZero (len) {\n  var out = Buffer.allocUnsafe(len)\n  var i = 0\n  var cache = randomBytes(len * 2)\n  var cur = 0\n  var num\n  while (i < len) {\n    if (cur === cache.length) {\n      cache = randomBytes(len * 2)\n      cur = 0\n    }\n    num = cache[cur++]\n    if (num) {\n      out[i++] = num\n    }\n  }\n  return out\n}\n","var parseKeys = require('parse-asn1')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar crt = require('browserify-rsa')\nvar createHash = require('create-hash')\nvar withPublic = require('./withPublic')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function privateDecrypt (privateKey, enc, reverse) {\n  var padding\n  if (privateKey.padding) {\n    padding = privateKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n\n  var key = parseKeys(privateKey)\n  var k = key.modulus.byteLength()\n  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error')\n  }\n  var msg\n  if (reverse) {\n    msg = withPublic(new BN(enc), key)\n  } else {\n    msg = crt(enc, key)\n  }\n  var zBuffer = Buffer.alloc(k - msg.length)\n  msg = Buffer.concat([zBuffer, msg], k)\n  if (padding === 4) {\n    return oaep(key, msg)\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    return msg\n  } else {\n    throw new Error('unknown padding')\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  if (msg[0] !== 0) {\n    throw new Error('decryption error')\n  }\n  var maskedSeed = msg.slice(1, hLen + 1)\n  var maskedDb = msg.slice(hLen + 1)\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen))\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1))\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error')\n  }\n  var i = hLen\n  while (db[i] === 0) {\n    i++\n  }\n  if (db[i++] !== 1) {\n    throw new Error('decryption error')\n  }\n  return db.slice(i)\n}\n\nfunction pkcs1 (key, msg, reverse) {\n  var p1 = msg.slice(0, 2)\n  var i = 2\n  var status = 0\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++\n      break\n    }\n  }\n  var ps = msg.slice(2, i - 1)\n\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {\n    status++\n  }\n  if (ps.length < 8) {\n    status++\n  }\n  if (status) {\n    throw new Error('decryption error')\n  }\n  return msg.slice(i)\n}\nfunction compare (a, b) {\n  a = Buffer.from(a)\n  b = Buffer.from(b)\n  var dif = 0\n  var len = a.length\n  if (a.length !== b.length) {\n    dif++\n    len = Math.min(a.length, b.length)\n  }\n  var i = -1\n  while (++i < len) {\n    dif += (a[i] ^ b[i])\n  }\n  return dif\n}\n","exports.publicEncrypt = require('./publicEncrypt')\nexports.privateDecrypt = require('./privateDecrypt')\n\nexports.privateEncrypt = function privateEncrypt (key, buf) {\n  return exports.publicEncrypt(key, buf, true)\n}\n\nexports.publicDecrypt = function publicDecrypt (key, buf) {\n  return exports.privateDecrypt(key, buf, true)\n}\n","'use strict'\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\nvar safeBuffer = require('safe-buffer')\nvar randombytes = require('randombytes')\nvar Buffer = safeBuffer.Buffer\nvar kBufferMaxLength = safeBuffer.kMaxLength\nvar crypto = global.crypto || global.msCrypto\nvar kMaxUint32 = Math.pow(2, 32) - 1\nfunction assertOffset (offset, length) {\n  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare\n    throw new TypeError('offset must be a number')\n  }\n\n  if (offset > kMaxUint32 || offset < 0) {\n    throw new TypeError('offset must be a uint32')\n  }\n\n  if (offset > kBufferMaxLength || offset > length) {\n    throw new RangeError('offset out of range')\n  }\n}\n\nfunction assertSize (size, offset, length) {\n  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare\n    throw new TypeError('size must be a number')\n  }\n\n  if (size > kMaxUint32 || size < 0) {\n    throw new TypeError('size must be a uint32')\n  }\n\n  if (size + offset > length || size > kBufferMaxLength) {\n    throw new RangeError('buffer too small')\n  }\n}\nif ((crypto && crypto.getRandomValues) || !process.browser) {\n  exports.randomFill = randomFill\n  exports.randomFillSync = randomFillSync\n} else {\n  exports.randomFill = oldBrowser\n  exports.randomFillSync = oldBrowser\n}\nfunction randomFill (buf, offset, size, cb) {\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  if (typeof offset === 'function') {\n    cb = offset\n    offset = 0\n    size = buf.length\n  } else if (typeof size === 'function') {\n    cb = size\n    size = buf.length - offset\n  } else if (typeof cb !== 'function') {\n    throw new TypeError('\"cb\" argument must be a function')\n  }\n  assertOffset(offset, buf.length)\n  assertSize(size, offset, buf.length)\n  return actualFill(buf, offset, size, cb)\n}\n\nfunction actualFill (buf, offset, size, cb) {\n  if (process.browser) {\n    var ourBuf = buf.buffer\n    var uint = new Uint8Array(ourBuf, offset, size)\n    crypto.getRandomValues(uint)\n    if (cb) {\n      process.nextTick(function () {\n        cb(null, buf)\n      })\n      return\n    }\n    return buf\n  }\n  if (cb) {\n    randombytes(size, function (err, bytes) {\n      if (err) {\n        return cb(err)\n      }\n      bytes.copy(buf, offset)\n      cb(null, buf)\n    })\n    return\n  }\n  var bytes = randombytes(size)\n  bytes.copy(buf, offset)\n  return buf\n}\nfunction randomFillSync (buf, offset, size) {\n  if (typeof offset === 'undefined') {\n    offset = 0\n  }\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  assertOffset(offset, buf.length)\n\n  if (size === undefined) size = buf.length - offset\n\n  assertSize(size, offset, buf.length)\n\n  return actualFill(buf, offset, size)\n}\n","'use strict'\n\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')\nexports.createHash = exports.Hash = require('create-hash')\nexports.createHmac = exports.Hmac = require('create-hmac')\n\nvar algos = require('browserify-sign/algos')\nvar algoKeys = Object.keys(algos)\nvar hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)\nexports.getHashes = function () {\n  return hashes\n}\n\nvar p = require('pbkdf2')\nexports.pbkdf2 = p.pbkdf2\nexports.pbkdf2Sync = p.pbkdf2Sync\n\nvar aes = require('browserify-cipher')\n\nexports.Cipher = aes.Cipher\nexports.createCipher = aes.createCipher\nexports.Cipheriv = aes.Cipheriv\nexports.createCipheriv = aes.createCipheriv\nexports.Decipher = aes.Decipher\nexports.createDecipher = aes.createDecipher\nexports.Decipheriv = aes.Decipheriv\nexports.createDecipheriv = aes.createDecipheriv\nexports.getCiphers = aes.getCiphers\nexports.listCiphers = aes.listCiphers\n\nvar dh = require('diffie-hellman')\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup\nexports.getDiffieHellman = dh.getDiffieHellman\nexports.createDiffieHellman = dh.createDiffieHellman\nexports.DiffieHellman = dh.DiffieHellman\n\nvar sign = require('browserify-sign')\n\nexports.createSign = sign.createSign\nexports.Sign = sign.Sign\nexports.createVerify = sign.createVerify\nexports.Verify = sign.Verify\n\nexports.createECDH = require('create-ecdh')\n\nvar publicEncrypt = require('public-encrypt')\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt\nexports.privateEncrypt = publicEncrypt.privateEncrypt\nexports.publicDecrypt = publicEncrypt.publicDecrypt\nexports.privateDecrypt = publicEncrypt.privateDecrypt\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n// ;[\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error([\n//       'sorry, ' + name + ' is not implemented yet',\n//       'we accept pull requests',\n//       'https://github.com/crypto-browserify/crypto-browserify'\n//     ].join('\\n'))\n//   }\n// })\n\nvar rf = require('randomfill')\n\nexports.randomFill = rf.randomFill\nexports.randomFillSync = rf.randomFillSync\n\nexports.createCredentials = function () {\n  throw new Error([\n    'sorry, createCredentials is not implemented yet',\n    'we accept pull requests',\n    'https://github.com/crypto-browserify/crypto-browserify'\n  ].join('\\n'))\n}\n\nexports.constants = {\n  'DH_CHECK_P_NOT_SAFE_PRIME': 2,\n  'DH_CHECK_P_NOT_PRIME': 1,\n  'DH_UNABLE_TO_CHECK_GENERATOR': 4,\n  'DH_NOT_SUITABLE_GENERATOR': 8,\n  'NPN_ENABLED': 1,\n  'ALPN_ENABLED': 1,\n  'RSA_PKCS1_PADDING': 1,\n  'RSA_SSLV23_PADDING': 2,\n  'RSA_NO_PADDING': 3,\n  'RSA_PKCS1_OAEP_PADDING': 4,\n  'RSA_X931_PADDING': 5,\n  'RSA_PKCS1_PSS_PADDING': 6,\n  'POINT_CONVERSION_COMPRESSED': 2,\n  'POINT_CONVERSION_UNCOMPRESSED': 4,\n  'POINT_CONVERSION_HYBRID': 6\n}\n","module.exports = exports = window.fetch;\n\n// Needed for TypeScript and Webpack.\nexports.default = window.fetch.bind(window);\n\nexports.Headers = window.Headers;\nexports.Request = window.Request;\nexports.Response = window.Response;\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Platform} from './platforms/platform';\n\n// Expects flags from URL in the format ?tfjsflags=FLAG1:1,FLAG2:true.\nconst TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\n\ntype FlagValue = number|boolean;\nexport type Flags = {\n  [featureName: string]: FlagValue\n};\nexport type FlagRegistryEntry = {\n  evaluationFn: () => FlagValue;\n  setHook?: (value: FlagValue) => void;\n};\n\nexport class Environment {\n  private flags: Flags = {};\n  private flagRegistry: {[flagName: string]: FlagRegistryEntry} = {};\n\n  private urlFlags: Flags = {};\n\n  platformName: string;\n  platform: Platform;\n\n  // tslint:disable-next-line: no-any\n  constructor(public global: any) {\n    this.populateURLFlags();\n  }\n\n  setPlatform(platformName: string, platform: Platform) {\n    if (this.platform != null) {\n      console.warn(\n          `Platform ${this.platformName} has already been set. ` +\n          `Overwriting the platform with ${platform}.`);\n    }\n    this.platformName = platformName;\n    this.platform = platform;\n  }\n\n  registerFlag(\n      flagName: string, evaluationFn: () => FlagValue,\n      setHook?: (value: FlagValue) => void) {\n    this.flagRegistry[flagName] = {evaluationFn, setHook};\n\n    // Override the flag value from the URL. This has to happen here because the\n    // environment is initialized before flags get registered.\n    if (this.urlFlags[flagName] != null) {\n      const flagValue = this.urlFlags[flagName];\n      console.warn(\n          `Setting feature override from URL ${flagName}: ${flagValue}.`);\n      this.set(flagName, flagValue);\n    }\n  }\n\n  get(flagName: string): FlagValue {\n    if (flagName in this.flags) {\n      return this.flags[flagName];\n    }\n\n    this.flags[flagName] = this.evaluateFlag(flagName);\n\n    return this.flags[flagName];\n  }\n\n  getNumber(flagName: string): number {\n    return this.get(flagName) as number;\n  }\n\n  getBool(flagName: string): boolean {\n    return this.get(flagName) as boolean;\n  }\n\n  getFlags(): Flags {\n    return this.flags;\n  }\n  // For backwards compatibility.\n  get features(): Flags {\n    return this.flags;\n  }\n\n  set(flagName: string, value: FlagValue): void {\n    if (this.flagRegistry[flagName] == null) {\n      throw new Error(\n          `Cannot set flag ${flagName} as it has not been registered.`);\n    }\n    this.flags[flagName] = value;\n    if (this.flagRegistry[flagName].setHook != null) {\n      this.flagRegistry[flagName].setHook(value);\n    }\n  }\n\n  private evaluateFlag(flagName: string): FlagValue {\n    if (this.flagRegistry[flagName] == null) {\n      throw new Error(\n          `Cannot evaluate flag '${flagName}': no evaluation function found.`);\n    }\n    return this.flagRegistry[flagName].evaluationFn();\n  }\n\n  setFlags(flags: Flags) {\n    this.flags = Object.assign({}, flags);\n  }\n\n  reset() {\n    this.flags = {};\n    this.urlFlags = {};\n    this.populateURLFlags();\n  }\n\n  private populateURLFlags(): void {\n    if (typeof this.global === 'undefined' ||\n        typeof this.global.location === 'undefined' ||\n        typeof this.global.location.search === 'undefined') {\n      return;\n    }\n\n    const urlParams = getQueryParams(this.global.location.search);\n    if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n      const keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n      keyValues.forEach(keyValue => {\n        const [key, value] = keyValue.split(':') as [string, string];\n        this.urlFlags[key] = parseValue(key, value);\n      });\n    }\n  }\n}\n\nexport function getQueryParams(queryString: string): {[key: string]: string} {\n  const params = {};\n  queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, (s, ...t) => {\n    decodeParam(params, t[0], t[1]);\n    return t.join('=');\n  });\n  return params;\n}\n\nfunction decodeParam(\n    params: {[key: string]: string}, name: string, value?: string) {\n  params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\n\nfunction parseValue(flagName: string, value: string): FlagValue {\n  value = value.toLowerCase();\n  if (value === 'true' || value === 'false') {\n    return value === 'true';\n  } else if (`${+ value}` === value) {\n    return +value;\n  }\n  throw new Error(\n      `Could not parse value flag value ${value} for flag ${flagName}.`);\n}\n\nexport let ENV: Environment = null;\nexport function setEnvironmentGlobal(environment: Environment) {\n  ENV = environment;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENV} from './environment';\nimport {DataType, DataTypeMap, FlatVector, NumericDataType, RecursiveArray, TensorLike, TypedArray} from './types';\n\n/**\n * Shuffles the array in-place using Fisher-Yates algorithm.\n *\n * ```js\n * const a = [1, 2, 3, 4, 5];\n * tf.util.shuffle(a);\n * console.log(a);\n * ```\n *\n * @param array The array to shuffle in-place.\n */\n/** @doc {heading: 'Util', namespace: 'util'} */\n// tslint:disable-next-line:no-any\nexport function shuffle(array: any[]|Uint32Array|Int32Array|\n                        Float32Array): void {\n  let counter = array.length;\n  let temp = 0;\n  let index = 0;\n  // While there are elements in the array\n  while (counter > 0) {\n    // Pick a random index\n    index = (Math.random() * counter) | 0;\n    // Decrease counter by 1\n    counter--;\n    // And swap the last element with it\n    temp = array[counter];\n    array[counter] = array[index];\n    array[index] = temp;\n  }\n}\n\n/** Clamps a value to a specified range. */\nexport function clamp(min: number, x: number, max: number): number {\n  return Math.max(min, Math.min(x, max));\n}\n\nexport function nearestLargerEven(val: number): number {\n  return val % 2 === 0 ? val : val + 1;\n}\n\nexport function sum(arr: number[]): number {\n  let sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    sum += arr[i];\n  }\n  return sum;\n}\n\n/**\n * Returns a sample from a uniform [a, b) distribution.\n *\n * @param a The minimum support (inclusive).\n * @param b The maximum support (exclusive).\n * @return A pseudorandom number on the half-open interval [a,b).\n */\nexport function randUniform(a: number, b: number) {\n  const r = Math.random();\n  return (b * r) + (1 - r) * a;\n}\n\n/** Returns the squared Euclidean distance between two vectors. */\nexport function distSquared(a: FlatVector, b: FlatVector): number {\n  let result = 0;\n  for (let i = 0; i < a.length; i++) {\n    const diff = Number(a[i]) - Number(b[i]);\n    result += diff * diff;\n  }\n  return result;\n}\n\n/**\n * Asserts that the expression is true. Otherwise throws an error with the\n * provided message.\n *\n * ```js\n * const x = 2;\n * tf.util.assert(x === 2, 'x is not 2');\n * ```\n *\n * @param expr The expression to assert (as a boolean).\n * @param msg A function that returns the message to report when throwing an\n *     error. We use a function for performance reasons.\n */\n/** @doc {heading: 'Util', namespace: 'util'} */\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport function assertShapesMatch(\n    shapeA: number[], shapeB: number[], errorMessagePrefix = ''): void {\n  assert(\n      arraysEqual(shapeA, shapeB),\n      () => errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n}\n\nexport function assertNonNull(a: TensorLike): void {\n  assert(\n      a != null,\n      () => `The input to the tensor constructor must be a non-null value.`);\n}\n\n// NOTE: We explicitly type out what T extends instead of any so that\n// util.flatten on a nested array of number doesn't try to infer T as a\n// number[][], causing us to explicitly type util.flatten<number>().\n/**\n *  Flattens an arbitrarily nested array.\n *\n * ```js\n * const a = [[1, 2], [3, 4], [5, [6, [7]]]];\n * const flat = tf.util.flatten(a);\n * console.log(flat);\n * ```\n *\n *  @param arr The nested array to flatten.\n *  @param result The destination array which holds the elements.\n */\n/** @doc {heading: 'Util', namespace: 'util'} */\nexport function\nflatten<T extends number|boolean|string|Promise<number>|TypedArray>(\n    arr: T|RecursiveArray<T>, result: T[] = []): T[] {\n  if (result == null) {\n    result = [];\n  }\n  if (Array.isArray(arr) || isTypedArray(arr)) {\n    for (let i = 0; i < arr.length; ++i) {\n      flatten(arr[i], result);\n    }\n  } else {\n    result.push(arr as T);\n  }\n  return result;\n}\n\n/**\n * Returns the size (number of elements) of the tensor given its shape.\n *\n * ```js\n * const shape = [3, 4, 2];\n * const size = tf.util.sizeFromShape(shape);\n * console.log(size);\n * ```\n */\n/** @doc {heading: 'Util', namespace: 'util'} */\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\n\nexport function isScalarShape(shape: number[]): boolean {\n  return shape.length === 0;\n}\n\nexport function arraysEqual(n1: FlatVector, n2: FlatVector) {\n  if (n1 === n2) {\n    return true;\n  }\n  if (n1 == null || n2 == null) {\n    return false;\n  }\n\n  if (n1.length !== n2.length) {\n    return false;\n  }\n  for (let i = 0; i < n1.length; i++) {\n    if (n1[i] !== n2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\n\nexport function tanh(x: number): number {\n  // tslint:disable-next-line:no-any\n  if ((Math as any).tanh != null) {\n    // tslint:disable-next-line:no-any\n    return (Math as any).tanh(x);\n  }\n  if (x === Infinity) {\n    return 1;\n  } else if (x === -Infinity) {\n    return -1;\n  } else {\n    const e2x = Math.exp(2 * x);\n    return (e2x - 1) / (e2x + 1);\n  }\n}\n\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\n\nexport function createShuffledIndices(n: number): Uint32Array {\n  const shuffledIndices = new Uint32Array(n);\n  for (let i = 0; i < n; ++i) {\n    shuffledIndices[i] = i;\n  }\n  shuffle(shuffledIndices);\n  return shuffledIndices;\n}\n\nexport function rightPad(a: string, size: number): string {\n  if (size <= a.length) {\n    return a;\n  }\n  return a + ' '.repeat(size - a.length);\n}\n\nexport function repeatedTry(\n    checkFn: () => boolean, delayFn = (counter: number) => 0,\n    maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Given the full size of the array and a shape that may contain -1 as the\n * implicit dimension, returns the inferred shape where -1 is replaced.\n * E.g. For shape=[2, -1, 3] and size=24, it will return [2, 4, 3].\n *\n * @param shape The shape, which may contain -1 in some dimension.\n * @param size The full size (number of elements) of the array.\n * @return The inferred shape where -1 is replaced with the inferred size.\n */\nexport function inferFromImplicitShape(\n    shape: number[], size: number): number[] {\n  let shapeProd = 1;\n  let implicitIdx = -1;\n\n  for (let i = 0; i < shape.length; ++i) {\n    if (shape[i] >= 0) {\n      shapeProd *= shape[i];\n    } else if (shape[i] === -1) {\n      if (implicitIdx !== -1) {\n        throw Error(\n            `Shapes can only have 1 implicit size. ` +\n            `Found -1 at dim ${implicitIdx} and dim ${i}`);\n      }\n      implicitIdx = i;\n    } else if (shape[i] < 0) {\n      throw Error(`Shapes can not be < 0. Found ${shape[i]} at dim ${i}`);\n    }\n  }\n\n  if (implicitIdx === -1) {\n    if (size > 0 && size !== shapeProd) {\n      throw Error(`Size(${size}) must match the product of shape ${shape}`);\n    }\n    return shape;\n  }\n\n  if (shapeProd === 0) {\n    throw Error(\n        `Cannot infer the missing size in [${shape}] when ` +\n        `there are 0 elements`);\n  }\n  if (size % shapeProd !== 0) {\n    throw Error(\n        `The implicit shape can't be a fractional number. ` +\n        `Got ${size} / ${shapeProd}`);\n  }\n\n  const newShape = shape.slice();\n  newShape[implicitIdx] = size / shapeProd;\n  return newShape;\n}\n\nexport function parseAxisParam(\n    axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : [].concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () =>\n          `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(ax => isInt(ax)),\n      () => `All values in axis param must be integers but ` +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\n\n/** Reduces the shape by removing all dimensions of shape 1. */\nexport function squeezeShape(shape: number[], axis?: number[]):\n    {newShape: number[], keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const axes = axis == null ? null : parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(\n            `Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function getTypedArrayFromDType<D extends NumericDataType>(\n    dtype: D, size: number): DataTypeMap[D] {\n  let values = null;\n  if (dtype == null || dtype === 'float32') {\n    values = new Float32Array(size);\n  } else if (dtype === 'int32') {\n    values = new Int32Array(size);\n  } else if (dtype === 'bool') {\n    values = new Uint8Array(size);\n  } else {\n    throw new Error(`Unknown data type ${dtype}`);\n  }\n  return values as DataTypeMap[D];\n}\n\nexport function getArrayFromDType<D extends DataType>(\n    dtype: D, size: number): DataTypeMap[D] {\n  let values = null;\n  if (dtype == null || dtype === 'float32') {\n    values = new Float32Array(size);\n  } else if (dtype === 'int32') {\n    values = new Int32Array(size);\n  } else if (dtype === 'bool') {\n    values = new Uint8Array(size);\n  } else if (dtype === 'string') {\n    values = new Array<'string'>(size);\n  } else {\n    throw new Error(`Unknown data type ${dtype}`);\n  }\n  return values as DataTypeMap[D];\n}\n\nexport function checkComputationForErrors<D extends DataType>(\n    vals: DataTypeMap[D], dtype: D, name: string): void {\n  if (dtype !== 'float32') {\n    // Only floating point computations will generate NaN values\n    return;\n  }\n  for (let i = 0; i < vals.length; i++) {\n    const num = vals[i] as number;\n    if (isNaN(num) || !isFinite(num)) {\n      throw Error(`The result of the '${name}' is ${num}.`);\n    }\n  }\n}\n\nexport function checkConversionForErrors<D extends DataType>(\n    vals: DataTypeMap[D]|number[], dtype: D): void {\n  for (let i = 0; i < vals.length; i++) {\n    const num = vals[i] as number;\n    if (isNaN(num) || !isFinite(num)) {\n      throw Error(`A tensor of type ${dtype} being uploaded contains ${num}.`);\n    }\n  }\n}\n\n/** Returns true if the dtype is valid. */\nexport function isValidDtype(dtype: DataType): boolean {\n  return dtype === 'bool' || dtype === 'complex64' || dtype === 'float32' ||\n      dtype === 'int32' || dtype === 'string';\n}\n\n/**\n * Returns true if the new type can't encode the old type without loss of\n * precision.\n */\nexport function hasEncodingLoss(oldType: DataType, newType: DataType): boolean {\n  if (newType === 'complex64') {\n    return false;\n  }\n  if (newType === 'float32' && oldType !== 'complex64') {\n    return false;\n  }\n  if (newType === 'int32' && oldType !== 'float32' && oldType !== 'complex64') {\n    return false;\n  }\n  if (newType === 'bool' && oldType === 'bool') {\n    return false;\n  }\n  return true;\n}\n\nexport function isTypedArray(a: {}): a is Float32Array|Int32Array|Uint8Array {\n  return a instanceof Float32Array || a instanceof Int32Array ||\n      a instanceof Uint8Array;\n}\n\nexport function bytesPerElement(dtype: DataType): number {\n  if (dtype === 'float32' || dtype === 'int32') {\n    return 4;\n  } else if (dtype === 'complex64') {\n    return 8;\n  } else if (dtype === 'bool') {\n    return 1;\n  } else {\n    throw new Error(`Unknown dtype ${dtype}`);\n  }\n}\n\n/**\n * Returns the approximate number of bytes allocated in the string array - 2\n * bytes per character. Computing the exact bytes for a native string in JS is\n * not possible since it depends on the encoding of the html page that serves\n * the website.\n */\nexport function bytesFromStringArray(arr: string[]): number {\n  if (arr == null) {\n    return 0;\n  }\n  let bytes = 0;\n  arr.forEach(x => bytes += x.length * 2);\n  return bytes;\n}\n\n/** Returns true if the value is a string. */\nexport function isString(value: {}): value is string {\n  return typeof value === 'string' || value instanceof String;\n}\n\nexport function isBoolean(value: {}): boolean {\n  return typeof value === 'boolean';\n}\n\nexport function isNumber(value: {}): boolean {\n  return typeof value === 'number';\n}\n\nexport function inferDtype(values: TensorLike): DataType {\n  if (Array.isArray(values)) {\n    return inferDtype(values[0]);\n  }\n  if (values instanceof Float32Array) {\n    return 'float32';\n  } else if (values instanceof Int32Array || values instanceof Uint8Array) {\n    return 'int32';\n  } else if (isNumber(values)) {\n    return 'float32';\n  } else if (isString(values)) {\n    return 'string';\n  } else if (isBoolean(values)) {\n    return 'bool';\n  }\n  return 'float32';\n}\n\nexport function isFunction(f: Function) {\n  return !!(f && f.constructor && f.call && f.apply);\n}\n\nexport function nearestDivisor(size: number, start: number): number {\n  for (let i = start; i < size; ++i) {\n    if (size % i === 0) {\n      return i;\n    }\n  }\n  return size;\n}\n\nexport function computeStrides(shape: number[]): number[] {\n  const rank = shape.length;\n  if (rank < 2) {\n    return [];\n  }\n\n  // Last dimension has implicit stride of 1, thus having D-1 (instead of D)\n  // strides.\n  const strides = new Array(rank - 1);\n  strides[rank - 2] = shape[rank - 1];\n  for (let i = rank - 3; i >= 0; --i) {\n    strides[i] = strides[i + 1] * shape[i + 1];\n  }\n  return strides;\n}\n\nexport function toTypedArray(\n    a: TensorLike, dtype: DataType, debugMode: boolean): TypedArray {\n  if (dtype === 'string') {\n    throw new Error('Cannot convert a string[] to a TypedArray');\n  }\n  if (Array.isArray(a)) {\n    a = flatten(a as number[]);\n  }\n  if (debugMode) {\n    checkConversionForErrors(a as number[], dtype);\n  }\n  if (noConversionNeeded(a, dtype)) {\n    return a as TypedArray;\n  }\n  if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n    return new Float32Array(a as number[]);\n  } else if (dtype === 'int32') {\n    return new Int32Array(a as number[]);\n  } else if (dtype === 'bool') {\n    const bool = new Uint8Array((a as number[]).length);\n    for (let i = 0; i < bool.length; ++i) {\n      if (Math.round((a as number[])[i] as number) !== 0) {\n        bool[i] = 1;\n      }\n    }\n    return bool;\n  } else {\n    throw new Error(`Unknown data type ${dtype}`);\n  }\n}\n\nfunction createNestedArray(offset: number, shape: number[], a: TypedArray) {\n  const ret = new Array();\n  if (shape.length === 1) {\n    const d = shape[0];\n    for (let i = 0; i < d; i++) {\n      ret[i] = a[offset + i];\n    }\n  } else {\n    const d = shape[0];\n    const rest = shape.slice(1);\n    const len = rest.reduce((acc, c) => acc * c);\n    for (let i = 0; i < d; i++) {\n      ret[i] = createNestedArray(offset + i * len, rest, a);\n    }\n  }\n  return ret;\n}\n\n// Provide a nested array of TypedArray in given shape.\nexport function toNestedArray(shape: number[], a: TypedArray) {\n  if (shape.length === 0) {\n    // Scalar type should return a single number.\n    return a[0];\n  }\n  const size = shape.reduce((acc, c) => acc * c);\n  if (size === 0) {\n    // A tensor with shape zero should be turned into empty list.\n    return [];\n  }\n  if (size !== a.length) {\n    throw new Error(`[${shape}] does not match the input size.`);\n  }\n\n  return createNestedArray(0, shape, a);\n}\n\nfunction noConversionNeeded(a: TensorLike, dtype: DataType): boolean {\n  return (a instanceof Float32Array && dtype === 'float32') ||\n      (a instanceof Int32Array && dtype === 'int32') ||\n      (a instanceof Uint8Array && dtype === 'bool');\n}\n\nexport function makeOnesTypedArray<D extends DataType>(\n    size: number, dtype: D): DataTypeMap[D] {\n  const array = makeZerosTypedArray(size, dtype);\n  for (let i = 0; i < array.length; i++) {\n    array[i] = 1;\n  }\n  return array;\n}\n\nexport function makeZerosTypedArray<D extends DataType>(\n    size: number, dtype: D): DataTypeMap[D] {\n  if (dtype == null || dtype === 'float32' || dtype === 'complex64') {\n    return new Float32Array(size) as DataTypeMap[D];\n  } else if (dtype === 'int32') {\n    return new Int32Array(size) as DataTypeMap[D];\n  } else if (dtype === 'bool') {\n    return new Uint8Array(size) as DataTypeMap[D];\n  } else {\n    throw new Error(`Unknown data type ${dtype}`);\n  }\n}\n\n/**\n * Returns the current high-resolution time in milliseconds relative to an\n * arbitrary time in the past. It works across different platforms (node.js,\n * browsers).\n *\n * ```js\n * console.log(tf.util.now());\n * ```\n */\n/** @doc {heading: 'Util', namespace: 'util'} */\nexport function now(): number {\n  if (typeof performance !== 'undefined') {\n    return performance.now();\n  } else if (typeof process !== 'undefined') {\n    const time = process.hrtime();\n    return time[0] * 1000 + time[1] / 1000000;\n  } else {\n    throw new Error(\n        'Cannot measure time in this environment. You should run tf.js ' +\n        'in the browser or in Node.js');\n  }\n}\n\nexport function assertNonNegativeIntegerDimensions(shape: number[]) {\n  shape.forEach(dimSize => {\n    assert(\n        Number.isInteger(dimSize) && dimSize >= 0,\n        () =>\n            `Tensor must have a shape comprised of positive integers but got ` +\n            `shape [${shape}].`);\n  });\n}\n\n/**\n * Returns a platform-specific implementation of\n * [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n *\n * If `fetch` is defined on the global object (`window`, `process`, etc.),\n * `tf.util.fetch` returns that function.\n *\n * If not, `tf.util.fetch` returns a platform-specific solution.\n *\n * ```js\n * const resource = await tf.util.fetch('https://unpkg.com/@tensorflow/tfjs');\n * // handle response\n * ```\n */\n/** @doc {heading: 'Util'} */\nexport function fetch(\n    path: string, requestInits?: RequestInit): Promise<Response> {\n  return ENV.platform.fetch(path, requestInits);\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendTimer} from './backends/backend';\nimport {Tensor} from './tensor';\nimport {TypedArray} from './types';\nimport * as util from './util';\n\nexport class Profiler {\n  constructor(private backendTimer: BackendTimer, private logger?: Logger) {\n    if (logger == null) {\n      this.logger = new Logger();\n    }\n  }\n\n  profileKernel<T extends Tensor|Tensor[]>(name: string, f: () => T | Tensor[]):\n      T {\n    let result: T|Tensor[];\n    const holdResultWrapperFn = () => {\n      result = f();\n    };\n    const timer = this.backendTimer.time(holdResultWrapperFn);\n\n    const results: Tensor[] =\n        Array.isArray(result) ? result : [result] as Tensor[];\n    results.forEach(r => {\n      const vals = r.dataSync();\n      util.checkComputationForErrors(vals, r.dtype, name);\n\n      timer.then(timing => {\n        let extraInfo = '';\n        if (timing.getExtraProfileInfo != null) {\n          extraInfo = timing.getExtraProfileInfo();\n        }\n\n        this.logger.logKernelProfile(name, r, vals, timing.kernelMs, extraInfo);\n      });\n    });\n\n    return result as T;\n  }\n}\n\nexport class Logger {\n  logKernelProfile(\n      name: string, result: Tensor, vals: TypedArray, timeMs: number,\n      extraInfo?: string) {\n    const time = util.rightPad(`${timeMs}ms`, 9);\n    const paddedName = util.rightPad(name, 25);\n    const rank = result.rank;\n    const size = result.size;\n    const shape = util.rightPad(result.shape.toString(), 14);\n\n    console.log(\n        `%c${paddedName}\\t%c${time}\\t%c${rank}D ${shape}\\t%c${size}\\t%c${\n            extraInfo}`,\n        'font-weight:bold', 'color:red', 'color:blue', 'color: orange',\n        'color: green');\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, TypedArray} from './types';\nimport {computeStrides, isString, rightPad, sizeFromShape} from './util';\n\n// Maximum number of values before we decide to show ellipsis.\nconst FORMAT_LIMIT_NUM_VALS = 20;\n// Number of first and last values to show when displaying a, b,...,y, z.\nconst FORMAT_NUM_FIRST_LAST_VALS = 3;\n// Number of significant digits to show.\nconst FORMAT_NUM_SIG_DIGITS = 7;\n\nexport function tensorToString(\n    vals: TypedArray|string[], shape: number[], dtype: DataType,\n    verbose: boolean) {\n  const strides = computeStrides(shape);\n  const padPerCol = computeMaxSizePerColumn(vals, shape, dtype, strides);\n  const rank = shape.length;\n  const valsLines = subTensorToString(vals, shape, dtype, strides, padPerCol);\n  const lines = ['Tensor'];\n  if (verbose) {\n    lines.push(`  dtype: ${dtype}`);\n    lines.push(`  rank: ${rank}`);\n    lines.push(`  shape: [${shape}]`);\n    lines.push(`  values:`);\n  }\n  lines.push(valsLines.map(l => '    ' + l).join('\\n'));\n  return lines.join('\\n');\n}\n\nfunction computeMaxSizePerColumn(\n    vals: TypedArray|string[], shape: number[], dtype: DataType,\n    strides: number[]): number[] {\n  const n = sizeFromShape(shape);\n  const numCols = strides[strides.length - 1];\n  const padPerCol = new Array(numCols).fill(0);\n  const rank = shape.length;\n  const valuesOrTuples =\n      dtype === 'complex64' ? createComplexTuples(vals) : vals;\n\n  if (rank > 1) {\n    for (let row = 0; row < n / numCols; row++) {\n      const offset = row * numCols;\n      for (let j = 0; j < numCols; j++) {\n        padPerCol[j] = Math.max(\n            padPerCol[j], valToString(valuesOrTuples[offset + j], 0,\n              dtype).length);\n      }\n    }\n  }\n  return padPerCol;\n}\n\nfunction valToString(val: number|string|[number, number], pad: number,\n    dtype: DataType) {\n  let valStr: string;\n  if (Array.isArray(val)) {\n    valStr = `${parseFloat(val[0].toFixed(FORMAT_NUM_SIG_DIGITS))} + ` +\n        `${parseFloat(val[1].toFixed(FORMAT_NUM_SIG_DIGITS))}j`;\n  } else if (isString(val)) {\n    valStr = `'${val}'`;\n  } else if (dtype === 'bool') {\n    valStr = boolNumToString(val);\n  } else {\n    valStr = parseFloat(val.toFixed(FORMAT_NUM_SIG_DIGITS)).toString();\n  }\n\n  return rightPad(valStr, pad);\n}\n\nfunction boolNumToString(v: number): string {\n  return v === 0 ? 'false' : 'true';\n}\n\nfunction subTensorToString(\n    vals: TypedArray|string[], shape: number[], dtype: DataType,\n    strides: number[], padPerCol: number[], isLast = true): string[] {\n  const storagePerElement = dtype === 'complex64' ? 2 : 1;\n\n  const size = shape[0];\n  const rank = shape.length;\n  if (rank === 0) {\n    if (dtype === 'complex64') {\n      const complexTuple = createComplexTuples(vals);\n      return [valToString(complexTuple[0], 0, dtype)];\n    }\n    if (dtype === 'bool') {\n      return [boolNumToString(vals[0] as number)];\n    }\n    return [vals[0].toString()];\n  }\n\n  if (rank === 1) {\n    if (size > FORMAT_LIMIT_NUM_VALS) {\n      const firstValsSize = FORMAT_NUM_FIRST_LAST_VALS * storagePerElement;\n\n      let firstVals = Array.from<number|string|[number, number]>(\n          vals.slice(0, firstValsSize));\n      let lastVals = Array.from<number|string|[number, number]>(vals.slice(\n          size - FORMAT_NUM_FIRST_LAST_VALS * storagePerElement, size));\n      if (dtype === 'complex64') {\n        firstVals = createComplexTuples(firstVals);\n        lastVals = createComplexTuples(lastVals);\n      }\n      return [\n        '[' + firstVals.map((x, i) => valToString(x, padPerCol[i],\n          dtype)).join(', ') +\n        ', ..., ' +\n        lastVals\n            .map(\n                (x, i) => valToString(\n                    x, padPerCol[size - FORMAT_NUM_FIRST_LAST_VALS + i], dtype))\n            .join(', ') +\n        ']'\n      ];\n    }\n    const displayVals: Array<number|string|[number, number]> =\n        dtype === 'complex64' ? createComplexTuples(vals) :\n                                Array.from<number|string>(vals);\n\n    return [\n      '[' + displayVals.map((x, i) => valToString(x, padPerCol[i],\n        dtype)).join(', ') +\n      ']'\n    ];\n  }\n\n  // The array is rank 2 or more.\n  const subshape = shape.slice(1);\n  const substrides = strides.slice(1);\n  const stride = strides[0] * storagePerElement;\n  const lines: string[] = [];\n  if (size > FORMAT_LIMIT_NUM_VALS) {\n    for (let i = 0; i < FORMAT_NUM_FIRST_LAST_VALS; i++) {\n      const start = i * stride;\n      const end = start + stride;\n      lines.push(...subTensorToString(\n          vals.slice(start, end), subshape, dtype, substrides, padPerCol,\n          false /* isLast */));\n    }\n    lines.push('...');\n    for (let i = size - FORMAT_NUM_FIRST_LAST_VALS; i < size; i++) {\n      const start = i * stride;\n      const end = start + stride;\n      lines.push(...subTensorToString(\n          vals.slice(start, end), subshape, dtype, substrides, padPerCol,\n          i === size - 1 /* isLast */));\n    }\n  } else {\n    for (let i = 0; i < size; i++) {\n      const start = i * stride;\n      const end = start + stride;\n      lines.push(...subTensorToString(\n          vals.slice(start, end), subshape, dtype, substrides, padPerCol,\n          i === size - 1 /* isLast */));\n    }\n  }\n  const sep = rank === 2 ? ',' : '';\n  lines[0] = '[' + lines[0] + sep;\n  for (let i = 1; i < lines.length - 1; i++) {\n    lines[i] = ' ' + lines[i] + sep;\n  }\n  let newLineSep = ',\\n';\n  for (let i = 2; i < rank; i++) {\n    newLineSep += '\\n';\n  }\n  lines[lines.length - 1] =\n      ' ' + lines[lines.length - 1] + ']' + (isLast ? '' : newLineSep);\n  return lines;\n}\n\nfunction createComplexTuples(vals: Array<{}>|\n                             TypedArray): Array<[number, number]> {\n  const complexTuples: Array<[number, number]> = [];\n  for (let i = 0; i < vals.length; i += 2) {\n    complexTuples.push([vals[i], vals[i + 1]] as [number, number]);\n  }\n  return complexTuples;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {tensorToString} from './tensor_format';\nimport {ArrayMap, DataType, DataTypeMap, DataValues, NumericDataType, Rank, ShapeMap, SingleValueMap, TensorLike, TensorLike1D, TensorLike3D, TensorLike4D} from './types';\nimport * as util from './util';\nimport {computeStrides, toNestedArray} from './util';\n\nexport interface TensorData<D extends DataType> {\n  dataId?: DataId;\n  values?: DataTypeMap[D];\n}\n\n// This interface mimics KernelBackend (in backend.ts), which would create a\n// circular dependency if imported.\nexport interface Backend {\n  read(dataId: object): Promise<DataValues>;\n  readSync(dataId: object): DataValues;\n  disposeData(dataId: object): void;\n  write(dataId: object, values: DataValues): void;\n}\n\n/**\n * A mutable object, similar to `tf.Tensor`, that allows users to set values\n * at locations before converting to an immutable `tf.Tensor`.\n *\n * See `tf.buffer` for creating a tensor buffer.\n */\n/** @doc {heading: 'Tensors', subheading: 'Classes'} */\nexport class TensorBuffer<R extends Rank, D extends DataType = 'float32'> {\n  size: number;\n  shape: ShapeMap[R];\n  strides: number[];\n  values: DataTypeMap[D];\n\n  constructor(shape: ShapeMap[R], public dtype: D, values?: DataTypeMap[D]) {\n    this.shape = shape.slice() as ShapeMap[R];\n    this.size = util.sizeFromShape(shape);\n\n    if (values != null) {\n      const n = values.length;\n      util.assert(\n          n === this.size,\n          () => `Length of values '${n}' does not match the size ` +\n              `inferred by the shape '${this.size}'.`);\n    }\n    if (dtype === 'complex64') {\n      throw new Error(\n          `complex64 dtype TensorBuffers are not supported. Please create ` +\n          `a TensorBuffer for the real and imaginary parts separately and ` +\n          `call tf.complex(real, imag).`);\n    }\n    this.values = values || util.getArrayFromDType(dtype, this.size);\n    this.strides = computeStrides(shape);\n  }\n\n  /**\n   * Sets a value in the buffer at a given location.\n   *\n   * @param value The value to set.\n   * @param locs  The location indices.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Creation'} */\n  set(value: SingleValueMap[D], ...locs: number[]): void {\n    if (locs.length === 0) {\n      locs = [0];\n    }\n    util.assert(\n        locs.length === this.rank,\n        () => `The number of provided coordinates (${locs.length}) must ` +\n            `match the rank (${this.rank})`);\n\n    const index = this.locToIndex(locs);\n    this.values[index] = value as number;\n  }\n\n  /**\n   * Returns the value in the buffer at the provided location.\n   *\n   * @param locs The location indices.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Creation'} */\n  get(...locs: number[]): SingleValueMap[D] {\n    if (locs.length === 0) {\n      locs = [0];\n    }\n    let i = 0;\n    for (const loc of locs) {\n      if (loc < 0 || loc >= this.shape[i]) {\n        const msg = `Requested out of range element at ${locs}. ` +\n            `  Buffer shape=${this.shape}`;\n        throw new Error(msg);\n      }\n      i++;\n    }\n    let index = locs[locs.length - 1];\n    for (let i = 0; i < locs.length - 1; ++i) {\n      index += this.strides[i] * locs[i];\n    }\n    return this.values[index] as SingleValueMap[D];\n  }\n\n  locToIndex(locs: number[]): number {\n    if (this.rank === 0) {\n      return 0;\n    } else if (this.rank === 1) {\n      return locs[0];\n    }\n    let index = locs[locs.length - 1];\n    for (let i = 0; i < locs.length - 1; ++i) {\n      index += this.strides[i] * locs[i];\n    }\n    return index;\n  }\n\n  indexToLoc(index: number): number[] {\n    if (this.rank === 0) {\n      return [];\n    } else if (this.rank === 1) {\n      return [index];\n    }\n    const locs: number[] = new Array(this.shape.length);\n    for (let i = 0; i < locs.length - 1; ++i) {\n      locs[i] = Math.floor(index / this.strides[i]);\n      index -= locs[i] * this.strides[i];\n    }\n    locs[locs.length - 1] = index;\n    return locs;\n  }\n\n  get rank() {\n    return this.shape.length;\n  }\n\n  /**\n   * Creates an immutable `tf.Tensor` object from the buffer.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Creation'} */\n  toTensor(): Tensor<R> {\n    return Tensor.make(this.shape, {values: this.values}, this.dtype);\n  }\n}\n\nexport interface TensorTracker {\n  registerTensor(t: Tensor, backend?: Backend): void;\n  disposeTensor(t: Tensor): void;\n  disposeVariable(v: Variable): void;\n  write(backend: Backend, dataId: DataId, values: DataValues): void;\n  read(dataId: DataId): Promise<DataValues>;\n  readSync(dataId: DataId): DataValues;\n  registerVariable(v: Variable): void;\n  nextTensorId(): number;\n  nextVariableId(): number;\n}\n\n/**\n * The Tensor class calls into this handler to delegate chaining operations.\n */\nexport interface OpHandler {\n  cast<T extends Tensor>(x: T, dtype: DataType): T;\n  buffer<R extends Rank, D extends DataType>(\n      shape: ShapeMap[R], dtype: D,\n      values?: DataTypeMap[D]): TensorBuffer<R, D>;\n  print<T extends Tensor>(x: T, verbose: boolean): void;\n  reshape<R2 extends Rank>(x: Tensor, shape: ShapeMap[R2]): Tensor<R2>;\n  expandDims<R2 extends Rank>(x: Tensor, axis: number): Tensor<R2>;\n  cumsum<T extends Tensor>(\n      x: Tensor, axis: number, exclusive: boolean, reverse: boolean): T;\n  squeeze<T extends Tensor>(x: Tensor, axis?: number[]): T;\n  clone<T extends Tensor>(x: T): T;\n  oneHot(\n      x: Tensor|TensorLike, depth: number, onValue?: number,\n      offValue?: number): Tensor;\n  tile<T extends Tensor>(x: T, reps: number[]): T;\n  gather<T extends Tensor>(x: T, indices: Tensor|TensorLike, axis: number): T;\n  matMul<T extends Tensor>(\n      a: T, b: T|TensorLike, transposeA: boolean, transposeB: boolean): T;\n  dot(t1: Tensor, t2: Tensor|TensorLike): Tensor;\n  norm(\n      x: Tensor, ord: number|'euclidean'|'fro', axis: number|number[],\n      keepDims: boolean): Tensor;\n  slice<R extends Rank, T extends Tensor<R>>(\n      x: T, begin: number|number[], size?: number|number[]): T;\n  split<T extends Tensor>(\n      x: T, numOrSizeSplits: number[]|number, axis?: number): T[];\n  reverse<T extends Tensor>(x: T, axis?: number|number[]): T;\n  concat<T extends Tensor>(tensors: Array<T|TensorLike>, axis: number): T;\n  stack<T extends Tensor>(tensors: Array<T|TensorLike>, axis: number): Tensor;\n  unstack<T extends Tensor>(value: T, axis: number): Tensor[];\n  pad<T extends Tensor>(\n      x: T, paddings: Array<[number, number]>, constantValue: number): T;\n  batchNorm<R extends Rank>(\n      x: Tensor<R>, mean: Tensor<R>|Tensor1D|TensorLike,\n      variance: Tensor<R>|Tensor1D|TensorLike,\n      offset?: Tensor<R>|Tensor1D|TensorLike,\n      scale?: Tensor<R>|Tensor1D|TensorLike,\n      varianceEpsilon?: number): Tensor<R>;\n  all<T extends Tensor>(x: Tensor, axis: number|number[], keepDims: boolean): T;\n  any<T extends Tensor>(x: Tensor, axis: number|number[], keepDims: boolean): T;\n  logSumExp<T extends Tensor>(\n      x: Tensor, axis: number|number[], keepDims: boolean): T;\n  sum<T extends Tensor>(x: Tensor, axis: number|number[], keepDims: boolean): T;\n  prod<T extends Tensor>(x: Tensor, axis: number|number[], keepDims: boolean):\n      T;\n  mean<T extends Tensor>(x: Tensor, axis: number|number[], keepDims: boolean):\n      T;\n  min<T extends Tensor>(x: Tensor, axis: number|number[], keepDims: boolean): T;\n  max<T extends Tensor>(x: Tensor, axis: number|number[], keepDims: boolean): T;\n  argMin<T extends Tensor>(x: Tensor, axis: number): T;\n  argMax<T extends Tensor>(x: Tensor, axis: number): T;\n  add<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  addStrict<T extends Tensor>(a: T, b: T|TensorLike): T;\n  atan2<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  sub<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  subStrict<T extends Tensor>(a: T, b: T|TensorLike): T;\n  pow<T extends Tensor>(base: T, exp: Tensor|TensorLike): T;\n  powStrict<T extends Tensor>(base: T, exp: Tensor|TensorLike): T;\n  mul<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  mulStrict<T extends Tensor>(a: T, b: T|TensorLike): T;\n  div<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  floorDiv<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  divStrict<T extends Tensor>(a: T, b: T|TensorLike): T;\n  mod<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  modStrict<T extends Tensor>(a: T, b: T|TensorLike): T;\n  minimum<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  minimumStrict<T extends Tensor>(a: T, b: T|TensorLike): T;\n  maximum<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  maximumStrict<T extends Tensor>(a: T, b: T|TensorLike): T;\n  squaredDifference<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  squaredDifferenceStrict<T extends Tensor>(a: T, b: T|TensorLike): T;\n  transpose<T extends Tensor>(x: T, perm?: number[]): T;\n  logicalNot<T extends Tensor>(x: T): T;\n  logicalAnd<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  logicalOr<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  logicalXor<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  where<T extends Tensor>(condition: Tensor|TensorLike, a: T, b: T|TensorLike):\n      T;\n  notEqual<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  notEqualStrict<T extends Tensor>(a: T, b: T|TensorLike): T;\n  less<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  lessStrict<T extends Tensor>(a: T, b: T|TensorLike): T;\n  equal<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  equalStrict<T extends Tensor>(a: T, b: T|TensorLike): T;\n  lessEqual<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  lessEqualStrict<T extends Tensor>(a: T, b: T|TensorLike): T;\n  greater<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  greaterStrict<T extends Tensor>(a: T, b: T|TensorLike): T;\n  greaterEqual<T extends Tensor>(a: Tensor, b: Tensor|TensorLike): T;\n  greaterEqualStrict<T extends Tensor>(a: T, b: T|TensorLike): T;\n  neg<T extends Tensor>(x: T): T;\n  ceil<T extends Tensor>(x: T): T;\n  floor<T extends Tensor>(x: T): T;\n  sign<T extends Tensor>(x: T): T;\n  isNaN<T extends Tensor>(x: T): T;\n  isInf<T extends Tensor>(x: T): T;\n  isFinite<T extends Tensor>(x: T): T;\n  round<T extends Tensor>(x: T): T;\n  exp<T extends Tensor>(x: T): T;\n  expm1<T extends Tensor>(x: T): T;\n  log<T extends Tensor>(x: T): T;\n  log1p<T extends Tensor>(x: T): T;\n  sqrt<T extends Tensor>(x: T): T;\n  rsqrt<T extends Tensor>(x: T): T;\n  square<T extends Tensor>(x: T): T;\n  reciprocal<T extends Tensor>(x: T): T;\n  abs<T extends Tensor>(x: T): T;\n  clipByValue<T extends Tensor>(\n      x: T, clipValueMin: number, clipValueMax: number): T;\n  sigmoid<T extends Tensor>(x: T): T;\n  logSigmoid<T extends Tensor>(x: T): T;\n  softplus<T extends Tensor>(x: T): T;\n  zerosLike<T extends Tensor>(x: T): T;\n  onesLike<T extends Tensor>(x: T): T;\n  sin<T extends Tensor>(x: T): T;\n  cos<T extends Tensor>(x: T): T;\n  tan<T extends Tensor>(x: T): T;\n  asin<T extends Tensor>(x: T): T;\n  acos<T extends Tensor>(x: T): T;\n  atan<T extends Tensor>(x: T): T;\n  sinh<T extends Tensor>(x: T): T;\n  cosh<T extends Tensor>(x: T): T;\n  tanh<T extends Tensor>(x: T): T;\n  asinh<T extends Tensor>(x: T): T;\n  acosh<T extends Tensor>(x: T): T;\n  atanh<T extends Tensor>(x: T): T;\n  erf<T extends Tensor>(x: T): T;\n  step<T extends Tensor>(x: T, alpha: number): T;\n  relu<T extends Tensor>(x: T): T;\n  elu<T extends Tensor>(x: T): T;\n  selu<T extends Tensor>(x: T): T;\n  leakyRelu<T extends Tensor>(x: T, alpha: number): T;\n  prelu<T extends Tensor>(x: T, alpha: T|TensorLike): T;\n  softmax<T extends Tensor>(logits: T, dim: number): T;\n  logSoftmax<T extends Tensor>(logits: T, axis: number): T;\n  image: {\n    resizeBilinear<T extends Tensor3D|Tensor4D>(\n        images: T, size: [number, number], alignCorners: boolean): T;\n    resizeNearestNeighbor<T extends Tensor3D|Tensor4D>(\n        images: T, size: [number, number], alignCorners: boolean): T;\n  };\n  conv1d<T extends Tensor2D|Tensor3D>(\n      x: T, filter: Tensor3D|TensorLike3D, stride: number,\n      pad: 'valid'|'same'|number, dataFormat: 'NWC'|'NCW', dilation: number,\n      dimRoundingMode?: 'floor'|'round'|'ceil'): T;\n  conv2d<T extends Tensor3D|Tensor4D>(\n      x: T, filter: Tensor4D|TensorLike4D, strides: [number, number]|number,\n      pad: 'valid'|'same'|number, dataFormat: 'NHWC'|'NCHW',\n      dilations: [number, number]|number,\n      dimRoundingMode?: 'floor'|'round'|'ceil'): T;\n  conv2dTranspose<T extends Tensor3D|Tensor4D>(\n      x: T, filter: Tensor4D|TensorLike4D,\n      outputShape: [number, number, number, number]|[number, number, number],\n      strides: [number, number]|number, pad: 'valid'|'same'|number,\n      dimRoundingMode?: 'floor'|'round'|'ceil'): T;\n  depthwiseConv2d<T extends Tensor3D|Tensor4D>(\n      x: T, filter: Tensor4D|TensorLike4D, strides: [number, number]|number,\n      pad: 'valid'|'same'|number, dataFormat: 'NHWC'|'NCHW',\n      dilations: [number, number]|number,\n      dimRoundingMode?: 'floor'|'round'|'ceil'): T;\n  separableConv2d<T extends Tensor3D|Tensor4D>(\n      x: T|TensorLike, depthwiseFilter: Tensor4D|TensorLike4D,\n      pointwiseFilter: Tensor4D|TensorLike, strides: [number, number]|number,\n      pad: 'valid'|'same', dilation: [number, number]|number,\n      dataFormat: 'NHWC'|'NCHW'): T;\n  maxPool<T extends Tensor3D|Tensor4D>(\n      x: T, filterSize: [number, number]|number,\n      strides: [number, number]|number, pad: 'valid'|'same'|number,\n      dimRoundingMode?: 'floor'|'round'|'ceil'): T;\n  avgPool<T extends Tensor3D|Tensor4D>(\n      x: T, filterSize: [number, number]|number,\n      strides: [number, number]|number, pad: 'valid'|'same'|number,\n      dimRoundingMode?: 'floor'|'round'|'ceil'): T;\n  pool<T extends Tensor3D|Tensor4D>(\n      input: T, windowShape: [number, number]|number, poolingType: 'avg'|'max',\n      padding: 'valid'|'same'|number, diationRate?: [number, number]|number,\n      strides?: [number, number]|number): T;\n  localResponseNormalization<T extends Tensor3D|Tensor4D>(\n      x: T, depthRadius: number, bias: number, alpha: number, beta: number): T;\n  unsortedSegmentSum<T extends Tensor>(\n      x: T, segmentIds: Tensor1D|TensorLike1D, numSegments: number): T;\n  batchToSpaceND<T extends Tensor>(\n      x: T, blockShape: number[], crops: number[][]): T;\n  spaceToBatchND<T extends Tensor>(\n      x: T, blockShape: number[], paddings: number[][]): T;\n  topk<T extends Tensor>(x: T, k: number, sorted: boolean):\n      {values: T, indices: T};\n  stridedSlice(\n      x: Tensor, begin: number[], end: number[], strides: number[],\n      beginMask: number, endMask: number, ellipsisMask: number,\n      newAxisMask: number, shrinkAxisMask: number): Tensor;\n  depthToSpace(x: Tensor4D, blockSize: number, dataFormat: string): Tensor4D;\n  spectral: {\n    fft(x: Tensor): Tensor; ifft(x: Tensor): Tensor; rfft(x: Tensor): Tensor;\n    irfft(x: Tensor): Tensor\n  };\n}\n\n// For tracking tensor creation and disposal.\nlet trackerFn: () => TensorTracker = null;\n// Used by chaining methods to call into ops.\nlet opHandler: OpHandler = null;\n// Used to warn about deprecated methods.\nlet deprecationWarningFn: (msg: string) => void = null;\n// This here so that we can use this method on dev branches and keep the\n// functionality at master.\n// tslint:disable-next-line:no-unused-expression\n[deprecationWarningFn];\n\n/**\n * An external consumer can register itself as the tensor tracker. This way\n * the Tensor class can notify the tracker for every tensor created and\n * disposed.\n */\nexport function setTensorTracker(fn: () => TensorTracker) {\n  trackerFn = fn;\n}\n\n/**\n * An external consumer can register itself as the op handler. This way the\n * Tensor class can have chaining methods that call into ops via the op handler.\n */\nexport function setOpHandler(handler: OpHandler) {\n  opHandler = handler;\n}\n\n/**\n * Sets the deprecation warning function to be used by this file. This way the\n * Tensor class can be a leaf but still use the environment.\n */\nexport function setDeprecationWarningFn(fn: (msg: string) => void) {\n  deprecationWarningFn = fn;\n}\n\n/**\n * We wrap data id since we use weak map to avoid memory leaks.\n * Since we have our own memory management, we have a reference counter\n * mapping a tensor to its data, so there is always a pointer (even if that\n * data is otherwise garbage collectable).\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/\n * Global_Objects/WeakMap\n */\nexport type DataId = object;  // object instead of {} to force non-primitive.\n\n/**\n * A `tf.Tensor` object represents an immutable, multidimensional array of\n * numbers that has a shape and a data type.\n *\n * See `tf.tensor` for details on how to create a `tf.Tensor`.\n */\n/** @doc {heading: 'Tensors', subheading: 'Classes'} */\nexport class Tensor<R extends Rank = Rank> {\n  /** Unique id of this tensor. */\n  readonly id: number;\n  /**\n   * Id of the bucket holding the data for this tensor. Multiple arrays can\n   * point to the same bucket (e.g. when calling array.reshape()).\n   */\n  dataId: DataId;\n  /** The shape of the tensor. */\n  readonly shape: ShapeMap[R];\n  /** Number of elements in the tensor. */\n  readonly size: number;\n  /** The data type for the array. */\n  readonly dtype: DataType;\n  /** The rank type for the array (see `Rank` enum). */\n  readonly rankType: R;\n\n  /** Whether this tensor has been globally kept. */\n  kept = false;\n  /** The id of the scope this tensor is being tracked in. */\n  scopeId: number;\n\n  /**\n   * Number of elements to skip in each dimension when indexing. See\n   * https://docs.scipy.org/doc/numpy/reference/generated/\\\n   * numpy.ndarray.strides.html\n   */\n  readonly strides: number[];\n\n  protected constructor(\n      shape: ShapeMap[R], dtype: DataType, values?: DataValues, dataId?: DataId,\n      backend?: Backend) {\n    this.shape = shape.slice() as ShapeMap[R];\n    this.dtype = dtype || 'float32';\n    this.size = util.sizeFromShape(shape);\n    this.strides = computeStrides(shape);\n    this.dataId = dataId != null ? dataId : {};\n    this.id = trackerFn().nextTensorId();\n    this.rankType = (this.rank < 5 ? this.rank.toString() : 'higher') as R;\n    trackerFn().registerTensor(this, backend);\n    if (values != null) {\n      trackerFn().write(backend, this.dataId, values);\n    }\n  }\n\n  /**\n   * Makes a new tensor with the provided shape and values. Values should be in\n   * a flat array.\n   */\n  static make<T extends Tensor<R>, D extends DataType = 'float32',\n                                             R extends Rank = Rank>(\n      shape: ShapeMap[R], data: TensorData<D>, dtype?: D,\n      backend?: Backend): T {\n    return new Tensor(shape, dtype, data.values, data.dataId, backend) as T;\n  }\n\n  /** Flatten a Tensor to a 1D array. */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  flatten(): Tensor1D {\n    this.throwIfDisposed();\n    return this.as1D();\n  }\n\n  /** Converts a size-1 `tf.Tensor` to a `tf.Scalar`. */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  asScalar(): Scalar {\n    this.throwIfDisposed();\n    util.assert(this.size === 1, () => 'The array must have only 1 element.');\n    return this.reshape<Rank.R0>([]);\n  }\n\n  /** Converts a `tf.Tensor` to a `tf.Tensor1D`. */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  as1D(): Tensor1D {\n    this.throwIfDisposed();\n    return this.reshape<Rank.R1>([this.size]);\n  }\n\n  /**\n   * Converts a `tf.Tensor` to a `tf.Tensor2D`.\n   *\n   * @param rows Number of rows in `tf.Tensor2D`.\n   * @param columns Number of columns in `tf.Tensor2D`.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  as2D(rows: number, columns: number): Tensor2D {\n    this.throwIfDisposed();\n    return this.reshape<Rank.R2>([rows, columns]);\n  }\n\n  /**\n   * Converts a `tf.Tensor` to a `tf.Tensor3D`.\n   *\n   * @param rows Number of rows in `tf.Tensor3D`.\n   * @param columns Number of columns in `tf.Tensor3D`.\n   * @param depth Depth of `tf.Tensor3D`.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  as3D(rows: number, columns: number, depth: number): Tensor3D {\n    this.throwIfDisposed();\n    return this.reshape<Rank.R3>([rows, columns, depth]);\n  }\n\n  /**\n   * Converts a `tf.Tensor` to a `tf.Tensor4D`.\n   *\n   * @param rows Number of rows in `tf.Tensor4D`.\n   * @param columns Number of columns in `tf.Tensor4D`.\n   * @param depth Depth of `tf.Tensor4D`.\n   * @param depth2 4th dimension of `tf.Tensor4D`.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  as4D(rows: number, columns: number, depth: number, depth2: number): Tensor4D {\n    this.throwIfDisposed();\n    return this.reshape<Rank.R4>([rows, columns, depth, depth2]);\n  }\n\n  /**\n   * Converts a `tf.Tensor` to a `tf.Tensor5D`.\n   *\n   * @param rows Number of rows in `tf.Tensor5D`.\n   * @param columns Number of columns in `tf.Tensor5D`.\n   * @param depth Depth of `tf.Tensor5D`.\n   * @param depth2 4th dimension of `tf.Tensor5D`.\n   * @param depth3 5th dimension of 'tf.Tensor5D'\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  as5D(\n      rows: number, columns: number, depth: number, depth2: number,\n      depth3: number): Tensor5D {\n    this.throwIfDisposed();\n    return this.reshape<Rank.R5>([rows, columns, depth, depth2, depth3]);\n  }\n\n  /**\n   * Casts a `tf.Tensor` to a specified dtype.\n   *\n   * @param dtype Data-type to cast the tensor to.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  asType<T extends this>(this: T, dtype: DataType): T {\n    this.throwIfDisposed();\n    return opHandler.cast(this, dtype) as T;\n  }\n\n  get rank(): number {\n    return this.shape.length;\n  }\n\n  /** Returns a promise of `tf.TensorBuffer` that holds the underlying data. */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  async buffer<D extends DataType = 'float32'>(): Promise<TensorBuffer<R, D>> {\n    const vals = await this.data<D>();\n    return opHandler.buffer(this.shape, this.dtype as D, vals);\n  }\n\n  /** Returns a `tf.TensorBuffer` that holds the underlying data. */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  bufferSync<D extends DataType = 'float32'>(): TensorBuffer<R, D> {\n    return opHandler.buffer(this.shape, this.dtype as D, this.dataSync());\n  }\n\n  /**\n   * Returns the tensor data as a nested array. The transfer of data is done\n   * asynchronously.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  async array(): Promise<ArrayMap[R]> {\n    const vals = await this.data();\n    return toNestedArray(this.shape, vals) as ArrayMap[R];\n  }\n\n  /**\n   * Returns the tensor data as a nested array. The transfer of data is done\n   * synchronously.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  arraySync(): ArrayMap[R] {\n    return toNestedArray(this.shape, this.dataSync()) as ArrayMap[R];\n  }\n\n  /**\n   * Asynchronously downloads the values from the `tf.Tensor`. Returns a promise\n   * of `TypedArray` that resolves when the computation has finished.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  async data<D extends DataType = NumericDataType>(): Promise<DataTypeMap[D]> {\n    this.throwIfDisposed();\n    return trackerFn().read(this.dataId) as Promise<DataTypeMap[D]>;\n  }\n\n  /**\n   * Synchronously downloads the values from the `tf.Tensor`. This blocks the UI\n   * thread until the values are ready, which can cause performance issues.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  dataSync<D extends DataType = NumericDataType>(): DataTypeMap[D] {\n    this.throwIfDisposed();\n    return trackerFn().readSync(this.dataId) as DataTypeMap[D];\n  }\n\n  /**\n   * Disposes `tf.Tensor` from memory.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    trackerFn().disposeTensor(this);\n    this.isDisposedInternal = true;\n  }\n\n  protected isDisposedInternal = false;\n  get isDisposed(): boolean {\n    return this.isDisposedInternal;\n  }\n\n  private throwIfDisposed() {\n    if (this.isDisposed) {\n      throw new Error(`Tensor is disposed.`);\n    }\n  }\n\n  /** Casts the array to type `float32` */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  toFloat<T extends this>(this: T): T {\n    return this.asType('float32');\n  }\n\n  /** Casts the array to type `int32` */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  toInt() {\n    return this.asType('int32');\n  }\n\n  /** Casts the array to type `bool` */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  toBool() {\n    return this.asType('bool');\n  }\n\n  /**\n   * Prints the `tf.Tensor`. See `tf.print` for details.\n   *\n   * @param verbose Whether to print verbose information about the tensor,\n   *    including dtype and size.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  print(verbose = false): void {\n    return opHandler.print(this, verbose);\n  }\n\n  /**\n   * Reshapes the tensor into the provided shape.\n   * See `tf.reshape` for more details.\n   *\n   * @param newShape An array of integers defining the output tensor shape.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  reshape<R2 extends Rank>(newShape: ShapeMap[R2]): Tensor<R2> {\n    this.throwIfDisposed();\n    return opHandler.reshape(this, newShape);\n  }\n\n  /**\n   * Reshapes the tensor into the shape of the provided tensor.\n   *\n   * @param x The tensor of required shape.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  reshapeAs<T extends Tensor>(x: T): T {\n    this.throwIfDisposed();\n    return this.reshape(x.shape) as T;\n  }\n\n  /**\n   * Returns a `tf.Tensor` that has expanded rank, by inserting a dimension\n   * into the tensor's shape. See `tf.expandDims` for details.\n   *\n   * @param axis The dimension index at which to insert shape of 1. Defaults to\n   *    0 (the first dimension).\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  expandDims<R2 extends Rank>(axis = 0): Tensor<R2> {\n    return opHandler.expandDims(this, axis);\n  }\n\n  /**\n   * Returns the cumulative sum of the `tf.Tensor` along `axis`.\n   *\n   * @param axis The axis along which to sum. Optional. Defaults to 0.\n   * @param exclusive Whether to perform exclusive cumulative sum. Defaults to\n   *    false. If set to true then the sum of each tensor entry does not include\n   *    its own value, but only the values previous to it along the specified\n   *    axis.\n   * @param reverse Whether to sum in the opposite direction. Defaults to\n   *    false.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  cumsum<T extends Tensor>(axis = 0, exclusive = false, reverse = false): T {\n    return opHandler.cumsum(this, axis, exclusive, reverse);\n  }\n\n  /**\n   * Returns a `tf.Tensor` with dimensions of size 1 removed from the shape.\n   * See `tf.squeeze` for more details.\n   *\n   * @param axis A list of numbers. If specified, only squeezes the\n   *    dimensions listed. The dimension index starts at 0. It is an error to\n   *    squeeze a dimension that is not 1.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  squeeze<T extends Tensor>(axis?: number[]): T {\n    this.throwIfDisposed();\n    return opHandler.squeeze(this, axis);\n  }\n\n  /** Returns a copy of the tensor. See `tf.clone` for details. */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  clone<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.clone(this);\n  }\n\n  oneHot(this: Tensor, depth: number, onValue?: number, offValue?: number):\n      Tensor {\n    this.throwIfDisposed();\n    return opHandler.oneHot(this, depth, onValue, offValue);\n  }\n\n  /** Returns a human-readable description of the tensor. Useful for logging. */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  toString(verbose = false): string {\n    const vals = this.dataSync();\n    return tensorToString(vals, this.shape, this.dtype, verbose);\n  }\n\n  // Below is chain API that is not exposed to docs to avoid repetition. To\n  // expose a method, move it above this comment and add @doc and jsdoc.\n\n  tile<T extends this>(this: T, reps: number[]): T {\n    this.throwIfDisposed();\n    return opHandler.tile(this, reps) as T;\n  }\n\n  gather<T extends this>(this: T, indices: Tensor|TensorLike, axis = 0): T {\n    this.throwIfDisposed();\n    return opHandler.gather(this, indices, axis) as T;\n  }\n\n  matMul<T extends Tensor>(\n      this: T, b: T|TensorLike, transposeA = false, transposeB = false): T {\n    this.throwIfDisposed();\n    return opHandler.matMul(this, b, transposeA, transposeB);\n  }\n  dot(b: Tensor|TensorLike): Tensor {\n    this.throwIfDisposed();\n    return opHandler.dot(this, b);\n  }\n  norm(\n      ord: number|'euclidean'|'fro' = 'euclidean', axis: number|number[] = null,\n      keepDims = false): Tensor {\n    this.throwIfDisposed();\n    return opHandler.norm(this, ord, axis, keepDims);\n  }\n  slice<T extends Tensor<R>>(\n      this: T, begin: number|number[], size?: number|number[]): T {\n    this.throwIfDisposed();\n    return opHandler.slice(this, begin, size);\n  }\n  reverse<T extends Tensor>(this: T, axis?: number|number[]): T {\n    this.throwIfDisposed();\n    return opHandler.reverse(this, axis);\n  }\n  concat<T extends Tensor>(this: T, x: T|Array<T|TensorLike>, axis = 0): T {\n    this.throwIfDisposed();\n    if (x instanceof Tensor) {\n      x = [x];\n    }\n    return opHandler.concat([this, ...x], axis);\n  }\n  split<T extends Tensor>(this: T, numOrSizeSplits: number[]|number, axis = 0):\n      T[] {\n    this.throwIfDisposed();\n    return opHandler.split(this, numOrSizeSplits, axis);\n  }\n  stack(x: Tensor, axis = 0): Tensor {\n    return opHandler.stack([this, x], axis);\n  }\n  unstack(axis = 0): Tensor[] {\n    return opHandler.unstack(this, axis);\n  }\n  pad<T extends Tensor>(\n      this: T, paddings: Array<[number, number]>, constantValue = 0): T {\n    return opHandler.pad(this, paddings, constantValue);\n  }\n  /**\n   * @deprecated Use `tf.batchNorm` instead, and note the positional argument\n   *     change of scale, offset, and varianceEpsilon.\n   */\n  batchNormalization(\n      mean: Tensor<R>|Tensor1D|TensorLike,\n      variance: Tensor<R>|Tensor1D|TensorLike, varianceEpsilon = .001,\n      scale?: Tensor<R>|Tensor1D|TensorLike,\n      offset?: Tensor<R>|Tensor1D|TensorLike): Tensor<R> {\n    deprecationWarningFn(\n        'tf.batchNormalization() is going away. ' +\n        'Use tf.batchNorm() instead, and note the positional argument change ' +\n        'of scale, offset, and varianceEpsilon');\n    return this.batchNorm(mean, variance, offset, scale, varianceEpsilon);\n  }\n\n  batchNorm(\n      mean: Tensor<R>|Tensor1D|TensorLike,\n      variance: Tensor<R>|Tensor1D|TensorLike,\n      offset?: Tensor<R>|Tensor1D|TensorLike,\n      scale?: Tensor<R>|Tensor1D|TensorLike,\n      varianceEpsilon = .001,\n      ): Tensor<R> {\n    this.throwIfDisposed();\n    return opHandler.batchNorm(\n        this, mean, variance, offset, scale, varianceEpsilon);\n  }\n  // Reduction ops.\n  all<T extends Tensor>(axis: number|number[] = null, keepDims = false): T {\n    this.throwIfDisposed();\n    return opHandler.all(this, axis, keepDims);\n  }\n  any<T extends Tensor>(axis: number|number[] = null, keepDims = false): T {\n    this.throwIfDisposed();\n    return opHandler.any(this, axis, keepDims);\n  }\n  logSumExp<T extends Tensor>(axis: number|number[] = null, keepDims = false):\n      T {\n    this.throwIfDisposed();\n    return opHandler.logSumExp(this, axis, keepDims);\n  }\n  sum<T extends Tensor>(axis: number|number[] = null, keepDims = false): T {\n    this.throwIfDisposed();\n    return opHandler.sum(this, axis, keepDims);\n  }\n  prod<T extends Tensor>(axis: number|number[] = null, keepDims = false): T {\n    this.throwIfDisposed();\n    return opHandler.prod(this, axis, keepDims);\n  }\n  mean<T extends Tensor>(axis: number|number[] = null, keepDims = false): T {\n    this.throwIfDisposed();\n    return opHandler.mean(this, axis, keepDims);\n  }\n  min<T extends Tensor>(axis: number|number[] = null, keepDims = false): T {\n    this.throwIfDisposed();\n    return opHandler.min(this, axis, keepDims);\n  }\n  max<T extends Tensor>(axis: number|number[] = null, keepDims = false): T {\n    this.throwIfDisposed();\n    return opHandler.max(this, axis, keepDims);\n  }\n  argMin<T extends Tensor>(axis: number = null): T {\n    this.throwIfDisposed();\n    return opHandler.argMin(this, axis);\n  }\n  argMax<T extends Tensor>(axis: number = null): T {\n    this.throwIfDisposed();\n    return opHandler.argMax(this, axis);\n  }\n\n  // Transformations\n  cast<T extends this>(dtype: DataType): T {\n    this.throwIfDisposed();\n    return opHandler.cast(this as T, dtype) as T;\n  }\n\n  // Binary ops.\n\n  add<T extends Tensor>(x: Tensor|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.add(this, x);\n  }\n  addStrict<T extends this>(this: T, x: T|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.addStrict(this, x) as T;\n  }\n  atan2<T extends this>(this: T, x: T|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.atan2(this, x) as T;\n  }\n  sub<T extends Tensor>(x: Tensor|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.sub(this, x);\n  }\n  subStrict<T extends this>(this: T, x: T|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.subStrict(this, x) as T;\n  }\n  pow<T extends Tensor>(this: T, exp: Tensor|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.pow(this, exp);\n  }\n  powStrict(exp: Tensor|TensorLike): Tensor<R> {\n    this.throwIfDisposed();\n    return opHandler.powStrict(this, exp);\n  }\n  mul<T extends Tensor>(x: Tensor|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.mul(this, x);\n  }\n  mulStrict<T extends this>(this: T, x: T|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.mulStrict(this, x) as T;\n  }\n  div<T extends Tensor>(x: Tensor|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.div(this, x);\n  }\n  floorDiv<T extends Tensor>(x: Tensor|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.floorDiv(this, x);\n  }\n  divStrict<T extends this>(this: T, x: T|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.divStrict(this, x) as T;\n  }\n  minimum<T extends Tensor>(x: Tensor|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.minimum(this, x);\n  }\n  minimumStrict<T extends this>(this: T, x: T|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.minimumStrict(this, x) as T;\n  }\n  maximum<T extends Tensor>(x: Tensor|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.maximum(this, x);\n  }\n  maximumStrict<T extends this>(this: T, x: T|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.maximumStrict(this, x) as T;\n  }\n  mod<T extends Tensor>(x: Tensor|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.mod(this, x);\n  }\n  modStrict<T extends this>(this: T, x: T|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.modStrict(this, x) as T;\n  }\n  squaredDifference<T extends Tensor>(x: Tensor|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.squaredDifference(this, x);\n  }\n  squaredDifferenceStrict<T extends this>(this: T, x: T|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.squaredDifferenceStrict(this, x) as T;\n  }\n  transpose<T extends Tensor>(this: T, perm?: number[]): T {\n    this.throwIfDisposed();\n    return opHandler.transpose(this, perm);\n  }\n\n  // Compare ops.\n\n  notEqual<T extends Tensor>(x: Tensor|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.notEqual(this, x);\n  }\n  notEqualStrict<T extends this>(this: T, x: T|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.notEqualStrict(this, x) as T;\n  }\n  less<T extends Tensor>(x: Tensor|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.less(this, x);\n  }\n  lessStrict<T extends this>(this: T, x: T|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.lessStrict(this, x) as T;\n  }\n  equal<T extends Tensor>(x: Tensor|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.equal(this, x);\n  }\n  equalStrict<T extends this>(this: T, x: T|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.equalStrict(this, x) as T;\n  }\n  lessEqual<T extends Tensor>(x: Tensor|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.lessEqual(this, x);\n  }\n  lessEqualStrict<T extends this>(this: T, x: T|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.lessEqualStrict(this, x) as T;\n  }\n  greater<T extends Tensor>(x: Tensor|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.greater(this, x);\n  }\n  greaterStrict<T extends this>(this: T, x: T|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.greaterStrict(this, x) as T;\n  }\n  greaterEqual<T extends Tensor>(x: Tensor|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.greaterEqual(this, x);\n  }\n  greaterEqualStrict<T extends this>(this: T, x: T|TensorLike): T {\n    this.throwIfDisposed();\n    return opHandler.greaterEqualStrict(this, x) as T;\n  }\n\n  // Compare ops.\n  logicalAnd(x: Tensor|TensorLike): Tensor {\n    this.throwIfDisposed();\n    return opHandler.logicalAnd(this, x);\n  }\n  logicalOr(x: Tensor|TensorLike): Tensor {\n    this.throwIfDisposed();\n    return opHandler.logicalOr(this, x);\n  }\n  logicalNot<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.logicalNot(this);\n  }\n  logicalXor(x: Tensor|TensorLike): Tensor {\n    this.throwIfDisposed();\n    return opHandler.logicalXor(this, x);\n  }\n  where(condition: Tensor|TensorLike, x: Tensor|TensorLike): Tensor {\n    this.throwIfDisposed();\n    return opHandler.where(condition, this, x);\n  }\n\n  // Unary ops.\n  neg<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.neg(this);\n  }\n  ceil<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.ceil(this);\n  }\n  floor<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.floor(this);\n  }\n  sign<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.sign(this);\n  }\n  isNaN<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.isNaN(this);\n  }\n  isInf<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.isInf(this);\n  }\n  isFinite<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.isFinite(this);\n  }\n  exp<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.exp(this);\n  }\n  expm1<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.expm1(this);\n  }\n  log<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.log(this);\n  }\n  log1p<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.log1p(this);\n  }\n  sqrt<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.sqrt(this);\n  }\n  rsqrt<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.rsqrt(this);\n  }\n  square<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.square(this);\n  }\n  reciprocal<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.reciprocal(this);\n  }\n  abs<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.abs(this);\n  }\n  clipByValue(min: number, max: number): Tensor<R> {\n    this.throwIfDisposed();\n    return opHandler.clipByValue(this, min, max);\n  }\n  relu<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.relu(this);\n  }\n  elu<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.elu(this);\n  }\n  selu<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.selu(this);\n  }\n  leakyRelu(alpha = 0.2): Tensor<R> {\n    this.throwIfDisposed();\n    return opHandler.leakyRelu(this, alpha);\n  }\n  prelu(alpha: Tensor<R>|TensorLike): Tensor<R> {\n    this.throwIfDisposed();\n    return opHandler.prelu(this, alpha);\n  }\n  sigmoid<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.sigmoid(this);\n  }\n  logSigmoid<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.logSigmoid(this);\n  }\n  softplus<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.softplus(this);\n  }\n  zerosLike<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.zerosLike(this);\n  }\n  onesLike<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.onesLike(this);\n  }\n  sin<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.sin(this);\n  }\n  cos<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.cos(this);\n  }\n  tan<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.tan(this);\n  }\n  asin<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.asin(this);\n  }\n  acos<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.acos(this);\n  }\n  atan<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.atan(this);\n  }\n  sinh<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.sinh(this);\n  }\n  cosh<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.cosh(this);\n  }\n  tanh<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.tanh(this);\n  }\n  asinh<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.asinh(this);\n  }\n  acosh<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.acosh(this);\n  }\n  atanh<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.atanh(this);\n  }\n  erf<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.erf(this);\n  }\n  round<T extends Tensor>(this: T): T {\n    this.throwIfDisposed();\n    return opHandler.round(this);\n  }\n  step<T extends Tensor>(this: T, alpha = 0.0): T {\n    this.throwIfDisposed();\n    return opHandler.step(this, alpha);\n  }\n  softmax<T extends this>(this: T, dim = -1): T {\n    this.throwIfDisposed();\n    return opHandler.softmax(this, dim) as T;\n  }\n  logSoftmax<T extends this>(this: T, axis = -1): T {\n    this.throwIfDisposed();\n    return opHandler.logSoftmax(this, axis) as T;\n  }\n\n  // Image ops.\n  resizeBilinear<T extends Tensor3D|Tensor4D>(\n      this: T, newShape2D: [number, number], alignCorners = false): T {\n    (this as Tensor).throwIfDisposed();\n    return opHandler.image.resizeBilinear(this, newShape2D, alignCorners);\n  }\n\n  resizeNearestNeighbor<T extends Tensor3D|Tensor4D>(\n      this: T, newShape2D: [number, number], alignCorners = false): T {\n    (this as Tensor).throwIfDisposed();\n    return opHandler.image.resizeNearestNeighbor(\n        this, newShape2D, alignCorners);\n  }\n\n  // Convolutions.\n  conv1d<T extends Tensor2D|Tensor3D>(\n      this: T, filter: Tensor3D|TensorLike3D, stride: number,\n      pad: 'valid'|'same'|number, dataFormat: 'NWC'|'NCW' = 'NWC', dilation = 1,\n      dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n    (this as Tensor).throwIfDisposed();\n    return opHandler.conv1d(\n        this, filter, stride, pad, dataFormat, dilation, dimRoundingMode);\n  }\n  conv2d<T extends Tensor3D|Tensor4D>(\n      this: T, filter: Tensor4D|TensorLike4D, strides: [number, number]|number,\n      pad: 'valid'|'same'|number, dataFormat: 'NHWC'|'NCHW' = 'NHWC',\n      dilations: [number, number]|number = [1, 1],\n      dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n    (this as Tensor).throwIfDisposed();\n    return opHandler.conv2d(\n        this, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n  }\n  conv2dTranspose<T extends Tensor3D|Tensor4D>(\n      this: T, filter: Tensor4D|TensorLike4D,\n      outputShape: [number, number, number, number]|[number, number, number],\n      strides: [number, number]|number, pad: 'valid'|'same'|number,\n      dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n    (this as Tensor).throwIfDisposed();\n    return opHandler.conv2dTranspose(\n        this, filter, outputShape, strides, pad, dimRoundingMode);\n  }\n  depthwiseConv2D<T extends Tensor3D|Tensor4D>(\n      this: T, filter: Tensor4D|TensorLike4D, strides: [number, number]|number,\n      pad: 'valid'|'same'|number, dataFormat: 'NHWC'|'NCHW' = 'NHWC',\n      dilations: [number, number]|number = [1, 1],\n      dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n    (this as Tensor).throwIfDisposed();\n    return opHandler.depthwiseConv2d(\n        this, filter, strides, pad, dataFormat, dilations, dimRoundingMode);\n  }\n\n  separableConv2d<T extends Tensor3D|Tensor4D>(\n      this: T|TensorLike, depthwiseFilter: Tensor4D|TensorLike4D,\n      pointwiseFilter: Tensor4D|TensorLike, strides: [number, number]|number,\n      pad: 'valid'|'same', dilation: [number, number]|number = [1, 1],\n      dataFormat: 'NHWC'|'NCHW' = 'NHWC'): T {\n    (this as Tensor).throwIfDisposed();\n    return opHandler.separableConv2d(\n        this, depthwiseFilter, pointwiseFilter, strides, pad, dilation,\n        dataFormat);\n  }\n\n  // Pooling.\n  avgPool<T extends Tensor3D|Tensor4D>(\n      this: T, filterSize: [number, number]|number,\n      strides: [number, number]|number, pad: 'valid'|'same'|number,\n      dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n    (this as Tensor).throwIfDisposed();\n    return opHandler.avgPool(this, filterSize, strides, pad, dimRoundingMode);\n  }\n  maxPool<T extends Tensor3D|Tensor4D>(\n      this: T, filterSize: [number, number]|number,\n      strides: [number, number]|number, pad: 'valid'|'same'|number,\n      dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n    (this as Tensor).throwIfDisposed();\n    return opHandler.maxPool(this, filterSize, strides, pad, dimRoundingMode);\n  }\n  localResponseNormalization<T extends Tensor3D|Tensor4D>(\n      this: T, radius = 5, bias = 1, alpha = 1, beta = 0.5): T {\n    return opHandler.localResponseNormalization(\n        this, radius, bias, alpha, beta);\n  }\n  pool<T extends Tensor3D|Tensor4D>(\n      this: T, windowShape: [number, number]|number, poolingType: 'max'|'avg',\n      padding: 'valid'|'same'|number, dilationRate?: [number, number]|number,\n      strides?: [number, number]|number): T {\n    (this as Tensor).throwIfDisposed();\n    return opHandler.pool(\n        this, windowShape, poolingType, padding, dilationRate, strides);\n  }\n\n  variable(trainable = true, name?: string, dtype?: DataType): Variable<R> {\n    this.throwIfDisposed();\n    return Variable.variable(this, trainable, name, dtype);\n  }\n\n  unsortedSegmentSum<T extends Tensor>(\n      this: T, segmentIds: Tensor1D|TensorLike1D, numSegments: number): T {\n    this.throwIfDisposed();\n    return opHandler.unsortedSegmentSum(this, segmentIds, numSegments);\n  }\n\n  batchToSpaceND<T extends Tensor>(\n      this: T, blockShape: number[], crops: number[][]): T {\n    this.throwIfDisposed();\n    return opHandler.batchToSpaceND(this, blockShape, crops);\n  }\n\n  spaceToBatchND<T extends Tensor>(\n      this: T, blockShape: number[], paddings: number[][]): T {\n    this.throwIfDisposed();\n    return opHandler.spaceToBatchND(this, blockShape, paddings);\n  }\n\n  topk<T extends Tensor>(this: T, k = 1, sorted = true):\n      {values: T, indices: T} {\n    this.throwIfDisposed();\n    return opHandler.topk(this, k, sorted);\n  }\n\n  stridedSlice(\n      this: Tensor, begin: number[], end: number[], strides: number[],\n      beginMask = 0, endMask = 0, ellipsisMask = 0, newAxisMask = 0,\n      shrinkAxisMask = 0): Tensor {\n    this.throwIfDisposed();\n    return opHandler.stridedSlice(\n        this, begin, end, strides, beginMask, endMask, ellipsisMask,\n        newAxisMask, shrinkAxisMask);\n  }\n\n  depthToSpace(this: Tensor4D, blockSize: number, dataFormat: 'NHWC'|'NCHW'):\n      Tensor4D {\n    this.throwIfDisposed();\n    return opHandler.depthToSpace(this, blockSize, dataFormat);\n  }\n\n  fft(this: Tensor): Tensor {\n    this.throwIfDisposed();\n    return opHandler.spectral.fft(this);\n  }\n\n  ifft(this: Tensor): Tensor {\n    this.throwIfDisposed();\n    return opHandler.spectral.ifft(this);\n  }\n\n  rfft(this: Tensor): Tensor {\n    this.throwIfDisposed();\n    return opHandler.spectral.rfft(this);\n  }\n\n  irfft(this: Tensor): Tensor {\n    this.throwIfDisposed();\n    return opHandler.spectral.irfft(this);\n  }\n}\nObject.defineProperty(Tensor, Symbol.hasInstance, {\n  value: (instance: Tensor) => {\n    return !!instance && instance.dataId != null && instance.shape != null &&\n        instance.dtype != null;\n  }\n});\n\nexport interface NumericTensor<R extends Rank = Rank> extends Tensor<R> {\n  dtype: NumericDataType;\n  dataSync<D extends DataType = NumericDataType>(): DataTypeMap[D];\n  data<D extends DataType = NumericDataType>(): Promise<DataTypeMap[D]>;\n}\n\nexport interface StringTensor<R extends Rank = Rank> extends Tensor<R> {\n  dtype: 'string';\n  dataSync<D extends DataType = 'string'>(): DataTypeMap[D];\n  data<D extends DataType = 'string'>(): Promise<DataTypeMap[D]>;\n}\n\n/** @doclink Tensor */\nexport type Scalar = Tensor<Rank.R0>;\n/** @doclink Tensor */\nexport type Tensor1D = Tensor<Rank.R1>;\n/** @doclink Tensor */\nexport type Tensor2D = Tensor<Rank.R2>;\n/** @doclink Tensor */\nexport type Tensor3D = Tensor<Rank.R3>;\n/** @doclink Tensor */\nexport type Tensor4D = Tensor<Rank.R4>;\n/** @doclink Tensor */\nexport type Tensor5D = Tensor<Rank.R5>;\n/** @doclink Tensor */\nexport type Tensor6D = Tensor<Rank.R6>;\n\n/**\n * A mutable `tf.Tensor`, useful for persisting state, e.g. for training.\n */\n/** @doc {heading: 'Tensors', subheading: 'Classes'} */\nexport class Variable<R extends Rank = Rank> extends Tensor<R> {\n  name: string;\n\n  /**\n   * Private constructor since we cannot add logic before calling `super()`.\n   * Instead, we expose static `Variable.variable` method below, which will be\n   * added to global namespace.\n   */\n  private constructor(\n      initialValue: Tensor<R>, public trainable = true, name?: string) {\n    super(\n        initialValue.shape, initialValue.dtype, null /* values */,\n        initialValue.dataId);\n    this.name = name;\n    if (this.name == null) {\n      this.name = trackerFn().nextVariableId().toString();\n    }\n    try {\n      trackerFn().registerVariable(this);\n    } catch (ex) {\n      trackerFn().disposeTensor(this);\n      throw ex;\n    }\n  }\n\n  /**\n   * Creates a new variable with the provided initial value.\n   * ```js\n   * const x = tf.variable(tf.tensor([1, 2, 3]));\n   * x.assign(tf.tensor([4, 5, 6]));\n   *\n   * x.print();\n   * ```\n   *\n   * @param initialValue Initial value for the tensor.\n   * @param trainable If true, optimizers are allowed to update it.\n   * @param name Name of the variable. Defaults to a unique id.\n   * @param dtype If set, initialValue will be converted to the given type.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Creation'} */\n  static variable<R extends Rank>(\n      initialValue: Tensor<R>, trainable = true, name?: string,\n      dtype?: DataType): Variable<R> {\n    if (dtype != null && dtype !== initialValue.dtype) {\n      initialValue = initialValue.asType(dtype) as Tensor<R>;\n    }\n    return new Variable(initialValue, trainable, name);\n  }\n\n  /**\n   * Assign a new `tf.Tensor` to this variable. The new `tf.Tensor` must have\n   * the same shape and dtype as the old `tf.Tensor`.\n   *\n   * @param newValue New tensor to be assigned to this variable.\n   */\n  /** @doc {heading: 'Tensors', subheading: 'Classes'} */\n  assign(newValue: Tensor<R>): void {\n    if (newValue.dtype !== this.dtype) {\n      throw new Error(\n          `dtype of the new value (${newValue.dtype}) and ` +\n          `previous value (${this.dtype}) must match`);\n    }\n    if (!util.arraysEqual(newValue.shape, this.shape)) {\n      throw new Error(\n          `shape of the new value (${newValue.shape}) and ` +\n          `previous value (${this.shape}) must match`);\n    }\n    trackerFn().disposeTensor(this);\n    this.dataId = newValue.dataId;\n    trackerFn().registerTensor(this);\n  }\n\n  dispose(): void {\n    trackerFn().disposeVariable(this);\n    this.isDisposedInternal = true;\n  }\n}\n\nObject.defineProperty(Variable, Symbol.hasInstance, {\n  value: (instance: Variable) => {\n    return instance instanceof Tensor && instance.assign != null &&\n        instance.assign instanceof Function;\n  }\n});\n\nconst variable = Variable.variable;\nexport {variable};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/** @docalias number[] */\nexport interface ShapeMap {\n  R0: number[];\n  R1: [number];\n  R2: [number, number];\n  R3: [number, number, number];\n  R4: [number, number, number, number];\n  R5: [number, number, number, number, number];\n  R6: [number, number, number, number, number, number];\n}\n\n/** @docalias number[] */\nexport interface ArrayMap {\n  R0: number;\n  R1: number[];\n  R2: number[][];\n  R3: number[][][];\n  R4: number[][][][];\n  R5: number[][][][][];\n  R6: number[][][][][][];\n}\n\nexport interface DataTypeMap {\n  float32: Float32Array;\n  int32: Int32Array;\n  bool: Uint8Array;\n  complex64: Float32Array;\n  string: string[];\n}\n\nexport interface SingleValueMap {\n  bool: boolean;\n  int32: number;\n  float32: number;\n  complex64: number;\n  string: string;\n}\n\n/** @docalias 'float32'|'int32'|'bool'|'complex64'|'string' */\nexport type DataType = keyof DataTypeMap;\nexport type NumericDataType = 'float32'|'int32'|'bool'|'complex64';\nexport type TypedArray = Float32Array|Int32Array|Uint8Array;\nexport type DataValues = DataTypeMap[DataType];\n\nexport enum Rank {\n  R0 = 'R0',\n  R1 = 'R1',\n  R2 = 'R2',\n  R3 = 'R3',\n  R4 = 'R4',\n  R5 = 'R5',\n  R6 = 'R6'\n}\n\nexport type FlatVector = boolean[]|number[]|TypedArray;\nexport type RegularArray<T> =\n    T[]|T[][]|T[][][]|T[][][][]|T[][][][][]|T[][][][][][];\n\n// tslint:disable-next-line:no-any\nexport interface RecursiveArray<T extends any> {\n  [index: number]: T|RecursiveArray<T>;\n}\n\n// Looks for upcasting types. Used, for example, in operations with mixed dtype\n// inputs.\nenum UpcastInt32AndMap {\n  'float32' = 'float32',\n  'int32' = 'int32',\n  'bool' = 'int32',\n  'complex64' = 'complex64'\n}\n\nenum UpcastBoolAndMap {\n  'float32' = 'float32',\n  'int32' = 'int32',\n  'bool' = 'bool',\n  'complex64' = 'complex64'\n}\n\nenum UpcastFloat32AndMap {\n  'float32' = 'float32',\n  'int32' = 'float32',\n  'bool' = 'float32',\n  'complex64' = 'complex64'\n}\n\nenum UpcastComplex64AndMap {\n  'float32' = 'complex64',\n  'int32' = 'complex64',\n  'bool' = 'complex64',\n  'complex64' = 'complex64'\n}\n\nconst upcastTypeMap = {\n  'float32': UpcastFloat32AndMap,\n  'int32': UpcastInt32AndMap,\n  'bool': UpcastBoolAndMap,\n  'complex64': UpcastComplex64AndMap\n};\n\nexport function upcastType(typeA: DataType, typeB: DataType): DataType {\n  if (typeA === 'string' || typeB === 'string') {\n    if (typeA === 'string' && typeB === 'string') {\n      return 'string';\n    }\n    throw new Error(`Can not upcast ${typeA} with ${typeB}`);\n  }\n  return upcastTypeMap[typeA][typeB];\n}\n\n/** Returns the output type after summation. */\nexport function sumOutType(type: DataType): DataType {\n  return upcastType(type, 'int32');\n}\n\n/** @docalias TypedArray|Array */\nexport type TensorLike =\n    TypedArray|number|boolean|string|RecursiveArray<number|number[]|TypedArray>|\n    RecursiveArray<boolean>|RecursiveArray<string>;\nexport type ScalarLike = number|boolean|string;\n/** @docalias TypedArray|Array */\nexport type TensorLike1D = TypedArray|number[]|boolean[]|string[];\n/** @docalias TypedArray|Array */\nexport type TensorLike2D =\n    TypedArray|number[]|number[][]|boolean[]|boolean[][]|string[]|string[][];\n/** @docalias TypedArray|Array */\nexport type TensorLike3D = TypedArray|number[]|number[][][]|boolean[]|\n    boolean[][][]|string[]|string[][][];\n/** @docalias TypedArray|Array */\nexport type TensorLike4D = TypedArray|number[]|number[][][][]|boolean[]|\n    boolean[][][][]|string[]|string[][][][];\n/** @docalias TypedArray|Array */\nexport type TensorLike5D = TypedArray|number[]|number[][][][][]|boolean[]|\n    boolean[][][][][]|string[]|string[][][][][];\n/** @docalias TypedArray|Array */\nexport type TensorLike6D = TypedArray|number[]|number[][][][][][]|boolean[]|\n    boolean[][][][][][]|string[]|string[][][][][][];\n\n/** Type for representing image dat in Uint8Array type. */\nexport interface PixelData {\n  width: number;\n  height: number;\n  data: Uint8Array;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from './tensor';\nimport {TensorContainer, TensorContainerArray} from './tensor_types';\nimport {upcastType} from './types';\nimport {assert} from './util';\n\nexport function makeTypesMatch<T extends Tensor>(a: T, b: T): [T, T] {\n  if (a.dtype === b.dtype) {\n    return [a, b];\n  }\n  const dtype = upcastType(a.dtype, b.dtype);\n  return [a.cast(dtype), b.cast(dtype)];\n}\n\nexport function assertTypesMatch(a: Tensor, b: Tensor): void {\n  assert(\n      a.dtype === b.dtype,\n      () => `The dtypes of the first(${a.dtype}) and` +\n          ` second(${b.dtype}) input must match`);\n}\n\nexport function isTensorInList(tensor: Tensor, tensorList: Tensor[]): boolean {\n  for (let i = 0; i < tensorList.length; i++) {\n    if (tensorList[i].id === tensor.id) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Extracts any `Tensor`s found within the provided object.\n *\n * @param container an object that may be a `Tensor` or may directly contain\n *   `Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. In general it\n *   is safe to pass any object here, except that `Promise`s are not\n *   supported.\n * @returns An array of `Tensors` found within the passed object. If the\n *   argument is simply a `Tensor', a list containing that `Tensor` is\n *   returned. If the object is not a `Tensor` or does not\n *   contain `Tensors`, an empty list is returned.\n */\nexport function getTensorsInContainer(result: TensorContainer): Tensor[] {\n  const list: Tensor[] = [];\n  const seen = new Set<{}|void>();\n  walkTensorContainer(result, list, seen);\n  return list;\n}\n\nfunction walkTensorContainer(\n    container: TensorContainer, list: Tensor[], seen: Set<{}|void>): void {\n  if (container == null) {\n    return;\n  }\n  if (container instanceof Tensor) {\n    list.push(container);\n    return;\n  }\n  if (!isIterable(container)) {\n    return;\n  }\n  // Iteration over keys works also for arrays.\n  const iterable = container as TensorContainerArray;\n  for (const k in iterable) {\n    const val = iterable[k];\n    if (!seen.has(val)) {\n      seen.add(val);\n      walkTensorContainer(val, list, seen);\n    }\n  }\n}\n\n// tslint:disable-next-line:no-any\nfunction isIterable(obj: any): boolean {\n  return Array.isArray(obj) || typeof obj === 'object';\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {BackendTimingInfo, DataMover, KernelBackend} from './backends/backend';\nimport {Environment, setEnvironmentGlobal} from './environment';\nimport {Profiler} from './profiler';\nimport {backpropagateGradients, getFilteredNodesXToY, NamedGradientMap, TapeNode} from './tape';\nimport {DataId, setTensorTracker, Tensor, Tensor3D, TensorTracker, Variable} from './tensor';\nimport {GradSaveFunc, NamedTensorMap, NamedVariableMap, TensorContainer} from './tensor_types';\nimport {getTensorsInContainer} from './tensor_util';\nimport {DataType, DataValues, PixelData} from './types';\nimport * as util from './util';\nimport {bytesFromStringArray, makeOnesTypedArray, now, sizeFromShape} from './util';\n\n/**\n * A function that computes an output. The save function is for saving tensors\n * computed in the forward pass, that we need in the backward pass.\n */\nexport type ForwardFunc<T> = (backend: KernelBackend, save?: GradSaveFunc) => T;\n\n/**\n * @docalias (a: Tensor, b: Tensor,..., save?: Function) => {\n *   value: Tensor,\n *   gradFunc: (dy: Tensor, saved?: NamedTensorMap) => Tensor | Tensor[]\n * }\n */\nexport type CustomGradientFunc<T extends Tensor> =\n    (...inputs: Array<Tensor|GradSaveFunc>) => {\n      value: T;\n      gradFunc: (dy: T, saved: Tensor[]) => Tensor | Tensor[];\n    };\n\nexport type MemoryInfo = {\n  numTensors: number; numDataBuffers: number; numBytes: number;\n  unreliable?: boolean; reasons: string[];\n};\n\ntype KernelProfile = {\n  name: string; bytesAdded: number; totalBytesSnapshot: number;\n  tensorsAdded: number;\n  totalTensorsSnapshot: number;\n  inputShapes: number[][];\n  outputShape: number[] | number[][];\n};\n\nexport type ProfileInfo = {\n  newBytes: number; newTensors: number; peakBytes: number;\n  kernels: KernelProfile[];\n  result: TensorContainer;\n};\n\nexport interface TimingInfo extends BackendTimingInfo {\n  wallMs: number;\n}\n\n/** @docalias Function */\nexport type ScopeFn<T extends TensorContainer> = () => T;\n\nexport interface TensorManager {\n  registerTensor(a: Tensor, backend?: KernelBackend): void;\n  registerVariable(v: Variable): void;\n  disposeTensor(a: Tensor): void;\n  memory(): {numDataBuffers: number; numBytes: number;};\n}\n\ninterface ScopeState {\n  track: Tensor[];\n  name: string;\n  id: number;\n}\n\nclass EngineState {\n  // Public since optimizers will use it.\n  registeredVariables: NamedVariableMap = {};\n\n  nextTapeNodeId = 0;\n  numBytes = 0;\n  numTensors = 0;\n  numStringTensors = 0;\n  numDataBuffers = 0;\n\n  activeTape: TapeNode[];\n  // Number of nested tf.grad() statements when computing higher-order\n  // gradients. E.g. `1` for first-order gradients and `2` for second-order\n  // gradients. Used to track if the tape should be removed after a backprop.\n  gradientDepth = 0;\n  // Number of nested kernel calls. When kernel depth is greater than 1, we turn\n  // off the tape.\n  kernelDepth = 0;\n\n  // Keep Tensors that parallel the tapes.\n  activeScope: ScopeState;\n  scopeStack: ScopeState[] = [];\n  nextScopeId = 0;\n\n  tensorInfo = new WeakMap<DataId, {\n    backend: KernelBackend,\n    bytes: number,\n    dtype: DataType,\n    shape: number[],\n    refCount: number\n  }>();\n\n  profiling = false;\n  activeProfile: ProfileInfo =\n      {newBytes: 0, newTensors: 0, peakBytes: 0, kernels: [], result: null};\n\n  dispose() {\n    for (const variableName in this.registeredVariables) {\n      this.registeredVariables[variableName].dispose();\n    }\n  }\n}\n\nexport class Engine implements TensorManager, TensorTracker, DataMover {\n  state: EngineState;\n  backendName: string;\n  registry: {[id: string]: KernelBackend} = {};\n  registryFactory: {\n    [id: string]: {\n      factory: () => KernelBackend | Promise<KernelBackend>,\n      priority: number\n    }\n  } = {};\n\n  private profiler: Profiler;\n  private backendInstance: KernelBackend;\n  private pendingBackendInit: Promise<boolean>;\n  private pendingBackendInitId = 0;\n\n  constructor(public ENV: Environment) {\n    this.state = new EngineState();\n  }\n\n  async ready(): Promise<void> {\n    if (this.pendingBackendInit != null) {\n      return this.pendingBackendInit.then(() => {});\n    }\n    if (this.backendInstance != null) {\n      return;\n    }\n    const sortedBackends = this.getSortedBackends();\n\n    for (let i = 0; i < sortedBackends.length; i++) {\n      const backendName = sortedBackends[i];\n      const success = await this.initializeBackend(backendName).success;\n      if (success) {\n        await this.setBackend(backendName);\n        return;\n      }\n    }\n\n    throw new Error(\n        `Could not initialize any backends, all backend initializations ` +\n        `failed.`);\n  }\n\n  get backend(): KernelBackend {\n    if (this.pendingBackendInit != null) {\n      throw new Error(\n          `Backend '${this.backendName}' has not yet been initialized. Make ` +\n          `sure to await tf.ready() before calling other methods`);\n    }\n    if (this.backendInstance == null) {\n      const {name, asyncInit} = this.initializeBackendsAndReturnBest();\n      if (asyncInit) {\n        throw new Error(\n            `The highest priority backend '${name}' has not yet been ` +\n            `initialized. Make sure to await tf.ready() before calling ` +\n            `other methods`);\n      }\n      this.setBackend(name);\n    }\n    return this.backendInstance;\n  }\n\n  backendNames(): string[] {\n    return Object.keys(this.registryFactory);\n  }\n\n  findBackend(backendName: string): KernelBackend {\n    if (!(backendName in this.registry)) {\n      // If the backend hasn't been initialized but we have a registry entry for\n      // it, initialize it and return it.\n      if (backendName in this.registryFactory) {\n        const {asyncInit} = this.initializeBackend(backendName);\n        if (asyncInit) {\n          // Backend is not ready yet.\n          return null;\n        }\n      } else {\n        return null;\n      }\n    }\n    return this.registry[backendName];\n  }\n\n  findBackendFactory(backendName: string):\n      () => KernelBackend | Promise<KernelBackend> {\n    if (!(backendName in this.registryFactory)) {\n      return null;\n    }\n    return this.registryFactory[backendName].factory;\n  }\n\n  registerBackend(\n      backendName: string,\n      factory: () => KernelBackend | Promise<KernelBackend>,\n      priority = 1): boolean {\n    if (backendName in this.registryFactory) {\n      console.warn(\n          `${backendName} backend was already registered. ` +\n          `Reusing existing backend factory.`);\n      return false;\n    }\n    this.registryFactory[backendName] = {factory, priority};\n    return true;\n  }\n\n  async setBackend(backendName: string): Promise<boolean> {\n    if (this.registryFactory[backendName] == null) {\n      throw new Error(`Backend name '${backendName}' not found in registry`);\n    }\n    this.backendName = backendName;\n    if (this.registry[backendName] == null) {\n      this.backendInstance = null;\n      const {success, asyncInit} = this.initializeBackend(backendName);\n      const result = asyncInit ? await success : success;\n      if (!result) {\n        return false;\n      }\n    }\n    this.backendInstance = this.registry[backendName];\n\n    // Reset the profiler.\n    this.profiler = new Profiler(this.backendInstance);\n\n    return true;\n  }\n\n  /**\n   * Initializes a backend by looking up the backend name in the factory\n   * registry and calling the factory method. Returns a boolean representing\n   * whether the initialization of the backend suceeded. Throws an error if\n   * there is no backend in the factory registry.\n   */\n  private initializeBackend(backendName: string):\n      {success: boolean|Promise<boolean>, asyncInit: boolean} {\n    const registryFactoryEntry = ENGINE.registryFactory[backendName];\n    if (registryFactoryEntry == null) {\n      throw new Error(\n          `Cannot initialize backend ${backendName}, no registration found.`);\n    }\n\n    try {\n      const backend = registryFactoryEntry.factory();\n      // Test if the factory returns a promise.\n      if (Promise.resolve(backend) === backend) {\n        const promiseId = ++this.pendingBackendInitId;\n        const success =\n            backend\n                .then(backendInstance => {\n                  // Outdated promise. Another backend was set in the meantime.\n                  if (promiseId < this.pendingBackendInitId) {\n                    return false;\n                  }\n                  this.registry[backendName] = backendInstance;\n                  this.pendingBackendInit = null;\n                  return true;\n                })\n                .catch(err => {\n                  // Outdated promise. Another backend was set in the meantime.\n                  if (promiseId < this.pendingBackendInitId) {\n                    return false;\n                  }\n                  this.pendingBackendInit = null;\n                  console.warn(\n                      `Initialization of backend ${backendName} failed`);\n                  console.warn(err.stack || err.message);\n                  return false;\n                });\n        this.pendingBackendInit = success;\n        return {success, asyncInit: true};\n      } else {\n        this.registry[backendName] = backend as KernelBackend;\n        return {success: true, asyncInit: false};\n      }\n    } catch (err) {\n      console.warn(`Initialization of backend ${backendName} failed`);\n      console.warn(err.stack || err.message);\n      return {success: false, asyncInit: false};\n    }\n  }\n\n  removeBackend(backendName: string): void {\n    if (!(backendName in this.registryFactory)) {\n      throw new Error(`${backendName} backend not found in registry`);\n    }\n    if (this.backendName === backendName && this.pendingBackendInit != null) {\n      // There is a pending promise of the backend we want to remove. Make it\n      // obsolete.\n      this.pendingBackendInitId++;\n    }\n\n    if (backendName in this.registry) {\n      this.registry[backendName].dispose();\n      delete this.registry[backendName];\n    }\n\n    delete this.registryFactory[backendName];\n\n    // Unset the backend if it is active.\n    if (this.backendName === backendName) {\n      this.pendingBackendInit = null;\n      this.backendName = null;\n      this.backendInstance = null;\n    }\n  }\n\n  private getSortedBackends(): string[] {\n    if (Object.keys(this.registryFactory).length === 0) {\n      throw new Error('No backend found in registry.');\n    }\n    return Object.keys(this.registryFactory).sort((a: string, b: string) => {\n      // Highest priority comes first.\n      return this.registryFactory[b].priority -\n          this.registryFactory[a].priority;\n    });\n  }\n\n  private initializeBackendsAndReturnBest():\n      {name: string, asyncInit: boolean} {\n    const sortedBackends = this.getSortedBackends();\n\n    for (let i = 0; i < sortedBackends.length; i++) {\n      const backendName = sortedBackends[i];\n      const {success, asyncInit} = this.initializeBackend(backendName);\n      if (asyncInit || success) {\n        return {name: backendName, asyncInit};\n      }\n    }\n    throw new Error(\n        `Could not initialize any backends, all backend initializations ` +\n        `failed.`);\n  }\n\n  moveData(destBackend: KernelBackend, dataId: DataId) {\n    this.write(destBackend, dataId, this.readSync(dataId));\n  }\n\n  tidy<T extends TensorContainer>(nameOrFn: string|ScopeFn<T>, fn?: ScopeFn<T>):\n      T {\n    let name: string = null;\n    if (fn == null) {\n      // Called with only 1 argument.\n      if (typeof nameOrFn !== 'function') {\n        throw new Error('Please provide a function to tidy()');\n      }\n      fn = nameOrFn;\n    } else {\n      // Called with 2 arguments.\n      if (typeof nameOrFn !== 'string' && !(nameOrFn instanceof String)) {\n        throw new Error(\n            'When calling with two arguments, the first argument ' +\n            'to tidy() must be a string');\n      }\n      if (typeof fn !== 'function') {\n        throw new Error(\n            'When calling with two arguments, the 2nd argument ' +\n            'to tidy() must be a function');\n      }\n      name = nameOrFn as string;\n      // TODO(nsthorat,smilkov): Do operation logging and performance\n      // profiling.\n    }\n    let result: T;\n    return this.scopedRun(\n        () => this.startScope(name), () => this.endScope(result), () => {\n          result = fn();\n          if (result instanceof Promise) {\n            console.error('Cannot return a Promise inside of tidy.');\n          }\n          return result;\n        });\n  }\n\n  private scopedRun<T>(start: () => void, end: () => void, f: () => T): T {\n    start();\n    try {\n      const res = f();\n      end();\n      return res;\n    } catch (ex) {\n      end();\n      throw ex;\n    }\n  }\n\n  private static nextTensorId = 0;\n  nextTensorId(): number {\n    return Engine.nextTensorId++;\n  }\n\n  private static nextVariableId = 0;\n  nextVariableId(): number {\n    return Engine.nextVariableId++;\n  }\n\n  /**\n   * This method is called instead of the public-facing tensor.clone() when\n   * saving a tensor for backwards pass. It makes sure to add the clone\n   * operation to the tape regardless of being called inside a kernel\n   * execution.\n   */\n  private clone(x: Tensor): Tensor {\n    const y = Tensor.make(x.shape, {dataId: x.dataId}, x.dtype);\n    this.addTapeNode([x], y, dy => [dy.toFloat()]);\n    return y;\n  }\n\n  runKernel<T extends Tensor|Tensor[], I extends NamedTensorMap>(\n      forwardFunc: ForwardFunc<T>,\n      inputs: I,\n      backwardsFunc?: (dy: T, saved: Tensor[]) => {[P in keyof I]: () => I[P]},\n      ): T {\n    let result: T;\n    let saved: Tensor[] = [];\n    const isTapeOn = this.isTapeOn();\n    const scopeName =\n        this.state.activeScope != null ? this.state.activeScope.name : '';\n    const saveFunc: GradSaveFunc = (tensors) => {\n      // Do not save unless we are recording to the tape. Otherwise it would\n      // cause a mem leak since we would never run backprop, which disposes\n      // the kept tensors.\n      if (!isTapeOn) {\n        return;\n      }\n      saved = tensors.map(tensor => this.keep(this.clone(tensor)));\n    };\n\n    const startingBytecount = this.state.numBytes;\n    const startingNumTensors = this.state.numTensors;\n\n    // Stop recording to a tape when running a kernel.\n    this.scopedRun(\n        () => this.state.kernelDepth++, () => this.state.kernelDepth--, () => {\n          if (!this.ENV.getBool('DEBUG')) {\n            result = forwardFunc(this.backend, saveFunc);\n          } else {\n            result = this.profiler.profileKernel(\n                scopeName, () => forwardFunc(this.backend, saveFunc));\n          }\n        });\n\n    if (isTapeOn) {\n      const tapeNode: TapeNode = {\n        id: this.state.nextTapeNodeId++,\n        name: scopeName,\n        inputs,\n        outputs: Array.isArray(result) ? result : [result] as Tensor[],\n        saved\n      };\n      if (backwardsFunc != null) {\n        tapeNode.gradient = (dy: T) => backwardsFunc(dy, saved);\n      }\n      this.state.activeTape.push(tapeNode);\n    }\n\n    if (this.state.profiling) {\n      this.state.activeProfile.kernels.push({\n        name: scopeName,\n        bytesAdded: this.state.numBytes - startingBytecount,\n        totalBytesSnapshot: this.state.numBytes,\n        tensorsAdded: this.state.numTensors - startingNumTensors,\n        totalTensorsSnapshot: this.state.numTensors,\n        inputShapes: Object.keys(inputs).map(key => inputs[key].shape),\n        outputShape: Array.isArray(result) ?\n            (result as Tensor[]).map(item => (item as Tensor).shape) :\n            (result as Tensor).shape\n      });\n    }\n\n    return result;\n  }\n\n  // TensorManager implementation.\n\n  registerTensor(a: Tensor|Variable, backend?: KernelBackend): void {\n    const refCount = this.state.tensorInfo.has(a.dataId) ?\n        this.state.tensorInfo.get(a.dataId).refCount :\n        0;\n    this.state.numTensors++;\n    if (a.dtype === 'string') {\n      this.state.numStringTensors++;\n    }\n    if (refCount === 0) {\n      this.state.numDataBuffers++;\n\n      // Bytes for complex numbers are counted by their components. Bytes for\n      // string tensors are counted when writing values.\n      let bytes = 0;\n      if (a.dtype !== 'complex64' && a.dtype !== 'string') {\n        bytes = a.size * util.bytesPerElement(a.dtype);\n      }\n      this.state.tensorInfo.set(a.dataId, {\n        backend: backend != null ? backend : this.backend,\n        dtype: a.dtype,\n        shape: a.shape,\n        bytes,\n        refCount: 0\n      });\n      this.state.numBytes += bytes;\n      if (backend != null) {\n        backend.register(a.dataId, a.shape, a.dtype);\n      } else {\n        this.backend.register(a.dataId, a.shape, a.dtype);\n      }\n    }\n    this.state.tensorInfo.get(a.dataId).refCount++;\n    if (!(a instanceof Variable)) {\n      this.track(a);\n    }\n  }\n\n  registerVariable(v: Variable) {\n    if (this.state.registeredVariables[v.name] != null) {\n      throw new Error(`Variable with name ${v.name} was already registered`);\n    }\n    this.state.registeredVariables[v.name] = v;\n  }\n\n  disposeTensor(a: Tensor): void {\n    if (!this.state.tensorInfo.has(a.dataId)) {\n      return;\n    }\n\n    this.state.numTensors--;\n    if (a.dtype === 'string') {\n      this.state.numStringTensors--;\n    }\n    const info = this.state.tensorInfo.get(a.dataId);\n    const refCount = info.refCount;\n    if (refCount <= 1) {\n      // Don't count bytes for complex numbers as they are counted by their\n      // components.\n      if (a.dtype !== 'complex64') {\n        this.state.numBytes -= info.bytes;\n      }\n      this.state.numDataBuffers--;\n      info.backend.disposeData(a.dataId);\n      this.state.tensorInfo.delete(a.dataId);\n    } else {\n      this.state.tensorInfo.get(a.dataId).refCount--;\n    }\n    // TODO(nsthorat): Construct an error and save the stack trace for\n    // debugging when in debug mode. Creating a stack trace is too expensive\n    // to do unconditionally.\n  }\n\n  disposeVariables(): void {\n    for (const varName in this.state.registeredVariables) {\n      const v = this.state.registeredVariables[varName];\n      this.disposeVariable(v);\n    }\n  }\n\n  disposeVariable(v: Variable): void {\n    this.disposeTensor(v);\n    if (this.state.registeredVariables[v.name] != null) {\n      delete this.state.registeredVariables[v.name];\n    }\n  }\n\n  memory(): MemoryInfo {\n    const info = this.backend.memory() as MemoryInfo;\n    info.numTensors = this.state.numTensors;\n    info.numDataBuffers = this.state.numDataBuffers;\n    info.numBytes = this.state.numBytes;\n    if (this.state.numStringTensors > 0) {\n      info.unreliable = true;\n      if (info.reasons == null) {\n        info.reasons = [];\n      }\n      info.reasons.push(\n          'Memory usage by string tensors is approximate ' +\n          '(2 bytes per character)');\n    }\n    return info;\n  }\n\n  async profile(query: () => TensorContainer): Promise<ProfileInfo> {\n    this.state.profiling = true;\n\n    const startBytes = this.state.numBytes;\n    const startNumTensors = this.state.numTensors;\n\n    this.state.activeProfile.kernels = [];\n    this.state.activeProfile.result = query();\n\n    this.state.profiling = false;\n\n    this.state.activeProfile.peakBytes = Math.max(\n        ...this.state.activeProfile.kernels.map(d => d.totalBytesSnapshot));\n    this.state.activeProfile.newBytes = this.state.numBytes - startBytes;\n    this.state.activeProfile.newTensors =\n        this.state.numTensors - startNumTensors;\n    return this.state.activeProfile;\n  }\n\n  isTapeOn(): boolean {\n    return this.state.gradientDepth > 0 && this.state.kernelDepth === 0;\n  }\n\n  private addTapeNode(\n      inputs: Tensor[], result: Tensor,\n      gradientsFunc: (dy: Tensor) => Tensor[]): void {\n    const inputsMap: NamedTensorMap = {};\n    inputs.forEach((input, idx) => {\n      inputsMap[idx] = input;\n    });\n\n    const gradient = (dy: Tensor) => {\n      const res = gradientsFunc(dy);\n      const resMap: NamedGradientMap = {};\n      res.forEach((r, idx) => {\n        resMap[idx] = () => r;\n      });\n      return resMap;\n    };\n\n    const tapeNode: TapeNode = {\n      id: this.state.nextTapeNodeId++,\n      name: this.state.activeScope.name,\n      inputs: inputsMap,\n      outputs: [result],\n      gradient\n    };\n    this.state.activeTape.push(tapeNode);\n  }\n\n  keep<T extends Tensor>(result: T): T {\n    result.kept = true;\n    return result;\n  }\n\n  private startTape() {\n    if (this.state.gradientDepth === 0) {\n      this.state.activeTape = [];\n    }\n    this.state.gradientDepth++;\n  }\n\n  private endTape() {\n    this.state.gradientDepth--;\n  }\n\n  /**\n   * Start a scope. Use this with endScope() to achieve the same functionality\n   * as scope() without the need for a function closure.\n   */\n  startScope(name?: string) {\n    const scopeInfo: ScopeState = {\n      track: [],\n      name: 'unnamed scope',\n      id: this.state.nextScopeId++\n    };\n    if (name) {\n      scopeInfo.name = name;\n    }\n    this.state.scopeStack.push(scopeInfo);\n    this.state.activeScope = scopeInfo;\n  }\n\n  /**\n   * End a scope. Use this with startScope() to achieve the same functionality\n   * as scope() without the need for a function closure.\n   */\n  endScope(result?: TensorContainer) {\n    const tensorsToTrackInParent = getTensorsInContainer(result);\n    const tensorsToTrackInParentSet =\n        new Set(tensorsToTrackInParent.map(t => t.id));\n\n    // Dispose the arrays tracked in this scope.\n    for (let i = 0; i < this.state.activeScope.track.length; i++) {\n      const tensor = this.state.activeScope.track[i];\n      if (!tensor.kept && !tensorsToTrackInParentSet.has(tensor.id)) {\n        tensor.dispose();\n      }\n    }\n\n    const oldScope = this.state.scopeStack.pop();\n    this.state.activeScope = this.state.scopeStack.length === 0 ?\n        null :\n        this.state.scopeStack[this.state.scopeStack.length - 1];\n\n    // Track the current result in the parent scope.\n    tensorsToTrackInParent.forEach(tensor => {\n      // Only track the tensor if was allocated in the inner scope and is not\n      // globally kept.\n      if (!tensor.kept && tensor.scopeId === oldScope.id) {\n        this.track(tensor);\n      }\n    });\n  }\n\n  /**\n   * Returns gradients of `f` with respect to each of the `xs`. The gradients\n   * returned are of the same length as `xs`, but some might be null if `f`\n   * was not a function of that `x`. It also takes optional dy to multiply the\n   * gradient, which defaults to `1`.\n   */\n  gradients<T extends Tensor>(\n      f: () => T, xs: Tensor[], dy?: T,\n      allowNoGradients = false): {value: T, grads: Tensor[]} {\n    util.assert(\n        xs.length > 0, () => 'gradients() received an empty list of xs.');\n    if (dy != null && dy.dtype !== 'float32') {\n      throw new Error(`dy must have 'float32' dtype, but has '${dy.dtype}'`);\n    }\n\n    const y = this.scopedRun(\n        () => this.startTape(), () => this.endTape(),\n        () => this.tidy('forward', f));\n\n    util.assert(\n        y instanceof Tensor,\n        () => 'The result y returned by f() must be a tensor.');\n    // Filter out the nodes that don't connect x => y.\n    const filteredTape = getFilteredNodesXToY(this.state.activeTape, xs, y);\n    if (!allowNoGradients && filteredTape.length === 0 && xs.length > 0) {\n      throw new Error(\n          'Cannot compute gradient of y=f(x) with respect to x. Make sure ' +\n          'that the f you passed encloses all operations that lead from x ' +\n          'to y.');\n    }\n\n    return this.tidy('backward', () => {\n      const accumulatedGradientMap: {[tensorId: number]: Tensor} = {};\n      accumulatedGradientMap[y.id] = (dy == null) ? ones(y.shape) : dy;\n\n      // Backprop gradients through the filtered nodes.\n      backpropagateGradients(\n          accumulatedGradientMap, filteredTape,\n          // Pass the tidy function to avoid circular dep with `tape.ts`.\n          f => this.tidy(f as ScopeFn<Tensor>));\n      const grads = xs.map(x => accumulatedGradientMap[x.id]);\n\n      if (this.state.gradientDepth === 0) {\n        // This means that we are not computing higher-order gradients\n        // and can clean up the tape.\n        this.state.activeTape.forEach(node => {\n          for (const key in node.saved) {\n            node.saved[key].dispose();\n          }\n        });\n        this.state.activeTape = null;\n      }\n      return {value: y, grads};\n    });\n  }\n\n  customGrad<T extends Tensor>(f: CustomGradientFunc<T>):\n      (...args: Array<Tensor|GradSaveFunc>) => T {\n    util.assert(\n        util.isFunction(f),\n        () => 'The f passed in customGrad(f) must be a function.');\n    return (...inputs: Tensor[]): T => {\n      util.assert(\n          inputs.every(t => t instanceof Tensor),\n          () => 'The args passed in customGrad(f)(x1, x2,...) must all be ' +\n              'tensors');\n\n      let res: {\n        value: T,\n        gradFunc: (dy: T, saved: Tensor[]) => Tensor | Tensor[],\n      };\n      const inputMap: NamedTensorMap = {};\n      inputs.forEach((input, i) => {\n        inputMap[i] = input;\n      });\n      return this.runKernel(\n          (_, save) => {\n            res = f(...[...inputs, save]);\n            util.assert(\n                res.value instanceof Tensor,\n                () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.value` is a tensor');\n            util.assert(\n                util.isFunction(res.gradFunc),\n                () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.gradFunc` is a function.');\n            return res.value;\n          },\n          inputMap,\n          (dy: T, saved: Tensor[]) => {\n            const gradRes = res.gradFunc(dy, saved);\n            const grads: Tensor[] =\n                Array.isArray(gradRes) ? gradRes : [gradRes];\n            util.assert(\n                grads.length === inputs.length,\n                () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.gradFunc` is a function that returns ' +\n                    'the same number of tensors as inputs passed to f(...).');\n            util.assert(\n                grads.every(t => t instanceof Tensor),\n                () => 'The function f passed in customGrad(f) must return an ' +\n                    'object where `obj.gradFunc` is a function that returns ' +\n                    'a list of only tensors.');\n            const gradMap: {[key: string]: () => Tensor} = {};\n            grads.forEach((grad, i) => {\n              gradMap[i] = () => grad;\n            });\n            return gradMap;\n          });\n    };\n  }\n\n  // Forwarding to backend.\n  write(destBackend: KernelBackend, dataId: DataId, values: DataValues): void {\n    const info = this.state.tensorInfo.get(dataId);\n\n    const srcBackend = info.backend;\n    destBackend = destBackend || this.backend;\n\n    // Bytes for string tensors are counted when writing.\n    if (info.dtype === 'string') {\n      const newBytes = bytesFromStringArray(values as string[]);\n      this.state.numBytes += newBytes - info.bytes;\n      info.bytes = newBytes;\n    }\n\n    if (destBackend !== srcBackend) {\n      // Delete the tensor from the old backend and move it to the new\n      // backend.\n      srcBackend.disposeData(dataId);\n      info.backend = destBackend;\n      destBackend.register(dataId, info.shape, info.dtype);\n    }\n    destBackend.write(dataId, values);\n  }\n  readSync(dataId: DataId): DataValues {\n    // Route the read to the correct backend.\n    const info = this.state.tensorInfo.get(dataId);\n    return info.backend.readSync(dataId);\n  }\n  read(dataId: DataId): Promise<DataValues> {\n    // Route the read to the correct backend.\n    const info = this.state.tensorInfo.get(dataId);\n    return info.backend.read(dataId);\n  }\n  fromPixels(\n      pixels: PixelData|ImageData|HTMLImageElement|HTMLCanvasElement|\n      HTMLVideoElement,\n      numChannels: number): Tensor3D {\n    return this.backend.fromPixels(pixels, numChannels);\n  }\n  async time(query: () => void): Promise<TimingInfo> {\n    const start = now();\n    const timingInfo = await this.backend.time(query) as TimingInfo;\n    timingInfo.wallMs = now() - start;\n    return timingInfo;\n  }\n\n  /**\n   * Tracks a Tensor in the current scope to be automatically cleaned up\n   * when the current scope ends, and returns the value.\n   *\n   * @param result The Tensor to track in the current scope.\n   */\n  private track<T extends Tensor>(result: T): T {\n    if (this.state.activeScope != null) {\n      result.scopeId = this.state.activeScope.id;\n      this.state.activeScope.track.push(result);\n    }\n\n    return result;\n  }\n\n  get registeredVariables(): NamedVariableMap {\n    return this.state.registeredVariables;\n  }\n\n  /**\n   * Resets the engine state. Removes all backends but does not remove\n   * registered backend factories.\n   */\n  reset(): void {\n    // Make any pending promise obsolete.\n    this.pendingBackendInitId++;\n\n    this.state.dispose();\n    this.ENV.reset();\n    this.state = new EngineState();\n\n    for (const backendName in this.registry) {\n      this.registry[backendName].dispose();\n      delete this.registry[backendName];\n    }\n    this.backendName = null;\n    this.backendInstance = null;\n    this.pendingBackendInit = null;\n  }\n}\n\nfunction ones(shape: number[]): Tensor {\n  const values = makeOnesTypedArray(sizeFromShape(shape), 'float32');\n  return Tensor.make(shape, {values});\n}\n\nlet GLOBAL: {_tfengine: Engine};\nfunction getGlobalNamespace(): {_tfengine: Engine} {\n  if (GLOBAL == null) {\n    // tslint:disable-next-line:no-any\n    let ns: any;\n    if (typeof (window) !== 'undefined') {\n      ns = window;\n    } else if (typeof (global) !== 'undefined') {\n      ns = global;\n    } else if (typeof (process) !== 'undefined') {\n      ns = process;\n    } else if (typeof (self) !== 'undefined') {\n      ns = self;\n    } else {\n      throw new Error('Could not find a global object');\n    }\n    GLOBAL = ns;\n  }\n  return GLOBAL;\n}\n\nfunction getOrMakeEngine(): Engine {\n  const ns = getGlobalNamespace();\n  if (ns._tfengine == null) {\n    const environment = new Environment(ns);\n    ns._tfengine = new Engine(environment);\n  }\n  setEnvironmentGlobal(ns._tfengine.ENV);\n\n  // Tell the current tensor interface that the global engine is responsible\n  // for tracking.\n  setTensorTracker(() => ns._tfengine);\n  return ns._tfengine;\n}\n\nexport let ENGINE = getOrMakeEngine();\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from './tensor';\nimport {NamedTensorMap} from './tensor_types';\nimport * as util from './util';\n\nexport interface TapeNode {\n  id: number;\n  name: string;\n  outputs: Tensor[];\n  inputs: NamedTensorMap;\n  // Optional params, defined only for ops with gradient impl.\n  gradient?: (dy: Tensor|Tensor[]) => NamedGradientMap;\n  saved?: Tensor[];\n}\n\nexport type NamedGradientMap = {\n  [inputName: string]: () => Tensor;\n};\n\n/**\n * Computes a list of TapeNodes that connect x to y, filtering everything else\n * out and preserving the order of the original tape elements.\n *\n * @param tape The tape elements to filter.\n * @param xs The input Tensors.\n * @param y The output Tensor.\n */\nexport function getFilteredNodesXToY(\n    tape: TapeNode[], xs: Tensor[], y: Tensor): TapeNode[] {\n  // Forward pass to compute all the nodes and Tensors that are transitively a\n  // function of x.\n  const tensorsFromX: {[tensorId: number]: boolean} = {};\n  const nodesFromX: {[nodeId: number]: boolean} = {};\n  for (let i = 0; i < xs.length; i++) {\n    tensorsFromX[xs[i].id] = true;\n  }\n\n  for (let i = 0; i < tape.length; i++) {\n    const node = tape[i];\n    const nodeInputs = node.inputs;\n    for (const inputName in nodeInputs) {\n      const input = nodeInputs[inputName];\n\n      let anyInputFromX = false;\n      for (let j = 0; j < xs.length; j++) {\n        if (tensorsFromX[input.id]) {\n          node.outputs.forEach(output => tensorsFromX[output.id] = true);\n          anyInputFromX = true;\n          nodesFromX[node.id] = true;\n          break;\n        }\n      }\n\n      if (anyInputFromX) {\n        break;\n      }\n    }\n  }\n\n  // Backward pass to find all of the nodes and Tensors that lead to y.\n  const tensorsLeadToY: {[tensorId: number]: boolean} = {};\n  tensorsLeadToY[y.id] = true;\n  const nodesToY: {[nodeId: number]: boolean} = {};\n\n  for (let i = tape.length - 1; i >= 0; i--) {\n    const node = tape[i];\n    const nodeInputs = node.inputs;\n\n    // If any of the outputs lead to y, mark all of the inputs as leading to y.\n    for (let j = 0; j < node.outputs.length; j++) {\n      if (tensorsLeadToY[node.outputs[j].id]) {\n        for (const inputName in nodeInputs) {\n          tensorsLeadToY[nodeInputs[inputName].id] = true;\n          nodesToY[node.id] = true;\n        }\n        break;\n      }\n    }\n  }\n\n  // Return the paths that come from x and lead to y.\n  const filteredTape: TapeNode[] = [];\n  for (let i = 0; i < tape.length; i++) {\n    const node = tape[i];\n\n    if (nodesFromX[node.id] && nodesToY[node.id]) {\n      // Prune the inputs from the node that aren't a function of x.\n      const prunedInputs: {[inputName: string]: Tensor} = {};\n      for (const inputName in node.inputs) {\n        const nodeInput = node.inputs[inputName];\n        if (tensorsFromX[nodeInput.id]) {\n          prunedInputs[inputName] = nodeInput;\n        }\n      }\n\n      // Copy the node and overwrite inputsAndArgs to the pruned version.\n      const prunedNode = Object.assign({}, node) as TapeNode;\n      prunedNode.inputs = prunedInputs;\n      prunedNode.outputs = node.outputs;\n\n      filteredTape.push(prunedNode);\n    }\n  }\n\n  return filteredTape;\n}\n\n/**\n * Backpropagate gradients through the filtered TapeNodes.\n *\n * @param tensorAccumulatedGradientMap A map of Tensor to its gradient. This map\n * is mutated by this method.\n * @param filteredTape The filtered TapeNodes to backprop through.\n */\nexport function backpropagateGradients(\n    tensorAccumulatedGradientMap: {[tensorId: number]: Tensor},\n    filteredTape: TapeNode[], tidy: (f: Function) => Tensor) {\n  // Walk the tape backward and keep a map of Tensor to its gradient.\n  for (let i = filteredTape.length - 1; i >= 0; i--) {\n    const node = filteredTape[i];\n\n    const dys: Tensor[] = [];\n    node.outputs.forEach(o => {\n      const gradTensor = tensorAccumulatedGradientMap[o.id];\n      if (gradTensor != null) {\n        dys.push(gradTensor);\n      } else {\n        // This particular output is not in the back-propagation subgraph, so it\n        // does not affect the final output, thus we put zeros for its dy.\n        const dy = Tensor.make(\n            o.shape, {values: util.makeZerosTypedArray(o.size, o.dtype)},\n            o.dtype);\n        dys.push(dy);\n      }\n    });\n\n    if (node.gradient == null) {\n      throw new Error(\n          `Cannot compute gradient: gradient function not found ` +\n          `for ${node.name}.`);\n    }\n\n    // Backprop dy through this node and accumulate gradients over the inputs.\n    const inputGradients =\n        // Grad functions of ops with single outputs expect a dy, while ops\n        // with multiple outputs expect dys (array of dy).\n        node.gradient(node.outputs.length === 1 ? dys[0] : dys);\n    for (const inputName in node.inputs) {\n      if (!(inputName in inputGradients)) {\n        throw new Error(\n            `Cannot backprop through input ${inputName}. ` +\n            `Available gradients found: ${Object.keys(inputGradients)}.`);\n      }\n\n      // Call the gradient function.\n      const dx = tidy(() => inputGradients[inputName]());\n      if (dx.dtype !== 'float32') {\n        throw new Error(\n            `Error in gradient for op ${node.name}. The gradient of input ` +\n            `${inputName} must have 'float32' dtype, but has '${dx.dtype}'`);\n      }\n      const x = node.inputs[inputName];\n      if (!util.arraysEqual(dx.shape, x.shape)) {\n        throw new Error(\n            `Error in gradient for op ${node.name}. The gradient of input ` +\n            `'${inputName}' has shape '${dx.shape}', which does not match ` +\n            `the shape of the input '${x.shape}'`);\n      }\n\n      if (tensorAccumulatedGradientMap[x.id] == null) {\n        tensorAccumulatedGradientMap[x.id] = dx;\n      } else {\n        const curGradient = tensorAccumulatedGradientMap[x.id];\n        tensorAccumulatedGradientMap[x.id] = curGradient.add(dx);\n        curGradient.dispose();\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport function isMobile(): boolean {\n  // tslint:disable-next-line:no-any\n  const a = navigator.userAgent || navigator.vendor || (window as any).opera;\n  // tslint:disable-next-line:max-line-length\n  return /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i\n             .test(a) ||\n      // tslint:disable-next-line:max-line-length\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i\n          .test(a.substr(0, 4));\n}\n\nexport function isBrowser(): boolean {\n  return (typeof window !== 'undefined') ||\n      //@ts-ignore\n      (typeof WorkerGlobalScope !== 'undefined');\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport * as device_util from './device_util';\nimport {ENV} from './environment';\n\n/**\n * This file contains environment-related flag registrations.\n */\n\n/** Whether to enable debug mode. */\nENV.registerFlag('DEBUG', () => false, debugValue => {\n  if (debugValue) {\n    console.warn(\n        'Debugging mode is ON. The output of every math call will ' +\n        'be downloaded to CPU and checked for NaNs. ' +\n        'This significantly impacts performance.');\n  }\n});\n\n/** Whether we are in a browser (as versus, say, node.js) environment. */\nENV.registerFlag('IS_BROWSER', () => device_util.isBrowser());\n\n/** Whether we are in a browser (as versus, say, node.js) environment. */\nENV.registerFlag(\n    'IS_NODE',\n    () => (typeof process !== 'undefined') &&\n        (typeof process.versions !== 'undefined') &&\n        (typeof process.versions.node !== 'undefined'));\n\n/** Whether this browser is Chrome. */\nENV.registerFlag(\n    'IS_CHROME',\n    () => typeof navigator !== 'undefined' && navigator != null &&\n        navigator.userAgent != null && /Chrome/.test(navigator.userAgent) &&\n        /Google Inc/.test(navigator.vendor));\n\n/**\n * True when the environment is \"production\" where we disable safety checks\n * to gain performance.\n */\nENV.registerFlag('PROD', () => false);\n\n/**\n * Whether to do sanity checks when inferring a shape from user-provided\n * values, used when creating a new tensor.\n */\nENV.registerFlag(\n    'TENSORLIKE_CHECK_SHAPE_CONSISTENCY', () => ENV.getBool('DEBUG'));\n\n/** Whether deprecation warnings are enabled. */\nENV.registerFlag('DEPRECATION_WARNINGS_ENABLED', () => true);\n\n/** True if running unit tests. */\nENV.registerFlag('IS_TEST', () => false);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst contexts: {[key: string]: WebGLRenderingContext} = {};\n\nconst WEBGL_ATTRIBUTES: WebGLContextAttributes = {\n  alpha: false,\n  antialias: false,\n  premultipliedAlpha: false,\n  preserveDrawingBuffer: false,\n  depth: false,\n  stencil: false,\n  failIfMajorPerformanceCaveat: true\n};\n\nexport function setWebGLContext(\n    webGLVersion: number, gl: WebGLRenderingContext) {\n  contexts[webGLVersion] = gl;\n}\n\nexport function getWebGLContext(webGLVersion: number): WebGLRenderingContext {\n  if (!(webGLVersion in contexts)) {\n    contexts[webGLVersion] = getWebGLRenderingContext(webGLVersion);\n  }\n  const gl = contexts[webGLVersion];\n  if (gl.isContextLost()) {\n    delete contexts[webGLVersion];\n    return getWebGLContext(webGLVersion);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n\n  return contexts[webGLVersion];\n}\n\nexport function createCanvas(webGLVersion: number) {\n  if (typeof OffscreenCanvas !== 'undefined' && webGLVersion === 2) {\n    return new OffscreenCanvas(300, 150);\n  } else if (typeof document !== 'undefined') {\n    return document.createElement('canvas');\n  } else {\n    throw new Error('Cannot create a canvas in this context');\n  }\n}\n\nfunction getWebGLRenderingContext(webGLVersion: number): WebGLRenderingContext {\n  if (webGLVersion !== 1 && webGLVersion !== 2) {\n    throw new Error('Cannot get WebGL rendering context, WebGL is disabled.');\n  }\n  const canvas = createCanvas(webGLVersion);\n\n  canvas.addEventListener('webglcontextlost', (ev: Event) => {\n    ev.preventDefault();\n    delete contexts[webGLVersion];\n  }, false);\n  if (webGLVersion === 1) {\n    return (canvas.getContext('webgl', WEBGL_ATTRIBUTES) ||\n            canvas.getContext('experimental-webgl', WEBGL_ATTRIBUTES)) as\n        WebGLRenderingContext;\n  }\n  return canvas.getContext('webgl2', WEBGL_ATTRIBUTES) as WebGLRenderingContext;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENV} from '../../environment';\nimport * as util from '../../util';\nimport {getWebGLContext} from './canvas_util';\n\nexport function callAndCheck<T>(\n    gl: WebGLRenderingContext, debugMode: boolean, func: () => T): T {\n  const returnValue = func();\n  if (debugMode) {\n    checkWebGLError(gl);\n  }\n  return returnValue;\n}\n\nfunction checkWebGLError(gl: WebGLRenderingContext) {\n  const error = gl.getError();\n  if (error !== gl.NO_ERROR) {\n    throw new Error('WebGL Error: ' + getWebGLErrorMessage(gl, error));\n  }\n}\n\n// https://en.wikipedia.org/wiki/Half-precision_floating-point_format\nconst MIN_FLOAT16 = 5.96e-8;\nconst MAX_FLOAT16 = 65504;\n\nexport function canBeRepresented(num: number): boolean {\n  if (ENV.getBool('WEBGL_RENDER_FLOAT32_ENABLED') || num === 0 ||\n      (MIN_FLOAT16 < Math.abs(num) && Math.abs(num) < MAX_FLOAT16)) {\n    return true;\n  }\n  return false;\n}\n\nexport function getWebGLErrorMessage(\n    gl: WebGLRenderingContext, status: number): string {\n  switch (status) {\n    case gl.NO_ERROR:\n      return 'NO_ERROR';\n    case gl.INVALID_ENUM:\n      return 'INVALID_ENUM';\n    case gl.INVALID_VALUE:\n      return 'INVALID_VALUE';\n    case gl.INVALID_OPERATION:\n      return 'INVALID_OPERATION';\n    case gl.INVALID_FRAMEBUFFER_OPERATION:\n      return 'INVALID_FRAMEBUFFER_OPERATION';\n    case gl.OUT_OF_MEMORY:\n      return 'OUT_OF_MEMORY';\n    case gl.CONTEXT_LOST_WEBGL:\n      return 'CONTEXT_LOST_WEBGL';\n    default:\n      return `Unknown error code ${status}`;\n  }\n}\n\nexport function getExtensionOrThrow(\n    gl: WebGLRenderingContext, debug: boolean, extensionName: string): {} {\n  return throwIfNull<{}>(\n      gl, debug, () => gl.getExtension(extensionName),\n      'Extension \"' + extensionName + '\" not supported on this browser.');\n}\n\nexport function createVertexShader(\n    gl: WebGLRenderingContext, debug: boolean,\n    vertexShaderSource: string): WebGLShader {\n  const vertexShader: WebGLShader = throwIfNull<WebGLShader>(\n      gl, debug, () => gl.createShader(gl.VERTEX_SHADER),\n      'Unable to create vertex WebGLShader.');\n  callAndCheck(\n      gl, debug, () => gl.shaderSource(vertexShader, vertexShaderSource));\n  callAndCheck(gl, debug, () => gl.compileShader(vertexShader));\n  if (gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS) === false) {\n    console.log(gl.getShaderInfoLog(vertexShader));\n    throw new Error('Failed to compile vertex shader.');\n  }\n  return vertexShader;\n}\n\nexport function createFragmentShader(\n    gl: WebGLRenderingContext, debug: boolean,\n    fragmentShaderSource: string): WebGLShader {\n  const fragmentShader: WebGLShader = throwIfNull<WebGLShader>(\n      gl, debug, () => gl.createShader(gl.FRAGMENT_SHADER),\n      'Unable to create fragment WebGLShader.');\n  callAndCheck(\n      gl, debug, () => gl.shaderSource(fragmentShader, fragmentShaderSource));\n  callAndCheck(gl, debug, () => gl.compileShader(fragmentShader));\n  if (gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS) === false) {\n    logShaderSourceAndInfoLog(\n        fragmentShaderSource, gl.getShaderInfoLog(fragmentShader));\n    throw new Error('Failed to compile fragment shader.');\n  }\n  return fragmentShader;\n}\n\nconst lineNumberRegex = /ERROR: [0-9]+:([0-9]+):/g;\nfunction logShaderSourceAndInfoLog(\n    shaderSource: string, shaderInfoLog: string) {\n  const lineNumberRegexResult = lineNumberRegex.exec(shaderInfoLog);\n  if (lineNumberRegexResult == null) {\n    console.log(`Couldn't parse line number in error: ${shaderInfoLog}`);\n    console.log(shaderSource);\n    return;\n  }\n\n  const lineNumber = +lineNumberRegexResult[1];\n\n  const shaderLines = shaderSource.split('\\n');\n  const pad = shaderLines.length.toString().length + 2;\n  const linesWithLineNumbers = shaderLines.map(\n      (line, lineNumber) =>\n          util.rightPad((lineNumber + 1).toString(), pad) + line);\n  let maxLineLength = 0;\n  for (let i = 0; i < linesWithLineNumbers.length; i++) {\n    maxLineLength = Math.max(linesWithLineNumbers[i].length, maxLineLength);\n  }\n\n  const beforeErrorLines = linesWithLineNumbers.slice(0, lineNumber - 1);\n  const errorLine = linesWithLineNumbers.slice(lineNumber - 1, lineNumber);\n  const afterErrorLines = linesWithLineNumbers.slice(lineNumber);\n\n  console.log(beforeErrorLines.join('\\n'));\n  console.log(shaderInfoLog.split('\\n')[0]);\n  console.log(\n      `%c ${util.rightPad(errorLine[0], maxLineLength)}`,\n      'border:1px solid red; background-color:#e3d2d2; color:#a61717');\n  console.log(afterErrorLines.join('\\n'));\n}\n\nexport function createProgram(\n    gl: WebGLRenderingContext, debug: boolean): WebGLProgram {\n  return throwIfNull<WebGLProgram>(\n      gl, debug, () => gl.createProgram(), 'Unable to create WebGLProgram.');\n}\n\nexport function linkProgram(\n    gl: WebGLRenderingContext, debug: boolean, program: WebGLProgram) {\n  callAndCheck(gl, debug, () => gl.linkProgram(program));\n  if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n    console.log(gl.getProgramInfoLog(program));\n    throw new Error('Failed to link vertex and fragment shaders.');\n  }\n}\n\nexport function validateProgram(\n    gl: WebGLRenderingContext, debug: boolean, program: WebGLProgram) {\n  callAndCheck(gl, debug, () => gl.validateProgram(program));\n  if (gl.getProgramParameter(program, gl.VALIDATE_STATUS) === false) {\n    console.log(gl.getProgramInfoLog(program));\n    throw new Error('Shader program validation failed.');\n  }\n}\n\nexport function createStaticVertexBuffer(\n    gl: WebGLRenderingContext, debug: boolean,\n    data: Float32Array): WebGLBuffer {\n  const buffer: WebGLBuffer = throwIfNull<WebGLBuffer>(\n      gl, debug, () => gl.createBuffer(), 'Unable to create WebGLBuffer');\n  callAndCheck(gl, debug, () => gl.bindBuffer(gl.ARRAY_BUFFER, buffer));\n  callAndCheck(\n      gl, debug, () => gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW));\n  return buffer;\n}\n\nexport function createStaticIndexBuffer(\n    gl: WebGLRenderingContext, debug: boolean, data: Uint16Array): WebGLBuffer {\n  const buffer: WebGLBuffer = throwIfNull<WebGLBuffer>(\n      gl, debug, () => gl.createBuffer(), 'Unable to create WebGLBuffer');\n  callAndCheck(gl, debug, () => gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer));\n  callAndCheck(\n      gl, debug,\n      () => gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW));\n  return buffer;\n}\n\nexport function getNumChannels(): number {\n  if (ENV.getNumber('WEBGL_VERSION') === 2) {\n    return 1;\n  }\n  return 4;\n}\n\nexport function createTexture(\n    gl: WebGLRenderingContext, debug: boolean): WebGLTexture {\n  return throwIfNull<WebGLTexture>(\n      gl, debug, () => gl.createTexture(), 'Unable to create WebGLTexture.');\n}\n\nexport function validateTextureSize(width: number, height: number) {\n  const maxTextureSize = ENV.getNumber('WEBGL_MAX_TEXTURE_SIZE');\n  if ((width <= 0) || (height <= 0)) {\n    const requested = `[${width}x${height}]`;\n    throw new Error('Requested texture size ' + requested + ' is invalid.');\n  }\n  if ((width > maxTextureSize) || (height > maxTextureSize)) {\n    const requested = `[${width}x${height}]`;\n    const max = `[${maxTextureSize}x${maxTextureSize}]`;\n    throw new Error(\n        'Requested texture size ' + requested +\n        ' greater than WebGL maximum on this browser / GPU ' + max + '.');\n  }\n}\n\nexport function createFramebuffer(\n    gl: WebGLRenderingContext, debug: boolean): WebGLFramebuffer {\n  return throwIfNull<WebGLFramebuffer>(\n      gl, debug, () => gl.createFramebuffer(),\n      'Unable to create WebGLFramebuffer.');\n}\n\nexport function bindVertexBufferToProgramAttribute(\n    gl: WebGLRenderingContext, debug: boolean, program: WebGLProgram,\n    attribute: string, buffer: WebGLBuffer, arrayEntriesPerItem: number,\n    itemStrideInBytes: number, itemOffsetInBytes: number): boolean {\n  const loc = gl.getAttribLocation(program, attribute);\n  if (loc === -1) {\n    // The GPU compiler decided to strip out this attribute because it's unused,\n    // thus no need to bind.\n    return false;\n  }\n  callAndCheck(gl, debug, () => gl.bindBuffer(gl.ARRAY_BUFFER, buffer));\n  callAndCheck(\n      gl, debug,\n      () => gl.vertexAttribPointer(\n          loc, arrayEntriesPerItem, gl.FLOAT, false, itemStrideInBytes,\n          itemOffsetInBytes));\n  callAndCheck(gl, debug, () => gl.enableVertexAttribArray(loc));\n  return true;\n}\n\nexport function bindTextureUnit(\n    gl: WebGLRenderingContext, debug: boolean, texture: WebGLTexture,\n    textureUnit: number) {\n  validateTextureUnit(gl, textureUnit);\n  callAndCheck(gl, debug, () => gl.activeTexture(gl.TEXTURE0 + textureUnit));\n  callAndCheck(gl, debug, () => gl.bindTexture(gl.TEXTURE_2D, texture));\n}\n\nexport function unbindTextureUnit(\n    gl: WebGLRenderingContext, debug: boolean, textureUnit: number) {\n  validateTextureUnit(gl, textureUnit);\n  callAndCheck(gl, debug, () => gl.activeTexture(gl.TEXTURE0 + textureUnit));\n  callAndCheck(gl, debug, () => gl.bindTexture(gl.TEXTURE_2D, null));\n}\n\nexport function getProgramUniformLocationOrThrow(\n    gl: WebGLRenderingContext, debug: boolean, program: WebGLProgram,\n    uniformName: string): WebGLUniformLocation {\n  return throwIfNull<WebGLUniformLocation>(\n      gl, debug, () => gl.getUniformLocation(program, uniformName),\n      'uniform \"' + uniformName + '\" not present in program.');\n}\n\nexport function getProgramUniformLocation(\n    gl: WebGLRenderingContext, program: WebGLProgram,\n    uniformName: string): WebGLUniformLocation {\n  return gl.getUniformLocation(program, uniformName);\n}\n\nexport function bindTextureToProgramUniformSampler(\n    gl: WebGLRenderingContext, debug: boolean, program: WebGLProgram,\n    texture: WebGLTexture, uniformSamplerLocation: WebGLUniformLocation,\n    textureUnit: number) {\n  callAndCheck(\n      gl, debug, () => bindTextureUnit(gl, debug, texture, textureUnit));\n  callAndCheck(\n      gl, debug, () => gl.uniform1i(uniformSamplerLocation, textureUnit));\n}\n\nexport function bindCanvasToFramebuffer(\n    gl: WebGLRenderingContext, debug: boolean) {\n  callAndCheck(gl, debug, () => gl.bindFramebuffer(gl.FRAMEBUFFER, null));\n  callAndCheck(\n      gl, debug, () => gl.viewport(0, 0, gl.canvas.width, gl.canvas.height));\n  callAndCheck(\n      gl, debug, () => gl.scissor(0, 0, gl.canvas.width, gl.canvas.height));\n}\n\nexport function bindColorTextureToFramebuffer(\n    gl: WebGLRenderingContext, debug: boolean, texture: WebGLTexture,\n    framebuffer: WebGLFramebuffer) {\n  callAndCheck(\n      gl, debug, () => gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer));\n  callAndCheck(\n      gl, debug,\n      () => gl.framebufferTexture2D(\n          gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0));\n}\n\nexport function unbindColorTextureFromFramebuffer(\n    gl: WebGLRenderingContext, debug: boolean, framebuffer: WebGLFramebuffer) {\n  callAndCheck(\n      gl, debug, () => gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer));\n  callAndCheck(\n      gl, debug,\n      () => gl.framebufferTexture2D(\n          gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, null, 0));\n}\n\nexport function validateFramebuffer(gl: WebGLRenderingContext) {\n  const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n  if (status !== gl.FRAMEBUFFER_COMPLETE) {\n    throw new Error(\n        'Error binding framebuffer: ' + getFramebufferErrorMessage(gl, status));\n  }\n}\n\nexport function getFramebufferErrorMessage(\n    gl: WebGLRenderingContext, status: number): string {\n  switch (status) {\n    case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n      return 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT';\n    case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n      return 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT';\n    case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n      return 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS';\n    case gl.FRAMEBUFFER_UNSUPPORTED:\n      return 'FRAMEBUFFER_UNSUPPORTED';\n    default:\n      return `unknown error ${status}`;\n  }\n}\n\nfunction throwIfNull<T>(\n    gl: WebGLRenderingContext, debug: boolean, returnTOrNull: () => T | null,\n    failureMessage: string): T {\n  const tOrNull: T|null = callAndCheck(gl, debug, () => returnTOrNull());\n  if (tOrNull == null) {\n    throw new Error(failureMessage);\n  }\n  return tOrNull as T;\n}\n\nfunction validateTextureUnit(gl: WebGLRenderingContext, textureUnit: number) {\n  const maxTextureUnit = gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1;\n  const glTextureUnit = textureUnit + gl.TEXTURE0;\n  if (glTextureUnit < gl.TEXTURE0 || glTextureUnit > maxTextureUnit) {\n    const textureUnitRange = `[gl.TEXTURE0, gl.TEXTURE${maxTextureUnit}]`;\n    throw new Error(`textureUnit must be in ${textureUnitRange}.`);\n  }\n}\n\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\n  return util.sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\n\nexport function getRowsCols(shape: number[]): [number, number] {\n  if (shape.length === 0) {\n    throw Error('Cannot get rows and columns of an empty shape array.');\n  }\n\n  return [\n    shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]\n  ];\n}\n\nexport function getShapeAs3D(shape: number[]): [number, number, number] {\n  let shapeAs3D: [number, number, number] = [1, 1, 1];\n  const isScalar = shape.length === 0 || (shape.length === 1 && shape[0] === 1);\n  if (!isScalar) {\n    shapeAs3D =\n        [getBatchDim(shape), ...getRowsCols(shape)] as [number, number, number];\n  }\n  return shapeAs3D;\n}\n\nexport function getTextureShapeFromLogicalShape(\n    logShape: number[], isPacked = false): [number, number] {\n  let maxTexSize = ENV.getNumber('WEBGL_MAX_TEXTURE_SIZE');\n  if (isPacked) {\n    maxTexSize = maxTexSize * 2;\n\n    // This logic ensures we accurately count the number of packed texels needed\n    // to accommodate the tensor. We can only pack values in the same texel if\n    // they are from adjacent pairs of rows/cols within the same batch. So if a\n    // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n    // fact that the texels containing the third row are half empty.\n    logShape = logShape.map(\n        (d, i) => i >= logShape.length - 2 ?\n            util.nearestLargerEven(logShape[i]) :\n            logShape[i]);\n\n    // Packed texture height is at least 2 (the channel height of a single\n    // texel).\n    if (logShape.length === 1) {\n      logShape = [2, logShape[0]];\n    }\n  }\n\n  // If logical shape is 2, we don't squeeze, since we want to match physical.\n  if (logShape.length !== 2) {\n    const squeezeResult = util.squeezeShape(logShape);\n    logShape = squeezeResult.newShape;\n  }\n\n  let size = util.sizeFromShape(logShape);\n  if (logShape.length <= 1 && size <= maxTexSize) {\n    return [1, size];\n  } else if (\n      logShape.length === 2 && logShape[0] <= maxTexSize &&\n      logShape[1] <= maxTexSize) {\n    return logShape as [number, number];\n  } else if (\n      logShape.length === 3 && logShape[0] * logShape[1] <= maxTexSize &&\n      logShape[2] <= maxTexSize) {\n    return [logShape[0] * logShape[1], logShape[2]];\n  } else if (\n      logShape.length === 3 && logShape[0] <= maxTexSize &&\n      logShape[1] * logShape[2] <= maxTexSize) {\n    return [logShape[0], logShape[1] * logShape[2]];\n  } else if (\n      logShape.length === 4 &&\n      logShape[0] * logShape[1] * logShape[2] <= maxTexSize &&\n      logShape[3] <= maxTexSize) {\n    return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n  } else if (\n      logShape.length === 4 && logShape[0] <= maxTexSize &&\n      logShape[1] * logShape[2] * logShape[3] <= maxTexSize) {\n    return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n  } else {\n    if (isPacked) {\n      // For packed textures size equals the number of channels required to\n      // accommodate the texture data. However in order to squarify such that\n      // inner dimensions stay even, we rewrite size to equal the number of\n      // texels. Then in the return statement we rehydrate the squarified\n      // dimensions to channel units.\n\n      const batchDim = getBatchDim(logShape);\n      let rows = 2, cols = 2;\n      if (logShape.length) {\n        [rows, cols] = getRowsCols(logShape);\n      }\n      size = batchDim * (rows / 2) * (cols / 2);\n      return util.sizeToSquarishShape(size).map(d => d * 2) as [number, number];\n    }\n    return util.sizeToSquarishShape(size);\n  }\n}\n\nfunction isEven(n: number): boolean {\n  return n % 2 === 0;\n}\n\n/**\n * This determines whether reshaping a packed texture requires rearranging\n * the data within the texture, assuming 2x2 packing.\n */\nexport function isReshapeFree(shape1: number[], shape2: number[]): boolean {\n  shape1 = shape1.slice(-2);\n  shape2 = shape2.slice(-2);\n\n  if (util.arraysEqual(shape1, shape2)) {\n    return true;\n  }\n\n  if (!shape1.length || !shape2.length) {  // One of the shapes is a scalar.\n    return true;\n  }\n\n  if (shape1[0] === 0 || shape1[1] === 0 || shape2[0] === 0 ||\n      shape2[1] === 0) {\n    return true;\n  }\n\n  if (shape1.length !== shape2.length) {  // One of the shapes is a vector.\n    const shape1Cols = shape1.slice(-1)[0];\n    const shape2Cols = shape2.slice(-1)[0];\n    if (shape1Cols === shape2Cols) {\n      return true;\n    }\n\n    if (isEven(shape1Cols) && isEven(shape2Cols) &&\n        (shape1[0] === 1 || shape2[0] === 1)) {\n      return true;\n    }\n  }\n  return shape1[1] === shape2[1] && isEven(shape1[0]) && isEven(shape2[0]);\n}\n\n// We cache webgl params because the environment gets reset between\n// unit tests and we don't want to constantly query the WebGLContext for\n// MAX_TEXTURE_SIZE.\nexport let MAX_TEXTURE_SIZE: number;\nexport let MAX_TEXTURES_IN_SHADER: number;\n\nexport function getWebGLMaxTextureSize(webGLVersion: number): number {\n  if (MAX_TEXTURE_SIZE == null) {\n    const gl = getWebGLContext(webGLVersion);\n    MAX_TEXTURE_SIZE = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n  }\n  return MAX_TEXTURE_SIZE;\n}\n\nexport function getMaxTexturesInShader(webGLVersion: number): number {\n  if (MAX_TEXTURES_IN_SHADER == null) {\n    const gl = getWebGLContext(webGLVersion);\n    MAX_TEXTURES_IN_SHADER = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  }\n  // We cap at 16 to avoid spurious runtime \"memory exhausted\" error.\n  return Math.min(16, MAX_TEXTURES_IN_SHADER);\n}\n\nexport function getWebGLDisjointQueryTimerVersion(webGLVersion: number):\n    number {\n  if (webGLVersion === 0) {\n    return 0;\n  }\n\n  let queryTimerVersion: number;\n  const gl = getWebGLContext(webGLVersion);\n\n  if (hasExtension(gl, 'EXT_disjoint_timer_query_webgl2') &&\n      webGLVersion === 2) {\n    queryTimerVersion = 2;\n  } else if (hasExtension(gl, 'EXT_disjoint_timer_query')) {\n    queryTimerVersion = 1;\n  } else {\n    queryTimerVersion = 0;\n  }\n  return queryTimerVersion;\n}\n\nfunction hasExtension(gl: WebGLRenderingContext, extensionName: string) {\n  const ext = gl.getExtension(extensionName);\n  return ext != null;\n}\n\nexport function isWebGLVersionEnabled(webGLVersion: 1|2) {\n  try {\n    const gl = getWebGLContext(webGLVersion);\n    if (gl != null) {\n      return true;\n    }\n  } catch (e) {\n    return false;\n  }\n  return false;\n}\n\nexport function isRenderToFloatTextureEnabled(webGLVersion: number): boolean {\n  if (webGLVersion === 0) {\n    return false;\n  }\n\n  const gl = getWebGLContext(webGLVersion);\n\n  if (webGLVersion === 1) {\n    if (!hasExtension(gl, 'OES_texture_float')) {\n      return false;\n    }\n  } else {\n    if (!hasExtension(gl, 'EXT_color_buffer_float')) {\n      return false;\n    }\n  }\n\n  const isFrameBufferComplete =\n      createFloatTextureAndBindToFramebuffer(gl, webGLVersion);\n  return isFrameBufferComplete;\n}\n\nexport function isDownloadFloatTextureEnabled(webGLVersion: number): boolean {\n  if (webGLVersion === 0) {\n    return false;\n  }\n\n  const gl = getWebGLContext(webGLVersion);\n\n  if (webGLVersion === 1) {\n    if (!hasExtension(gl, 'OES_texture_float')) {\n      return false;\n    }\n    if (!hasExtension(gl, 'WEBGL_color_buffer_float')) {\n      return false;\n    }\n  } else {\n    if (!hasExtension(gl, 'EXT_color_buffer_float')) {\n      return false;\n    }\n  }\n\n  const isFrameBufferComplete =\n      createFloatTextureAndBindToFramebuffer(gl, webGLVersion);\n  return isFrameBufferComplete;\n}\n\nfunction createFloatTextureAndBindToFramebuffer(\n    gl: WebGLRenderingContext, webGLVersion: number): boolean {\n  const frameBuffer = gl.createFramebuffer();\n  const texture = gl.createTexture();\n\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  // tslint:disable-next-line:no-any\n  const internalFormat = webGLVersion === 2 ? (gl as any).RGBA32F : gl.RGBA;\n  gl.texImage2D(\n      gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n  gl.framebufferTexture2D(\n      gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n  const isFrameBufferComplete =\n      gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  gl.deleteTexture(texture);\n  gl.deleteFramebuffer(frameBuffer);\n\n  return isFrameBufferComplete;\n}\n\nexport function isWebGLFenceEnabled(webGLVersion: number) {\n  if (webGLVersion !== 2) {\n    return false;\n  }\n  const gl = getWebGLContext(webGLVersion);\n\n  // tslint:disable-next-line:no-any\n  const isEnabled = (gl as any).fenceSync != null;\n  return isEnabled;\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelBackend} from './backends/backend';\nimport {ENGINE, MemoryInfo, ProfileInfo, ScopeFn, TimingInfo} from './engine';\nimport {ENV} from './environment';\nimport {Platform} from './platforms/platform';\nimport {setDeprecationWarningFn, Tensor} from './tensor';\nimport {TensorContainer} from './tensor_types';\nimport {getTensorsInContainer} from './tensor_util';\n\n/**\n * Enables production mode which disables correctness checks in favor of\n * performance.\n */\n/** @doc {heading: 'Environment'} */\nexport function enableProdMode(): void {\n  ENV.set('PROD', true);\n}\n\n/**\n * Enables debug mode which will log information about all executed kernels:\n * the ellapsed time of the kernel execution, as well as the rank, shape, and\n * size of the output tensor.\n *\n * Debug mode will significantly slow down your application as it will\n * download the result of every operation to the CPU. This should not be used in\n * production. Debug mode does not affect the timing information of the kernel\n * execution as we do not measure download time in the kernel execution time.\n *\n * See also: `tf.profile`, `tf.memory`.\n */\n/** @doc {heading: 'Environment'} */\nexport function enableDebugMode(): void {\n  ENV.set('DEBUG', true);\n}\n\n/** Globally disables deprecation warnings */\nexport function disableDeprecationWarnings(): void {\n  ENV.set('DEPRECATION_WARNINGS_ENABLED', false);\n  console.warn(`TensorFlow.js deprecation warnings have been disabled.`);\n}\n\n/** Warn users about deprecated functionality. */\nexport function deprecationWarn(msg: string) {\n  if (ENV.getBool('DEPRECATION_WARNINGS_ENABLED')) {\n    console.warn(\n        msg + ' You can disable deprecation warnings with ' +\n        'tf.disableDeprecationWarnings().');\n  }\n}\nsetDeprecationWarningFn(deprecationWarn);\n\n/**\n * Dispose all variables kept in backend engine.\n */\n/** @doc {heading: 'Environment'} */\nexport function disposeVariables(): void {\n  ENGINE.disposeVariables();\n}\n\n/**\n * Returns memory info at the current time in the program. The result is an\n * object with the following properties:\n *\n * - `numBytes`: Number of bytes allocated (undisposed) at this time.\n * - `numTensors`: Number of unique tensors allocated.\n * - `numDataBuffers`: Number of unique data buffers allocated\n *   (undisposed) at this time, which is ≤ the number of tensors\n *   (e.g. `a.reshape(newShape)` makes a new Tensor that shares the same\n *   data buffer with `a`).\n * - `unreliable`: True if the memory usage is unreliable. See `reasons` when\n *    `unrealible` is true.\n * - `reasons`: `string[]`, reasons why the memory is unreliable, present if\n *    `unreliable` is true.\n */\n/** @doc {heading: 'Performance', subheading: 'Memory'} */\nexport function memory(): MemoryInfo {\n  return ENGINE.memory();\n}\n\n/**\n * Executes the provided function `f()` and returns a promise that resolves\n * with information about the function's memory use:\n * - `newBytes`: tne number of new bytes allocated\n * - `newTensors`: the number of new tensors created\n * - `peakBytes`: the peak number of bytes allocated\n * - `kernels`: an array of objects for each kernel involved that reports\n * their input and output shapes, number of bytes used, and number of new\n * tensors created.\n *\n * ```js\n * const profile = await tf.profile(() => {\n *   const x = tf.tensor1d([1, 2, 3]);\n *   let x2 = x.square();\n *   x2.dispose();\n *   x2 = x.square();\n *   x2.dispose();\n *   return x;\n * });\n *\n * console.log(`newBytes: ${profile.newBytes}`);\n * console.log(`newTensors: ${profile.newTensors}`);\n * console.log(`byte usage over all kernels: ${profile.kernels.map(k =>\n * k.totalBytesSnapshot)}`);\n * ```\n *\n */\n/** @doc {heading: 'Performance', subheading: 'Profile'} */\nexport function profile(f: () => TensorContainer): Promise<ProfileInfo> {\n  return ENGINE.profile(f);\n}\n\n/**\n * Executes the provided function `fn` and after it is executed, cleans up all\n * intermediate tensors allocated by `fn` except those returned by `fn`.\n * `fn` must not return a Promise (async functions not allowed). The returned\n * result can be a complex object.\n *\n * Using this method helps avoid memory leaks. In general, wrap calls to\n * operations in `tf.tidy` for automatic memory cleanup.\n *\n * NOTE: Variables do *not* get cleaned up when inside a tidy(). If you want to\n * dispose variables, please use `tf.disposeVariables` or call dispose()\n * directly on variables.\n *\n * ```js\n * // y = 2 ^ 2 + 1\n * const y = tf.tidy(() => {\n *   // a, b, and one will be cleaned up when the tidy ends.\n *   const one = tf.scalar(1);\n *   const a = tf.scalar(2);\n *   const b = a.square();\n *\n *   console.log('numTensors (in tidy): ' + tf.memory().numTensors);\n *\n *   // The value returned inside the tidy function will return\n *   // through the tidy, in this case to the variable y.\n *   return b.add(one);\n * });\n *\n * console.log('numTensors (outside tidy): ' + tf.memory().numTensors);\n * y.print();\n * ```\n *\n * @param nameOrFn The name of the closure, or the function to execute.\n *     If a name is provided, the 2nd argument should be the function.\n *     If debug mode is on, the timing and the memory usage of the function\n *     will be tracked and displayed on the console using the provided name.\n * @param fn The function to execute.\n */\n/** @doc {heading: 'Performance', subheading: 'Memory'} */\nexport function tidy<T extends TensorContainer>(\n    nameOrFn: string|ScopeFn<T>, fn?: ScopeFn<T>): T {\n  return ENGINE.tidy(nameOrFn, fn);\n}\n\n/**\n * Disposes any `tf.Tensor`s found within the provided object.\n *\n * @param container an object that may be a `tf.Tensor` or may directly\n *     contain `tf.Tensor`s, such as a `Tensor[]` or `{key: Tensor, ...}`. If\n *     the object is not a `tf.Tensor` or does not contain `Tensors`, nothing\n *     happens. In general it is safe to pass any object here, except that\n *     `Promise`s are not supported.\n */\n/** @doc {heading: 'Performance', subheading: 'Memory'} */\nexport function dispose(container: TensorContainer) {\n  const tensors = getTensorsInContainer(container);\n  tensors.forEach(tensor => tensor.dispose());\n}\n\n/**\n * Keeps a `tf.Tensor` generated inside a `tf.tidy` from being disposed\n * automatically.\n *\n * ```js\n * let b;\n * const y = tf.tidy(() => {\n *   const one = tf.scalar(1);\n *   const a = tf.scalar(2);\n *\n *   // b will not be cleaned up by the tidy. a and one will be cleaned up\n *   // when the tidy ends.\n *   b = tf.keep(a.square());\n *\n *   console.log('numTensors (in tidy): ' + tf.memory().numTensors);\n *\n *   // The value returned inside the tidy function will return\n *   // through the tidy, in this case to the variable y.\n *   return b.add(one);\n * });\n *\n * console.log('numTensors (outside tidy): ' + tf.memory().numTensors);\n * console.log('y:');\n * y.print();\n * console.log('b:');\n * b.print();\n * ```\n *\n * @param result The tensor to keep from being disposed.\n */\n/** @doc {heading: 'Performance', subheading: 'Memory'} */\nexport function keep<T extends Tensor>(result: T): T {\n  return ENGINE.keep(result);\n}\n\n/**\n * Executes `f()` and returns a promise that resolves with timing\n * information.\n *\n * The result is an object with the following properties:\n *\n * - `wallMs`: Wall execution time.\n * - `kernelMs`: Kernel execution time, ignoring data transfer.\n * - On `WebGL` The following additional properties exist:\n *   - `uploadWaitMs`: CPU blocking time on texture uploads.\n *   - `downloadWaitMs`: CPU blocking time on texture downloads (readPixels).\n *\n * ```js\n * const x = tf.randomNormal([20, 20]);\n * const time = await tf.time(() => x.matMul(x));\n *\n * console.log(`kernelMs: ${time.kernelMs}, wallTimeMs: ${time.wallMs}`);\n * ```\n *\n * @param f The function to execute and time.\n */\n/** @doc {heading: 'Performance', subheading: 'Timing'} */\nexport function time(f: () => void): Promise<TimingInfo> {\n  return ENGINE.time(f);\n}\n\n/**\n * Sets the backend (cpu, webgl, etc) responsible for creating tensors and\n * executing operations on those tensors. Returns a promise that resolves\n * to a boolean if the backend initialization was successful.\n *\n * Note this disposes the current backend, if any, as well as any tensors\n * associated with it. A new backend is initialized, even if it is of the\n * same type as the previous one.\n *\n * @param backendName The name of the backend. Currently supports\n *     `'webgl'|'cpu'` in the browser, and `'tensorflow'` under node.js\n *     (requires tfjs-node).\n */\n/** @doc {heading: 'Backends'} */\nexport function setBackend(backendName: string): Promise<boolean> {\n  return ENGINE.setBackend(backendName);\n}\n\n/**\n * Returns a promise that resolves when the currently selected backend (or the\n * highest priority one) has initialized. Await this promise when you are using\n * a backend that has async initialization.\n */\n/** @doc {heading: 'Backends'} */\nexport function ready(): Promise<void> {\n  return ENGINE.ready();\n}\n\n/**\n * Returns the current backend name (cpu, webgl, etc). The backend is\n * responsible for creating tensors and executing operations on those tensors.\n */\n/** @doc {heading: 'Backends'} */\nexport function getBackend(): string {\n  return ENGINE.backendName;\n}\n\n/**\n * Removes a backend and the registered factory.\n */\n/** @doc {heading: 'Backends'} */\nexport function removeBackend(name: string): void {\n  ENGINE.removeBackend(name);\n}\n\n/**\n * Finds the backend registered under the provided name. Returns null if the\n * name is not in the registry, or the registration hasn't finished yet.\n */\nexport function findBackend(name: string): KernelBackend {\n  return ENGINE.findBackend(name);\n}\n\n/**\n * Finds the backend factory registered under the provided name. Returns a\n * function that produces a new backend when called. Returns null if the name\n * is not in the registry.\n */\nexport function findBackendFactory(name: string): () =>\n    KernelBackend | Promise<KernelBackend> {\n  return ENGINE.findBackendFactory(name);\n}\n\n/**\n * Registers a global backend. The registration should happen when importing\n * a module file (e.g. when importing `backend_webgl.ts`), and is used for\n * modular builds (e.g. custom tfjs bundle with only webgl support).\n *\n * @param factory The backend factory function. When called, it should\n * return a backend instance, or a promise of an instance.\n * @param priority The priority of the backend (higher = more important).\n *     In case multiple backends are registered, the priority is used to find\n *     the best backend. Defaults to 1.\n * @return False if there is already a registered backend under this name, true\n *     if not.\n */\n/** @doc {heading: 'Backends'} */\nexport function registerBackend(\n    name: string, factory: () => KernelBackend | Promise<KernelBackend>,\n    priority = 1): boolean {\n  return ENGINE.registerBackend(name, factory, priority);\n}\n\n/**\n * Gets the current backend. If no backends have been initialized, this will\n * attempt to initialize the best backend. Will throw an error if the highest\n * priority backend has async initialization, in which case, you should call\n * 'await tf.ready()' before running other code.\n */\n/** @doc {heading: 'Backends'} */\nexport function backend(): KernelBackend {\n  return ENGINE.backend;\n}\n\n/**\n * Sets the global platform.\n *\n * @param platformName The name of this platform.\n * @param platform A platform implementation.\n */\nexport function setPlatform(platformName: string, platform: Platform) {\n  ENV.setPlatform(platformName, platform);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENV} from './environment';\n\nexport function warn(...msg: Array<{}>): void {\n  if (!ENV.getBool('IS_TEST')) {\n    console.warn(...msg);\n  }\n}\n\nexport function log(...msg: Array<{}>): void {\n  if (!ENV.getBool('IS_TEST')) {\n    console.log(...msg);\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENV} from './environment';\nimport {Tensor} from './tensor';\nimport {DataType, TensorLike, TypedArray} from './types';\nimport {assert, flatten, inferDtype, isTypedArray, toTypedArray} from './util';\n\nexport function inferShape(val: TensorLike): number[] {\n  let firstElem: typeof val = val;\n\n  if (isTypedArray(val)) {\n    return [(val as TypedArray).length];\n  }\n  if (!Array.isArray(val)) {\n    return [];  // Scalar.\n  }\n  const shape: number[] = [];\n\n  while (Array.isArray(firstElem) || isTypedArray(firstElem)) {\n    shape.push(firstElem.length);\n    firstElem = firstElem[0];\n  }\n  if (Array.isArray(val) && ENV.getBool('TENSORLIKE_CHECK_SHAPE_CONSISTENCY')) {\n    deepAssertShapeConsistency(val, shape, []);\n  }\n\n  return shape;\n}\n\nfunction deepAssertShapeConsistency(\n    val: TensorLike, shape: number[], indices: number[]) {\n  indices = indices || [];\n  if (!(Array.isArray(val)) && !isTypedArray(val)) {\n    assert(\n        shape.length === 0,\n        () => `Element arr[${indices.join('][')}] is a primitive, ` +\n            `but should be an array/TypedArray of ${shape[0]} elements`);\n    return;\n  }\n  assert(\n      shape.length > 0,\n      () => `Element arr[${indices.join('][')}] should be a primitive, ` +\n          `but is an array of ${val.length} elements`);\n  assert(\n      val.length === shape[0],\n      () => `Element arr[${indices.join('][')}] should have ${shape[0]} ` +\n          `elements, but has ${val.length} elements`);\n  const subShape = shape.slice(1);\n  for (let i = 0; i < val.length; ++i) {\n    deepAssertShapeConsistency(val[i], subShape, indices.concat(i));\n  }\n}\n\nfunction assertDtype(\n    expectedDtype: DataType|'numeric', actualDType: DataType, argName: string,\n    functionName: string) {\n  if (expectedDtype == null) {\n    return;\n  }\n  if (expectedDtype !== 'numeric' && expectedDtype !== actualDType ||\n      expectedDtype === 'numeric' && actualDType === 'string') {\n    throw new Error(\n        `Argument '${argName}' passed to '${functionName}' must ` +\n        `be ${expectedDtype} tensor, but got ${actualDType} tensor`);\n  }\n}\n\nexport function convertToTensor<T extends Tensor>(\n    x: T|TensorLike, argName: string, functionName: string,\n    parseAsDtype: DataType|'numeric' = 'numeric'): T {\n  if (x instanceof Tensor) {\n    assertDtype(parseAsDtype, x.dtype, argName, functionName);\n    return x;\n  }\n  let inferredDtype = inferDtype(x);\n  // If the user expects a bool/int/float, use that info to update the\n  // inferredDtype when it is not a string.\n  if (inferredDtype !== 'string' &&\n      ['bool', 'int32', 'float32'].indexOf(parseAsDtype) >= 0) {\n    inferredDtype = parseAsDtype as DataType;\n  }\n  assertDtype(parseAsDtype, inferredDtype, argName, functionName);\n\n  if ((x == null) ||\n      (!isTypedArray(x) && !Array.isArray(x) && typeof x !== 'number' &&\n       typeof x !== 'boolean' && typeof x !== 'string')) {\n    const type = x == null ? 'null' : (x as {}).constructor.name;\n    throw new Error(\n        `Argument '${argName}' passed to '${functionName}' must be a ` +\n        `Tensor or TensorLike, but got '${type}'`);\n  }\n  const inferredShape = inferShape(x);\n  if (!isTypedArray(x) && !Array.isArray(x)) {\n    x = [x] as number[];\n  }\n  const values = inferredDtype !== 'string' ?\n      toTypedArray(x, inferredDtype as DataType, ENV.getBool('DEBUG')) :\n      flatten(x as string[]) as string[];\n  return Tensor.make(inferredShape, {values}, inferredDtype);\n}\n\nexport function convertToTensorArray<T extends Tensor>(\n    arg: Array<T|TensorLike>, argName: string, functionName: string,\n    parseAsDtype: DataType|'numeric' = 'numeric'): T[] {\n  if (!Array.isArray(arg)) {\n    throw new Error(\n        `Argument ${argName} passed to ${functionName} must be a ` +\n        '`Tensor[]` or `TensorLike[]`');\n  }\n  const tensors = arg as T[];\n  return tensors.map(\n      (t, i) => convertToTensor(t, `${argName}[${i}]`, functionName),\n      parseAsDtype);\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as util from '../util';\n\n/**\n * Returns true if the axis specifies the inner most dimensions of the\n * array.\n */\nexport function axesAreInnerMostDims(axes: number[], rank: number): boolean {\n  for (let i = 0; i < axes.length; ++i) {\n    if (axes[axes.length - i - 1] !== rank - 1 - i) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function combineLocations(\n    outputLoc: number[], reduceLoc: number[], axes: number[]): number[] {\n  const rank = outputLoc.length + reduceLoc.length;\n  const loc = [];\n  let outIdx = 0;\n  let reduceIdx = 0;\n    for (let dim = 0; dim < rank; dim++) {\n    if (axes.indexOf(dim) === -1) {\n      loc.push(outputLoc[outIdx++]);\n    } else {\n      loc.push(reduceLoc[reduceIdx++]);\n    }\n  }\n  return loc;\n}\n\nexport function computeOutAndReduceShapes(\n    aShape: number[], axes: number[]): [number[], number[]] {\n  const outShape = [];\n  const rank = aShape.length;\n  for (let dim = 0; dim < rank; dim++) {\n    if (axes.indexOf(dim) === -1) {\n      outShape.push(aShape[dim]);\n    }\n  }\n  const reduceShape = axes.map(dim => aShape[dim]);\n  return [outShape, reduceShape];\n}\n\nexport function expandShapeToKeepDim(\n    shape: number[], axes: number[]): number[] {\n  const reduceSubShape = axes.map(x => 1);\n  return combineLocations(shape, reduceSubShape, axes);\n}\n\nexport function assertAxesAreInnerMostDims(\n    msg: string, axes: number[], rank: number): void {\n  util.assert(\n      axesAreInnerMostDims(axes, rank),\n      () => `${msg} supports only inner-most axes for now. ` +\n          `Got axes ${axes} and rank-${rank} input.`);\n}\n\n/**\n * Returns the axes permutation to be used with `tf.transpose`, if such\n * permutation is necessary. Otherwise it returns null. This method is used by\n * operations that operate only on inner-most axes.\n */\nexport function getAxesPermutation(axes: number[], rank: number): number[]|\n    null {\n  if (axesAreInnerMostDims(axes, rank)) {\n    return null;\n  }\n  const result: number[] = [];\n  for (let i = 0; i < rank; ++i) {\n    if (axes.indexOf(i) === -1) {\n      result.push(i);\n    }\n  }\n  axes.forEach(axis => result.push(axis));\n  return result;\n}\n\n/** Returns the axes permutation that undoes the original permutation. */\nexport function getUndoAxesPermutation(axes: number[]): number[] {\n  return axes.map((axis, i) => [i, axis])\n      .sort((a, b) => a[1] - b[1])\n      .map(x => x[0]);\n}\n\nexport function getInnerMostAxes(numAxes: number, rank: number): number[] {\n  const res: number[] = [];\n  for (let i = rank - numAxes; i < rank; ++i) {\n    res.push(i);\n  }\n  return res;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as util from '../util';\n\nexport function assertParamsConsistent(shapes: number[][], axis: number) {\n  const rank = shapes[0].length;\n  shapes.forEach((shape, i) => {\n    util.assert(\n        shape.length === rank,\n        () =>\n            `Error in concat${rank}D: rank of tensors[${i}] must be the same ` +\n            `as the rank of the rest (${rank})`);\n  });\n\n  util.assert(\n      axis >= 0 && axis < rank,\n      () => `Error in concat${rank}D: axis must be between 0 and ${rank - 1}.`);\n\n  const firstShape = shapes[0];\n  shapes.forEach((shape, i) => {\n    for (let r = 0; r < rank; r++) {\n      util.assert(\n          (r === axis) || (shape[r] === firstShape[r]),\n          () => `Error in concat${rank}D: Shape of tensors[${i}] (${shape}) ` +\n              `does not match the shape of the rest (${firstShape}) ` +\n              `along the non-concatenated axis ${i}.`);\n    }\n  });\n}\n\nexport function computeOutShape(shapes: number[][], axis: number): number[] {\n  const outputShape = shapes[0].slice();\n  for (let i = 1; i < shapes.length; i++) {\n    outputShape[axis] += shapes[i][axis];\n  }\n  return outputShape;\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\n\n/**\n * Used for wrapping functions that perform math operations on\n * Tensors. The function will be wrapped in a named scope that cleans all\n * memory usage after the function is done.\n */\nexport function op<T extends Function>(f: {[name: string]: T}): T {\n  const keys = Object.keys(f);\n  if (keys.length !== 1) {\n    throw new Error(\n        `Please provide an object with a single key ` +\n        `(operation name) mapping to a function. Got an object with ` +\n        `${keys.length} keys.`);\n  }\n\n  let opName = keys[0];\n  const fn = f[opName];\n\n  // Strip the underscore from the end of the function name.\n  if (opName.endsWith('_')) {\n    opName = opName.substring(0, opName.length - 1);\n  }\n\n  // tslint:disable-next-line:no-any\n  const f2 = (...args: any[]) => {\n    ENGINE.startScope(opName);\n    try {\n      const result = fn(...args);\n      if (result instanceof Promise) {\n        console.error('Cannot return a Promise inside of tidy.');\n      }\n      ENGINE.endScope(result);\n      return result;\n    } catch (ex) {\n      ENGINE.endScope(null);\n      throw ex;\n    }\n  };\n  Object.defineProperty(f2, 'name', {value: opName, configurable: true});\n\n  // tslint:disable-next-line:no-any\n  return f2 as any as T;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as device_util from '../../device_util';\nimport {ENV} from '../../environment';\nimport * as webgl_util from './webgl_util';\n\n/**\n * This file contains WebGL-specific flag registrations.\n */\n\n/**\n * True if WebGL is supported.\n */\nENV.registerFlag('HAS_WEBGL', () => ENV.getNumber('WEBGL_VERSION') > 0);\n\n/** 0: No WebGL, 1: WebGL 1.0, 2: WebGL 2.0. */\nENV.registerFlag('WEBGL_VERSION', () => {\n  if (webgl_util.isWebGLVersionEnabled(2)) {\n    return 2;\n  } else if (webgl_util.isWebGLVersionEnabled(1)) {\n    return 1;\n  }\n  return 0;\n});\n\nENV.registerFlag(\n    'WEBGL_BUFFER_SUPPORTED', () => ENV.get('WEBGL_VERSION') === 2);\n\n/** Whether the WebGL backend will sometimes forward ops to the CPU. */\nENV.registerFlag('WEBGL_CPU_FORWARD', () => true);\n\n/** Whether to turn all packing related flags on. */\nENV.registerFlag('WEBGL_PACK', () => ENV.getBool('HAS_WEBGL'));\n\n/** Whether we will pack the batchnormalization op. */\nENV.registerFlag('WEBGL_PACK_NORMALIZATION', () => ENV.getBool('WEBGL_PACK'));\n\n/** Whether we will pack the clip op. */\nENV.registerFlag('WEBGL_PACK_CLIP', () => ENV.getBool('WEBGL_PACK'));\n\n/** Whether we will pack the depthwise conv op. */\n// TODO: https://github.com/tensorflow/tfjs/issues/1679\nENV.registerFlag('WEBGL_PACK_DEPTHWISECONV', () => false);\n\n/** Whether we will pack binary ops. */\nENV.registerFlag(\n    'WEBGL_PACK_BINARY_OPERATIONS', () => ENV.getBool('WEBGL_PACK'));\n\n/** Whether we will pack array ops. */\nENV.registerFlag(\n    'WEBGL_PACK_ARRAY_OPERATIONS', () => ENV.getBool('WEBGL_PACK'));\n\n/** Whether we will pack image ops. */\nENV.registerFlag(\n    'WEBGL_PACK_IMAGE_OPERATIONS', () => ENV.getBool('WEBGL_PACK'));\n\n/** Whether we will pack reduce ops. */\nENV.registerFlag('WEBGL_PACK_REDUCE', () => ENV.getBool('WEBGL_PACK'));\n\n/** Whether packed WebGL kernels lazily unpack their outputs. */\nENV.registerFlag('WEBGL_LAZILY_UNPACK', () => ENV.getBool('WEBGL_PACK'));\n\n/** Whether we will use the im2col algorithm to speed up convolutions. */\nENV.registerFlag('WEBGL_CONV_IM2COL', () => ENV.getBool('WEBGL_PACK'));\n\n/** The maximum texture dimension. */\nENV.registerFlag(\n    'WEBGL_MAX_TEXTURE_SIZE',\n    () => webgl_util.getWebGLMaxTextureSize(ENV.getNumber('WEBGL_VERSION')));\n\n/** The maximum texture dimension. */\nENV.registerFlag(\n    'WEBGL_MAX_TEXTURES_IN_SHADER',\n    () => webgl_util.getMaxTexturesInShader(ENV.getNumber('WEBGL_VERSION')));\n\n/**\n * The disjoint_query_timer extension version.\n * 0: disabled, 1: EXT_disjoint_timer_query, 2:\n * EXT_disjoint_timer_query_webgl2.\n * In Firefox with WebGL 2.0,\n * EXT_disjoint_timer_query_webgl2 is not available, so we must use the\n * WebGL 1.0 extension.\n */\nENV.registerFlag('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION', () => {\n  const webGLVersion = ENV.getNumber('WEBGL_VERSION');\n\n  if (webGLVersion === 0) {\n    return 0;\n  }\n  return webgl_util.getWebGLDisjointQueryTimerVersion(webGLVersion);\n});\n\n/**\n * Whether the timer object from the disjoint_query_timer extension gives\n * timing information that is reliable.\n */\nENV.registerFlag(\n    'WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE',\n    () => ENV.getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0 &&\n        !device_util.isMobile());\n\n/**\n * Whether rendering to float32 textures is enabled. If disabled, renders to\n * float16 textures.\n */\nENV.registerFlag(\n    'WEBGL_RENDER_FLOAT32_ENABLED',\n    () => webgl_util.isRenderToFloatTextureEnabled(\n        ENV.getNumber('WEBGL_VERSION')));\n\n/**\n * Whether downloading float textures is enabled (16 or 32 bit). If disabled,\n * uses IEEE 754 encoding of the float32 values to 4 uint8 when downloading.\n */\nENV.registerFlag(\n    'WEBGL_DOWNLOAD_FLOAT_ENABLED',\n    () => webgl_util.isDownloadFloatTextureEnabled(\n        ENV.getNumber('WEBGL_VERSION')));\n\n/** Whether the fence API is available. */\nENV.registerFlag(\n    'WEBGL_FENCE_API_ENABLED',\n    () => webgl_util.isWebGLFenceEnabled(ENV.getNumber('WEBGL_VERSION')));\n\n/**\n * Tensors with size <= than this will be uploaded as uniforms, not textures.\n */\nENV.registerFlag('WEBGL_SIZE_UPLOAD_UNIFORM', () => {\n  // Use uniform uploads only when 32bit floats are supported. In\n  // 16bit\n  // environments there are problems with comparing a 16bit texture value\n  // with a 32bit uniform value.\n  const useUniforms = ENV.getBool('WEBGL_RENDER_FLOAT32_ENABLED');\n  return useUniforms ? 4 : 0;\n});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\nimport {op} from './operation';\n\n/**\n * Converts two real numbers to a complex number.\n *\n * Given a tensor `real` representing the real part of a complex number, and a\n * tensor `imag` representing the imaginary part of a complex number, this\n * operation returns complex numbers elementwise of the form [r0, i0, r1, i1],\n * where r represents the real part and i represents the imag part.\n *\n * The input tensors real and imag must have the same shape.\n *\n * ```js\n * const real = tf.tensor1d([2.25, 3.25]);\n * const imag = tf.tensor1d([4.75, 5.75]);\n * const complex = tf.complex(real, imag);\n *\n * complex.print();\n * ```\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction complex_<T extends Tensor>(real: T|TensorLike, imag: T|TensorLike): T {\n  const $real = convertToTensor(real, 'real', 'complex');\n  const $imag = convertToTensor(imag, 'imag', 'complex');\n  util.assertShapesMatch(\n      $real.shape, $imag.shape,\n      `real and imag shapes, ${$real.shape} and ${$imag.shape}, ` +\n          `must match in call to tf.complex().`);\n\n  return ENGINE.runKernel(\n             backend => backend.complex($real, $imag), {$real, $imag}) as T;\n}\n\n/**\n * Returns the real part of a complex (or real) tensor.\n *\n * Given a tensor input, this operation returns a tensor of type float that is\n * the real part of each element in input considered as a complex number.\n *\n * If the input is real, it simply makes a clone.\n *\n * ```js\n * const x = tf.complex([-2.25, 3.25], [4.75, 5.75]);\n * tf.real(x).print();\n * ```\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction real_<T extends Tensor>(input: T|TensorLike): T {\n  const $input = convertToTensor(input, 'input', 'real');\n\n  return ENGINE.runKernel(backend => backend.real($input), {$input}) as T;\n}\n\n/**\n * Returns the imaginary part of a complex (or real) tensor.\n *\n * Given a tensor input, this operation returns a tensor of type float that is\n * the imaginary part of each element in input considered as a complex number.\n * If input is real, a tensor of all zeros is returned.\n *\n * ```js\n * const x = tf.complex([-2.25, 3.25], [4.75, 5.75]);\n * tf.imag(x).print();\n * ```\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction imag_<T extends Tensor>(input: T|TensorLike): T {\n  const $input = convertToTensor(input, 'input', 'imag');\n\n  return ENGINE.runKernel(backend => backend.imag($input), {$input}) as T;\n}\n\nexport const complex = op({complex_});\nexport const real = op({real_});\nexport const imag = op({imag_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {ENV} from '../environment';\nimport {Scalar, Tensor, Tensor1D, Tensor2D, Tensor3D, Tensor4D, Tensor5D, Tensor6D} from '../tensor';\nimport {convertToTensor, inferShape} from '../tensor_util_env';\nimport {TensorLike, TensorLike1D, TensorLike2D, TensorLike3D, TensorLike4D, TensorLike5D, TensorLike6D, TypedArray} from '../types';\nimport {DataType, Rank, ShapeMap} from '../types';\nimport {assert, assertNonNegativeIntegerDimensions, assertNonNull, flatten, inferDtype, isTypedArray, makeOnesTypedArray, makeZerosTypedArray, sizeFromShape, toTypedArray} from '../util';\nimport {complex, imag, real} from './complex_ops';\nimport {op} from './operation';\n\n/**\n * Creates a `tf.Tensor` with the provided values, shape and dtype.\n *\n * ```js\n * // Pass an array of values to create a vector.\n * tf.tensor([1, 2, 3, 4]).print();\n * ```\n *\n * ```js\n * // Pass a nested array of values to make a matrix or a higher\n * // dimensional tensor.\n * tf.tensor([[1, 2], [3, 4]]).print();\n * ```\n *\n * ```js\n * // Pass a flat array and specify a shape yourself.\n * tf.tensor([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction tensor<R extends Rank>(\n    values: TensorLike, shape?: ShapeMap[R], dtype?: DataType): Tensor<R> {\n  const inferredShape = inferShape(values);\n  return makeTensor(values, shape, inferredShape, dtype) as Tensor<R>;\n}\n\n/** This is shared code across all tensor creation methods. */\nfunction makeTensor(\n    values: TensorLike, shape: number[], inferredShape: number[],\n    dtype?: DataType): Tensor {\n  if (dtype == null) {\n    dtype = inferDtype(values);\n  }\n  if (dtype === 'complex64') {\n    throw new Error(\n        `Cannot construct a complex64 tensor directly. ` +\n        `Please use tf.complex(real, imag).`);\n  }\n  if (!isTypedArray(values) && !Array.isArray(values) &&\n      typeof values !== 'number' && typeof values !== 'boolean' &&\n      typeof values !== 'string') {\n    throw new Error(\n        'values passed to tensor(values) must be a number/boolean/string or ' +\n        'an array of numbers/booleans/strings, or a TypedArray');\n  }\n  if (shape != null) {\n    assertNonNegativeIntegerDimensions(shape);\n\n    const providedSize = sizeFromShape(shape);\n    const inferredSize = sizeFromShape(inferredShape);\n    assert(\n        providedSize === inferredSize,\n        () =>\n            `Based on the provided shape, [${shape}], the tensor should have ` +\n            `${providedSize} values but has ${inferredSize}`);\n\n    for (let i = 0; i < inferredShape.length; ++i) {\n      const inferred = inferredShape[i];\n      const flatDimsDontMatch = i === inferredShape.length - 1 ?\n          inferred !== sizeFromShape(shape.slice(i)) :\n          true;\n      assert(\n          inferredShape[i] === shape[i] || !flatDimsDontMatch,\n          () => `Error creating a new Tensor. Inferred shape ` +\n              `(${inferredShape}) does not match the provided ` +\n              `shape (${shape}). `);\n    }\n  }\n\n  if (!isTypedArray(values) && !Array.isArray(values)) {\n    values = [values] as number[];\n  }\n\n  shape = shape || inferredShape;\n  values = dtype !== 'string' ?\n      toTypedArray(values, dtype, ENV.getBool('DEBUG')) :\n      flatten(values as string[]) as string[];\n  return Tensor.make(shape, {values: values as TypedArray}, dtype);\n}\n\n/**\n * Creates rank-0 `tf.Tensor` (scalar) with the provided value and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.scalar` as it makes the code more readable.\n *\n * ```js\n * tf.scalar(3.14).print();\n * ```\n *\n * @param value The value of the scalar.\n * @param dtype The data type.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction scalar(value: number|boolean|string, dtype?: DataType): Scalar {\n  if ((isTypedArray(value) || Array.isArray(value)) && dtype !== 'complex64') {\n    throw new Error(\n        'Error creating a new Scalar: value must be a primitive ' +\n        '(number|boolean|string)');\n  }\n  const shape: number[] = [];\n  const inferredShape: number[] = [];\n  return makeTensor(value, shape, inferredShape, dtype) as Scalar;\n}\n\n/**\n * Creates rank-1 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor1d` as it makes the code more readable.\n *\n * ```js\n * tf.tensor1d([1, 2, 3]).print();\n * ```\n *\n * @param values The values of the tensor. Can be array of numbers,\n *     or a `TypedArray`.\n * @param dtype The data type.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction tensor1d(values: TensorLike1D, dtype?: DataType): Tensor1D {\n  assertNonNull(values);\n  const inferredShape = inferShape(values);\n  if (inferredShape.length !== 1) {\n    throw new Error('tensor1d() requires values to be a flat/TypedArray');\n  }\n  const shape: number[] = null;\n  return makeTensor(values, shape, inferredShape, dtype) as Tensor1D;\n}\n\n/**\n * Creates rank-2 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor2d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor2d([[1, 2], [3, 4]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. If not provided, it is inferred from\n *     `values`.\n * @param dtype The data type.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction tensor2d(\n    values: TensorLike2D, shape?: [number, number],\n    dtype?: DataType): Tensor2D {\n  assertNonNull(values);\n  if (shape != null && shape.length !== 2) {\n    throw new Error('tensor2d() requires shape to have two numbers');\n  }\n  const inferredShape = inferShape(values);\n  if (inferredShape.length !== 2 && inferredShape.length !== 1) {\n    throw new Error(\n        'tensor2d() requires values to be number[][] or flat/TypedArray');\n  }\n  if (inferredShape.length === 1 && shape == null) {\n    throw new Error(\n        'tensor2d() requires shape to be provided when `values` ' +\n        'are a flat/TypedArray');\n  }\n  return makeTensor(values, shape, inferredShape, dtype) as Tensor2D;\n}\n\n/**\n * Creates rank-3 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor3d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor3d([[[1], [2]], [[3], [4]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor3d([1, 2, 3, 4], [2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. If not provided,  it is inferred from\n *     `values`.\n * @param dtype The data type.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction tensor3d(\n    values: TensorLike3D, shape?: [number, number, number],\n    dtype?: DataType): Tensor3D {\n  assertNonNull(values);\n  if (shape != null && shape.length !== 3) {\n    throw new Error('tensor3d() requires shape to have three numbers');\n  }\n  const inferredShape = inferShape(values);\n  if (inferredShape.length !== 3 && inferredShape.length !== 1) {\n    throw new Error(\n        'tensor3d() requires values to be number[][][] or flat/TypedArray');\n  }\n  if (inferredShape.length === 1 && shape == null) {\n    throw new Error(\n        'tensor3d() requires shape to be provided when `values` ' +\n        'are a flat array');\n  }\n  return makeTensor(values, shape, inferredShape, dtype) as Tensor3D;\n}\n\n/**\n * Creates rank-4 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor4d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor4d([[[[1], [2]], [[3], [4]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor4d([1, 2, 3, 4], [1, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction tensor4d(\n    values: TensorLike4D, shape?: [number, number, number, number],\n    dtype?: DataType): Tensor4D {\n  assertNonNull(values);\n  if (shape != null && shape.length !== 4) {\n    throw new Error('tensor4d() requires shape to have four numbers');\n  }\n  const inferredShape = inferShape(values);\n  if (inferredShape.length !== 4 && inferredShape.length !== 1) {\n    throw new Error(\n        'tensor4d() requires values to be number[][][][] or flat/TypedArray');\n  }\n  if (inferredShape.length === 1 && shape == null) {\n    throw new Error(\n        'tensor4d() requires shape to be provided when `values` ' +\n        'are a flat array');\n  }\n  return makeTensor(values, shape, inferredShape, dtype) as Tensor4D;\n}\n\n/**\n * Creates rank-5 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor5d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor5d([[[[[1], [2]], [[3], [4]]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor5d([1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction tensor5d(\n    values: TensorLike5D, shape?: [number, number, number, number, number],\n    dtype?: DataType): Tensor5D {\n  assertNonNull(values);\n  if (shape != null && shape.length !== 5) {\n    throw new Error('tensor5d() requires shape to have five numbers');\n  }\n  const inferredShape = inferShape(values);\n  if (inferredShape.length !== 5 && inferredShape.length !== 1) {\n    throw new Error(\n        'tensor5d() requires values to be ' +\n        'number[][][][][] or flat/TypedArray');\n  }\n  if (inferredShape.length === 1 && shape == null) {\n    throw new Error(\n        'tensor5d() requires shape to be provided when `values` ' +\n        'are a flat array');\n  }\n  return makeTensor(values, shape, inferredShape, dtype) as Tensor5D;\n}\n\n/**\n * Creates rank-6 `tf.Tensor` with the provided values, shape and dtype.\n *\n * The same functionality can be achieved with `tf.tensor`, but in general\n * we recommend using `tf.tensor6d` as it makes the code more readable.\n *\n *  ```js\n * // Pass a nested array.\n * tf.tensor6d([[[[[[1],[2]],[[3],[4]]],[[[5],[6]],[[7],[8]]]]]]).print();\n * ```\n * ```js\n * // Pass a flat array and specify a shape.\n * tf.tensor6d([1, 2, 3, 4, 5, 6, 7, 8], [1, 1, 2, 2, 2, 1]).print();\n * ```\n *\n * @param values The values of the tensor. Can be nested array of numbers,\n *     or a flat array, or a `TypedArray`.\n * @param shape The shape of the tensor. Optional. If not provided,\n *   it is inferred from `values`.\n * @param dtype The data type.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction tensor6d(\n    values: TensorLike6D,\n    shape?: [number, number, number, number, number, number],\n    dtype?: DataType): Tensor6D {\n  assertNonNull(values);\n  if (shape != null && shape.length !== 6) {\n    throw new Error('tensor6d() requires shape to have six numbers');\n  }\n  const inferredShape = inferShape(values);\n  if (inferredShape.length !== 6 && inferredShape.length !== 1) {\n    throw new Error(\n        'tensor6d() requires values to be number[][][][][][] or ' +\n        'flat/TypedArray');\n  }\n  if (inferredShape.length === 1 && shape == null) {\n    throw new Error(\n        'tensor6d() requires shape to be provided when `values` ' +\n        'are a flat array');\n  }\n  shape = shape ||\n      inferredShape as [number, number, number, number, number, number];\n  return makeTensor(values, shape, inferredShape, dtype) as Tensor6D;\n}\n\n/**\n * Creates a `tf.Tensor` with all elements set to 1.\n *\n * ```js\n * tf.ones([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The type of an element in the resulting tensor. Defaults to\n *     'float'.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction ones<R extends Rank>(\n    shape: ShapeMap[R], dtype: DataType = 'float32'): Tensor<R> {\n  if (dtype === 'complex64') {\n    const real = ones(shape, 'float32');\n    const imag = zeros(shape, 'float32');\n    return complex(real, imag);\n  }\n  const values = makeOnesTypedArray(sizeFromShape(shape), dtype);\n  return Tensor.make(shape, {values}, dtype);\n}\n\n/**\n * Creates a `tf.Tensor` with all elements set to 0.\n *\n * ```js\n * tf.zeros([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The type of an element in the resulting tensor. Can\n *     be 'float32', 'int32' or 'bool'. Defaults to 'float'.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction zeros<R extends Rank>(\n    shape: ShapeMap[R], dtype: DataType = 'float32'): Tensor<R> {\n  if (dtype === 'complex64') {\n    const real = zeros(shape, 'float32');\n    const imag = zeros(shape, 'float32');\n    return complex(real, imag);\n  }\n  const values = makeZerosTypedArray(sizeFromShape(shape), dtype);\n  return Tensor.make(shape, {values}, dtype);\n}\n\n/**\n * Creates a `tf.Tensor` filled with a scalar value.\n *\n * ```js\n * tf.fill([2, 2], 4).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param value The scalar value to fill the tensor with.\n * @param dtype The type of an element in the resulting tensor. Defaults to\n * 'float'.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction fill<R extends Rank>(\n    shape: ShapeMap[R], value: number|string, dtype?: DataType): Tensor<R> {\n  return ENGINE.runKernel(backend => backend.fill(shape, value, dtype), {});\n}\n\n/**\n * Creates a `tf.Tensor` with all elements set to 1 with the same shape as the\n * given tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n * tf.onesLike(x).print();\n * ```\n * @param x A tensor.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction onesLike_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'onesLike');\n  if ($x.dtype === 'complex64') {\n    const r = onesLike(real($x));\n    const i = zerosLike(imag($x));\n    return complex(r, i);\n  }\n  const der = (dy: T, saved: Tensor[]) => ({$x: () => zerosLike(dy)});\n  return ENGINE.runKernel(backend => backend.onesLike($x), {$x}, der) as T;\n}\n\n/**\n * Creates a `tf.Tensor` with all elements set to 0 with the same shape as the\n * given tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n * tf.zerosLike(x).print();\n * ```\n *\n * @param x The tensor of required shape.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction zerosLike_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'zerosLike');\n  const der = (dy: T, saved: Tensor[]) => ({$x: () => zerosLike(dy)});\n  return ENGINE.runKernel(backend => backend.zerosLike($x), {$x}, der) as T;\n}\n\n/**\n * Return an evenly spaced sequence of numbers over the given interval.\n *\n * ```js\n * tf.linspace(0, 9, 10).print();\n * ```\n * @param start The start value of the sequence.\n * @param stop The end value of the sequence.\n * @param num The number of values to generate.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction linspace(start: number, stop: number, num: number): Tensor1D {\n  if (num <= 0) {\n    throw new Error('The number of values should be positive.');\n  }\n  return ENGINE.runKernel(backend => backend.linspace(start, stop, num), {}) as\n      Tensor1D;\n}\n\n/**\n * Creates a new `tf.Tensor1D` filled with the numbers in the range provided.\n *\n * The tensor is a is half-open interval meaning it includes start, but\n * excludes stop. Decrementing ranges and negative step values are also\n * supported.\n *\n * ```js\n * tf.range(0, 9, 2).print();\n * ```\n *\n * @param start An integer start value\n * @param stop An integer stop value\n * @param step An integer increment (will default to 1 or -1)\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction range(\n    start: number, stop: number, step = 1,\n    dtype: 'float32'|'int32' = 'float32'): Tensor1D {\n  if (step === 0) {\n    throw new Error('Cannot have a step of zero');\n  }\n\n  const sameStartStop = start === stop;\n  const increasingRangeNegativeStep = start < stop && step < 0;\n  const decreasingRangePositiveStep = stop < start && step > 1;\n\n  if (sameStartStop || increasingRangeNegativeStep ||\n      decreasingRangePositiveStep) {\n    return zeros([0], dtype);\n  }\n\n  const numElements = Math.abs(Math.ceil((stop - start) / step));\n  const values = makeZerosTypedArray(numElements, dtype);\n\n  if (stop < start && step === 1) {\n    // Auto adjust the step's sign if it hasn't been set\n    // (or was set to 1)\n    step = -1;\n  }\n\n  values[0] = start;\n  for (let i = 1; i < values.length; i++) {\n    values[i] = values[i - 1] + step;\n  }\n\n  return tensor1d(values, dtype);\n}\n\nexport {\n  fill,\n  linspace,\n  ones,\n  range,\n  scalar,\n  tensor,\n  tensor1d,\n  tensor2d,\n  tensor3d,\n  tensor4d,\n  tensor5d,\n  tensor6d,\n  zeros\n};\n\nexport const onesLike = op({onesLike_});\nexport const zerosLike = op({zerosLike_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor, Tensor1D, Tensor2D, Tensor3D, Tensor4D} from '../tensor';\nimport {convertToTensor, convertToTensorArray} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {assert, sizeFromShape} from '../util';\nimport {parseAxisParam} from '../util';\nimport {assertParamsConsistent, computeOutShape} from './concat_util';\nimport {op} from './operation';\nimport {tensor} from './tensor_ops';\n\n/**\n * Concatenates a list of`tf.Tensor1D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(3) = |r1, g1, b1|\n * B: shape(2) = |r2, g2|\n * C = tf.concat1d([A, B]) == |r1, g1, b1, r2, g2|\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @return The concatenated array.\n */\nfunction concat1d_(tensors: Array<Tensor1D|TensorLike>): Tensor1D {\n  return concat(tensors, 0 /* axis */);\n}\n\n/**\n * Concatenates a list of`tf.Tensor2D`s along an axis. See `concat` for details.\n *\n * For example, if:\n * A: shape(2, 3) = | r1, g1, b1 |\n *                  | r2, g2, b2 |\n *\n * B: shape(2, 3) = | r3, g3, b3 |\n *                  | r4, g4, b4 |\n *\n * C = tf.concat2d([A, B], axis)\n *\n * if axis = 0:\n * C: shape(4, 3) = | r1, g1, b1 |\n *                  | r2, g2, b2 |\n *                  | r3, g3, b3 |\n *                  | r4, g4, b4 |\n *\n * if axis = 1:\n * C = shape(2, 6) = | r1, g1, b1, r3, g3, b3 |\n *                   | r2, g2, b2, r4, g4, b4 |\n *\n *\n * @param tensors A list of `tf.Tensor`s to concatenate.\n * @param axis The axis to concatenate along.\n * @return The concatenated array.\n */\nfunction concat2d_(\n    tensors: Array<Tensor2D|TensorLike>, axis: number): Tensor2D {\n  return concat(tensors, axis);\n}\n\n/**\n * Concatenates a list of `tf.Tensor3D`s along an axis.\n * See `concat` for details.\n *\n * For example, if:\n * A: shape(2, 1, 3) = | r1, g1, b1 |\n *                     | r2, g2, b2 |\n *\n * B: shape(2, 1, 3) = | r3, g3, b3 |\n *                     | r4, g4, b4 |\n *\n * C = tf.concat3d([A, B], axis)\n *\n * if axis = 0:\n * C: shape(4, 1, 3) = | r1, g1, b1 |\n *                     | r2, g2, b2 |\n *                     | r3, g3, b3 |\n *                     | r4, g4, b4 |\n *\n * if axis = 1:\n * C: shape(2, 2, 3) = | r1, g1, b1, r3, g3, b3 |\n *                     | r2, g2, b2, r4, g4, b4 |\n *\n * if axis = 2:\n * C = shape(2, 1, 6) = | r1, g1, b1, r3, g3, b3 |\n *                      | r2, g2, b2, r4, g4, b4 |\n *\n * @param tensors A list of`tf.Tensor`s to concatenate.\n * @param axis The axis to concate along.\n * @return The concatenated array.\n */\nfunction concat3d_(\n    tensors: Array<Tensor3D|TensorLike>, axis: number): Tensor3D {\n  return concat(tensors, axis);\n}\n\n/**\n * Concatenates a list of `tf.Tensor4D`s along an axis.\n * See `concat` for details.\n *\n * @param tensors A list of `tf.Tensor`s to concatenate.\n * @param axis The axis to concate along.\n * @return The concatenated array.\n */\nfunction concat4d_(\n    tensors: Array<Tensor4D|TensorLike>, axis: number): Tensor4D {\n  return concat(tensors, axis);\n}\n\n/**\n * Concatenates a list of `tf.Tensor`s along a given axis.\n *\n * The tensors ranks and types must match, and their sizes must match in all\n * dimensions except `axis`.\n *\n * Also available are stricter rank-specific methods that assert that\n * `tensors` are of the given rank:\n *   - `tf.concat1d`\n *   - `tf.concat2d`\n *   - `tf.concat3d`\n *   - `tf.concat4d`\n *\n * Except `tf.concat1d` (which does not have axis param), all methods have\n * same signature as this method.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * a.concat(b).print();  // or a.concat(b)\n * ```\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n * tf.concat([a, b, c]).print();\n * ```\n *\n * ```js\n * const a = tf.tensor2d([[1, 2], [10, 20]]);\n * const b = tf.tensor2d([[3, 4], [30, 40]]);\n * const axis = 1;\n * tf.concat([a, b], axis).print();\n * ```\n * @param tensors A list of tensors to concatenate.\n * @param axis The axis to concate along. Defaults to 0 (the first dim).\n */\n/** @doc {heading: 'Tensors', subheading: 'Slicing and Joining'} */\nfunction concat_<T extends Tensor>(tensors: Array<T|TensorLike>, axis = 0): T {\n  assert(tensors.length >= 1, () => 'Pass at least one tensor to concat');\n  let $tensors = convertToTensorArray(tensors, 'tensors', 'concat');\n  axis = parseAxisParam(axis, $tensors[0].shape)[0];\n  const outShape = computeOutShape($tensors.map(t => t.shape), axis);\n  if (sizeFromShape(outShape) === 0) {\n    return tensor([], outShape) as T;\n  }\n  // Keep only non-empty tensors (ignore tensors with 0 in their shape).\n  $tensors = $tensors.filter(t => t.size > 0);\n  if ($tensors.length === 1) {\n    return $tensors[0];\n  }\n\n  const shapes = $tensors.map(t => t.shape);\n  assertParamsConsistent(shapes, axis);\n  const der = (dy: T) => {\n    const sizeSplits = shapes.map(s => s[axis]);\n    const derTensors = split(dy, sizeSplits, axis);\n    return derTensors.map(t => () => t) as {};\n  };\n  const inputs = $tensors as {};\n  return ENGINE.runKernel(\n      backend => backend.concat($tensors, axis) as T, inputs, der);\n}\n\n/**\n * Splits a `tf.Tensor` into sub tensors.\n *\n * If `numOrSizeSplits` is a number, splits `x` along dimension `axis`\n * into `numOrSizeSplits` smaller tensors.\n * Requires that `numOrSizeSplits` evenly divides `x.shape[axis]`.\n *\n * If `numOrSizeSplits` is a number array, splits `x` into\n * `numOrSizeSplits.length` pieces. The shape of the `i`-th piece has the\n * same size as `x` except along dimension `axis` where the size is\n * `numOrSizeSplits[i]`.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4, 5, 6, 7, 8], [2, 4]);\n * const [a, b] = tf.split(x, 2, 1);\n * a.print();\n * b.print();\n *\n * const [c, d, e] = tf.split(x, [1, 2, 1], 1);\n * c.print();\n * d.print();\n * e.print();\n * ```\n *\n * @param x The input tensor to split.\n * @param numOrSizeSplits Either an integer indicating the number of\n * splits along the axis or an array of integers containing the sizes of\n * each output tensor along the axis. If a number then it must evenly divide\n * `x.shape[axis]`; otherwise the sum of sizes must match `x.shape[axis]`.\n * @param axis The dimension along which to split. Defaults to 0 (the first\n * dim).\n */\n/** @doc {heading: 'Tensors', subheading: 'Slicing and Joining'} */\nfunction split_<T extends Tensor>(\n    x: T|TensorLike, numOrSizeSplits: number[]|number, axis = 0): T[] {\n  const $x = convertToTensor(x, 'x', 'split');\n\n  axis = parseAxisParam(axis, $x.shape)[0];\n  let splitSizes: number[];\n  if (typeof (numOrSizeSplits) === 'number') {\n    assert(\n        $x.shape[axis] % numOrSizeSplits === 0,\n        () => 'Number of splits must evenly divide the axis.');\n    splitSizes =\n        new Array(numOrSizeSplits).fill($x.shape[axis] / numOrSizeSplits);\n  } else {\n    assert(\n        $x.shape[axis] === numOrSizeSplits.reduce((a, b) => a + b),\n        () => 'The sum of sizes must match the size of the axis dimension.');\n    splitSizes = numOrSizeSplits;\n  }\n  const der = (dy: T[]) => ({$x: () => concat(dy, axis)});\n  return ENGINE.runKernel(\n      backend => backend.split($x, splitSizes, axis), {$x}, der);\n}\n\nexport const concat = op({concat_});\nexport const concat1d = op({concat1d_});\nexport const concat2d = op({concat2d_});\nexport const concat3d = op({concat3d_});\nexport const concat4d = op({concat4d_});\nexport const split = op({split_});\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// \n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = data.toString();\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2014 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\nvar global = this,\n    width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\nmath['seed' + rngname] = seedrandom;\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n}\n\n// End anonymous scope, and pass initial values.\n})(\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as seedrandom from 'seedrandom';\n\nexport interface RandomBase {\n  nextValue(): number;\n}\n\nexport interface RandNormalDataTypes {\n  float32: Float32Array;\n  int32: Int32Array;\n}\n\n// https://en.wikipedia.org/wiki/Marsaglia_polar_method\nexport class MPRandGauss implements RandomBase {\n  private mean: number;\n  private stdDev: number;\n  private nextVal: number;\n  private dtype?: keyof RandNormalDataTypes;\n  private truncated?: boolean;\n  private upper?: number;\n  private lower?: number;\n  private random: seedrandom.prng;\n\n  constructor(\n      mean: number, stdDeviation: number, dtype?: keyof RandNormalDataTypes,\n      truncated?: boolean, seed?: number) {\n    this.mean = mean;\n    this.stdDev = stdDeviation;\n    this.dtype = dtype;\n    this.nextVal = NaN;\n    this.truncated = truncated;\n    if (this.truncated) {\n      this.upper = this.mean + this.stdDev * 2;\n      this.lower = this.mean - this.stdDev * 2;\n    }\n    const seedValue = seed ? seed : Math.random();\n    this.random = seedrandom.alea(seedValue.toString());\n  }\n\n  /** Returns next sample from a gaussian distribution. */\n  public nextValue(): number {\n    if (!isNaN(this.nextVal)) {\n      const value = this.nextVal;\n      this.nextVal = NaN;\n      return value;\n    }\n\n    let resultX: number, resultY: number;\n    let isValid = false;\n    while (!isValid) {\n      let v1: number, v2: number, s: number;\n      do {\n        v1 = 2 * this.random() - 1;\n        v2 = 2 * this.random() - 1;\n        s = v1 * v1 + v2 * v2;\n      } while (s >= 1 || s === 0);\n\n      const mul = Math.sqrt(-2.0 * Math.log(s) / s);\n      resultX = this.mean + this.stdDev * v1 * mul;\n      resultY = this.mean + this.stdDev * v2 * mul;\n\n      if (!this.truncated || this.isValidTruncated(resultX)) {\n        isValid = true;\n      }\n    }\n\n    if (!this.truncated || this.isValidTruncated(resultY)) {\n      this.nextVal = this.convertValue(resultY);\n    }\n    return this.convertValue(resultX);\n  }\n\n  /** Handles proper rounding for non floating point numbers. */\n  private convertValue(value: number): number {\n    if (this.dtype == null || this.dtype === 'float32') {\n      return value;\n    }\n    return Math.round(value);\n  }\n\n  /** Returns true if less than 2-standard-deviations from the mean. */\n  private isValidTruncated(value: number): boolean {\n    return value <= this.upper && value >= this.lower;\n  }\n}\n\nexport class UniformRandom implements RandomBase {\n  private min: number;\n  private range: number;\n  private random: seedrandom.prng;\n  private dtype?: keyof RandNormalDataTypes;\n\n  constructor(\n      min = 0, max = 1, dtype?: keyof RandNormalDataTypes,\n      seed?: string|number) {\n    this.min = min;\n    this.range = max - min;\n    this.dtype = dtype;\n    if (seed == null) {\n      seed = Math.random();\n    }\n    if (typeof seed === 'number') {\n      seed = seed.toString();\n    }\n\n    if (!this.canReturnFloat() && this.range <= 1) {\n      throw new Error(\n          `The difference between ${min} - ${max} <= 1 and dtype is not float`);\n    }\n    this.random = seedrandom.alea(seed as string);\n  }\n\n  /** Handles proper rounding for non floating point numbers. */\n  private canReturnFloat = () =>\n      (this.dtype == null || this.dtype === 'float32');\n\n  private convertValue(value: number): number {\n    if (this.canReturnFloat()) {\n      return value;\n    }\n    return Math.round(value);\n  }\n\n  nextValue() {\n    return this.convertValue(this.min + this.range * this.random());\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor, Tensor1D, Tensor2D, Tensor3D, Tensor4D, TensorBuffer} from '../tensor';\nimport {convertToTensor, convertToTensorArray} from '../tensor_util_env';\nimport {DataType, DataTypeMap, Rank, ShapeMap, TensorLike, TensorLike4D} from '../types';\nimport * as util from '../util';\nimport {getAxesPermutation, getInnerMostAxes} from './axis_util';\nimport {concat} from './concat_split';\nimport {op} from './operation';\nimport {MPRandGauss, UniformRandom} from './rand';\nimport {zeros, zerosLike} from './tensor_ops';\n\n/**\n * Creates a new tensor with the same values and shape as the specified\n * tensor.\n *\n * ```js\n * const x = tf.tensor([1, 2]);\n *\n * x.clone().print();\n * ```\n *\n * @param x The tensor to clone.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction clone_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'clone', null);\n  const der = (dy: T) => {\n    return {$x: () => dy.toFloat()};\n  };\n\n  return ENGINE.runKernel(\n             backend =>\n                 Tensor.make($x.shape, {dataId: $x.dataId}, $x.dtype) as T,\n             {$x}, der) as T;\n}\n\n/**\n * Create an identity matrix.\n *\n * @param numRows Number of rows.\n * @param numColumns Number of columns. Defaults to `numRows`.\n * @param batchShape If provided, will add the batch shape to the beginning\n *   of the shape of the returned `tf.Tensor` by repeating the identity\n *   matrix.\n * @param dtype Data type.\n * @returns Identity matrix of the specified size and data type, possibly\n *   with batch repetition if `batchShape` is specified.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction eye_(\n    numRows: number, numColumns?: number,\n    batchShape?:\n        [\n          number\n        ]|[number,\n           number]|[number, number, number]|[number, number, number, number],\n    dtype: DataType = 'float32'): Tensor2D {\n  if (numColumns == null) {\n    numColumns = numRows;\n  }\n  const buff = buffer([numRows, numColumns], dtype);\n  const n = numRows <= numColumns ? numRows : numColumns;\n  for (let i = 0; i < n; ++i) {\n    buff.set(1, i, i);\n  }\n  const out = buff.toTensor().as2D(numRows, numColumns);\n  if (batchShape == null) {\n    return out;\n  } else {\n    if (batchShape.length === 1) {\n      return tile(expandDims(out, 0), [batchShape[0], 1, 1]);\n    } else if (batchShape.length === 2) {\n      return tile(\n          expandDims(expandDims(out, 0), 0),\n          [batchShape[0], batchShape[1], 1, 1]);\n    } else if (batchShape.length === 3) {\n      return tile(\n          expandDims(expandDims(expandDims(out, 0), 0), 0),\n          [batchShape[0], batchShape[1], batchShape[2], 1, 1]);\n    } else {\n      throw new Error(\n          `eye() currently supports only 1D and 2D ` +\n          // tslint:disable-next-line:no-any\n          `batchShapes, but received ${(batchShape as any).length}D.`);\n    }\n  }\n}\n\n/**\n * Creates a `tf.Tensor` with values sampled from a normal distribution.\n *\n * ```js\n * tf.randomNormal([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param mean The mean of the normal distribution.\n * @param stdDev The standard deviation of the normal distribution.\n * @param dtype The data type of the output.\n * @param seed The seed for the random number generator.\n */\n/** @doc {heading: 'Tensors', subheading: 'Random'} */\nfunction randomNormal_<R extends Rank>(\n    shape: ShapeMap[R], mean = 0, stdDev = 1, dtype?: 'float32'|'int32',\n    seed?: number): Tensor<R> {\n  if (dtype != null && (dtype as DataType) === 'bool') {\n    throw new Error(`Unsupported data type ${dtype}`);\n  }\n  const randGauss =\n      new MPRandGauss(mean, stdDev, dtype, false /* truncated */, seed);\n  const res = buffer(shape, dtype);\n  for (let i = 0; i < res.values.length; i++) {\n    res.values[i] = randGauss.nextValue();\n  }\n  return res.toTensor();\n}\n\n/**\n * Creates a `tf.Tensor` with values sampled from a truncated normal\n * distribution.\n *\n * ```js\n * tf.truncatedNormal([2, 2]).print();\n * ```\n *\n * The generated values follow a normal distribution with specified mean and\n * standard deviation, except that values whose magnitude is more than 2\n * standard deviations from the mean are dropped and re-picked.\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param mean The mean of the normal distribution.\n * @param stdDev The standard deviation of the normal distribution.\n * @param dtype The data type of the output tensor.\n * @param seed The seed for the random number generator.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction truncatedNormal_<R extends Rank>(\n    shape: ShapeMap[R], mean = 0, stdDev = 1, dtype?: 'float32'|'int32',\n    seed?: number): Tensor<R> {\n  if (dtype != null && (dtype as DataType) === 'bool') {\n    throw new Error(`Unsupported data type ${dtype}`);\n  }\n  const randGauss =\n      new MPRandGauss(mean, stdDev, dtype, true /* truncated */, seed);\n  const res = buffer(shape, dtype);\n  for (let i = 0; i < res.values.length; i++) {\n    res.values[i] = randGauss.nextValue();\n  }\n  return res.toTensor();\n}\n\n/**\n * Creates a `tf.Tensor` with values sampled from a uniform distribution.\n *\n * The generated values follow a uniform distribution in the range [minval,\n * maxval). The lower bound minval is included in the range, while the upper\n * bound maxval is excluded.\n *\n * ```js\n * tf.randomUniform([2, 2]).print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param minval The lower bound on the range of random values to generate.\n *   Defaults to 0.\n * @param maxval The upper bound on the range of random values to generate.\n *   Defaults to 1.\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n */\n/** @doc {heading: 'Tensors', subheading: 'Random'} */\nfunction randomUniform_<R extends Rank>(\n    shape: ShapeMap[R], minval = 0, maxval = 1, dtype: DataType = 'float32',\n    seed?: number|string): Tensor<R> {\n  const res = buffer(shape, dtype);\n  const random = new UniformRandom(minval, maxval, null, seed);\n  for (let i = 0; i < res.values.length; i++) {\n    res.values[i] = random.nextValue();\n  }\n  return res.toTensor();\n}\n\n/**\n * Creates a `tf.Tensor` with values sampled from a random number generator\n * function defined by the user.\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param randFunction A random number generator function which is called\n * for each element in the output tensor.\n * @param dtype The data type of the output tensor. Defaults to 'float32'.\n */\nfunction rand_<R extends Rank>(\n    shape: ShapeMap[R], randFunction: () => number,\n    dtype?: DataType): Tensor<R> {\n  const size = util.sizeFromShape(shape);\n\n  let values = null;\n  if (dtype == null || dtype === 'float32') {\n    values = new Float32Array(size);\n  } else if (dtype === 'int32') {\n    values = new Int32Array(size);\n  } else if (dtype === 'bool') {\n    values = new Uint8Array(size);\n  } else {\n    throw new Error(`Unknown data type ${dtype}`);\n  }\n\n  for (let i = 0; i < size; i++) {\n    values[i] = randFunction();\n  }\n  return Tensor.make(shape, {values}, dtype);\n}\n\n/**\n * Creates a `tf.Tensor` with values drawn from a multinomial distribution.\n *\n * ```js\n * const probs = tf.tensor([.75, .25]);\n * tf.multinomial(probs, 3).print();\n * ```\n *\n * @param logits 1D array with unnormalized log-probabilities, or\n *     2D array of shape `[batchSize, numOutcomes]`. See the `normalized`\n *     parameter.\n * @param numSamples Number of samples to draw for each row slice.\n * @param seed The seed number.\n * @param normalized Whether the provided `logits` are normalized true\n *     probabilities (sum to 1). Defaults to false.\n * @return 1D array of shape `[numSamples]`, or 2D array of shape\n *     `[batchSize, numSamples]`, depending on the rank of the input.\n */\n/** @doc {heading: 'Tensors', subheading: 'Random'} */\nfunction multinomial_(\n    logits: Tensor1D|Tensor2D|TensorLike, numSamples: number, seed?: number,\n    normalized = false): Tensor1D|Tensor2D {\n  const $logits = convertToTensor(logits, 'logits', 'multinomial');\n  const numOutcomes = $logits.size;\n  const origRank = $logits.rank;\n  if (numOutcomes < 2) {\n    throw new Error(\n        `Error in multinomial: you need at least 2 outcomes, but got ` +\n        `${numOutcomes}.`);\n  }\n  if (origRank > 2) {\n    throw new Error(`Rank of probabilities must be 1 or 2, but is ${origRank}`);\n  }\n  seed = seed || Math.random();\n  const logits2D = origRank === 1 ? $logits.as2D(1, -1) : $logits as Tensor2D;\n  const res = ENGINE.runKernel(\n      backend => backend.multinomial(logits2D, normalized, numSamples, seed),\n      {logits2D});\n\n  return origRank === 1 ? res.as1D() : res;\n}\n\n/**\n * Creates a one-hot `tf.Tensor`. The locations represented by `indices` take\n * value `onValue` (defaults to 1), while all other locations take value\n * `offValue` (defaults to 0). If `indices` is rank `R`, the output has rank\n * `R+1` with the last axis of size `depth`.\n *\n * ```js\n * tf.oneHot(tf.tensor1d([0, 1], 'int32'), 3).print();\n * ```\n *\n * @param indices `tf.Tensor` of indices with dtype `int32`.\n * @param depth The depth of the one hot dimension.\n * @param onValue A number used to fill in the output when the index matches\n * the location.\n * @param offValue A number used to fill in the output when the index does\n *     not match the location.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction oneHot_(\n    indices: Tensor|TensorLike, depth: number, onValue = 1,\n    offValue = 0): Tensor {\n  if (depth < 2) {\n    throw new Error(`Error in oneHot: depth must be >=2, but it is ${depth}`);\n  }\n  let $indices = convertToTensor(indices, 'indices', 'oneHot', 'int32');\n  const outShape = [...$indices.shape, depth];\n  $indices = $indices.flatten();\n\n  const grad = (dy: Tensor2D) => {\n    return {$indices: () => zeros($indices.shape, 'float32')};\n  };\n  const result = ENGINE.runKernel(\n      backend => backend.oneHot($indices as Tensor1D, depth, onValue, offValue),\n      {$indices}, grad);\n  return result.reshape(outShape);\n}\n\n/**\n * Reshapes a `tf.Tensor` to a given shape.\n *\n * Given an input tensor, returns a new tensor with the same values as the\n * input tensor with shape `shape`.\n *\n * If one component of shape is the special value -1, the size of that\n * dimension is computed so that the total size remains constant. In\n * particular, a shape of [-1] flattens into 1-D. At most one component of\n * shape can be -1.\n *\n * If shape is 1-D or higher, then the operation returns a tensor with shape\n * shape filled with the values of tensor. In this case, the number of\n * elements implied by shape must be the same as the number of elements in\n * tensor.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * x.reshape([2, 2]).print();\n * ```\n *\n * @param x The input tensor to be reshaped.\n * @param shape An array of integers defining the output tensor shape.\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction reshape_<R2 extends Rank>(\n    x: Tensor|TensorLike, shape: ShapeMap[R2]): Tensor<R2> {\n  const $x = convertToTensor(x, 'x', 'reshape', null);\n  shape = util.inferFromImplicitShape(shape, $x.size) as ShapeMap[R2];\n  util.assert(\n      $x.size === util.sizeFromShape(shape),\n      () => 'new shape and old shape must have the same number of elements.');\n\n  const grad = (dy: Tensor<R2>) => {\n    return {$x: () => dy.reshape($x.shape)};\n  };\n  return ENGINE.runKernel(backend => backend.reshape($x, shape), {$x}, grad);\n}\n\n/**\n * Removes dimensions of size 1 from the shape of a `tf.Tensor`.\n *\n * ```js\n * const x = tf.tensor([1, 2, 3, 4], [1, 1, 4]);\n * x.squeeze().print();\n * ```\n *\n * @param x The input tensor to be squeezed.\n * @param axis An optional list of numbers. If specified, only\n *     squeezes the dimensions listed. The dimension index starts at 0. It\n * is an error to squeeze a dimension that is not 1.\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction squeeze_<T extends Tensor>(x: Tensor|TensorLike, axis?: number[]): T {\n  const $x = convertToTensor(x, 'x', 'squeeze');\n  return reshape($x, util.squeezeShape($x.shape, axis).newShape) as T;\n}\n\n/**\n * Casts a `tf.Tensor` to a new dtype.\n *\n * ```js\n * const x = tf.tensor1d([1.5, 2.5, 3]);\n * tf.cast(x, 'int32').print();\n * ```\n * @param x The input tensor to be casted.\n * @param dtype The dtype to cast the input tensor to.\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction cast_<T extends Tensor>(x: T|TensorLike, dtype: DataType): T {\n  const $x = convertToTensor(x, 'x', 'cast');\n\n  // Sanity checks.\n  if (!util.isValidDtype(dtype)) {\n    throw new Error(`Failed to cast to unknown dtype ${dtype}`);\n  }\n  if (dtype === 'string' && $x.dtype !== 'string' ||\n      dtype !== 'string' && $x.dtype === 'string') {\n    throw new Error('Only strings can be casted to strings');\n  }\n\n  const grad = (dy: T) => {\n    return {$x: () => dy.clone()};\n  };\n  return ENGINE.runKernel(backend => backend.cast($x, dtype), {$x}, grad) as T;\n}\n\n/**\n * Construct a tensor by repeating it the number of times given by reps.\n *\n * This operation creates a new tensor by replicating `input` `reps`\n * times. The output tensor's i'th dimension has `input.shape[i] *\n * reps[i]` elements, and the values of `input` are replicated\n * `reps[i]` times along the i'th dimension. For example, tiling\n * `[a, b, c, d]` by `[2]` produces `[a, b, c, d, a, b, c, d]`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n *\n * a.tile([2]).print();    // or a.tile([2])\n * ```\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * a.tile([1, 2]).print();  // or a.tile([1, 2])\n * ```\n * @param x The tensor to tile.\n * @param reps Determines the number of replications per dimension.\n */\n/** @doc {heading: 'Tensors', subheading: 'Slicing and Joining'} */\nfunction tile_<T extends Tensor>(x: T|TensorLike, reps: number[]): T {\n  const parseAs: DataType = null;\n  const $x = convertToTensor(x, 'x', 'tile', parseAs);\n\n  util.assert(\n      $x.rank === reps.length,\n      () => `Error in transpose: rank of input ${$x.rank} ` +\n          `must match length of reps ${reps}.`);\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    const derX = () => {\n      let xGrad = zerosLike($x);\n      // TODO(cais): Maybe reduce memory footprint by avoiding repeated\n      // slicing.\n      if ($x.rank === 1) {\n        for (let i = 0; i < reps[0]; ++i) {\n          xGrad = xGrad.add(dy.slice([i * $x.shape[0]], [$x.shape[0]]));\n        }\n      } else if ($x.rank === 2) {\n        for (let i = 0; i < reps[0]; ++i) {\n          for (let j = 0; j < reps[1]; ++j) {\n            xGrad = xGrad.add(dy.slice(\n                [i * $x.shape[0], j * $x.shape[1]],\n                [$x.shape[0], $x.shape[1]]));\n          }\n        }\n      } else if ($x.rank === 3) {\n        for (let i = 0; i < reps[0]; ++i) {\n          for (let j = 0; j < reps[1]; ++j) {\n            for (let k = 0; k < reps[2]; ++k) {\n              xGrad = xGrad.add(dy.slice(\n                  [i * $x.shape[0], j * $x.shape[1], k * $x.shape[2]],\n                  [$x.shape[0], $x.shape[1], $x.shape[2]]));\n            }\n          }\n        }\n      } else if ($x.rank === 4) {\n        for (let i = 0; i < reps[0]; ++i) {\n          for (let j = 0; j < reps[1]; ++j) {\n            for (let k = 0; k < reps[2]; ++k) {\n              for (let l = 0; l < reps[3]; ++l) {\n                xGrad = xGrad.add(dy.slice(\n                    [\n                      i * $x.shape[0], j * $x.shape[1], k * $x.shape[2],\n                      l * $x.shape[3]\n                    ],\n                    [$x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]]));\n              }\n            }\n          }\n        }\n      } else {\n        throw new Error(\n            `Gradient for tile operation is not implemented for rank-` +\n            `${$x.rank} tensors yet.`);\n      }\n      return xGrad as T;\n    };\n    return {$x: derX};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.tile($x, reps);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Pads a `tf.Tensor1D` with a given value and paddings. See `pad` for details.\n */\nfunction pad1d_(\n    x: Tensor1D|TensorLike, paddings: [number, number],\n    constantValue = 0): Tensor1D {\n  util.assert(\n      paddings.length === 2,\n      () => 'Invalid number of paddings. Must be length of 2.');\n  return pad(x, [paddings], constantValue);\n}\n\n/**\n * Pads a `tf.Tensor2D` with a given value and paddings. See `pad` for details.\n */\nfunction pad2d_(\n    x: Tensor2D|TensorLike, paddings: [[number, number], [number, number]],\n    constantValue = 0): Tensor2D {\n  util.assert(\n      paddings.length === 2 && paddings[0].length === 2 &&\n          paddings[1].length === 2,\n      () => 'Invalid number of paddings. Must be length of 2 each.');\n  return pad(x, paddings, constantValue);\n}\n\n/**\n * Pads a `tf.Tensor3D` with a given value and paddings. See `pad` for details.\n */\nfunction pad3d_(\n    x: Tensor3D|TensorLike,\n    paddings: [[number, number], [number, number], [number, number]],\n    constantValue = 0): Tensor3D {\n  util.assert(\n      paddings.length === 3 && paddings[0].length === 2 &&\n          paddings[1].length === 2 && paddings[2].length === 2,\n      () => 'Invalid number of paddings. Must be length of 2 each.');\n  return pad(x, paddings, constantValue);\n}\n\n/**\n * Pads a `tf.Tensor4D` with a given value and paddings. See `pad` for details.\n */\nfunction pad4d_(\n    x: Tensor4D|TensorLike,\n    paddings:\n        [\n          [number, number], [number, number], [number, number], [number, number]\n        ],\n    constantValue = 0): Tensor4D {\n  util.assert(\n      paddings.length === 4 && paddings[0].length === 2 &&\n          paddings[1].length === 2 && paddings[2].length === 2 &&\n          paddings[3].length === 2,\n      () => 'Invalid number of paddings. Must be length of 2 each.');\n  return pad(x, paddings, constantValue);\n}\n\n/**\n * Pads a `tf.Tensor` with a given value and paddings.\n *\n * This operation currently only implements the `CONSTANT` mode.\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that `paddings` is of given length.\n *   - `tf.pad1d`\n *   - `tf.pad2d`\n *   - `tf.pad3d`\n *   - `tf.pad4d`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * x.pad([[1, 2]]).print();\n * ```\n * @param x The tensor to pad.\n * @param paddings An array of length `R` (the rank of the tensor), where\n * each element is a length-2 tuple of ints `[padBefore, padAfter]`,\n * specifying how much to pad along each dimension of the tensor.\n * @param constantValue The pad value to use. Defaults to 0.\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction pad_<T extends Tensor>(\n    x: T|TensorLike, paddings: Array<[number, number]>, constantValue = 0): T {\n  const $x = convertToTensor(x, 'x', 'pad');\n\n  if ($x.rank === 0) {\n    throw new Error('pad(scalar) is not defined. Pass non-scalar to pad');\n  }\n  // Pad introduces values around the original tensor, so the gradient\n  // slices the original shape out of the gradient.\n  const begin = paddings.map(p => p[0]);\n  const grad = (dy: T) => {\n    return {$x: () => dy.slice(begin, $x.shape)};\n  };\n  return ENGINE.runKernel(\n             backend => backend.pad($x, paddings, constantValue), {$x}, grad) as\n      T;\n}\n\n/**\n * Stacks a list of rank-`R` `tf.Tensor`s into one rank-`(R+1)` `tf.Tensor`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n * tf.stack([a, b, c]).print();\n * ```\n *\n * @param tensors A list of tensor objects with the same shape and dtype.\n * @param axis The axis to stack along. Defaults to 0 (the first dim).\n */\n/** @doc {heading: 'Tensors', subheading: 'Slicing and Joining'} */\nfunction stack_<T extends Tensor>(\n    tensors: Array<T|TensorLike>, axis = 0): Tensor {\n  const $tensors = convertToTensorArray(tensors, 'tensors', 'stack');\n\n  util.assert(\n      $tensors.length >= 1, () => 'Pass at least one tensor to tf.stack');\n  if ($tensors.length === 1) {\n    return $tensors[0].expandDims(axis);\n  }\n  const rank = $tensors[0].rank;\n  const shape = $tensors[0].shape;\n  const dtype = $tensors[0].dtype;\n\n  util.assert(axis <= rank, () => 'Axis must be <= rank of the tensor');\n\n  $tensors.forEach(t => {\n    util.assertShapesMatch(\n        shape, t.shape,\n        'All tensors passed to stack must have matching shapes');\n  });\n\n  $tensors.forEach(t => {\n    util.assert(\n        dtype === t.dtype,\n        () => 'All tensors passed to stack must have matching dtypes');\n  });\n  const expandedTensors = $tensors.map(t => t.expandDims(axis));\n  return concat(expandedTensors, axis);\n}\n\n/**\n * This operation reshapes the \"batch\" dimension 0 into `M + 1` dimensions of\n * shape `blockShape + [batch]`, interleaves these blocks back into the grid\n * defined by the spatial dimensions `[1, ..., M]`, to obtain a result with\n * the same rank as the input. The spatial dimensions of this intermediate\n * result are then optionally cropped according to `crops` to produce the\n * output. This is the reverse of `tf.spaceToBatchND`. See below for a precise\n * description.\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [4, 1, 1, 1]);\n * const blockShape = [2, 2];\n * const crops = [[0, 0], [0, 0]];\n *\n * x.batchToSpaceND(blockShape, crops).print();\n * ```\n *\n * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +\n * remainingShape`, where spatialShape has `M` dimensions.\n * @param blockShape A 1-D array. Must have shape `[M]`, all values must\n * be >= 1.\n * @param crops A 2-D array.  Must have shape `[M, 2]`, all values must be >= 0.\n * `crops[i] = [cropStart, cropEnd]` specifies the amount to crop from input\n * dimension `i + 1`, which corresponds to spatial dimension `i`. It is required\n * that `cropStart[i] + cropEnd[i] <= blockShape[i] * inputShape[i + 1]`\n *\n * This operation is equivalent to the following steps:\n *\n * 1. Reshape `x` to `reshaped` of shape: `[blockShape[0], ...,\n * blockShape[M-1], batch / prod(blockShape), x.shape[1], ...,\n * x.shape[N-1]]`\n *\n * 2. Permute dimensions of `reshaped`to produce `permuted` of shape `[batch /\n * prod(blockShape),x.shape[1], blockShape[0], ..., x.shape[M],\n * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * 3. Reshape `permuted` to produce `reshapedPermuted` of shape `[batch /\n * prod(blockShape),x.shape[1] * blockShape[0], ..., x.shape[M] *\n * blockShape[M-1],x.shape[M+1], ..., x.shape[N-1]]`\n *\n * 4. Crop the start and end of dimensions `[1, ..., M]` of `reshapedPermuted`\n * according to `crops` to produce the output of shape: `[batch /\n * prod(blockShape),x.shape[1] * blockShape[0] - crops[0,0] - crops[0,1],\n * ..., x.shape[M] * blockShape[M-1] - crops[M-1,0] -\n * crops[M-1,1],x.shape[M+1], ..., x.shape[N-1]]`\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction batchToSpaceND_<T extends Tensor>(\n    x: T|TensorLike, blockShape: number[], crops: number[][]): T {\n  const $x = convertToTensor(x, 'x', 'batchToSpaceND');\n  const prod = blockShape.reduce((a, b) => a * b);\n\n  util.assert(\n      $x.rank >= 1 + blockShape.length,\n      () => `input rank is ${$x.rank} but should be > than blockShape.length ${\n          blockShape.length}`);\n\n  util.assert(\n      crops.length === blockShape.length,\n      () => `crops.length is ${\n          crops.length} but should be equal to blockShape.length  ${\n          blockShape.length}`);\n\n  util.assert(\n      $x.shape[0] % prod === 0,\n      () => `input tensor batch is ${\n                $x.shape[0]} but is not divisible by the product of ` +\n          `the elements of blockShape ${blockShape.join(' * ')} === ${prod}`);\n\n  const grad = (dy: T) => {\n    return {$x: () => dy.spaceToBatchND(blockShape, crops)};\n  };\n\n  return ENGINE.runKernel(\n      backend => backend.batchToSpaceND($x, blockShape, crops), {$x}, grad);\n}\n\n/**\n * This operation divides \"spatial\" dimensions `[1, ..., M]` of the input into\n * a grid of blocks of shape `blockShape`, and interleaves these blocks with\n * the \"batch\" dimension (0) such that in the output, the spatial\n * dimensions `[1, ..., M]` correspond to the position within the grid,\n * and the batch dimension combines both the position within a spatial block\n * and the original batch position. Prior to division into blocks,\n * the spatial dimensions of the input are optionally zero padded\n * according to `paddings`. See below for a precise description.\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [1, 2, 2, 1]);\n * const blockShape = [2, 2];\n * const paddings = [[0, 0], [0, 0]];\n *\n * x.spaceToBatchND(blockShape, paddings).print();\n * ```\n *\n * @param x A `tf.Tensor`. N-D with `x.shape` = `[batch] + spatialShape +\n * remainingShape`, where spatialShape has `M` dimensions.\n * @param blockShape A 1-D array. Must have shape `[M]`, all values must\n * be >= 1.\n * @param paddings A 2-D array. Must have shape `[M, 2]`, all values must be >=\n *     0. `paddings[i] = [padStart, padEnd]` specifies the amount to zero-pad\n * from input dimension `i + 1`, which corresponds to spatial dimension `i`. It\n * is required that\n * `(inputShape[i + 1] + padStart + padEnd) % blockShape[i] === 0`\n *\n * This operation is equivalent to the following steps:\n *\n * 1. Zero-pad the start and end of dimensions `[1, ..., M]` of the input\n * according to `paddings` to produce `padded` of shape paddedShape.\n *\n * 2. Reshape `padded` to `reshapedPadded` of shape:\n * `[batch] + [paddedShape[1] / blockShape[0], blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1], blockShape[M-1]] + remainingShape`\n *\n * 3. Permute dimensions of `reshapedPadded` to produce `permutedReshapedPadded`\n * of shape: `blockShape + [batch] + [paddedShape[1] / blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1]] + remainingShape`\n *\n * 4. Reshape `permutedReshapedPadded` to flatten `blockShape` into the\n * batch dimension, producing an output tensor of shape:\n * `[batch * prod(blockShape)] + [paddedShape[1] / blockShape[0], ...,\n * paddedShape[M] / blockShape[M-1]] + remainingShape`\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction spaceToBatchND_<T extends Tensor>(\n    x: T|TensorLike, blockShape: number[], paddings: number[][]): T {\n  const $x = convertToTensor(x, 'x', 'spaceToBatchND');\n\n  util.assert(\n      $x.rank >= 1 + blockShape.length,\n      () => `input rank ${$x.rank} should be > than [blockShape] ${\n          blockShape.length}`);\n\n  util.assert(\n      paddings.length === blockShape.length,\n      () => `paddings.shape[0] ${\n          paddings.length} must be equal to [blockShape] ${blockShape.length}`);\n\n  util.assert(\n      $x.shape.reduce(\n          (a, b, i) => {\n            if (i > 0 && i <= blockShape.length) {\n              return a &&\n                  ((b + paddings[i - 1][0] + paddings[i - 1][1]) %\n                       blockShape[i - 1] ===\n                   0);\n            }\n            return a;\n          },\n          true),\n      () => `input spatial dimensions ${$x.shape.slice(1)} with paddings ${\n          paddings.toString()} must be divisible by blockShapes ${\n          blockShape.toString()}`);\n\n  const grad = (dy: T) => {\n    return {$x: () => dy.batchToSpaceND(blockShape, paddings)};\n  };\n\n  return ENGINE.runKernel(\n      backend => backend.spaceToBatchND($x, blockShape, paddings), {$x}, grad);\n}\n\n/**\n * Unstacks a `tf.Tensor` of rank-`R` into a list of rank-`(R-1)` `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * tf.unstack(a).forEach(tensor => tensor.print());\n * ```\n *\n * @param x A tensor object.\n * @param axis The axis to unstack along. Defaults to 0 (the first dim).\n */\n/** @doc {heading: 'Tensors', subheading: 'Slicing and Joining'} */\nfunction unstack_(x: Tensor|TensorLike, axis = 0): Tensor[] {\n  axis = axis || 0;\n  const $x = convertToTensor(x, 'x', 'unstack');\n  util.assert(\n      axis >= -$x.shape.length && axis < $x.shape.length,\n      () =>\n          `Axis = ${axis} is not in [-${$x.shape.length}, ${$x.shape.length})`);\n  if (axis < 0) {\n    axis += $x.shape.length;\n  }\n  const grad = (dy: Tensor[]) => {\n    return {$x: () => stack(dy, axis)};\n  };\n  return ENGINE.runKernel(backend => backend.unstack($x, axis), {$x}, grad);\n}\n\n/**\n * Computes the cumulative sum of a `tf.Tensor` along `axis`.\n *\n * ```js\n * const x = tf.tensor([1, 2, 3, 4]);\n * x.cumsum().print();\n * ```\n * ```js\n * const x = tf.tensor([[1, 2], [3, 4]]);\n * x.cumsum().print();\n * ```\n *\n * @param x The input tensor to be summed.\n * @param axis The axis along which to sum. Optional. Defaults to 0.\n * @param exclusive Whether to perform exclusive cumulative sum. Optional.\n *     Defaults to false. If set to true then the sum of each tensor entry\n *     does not include its own value, but only the values previous to it\n *     along the specified axis.\n * @param reverse Whether to sum in the opposite direction. Optional.\n *     Defaults to false.\n */\n/** @doc {heading: 'Operations', subheading: 'Scan'} */\nfunction cumsum_<T extends Tensor>(\n    x: Tensor|TensorLike, axis = 0, exclusive = false, reverse = false): T {\n  const $x = convertToTensor(x, 'x', 'cumsum');\n\n  axis = axis | 0;\n  const permutation = getAxesPermutation([axis], $x.rank);\n  let permutedX = $x;\n  if (permutation != null) {\n    permutedX = $x.transpose(permutation);\n  }\n  const permutedAxis = getInnerMostAxes(1, $x.rank)[0];\n\n  const grad = (dy: T) => {\n    return {permutedX: () => dy.cumsum(axis, exclusive, !reverse)};\n  };\n  let value = ENGINE.runKernel(\n                  backend => backend.cumsum(\n                      permutedX, permutedAxis, exclusive, reverse),\n                  {permutedX}, grad) as T;\n\n  if (permutation != null) {\n    value = value.transpose(permutation);\n  }\n  return value;\n}\n\n/**\n * Returns a `tf.Tensor` that has expanded rank, by inserting a dimension\n * into the tensor's shape.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const axis = 1;\n * x.expandDims(axis).print();\n * ```\n *\n * @param x The input tensor whose dimensions to be expanded.\n * @param axis The dimension index at which to insert shape of `1`. Defaults\n *     to 0 (the first dimension).\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction expandDims_<R2 extends Rank>(\n    x: Tensor|TensorLike, axis = 0): Tensor<R2> {\n  const parseAs: DataType = null;\n  const $x = convertToTensor(x, 'x', 'expandDims', parseAs);\n\n  util.assert(axis <= $x.rank, () => 'Axis must be <= rank of the tensor');\n  const newShape = $x.shape.slice();\n  if (axis < 0) {\n    // Negative value is counted from the tail of rank.\n    util.assert(\n        -($x.rank + 1) <= axis,\n        () => `Axis must be in the interval [${- ($x.rank + 1)}, ${$x.rank}]`);\n    axis = $x.rank + axis + 1;\n  }\n  newShape.splice(axis, 0, 1);\n  return reshape($x, newShape as ShapeMap[R2]);\n}\n\n/**\n * Rearranges data from depth into blocks of spatial data. More specifically,\n * this op outputs a copy of the input tensor where values from the `depth`\n * dimension are moved in spatial blocks to the `height` and `width` dimensions.\n * The attr `blockSize` indicates the input block size and how the data is\n * moved.\n *\n *  - Chunks of data of size `blockSize * blockSize` from depth are rearranged\n * into non-overlapping blocks of size `blockSize x blockSize`\n *\n *  - The width the output tensor is `inputWidth * blockSize`, whereas the\n * height is `inputHeight * blockSize`\n *\n *  - The Y, X coordinates within each block of the output image are determined\n * by the high order component of the input channel index\n *\n *  - The depth of the input tensor must be divisible by `blockSize *\n * blockSize`\n *\n * The `dataFormat` attr specifies the layout of the input and output tensors\n * with the following options: \"NHWC\": [ `batch, height, width, channels` ]\n * \"NCHW\": [ `batch, channels, height, width` ]\n *\n * ```js\n * const x = tf.tensor4d([1, 2, 3, 4], [1, 1, 1, 4]);\n * const blockSize = 2;\n * const dataFormat = \"NHWC\";\n *\n * tf.depthToSpace(x, blockSize, dataFormat).print();\n * ```\n *\n * @param x The input tensor of rank 4\n * @param blockSIze  An `int` that is `>= 2`. The size of the spatial block\n * @param dataFormat An optional string from: \"NHWC\", \"NCHW\". Defaults to \"NHWC\"\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nfunction depthToSpace_(\n    x: Tensor4D|TensorLike4D, blockSize: number,\n    dataFormat: 'NHWC'|'NCHW' = 'NHWC'): Tensor4D {\n  const $x = convertToTensor(x, 'x', 'depthToSpace') as Tensor4D;\n\n  const inputHeight = (dataFormat === 'NHWC') ? $x.shape[1] : $x.shape[2];\n  const inputWidth = (dataFormat === 'NHWC') ? $x.shape[2] : $x.shape[3];\n  const inputDepth = (dataFormat === 'NHWC') ? $x.shape[3] : $x.shape[1];\n\n  util.assert(\n      inputHeight * blockSize >= 0,\n      () => `Negative dimension size caused by overflow when multiplying\n      ${inputHeight} and ${blockSize}  for depthToSpace with input shape\n      ${$x.shape}`);\n\n  util.assert(\n      inputWidth * blockSize >= 0,\n      () => `Negative dimension size caused by overflow when multiplying\n      ${inputWidth} and ${blockSize} for depthToSpace with input shape\n          ${$x.shape}`);\n\n  util.assert(\n      (inputDepth % (blockSize * blockSize) === 0),\n      () => `Dimension size must be evenly divisible by ${\n          blockSize * blockSize} but is ${\n          inputDepth} for depthToSpace with input shape ${$x.shape}`);\n\n  return ENGINE.runKernel(\n      backend => backend.depthToSpace($x, blockSize, dataFormat), {$x});\n}\n\n/**\n * Computes the difference between two lists of numbers.\n *\n * Given a Tensor `x` and a Tensor `y`, this operation returns a Tensor `out`\n * that represents all values that are in `x` but not in `y`. The returned\n * Tensor `out` is sorted in the same order that the numbers appear in `x`\n * (duplicates are preserved). This operation also returns a Tensor indices that\n * represents the position of each out element in `x`. In other words:\n *\n * `out[i] = x[idx[i]] for i in [0, 1, ..., out.length - 1]`\n *\n * ```js\n * const x = [1, 2, 3, 4, 5, 6];\n * const y = [1, 3, 5];\n *\n * const [out, indices] = await tf.setdiff1dAsync(x, y);\n * out.print(); // [2, 4, 6]\n * indices.print(); // [1, 3, 5]\n * ```\n *\n * @param x 1-D Tensor. Values to keep.\n * @param y 1-D Tensor. Must have the same type as x. Values to exclude in the\n *     output.\n * @returns Promise of Tensor tuple [out, indices].\n *  out: Tensor with the same type as x.\n *  indices: A Tensor of type int32.\n */\n/** @doc {heading: 'Tensors', subheading: 'Transformations'} */\nasync function setdiff1dAsync_(\n    x: Tensor|TensorLike, y: Tensor|TensorLike): Promise<[Tensor, Tensor]> {\n  const $x = convertToTensor(x, 'x', 'setdiff1d');\n  const $y = convertToTensor(y, 'y', 'setdiff1d');\n\n  util.assert(\n      $x.dtype === $y.dtype,\n      () => `x and y should have the same dtype, but got x (${\n          $x.dtype}) and y (${$y.dtype}).`);\n\n  util.assert(\n      $x.rank === 1, () => `x should be 1D tensor, but got x (${$x.shape}).`);\n\n  util.assert(\n      $y.rank === 1, () => `y should be 1D tensor, but got y (${$y.shape}).`);\n\n  const xVals = await $x.data();\n  const yVals = await $y.data();\n  const ySet = new Set(yVals);\n\n  let outputSize = 0;\n  for (let i = 0; i < xVals.length; i++) {\n    if (!ySet.has(xVals[i])) {\n      outputSize++;\n    }\n  }\n\n  const buffer = new TensorBuffer([outputSize], $x.dtype);\n  const indices = new TensorBuffer([outputSize], 'int32');\n  for (let i = 0, p = 0; i < xVals.length; i++) {\n    if (!ySet.has(xVals[i])) {\n      buffer.values[p] = xVals[i];\n      indices.values[p] = i;\n      p++;\n    }\n  }\n  return [buffer.toTensor(), indices.toTensor()];\n}\n\n/**\n * Creates an empty `tf.TensorBuffer` with the specified `shape` and `dtype`.\n *\n * The values are stored in CPU as `TypedArray`. Fill the buffer using\n * `buffer.set()`, or by modifying directly `buffer.values`.\n *\n * When done, call `buffer.toTensor()` to get an immutable `tf.Tensor` with\n * those values.\n *\n * ```js\n * // Create a buffer and set values at particular indices.\n * const buffer = tf.buffer([2, 2]);\n * buffer.set(3, 0, 0);\n * buffer.set(5, 1, 0);\n *\n * // Convert the buffer back to a tensor.\n * buffer.toTensor().print();\n * ```\n *\n * @param shape An array of integers defining the output tensor shape.\n * @param dtype The dtype of the buffer. Defaults to 'float32'.\n * @param values The values of the buffer as `TypedArray`. Defaults to\n * zeros.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction buffer<R extends Rank, D extends DataType = 'float32'>(\n    shape: ShapeMap[R], dtype: D = 'float32' as D,\n    values?: DataTypeMap[D]): TensorBuffer<R, D> {\n  dtype = dtype || 'float32' as D;\n  util.assertNonNegativeIntegerDimensions(shape);\n  return new TensorBuffer<R, D>(shape, dtype, values);\n}\n\n/**\n * Prints information about the `tf.Tensor` including its data.\n *\n * ```js\n * const verbose = true;\n * tf.tensor2d([1, 2, 3, 4], [2, 2]).print(verbose);\n * ```\n * @param x The tensor to be printed.\n * @param verbose Whether to print verbose information about the ` Tensor`,\n * including dtype and size.\n */\n/** @doc {heading: 'Tensors', subheading: 'Creation'} */\nfunction print<T extends Tensor>(x: T, verbose = false): void {\n  console.log(x.toString(verbose));\n}\n\nexport {\n  buffer,  // Not wrapped in op() since no tensors.\n  print    // Not wrapped in op() since no need to increase stack trace.\n};\n\nexport const batchToSpaceND = op({batchToSpaceND_});\nexport const cast = op({cast_});\nexport const clone = op({clone_});\nexport const cumsum = op({cumsum_});\nexport const depthToSpace = op({depthToSpace_});\nexport const expandDims = op({expandDims_});\nexport const eye = op({eye_});\nexport const multinomial = op({multinomial_});\nexport const oneHot = op({oneHot_});\nexport const pad = op({pad_});\nexport const pad1d = op({pad1d_});\nexport const pad2d = op({pad2d_});\nexport const pad3d = op({pad3d_});\nexport const pad4d = op({pad4d_});\nexport const rand = op({rand_});\nexport const randomNormal = op({randomNormal_});\nexport const randomUniform = op({randomUniform_});\nexport const reshape = op({reshape_});\nexport const spaceToBatchND = op({spaceToBatchND_});\nexport const squeeze = op({squeeze_});\nexport const stack = op({stack_});\nexport const tile = op({tile_});\nexport const truncatedNormal = op({truncatedNormal_});\nexport const unstack = op({unstack_});\nexport const setdiff1dAsync = setdiff1dAsync_;\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Gets the new shape of the input Tensor after it's been reshaped\n * to:\n * [blockShape[0], ..., blockShape[M-1], batch / prod(blockShape),\n * inputShape[1], ..., inputShape[N-1]]\n *\n * See step 1: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nexport function getReshaped(\n    inputShape: number[], blockShape: number[], prod: number,\n    batchToSpace = true): number[] {\n  let reshaped: number[] = [];\n  if (batchToSpace) {\n    reshaped = reshaped.concat(blockShape.slice(0));\n    reshaped.push(inputShape[0] / prod);\n    reshaped = reshaped.concat(inputShape.slice(1));\n  } else {\n    reshaped = reshaped.concat(inputShape[0]);\n    const spatialLength = blockShape.length;\n    for (let i = 0; i < spatialLength; ++i) {\n      reshaped =\n          reshaped.concat([inputShape[i + 1] / blockShape[i], blockShape[i]]);\n    }\n    reshaped = reshaped.concat(inputShape.slice(spatialLength + 1));\n  }\n  return reshaped;\n}\n\n/**\n * Gets the permutation that will transpose the dimensions of the\n * reshaped tensor to shape:\n *\n * [batch / prod(block_shape),inputShape[1], blockShape[0], ...,\n * inputShape[M], blockShape[M-1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * see step 2: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nexport function getPermuted(\n    reshapedRank: number, blockShapeRank: number,\n    batchToSpace = true): number[] {\n  const permuted = [];\n  if (batchToSpace) {\n    permuted.push(blockShapeRank);\n    for (let i = blockShapeRank + 1; i < reshapedRank; ++i) {\n      if (i <= 2 * blockShapeRank) {\n        permuted.push(i);\n        permuted.push(i - (blockShapeRank + 1));\n      } else {\n        permuted.push(i);\n      }\n    }\n  } else {\n    const permutedBeforeBatch = [];\n    const permutedAfterBatch = [];\n    for (let i = 1; i < reshapedRank; ++i) {\n      if (i >= blockShapeRank * 2 + 1 || i % 2 === 1) {\n        permutedAfterBatch.push(i);\n      } else {\n        permutedBeforeBatch.push(i);\n      }\n    }\n    permuted.push(...permutedBeforeBatch);\n    permuted.push(0);\n    permuted.push(...permutedAfterBatch);\n  }\n  return permuted;\n}\n\n/**\n * Gets the shape of the reshaped and permuted input Tensor before any cropping\n * is applied.  The new shape will be:\n *\n * [batch / prod(blockShape),inputShape[1] * blockShape[0], ...,\n * inputShape[M] * blockShape[M-1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * See step 3: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nexport function getReshapedPermuted(\n    inputShape: number[], blockShape: number[], prod: number,\n    batchToSpace = true): number[] {\n  const reshapedPermuted = [];\n\n  if (batchToSpace) {\n    reshapedPermuted.push(inputShape[0] / prod);\n  } else {\n    reshapedPermuted.push(inputShape[0] * prod);\n  }\n\n  for (let i = 1; i < inputShape.length; ++i) {\n    if (i <= blockShape.length) {\n      if (batchToSpace) {\n        reshapedPermuted.push(blockShape[i - 1] * inputShape[i]);\n      } else {\n        reshapedPermuted.push(inputShape[i] / blockShape[i - 1]);\n      }\n    } else {\n      reshapedPermuted.push(inputShape[i]);\n    }\n  }\n\n  return reshapedPermuted;\n}\n\n/**\n * Converts the crops argument into the beginning coordinates of a slice\n * operation.\n */\nexport function getSliceBeginCoords(\n    crops: number[][], blockShape: number): number[] {\n  const sliceBeginCoords = [0];\n  for (let i = 0; i < blockShape; ++i) {\n    sliceBeginCoords.push(crops[i][0]);\n  }\n  return sliceBeginCoords;\n}\n\n/**\n * Converts the crops argument into the size of a slice operation.  When\n * combined with getSliceBeginCoords this function allows the reshaped and\n * permuted Tensor to be cropped to its final output shape of:\n *\n * inputShape[1] * blockShape[0] - crops[0,0] - crops[0,1], ...,\n * inputShape[M] * blockShape[M-1] -crops[M-1,0] -\n * crops[M-1,1],inputShape[M+1], ..., inputShape[N-1]]\n *\n * See step 4: https://www.tensorflow.org/api_docs/python/tf/batch_to_space_nd\n */\nexport function getSliceSize(\n    uncroppedShape: number[], crops: number[][], blockShape: number): number[] {\n  const sliceSize = uncroppedShape.slice(0, 1);\n  for (let i = 0; i < blockShape; ++i) {\n    sliceSize.push(uncroppedShape[i + 1] - crops[i][0] - crops[i][1]);\n  }\n\n  return sliceSize;\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor} from '../tensor';\nimport {computeStrides} from '../util';\n\n/**\n * Validate gather nd inputs.\n *\n * @param tensor The tensor contains the source values.\n * @param indices The tensor contains the indices to slice the source.\n *\n * @returns [resultShape, numUpdates, sliceSize, strides]\n */\nexport function prepareAndValidate(\n    tensor: Tensor, indices: Tensor): [number[], number, number, number[]] {\n  if (tensor.rank < 1) {\n    throw new Error(\n        'tf.gatherND() expects the input to be rank 1 or higher,' +\n        ` but the rank was ${tensor.rank}.`);\n  }\n  if (indices.rank < 1) {\n    throw new Error(\n        'tf.gatherND() expects the indices to be rank 1 or higher,' +\n        ` but the rank was ${indices.rank}.`);\n  }\n  if (indices.dtype !== 'int32') {\n    throw new Error(\n        'tf.gatherND() expects the indices to be int32 type,' +\n        ` but the dtype was ${indices.dtype}.`);\n  }\n  if (indices.shape[indices.rank - 1] > tensor.rank) {\n    throw new Error(\n        'index innermost dimension length must be <= tensor rank; saw: ' +\n        `${indices.shape[indices.rank - 1]} vs. ${tensor.rank}`);\n  }\n\n  if (tensor.size === 0) {\n    throw new Error(\n        'Requested more than 0 entries, but input is empty.' +\n        ` Input shape: ${tensor.shape}.`);\n  }\n\n  const indicesShape = indices.shape;\n  const sliceRank = indicesShape[indicesShape.length - 1];\n\n  // The result shape is\n  //   indices.shape[:-1] + params.shape[indices.shape[-1]:]\n  let nResult = 1;\n  for (let i = 0; i < indicesShape.length - 1; ++i) {\n    nResult *= indicesShape[i];\n  }\n\n  const inputShape = tensor.shape;\n\n  const resultShape = indicesShape.slice();\n  resultShape.pop();\n\n  let sliceSize = 1;\n  for (let i = sliceRank; i < tensor.rank; ++i) {\n    sliceSize *= inputShape[i];\n    resultShape.push(inputShape[i]);\n  }\n\n  const strides =\n      [...computeStrides(tensor.shape).map(stride => stride / sliceSize),\n       1].slice(0, sliceRank);\n\n  return [resultShape, nResult, sliceSize, strides];\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Inputs of size above this threshold will be parallelized by calling multiple\n * shader programs.\n */\nimport {nearestDivisor} from '../util';\n\nexport const PARALLELIZE_THRESHOLD = 30;\n\nexport interface ReduceInfo {\n  windowSize: number;\n  batchSize: number;\n  inSize: number;\n}\n\nexport function computeOptimalWindowSize(inSize: number): number {\n  if (inSize <= PARALLELIZE_THRESHOLD) {\n    return inSize;\n  }\n  return nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor} from '../tensor';\nimport {computeStrides, sizeFromShape} from '../util';\n\n/**\n * Check whether updates.shape = indices.shape[:batchDim] +\n * shape[sliceDim:]\n *\n * @param x The input tensor.\n */\nexport function validateUpdateShape(\n    shape: number[], indices: Tensor, updates: Tensor) {\n  const sliceDim = (indices.rank > 1) ? indices.shape[indices.rank - 1] : 1;\n  const batchDim = (indices.rank > 1) ? indices.rank - 1 : 1;\n\n  const shapeError = 'Must have updates.shape = indices.shape[:batchDim] + ' +\n      `shape[sliceDim:], got updates.shape: ${updates.shape}` +\n      `, indices.shape: ${indices.shape}, shape: ${shape}` +\n      `, sliceDim: ${sliceDim}, and batchDim: ${batchDim}.`;\n\n  if (updates.rank < batchDim) {\n    throw new Error(shapeError + ` update.rank < ${batchDim}. `);\n  }\n  if (shape.length < sliceDim + (updates.rank - batchDim)) {\n    throw new Error(\n        shapeError +\n        ` Output shape length < ${sliceDim + (updates.rank - batchDim)}`);\n  }\n  if (updates.rank !== batchDim + shape.length - sliceDim) {\n    throw new Error(\n        shapeError + ` update.rank != ${batchDim + shape.length - sliceDim}`);\n  }\n  for (let d = 0; d < batchDim; ++d) {\n    if (updates.shape[d] !== indices.shape[d]) {\n      throw new Error(\n          shapeError +\n          ` updates.shape[${d}] (${updates.shape[d]}) != indices.shape[${d}] (${\n              indices.shape[d]}).`);\n    }\n  }\n  for (let d = 0; d < updates.rank - batchDim; ++d) {\n    if (updates.shape[d + batchDim] !== shape[d + sliceDim]) {\n      throw new Error(\n          shapeError +\n          ` updates.shape[${d + batchDim}] (${\n              updates.shape[d + batchDim]}) != shape[${d + batchDim}] (${\n              shape[d + batchDim]})`);\n    }\n  }\n}\n\nexport interface ScatterShapeInfo {\n  sliceRank: number;\n  numUpdates: number;\n  sliceSize: number;\n  strides: number[];\n  outputSize: number;\n}\n/**\n * Validate scatter nd inputs.\n *\n * @param update The tensor contains the update values.\n * @param indices The tensor contains the indices for the update values.\n * @param shape The shape of the output tensor.\n */\nexport function validateInput(\n    updates: Tensor, indices: Tensor, shape: number[]) {\n  if (indices.rank < 1) {\n    throw new Error(\n        'tf.scatterND() expects the indices to be rank 1 or higher,' +\n        ` but the rank was ${indices.rank}.`);\n  }\n  if (updates.rank < 1) {\n    throw new Error(\n        'tf.scatterND() expects the updates to be rank 1 or higher,' +\n        ` but the rank was ${updates.rank}.`);\n  }\n  if (indices.dtype !== 'int32') {\n    throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${\n        indices.dtype}`);\n  }\n  if (shape.length < 1) {\n    throw new Error(\n        `Output rank must be greater or equal to 1, but got shape: ${shape}`);\n  }\n\n  if (shape.length === 0) {\n    if (indices.size === 0) {\n      throw new Error(`Indices specified for empty output. indices shape: ${\n          indices.shape}`);\n    }\n    if (updates.size === 0) {\n      throw new Error(`Updates specified for empty output. updates shape: ${\n          updates.shape}`);\n    }\n  }\n\n  validateUpdateShape(shape, indices, updates);\n}\n\n/**\n * Calculate the shape information for the output.\n *\n * @param update The tensor contains the update values.\n * @param indices The tensor contains the indices for the update values.\n * @param shape The shape of the output tensor.\n *\n * @returns ScatterShapeInfo\n */\nexport function calculateShapes(\n    updates: Tensor, indices: Tensor, shape: number[]): ScatterShapeInfo {\n  // Calculate the number of dimensions in indices\n  const sliceRank = (indices.rank > 1) ? indices.shape[indices.rank - 1] : 1;\n\n  // Calculate the number of elements that make up each slice of our updated\n  // tensor. This allows us to work with flattened tensors and copy over whole\n  // slices at a time.\n  const totalNd = shape.length;\n\n  let sliceSize = 1;\n  for (let i = sliceRank; i < totalNd; ++i) {\n    sliceSize *= shape[i];\n  }\n\n  const safeSliceDim = (sliceRank < 1) ? 1 : sliceRank;\n  const numUpdates = indices.size / safeSliceDim;\n\n  const strides = [...computeStrides(shape.slice(0, sliceRank)), 1];\n  const outputSize = sizeFromShape(shape);\n  return {sliceRank, numUpdates, sliceSize, strides, outputSize};\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport * as util from '../util';\n\nexport function assertParamsValid(\n    input: Tensor, begin: number[], size: number[]): void {\n  util.assert(\n      input.rank === begin.length,\n      () => `Error in slice${input.rank}D: Length of begin ${begin} must ` +\n          `match the rank of the array (${input.rank}).`);\n  util.assert(\n      input.rank === size.length,\n      () => `Error in slice${input.rank}D: Length of size ${size} must ` +\n          `match the rank of the array (${input.rank}).`);\n\n  for (let i = 0; i < input.rank; ++i) {\n    util.assert(\n        begin[i] + size[i] <= input.shape[i],\n        () => `Error in slice${input.rank}D: begin[${i}] + size[${i}] ` +\n            `(${begin[i] + size[i]}) would overflow input.shape[${i}] (${\n                  input.shape[i]})`);\n  }\n}\n\n/**\n * Calculate the start index and output tensor shape for strided slice op.\n * @returns array of [startIndex, size, shrinkAxis]\n */\nexport function getStridedSlicedInfo(\n    shape: number[], begin: number[], end: number[], strides: number[],\n    beginMask = 0, endMask = 0, ellipsisMask = 0, newAxisMask = 0,\n    shrinkAxisMask = 0): [number[], number[], number[]] {\n  if (ellipsisMask !== 0) {\n    throw new Error('ellipsis mask is not yet supported');\n  }\n  if (newAxisMask !== 0) {\n    throw new Error('new axis mask is not yet supported');\n  }\n  // Note that the axis orders are reversed for runtime ops, so the indices,\n  // strides and masks must be as well too.\n  const startIndex: number[] = [];\n  const endIndex: number[] = [];\n  const shrinkAxis: number[] = [];\n  for (let i = 0; i < shape.length; i++) {\n    startIndex[i] = startForAxis(beginMask, begin, strides, shape, i);\n    endIndex[i] = stopForAxis(endMask, end, strides, shape, i);\n    // When shrinking an axis, use startIndex + 1 for endIndex.\n    // Check the axis bit from right of shrinkAxisMask\n    if (shrinkAxisMask & 1 << i) {\n      endIndex[i] = startIndex[i] + 1;\n      shrinkAxis.push(i);\n    }\n  }\n\n  let size = new Array(shape.length).fill(0);\n  size = size.map((d, i) => {\n    let count = 0;\n    const stride = strides[i] || 1;\n    for (let start = startIndex[i];\n         !(stride > 0 ? start >= endIndex[i] : start <= endIndex[i]);\n         start += stride) {\n      count += 1;\n    }\n    return count;\n  });\n\n  return [startIndex, size, shrinkAxis];\n}\n\nexport function startForAxis(\n    beginMask: number, startIndices: number[], strides: number[],\n    inputShape: number[], axis: number): number {\n  // Begin with the specified index\n  let start = startIndices[axis];\n  const stride = strides[axis] || 1;\n\n  // Check the axis bit from right of beginMask or the begin index is not set\n  // for the axis.\n  if (beginMask & 1 << axis || start == null) {\n    if (stride > 0) {\n      // Forward iteration - use the first element. These values will get\n      // clamped below (Note: We could have set them to 0 and axis_size-1, but\n      // use lowest() and max() to maintain symmetry with StopForAxis())\n      start = Number.MIN_SAFE_INTEGER;\n    } else {\n      // Backward iteration - use the last element.\n      start = Number.MAX_SAFE_INTEGER;\n    }\n  }\n\n  // Handle negative indices\n  const axisSize = inputShape[axis];\n  if (start < 0) {\n    start += axisSize;\n  }\n\n  // Clamping\n  start = util.clamp(0, start, axisSize - 1);\n\n  return start;\n}\n\nexport function stopForAxis(\n    endMask: number, stopIndices: number[], strides: number[],\n    inputShape: number[], axis: number): number {\n  // Begin with the specified index\n  let stop = stopIndices[axis];\n  const stride = strides[axis] || 1;\n\n  // Check the axis bit from right of endMask or if the stop index is not set\n  // for this axis.\n  if (endMask & (1 << axis) || stop == null) {\n    if (stride > 0) {\n      // Forward iteration - use the last element. These values will get\n      // clamped below\n      stop = Number.MAX_SAFE_INTEGER;\n    } else {\n      // Backward iteration - use the first element.\n      stop = Number.MIN_SAFE_INTEGER;\n    }\n  }\n\n  // Handle negative indices\n  const axisSize = inputShape[axis];\n  if (stop < 0) {\n    stop += axisSize;\n  }\n\n  // Clamping\n  // Because the end index points one past the last element, we need slightly\n  // different clamping ranges depending on the direction.\n  if (stride > 0) {\n    // Forward iteration\n    stop = util.clamp(0, stop, axisSize);\n  } else {\n    // Backward iteration\n    stop = util.clamp(-1, stop, axisSize - 1);\n  }\n\n  return stop;\n}\n\n/**\n * Returns true if the slice occupies a continous set of elements in the\n * 'flat' space.\n */\nexport function isSliceContinous(\n    shape: number[], begin: number[], size: number[]) {\n  // Index of the first axis that has size > 1.\n  let firstNonOneAxis = size.length;\n  for (let i = 0; i < size.length; i++) {\n    if (size[i] > 1) {\n      firstNonOneAxis = i;\n      break;\n    }\n  }\n\n  for (let i = firstNonOneAxis + 1; i < size.length; i++) {\n    if (begin[i] > 0 || size[i] !== shape[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function computeFlatOffset(begin: number[], strides: number[]): number {\n  let flatOffset = begin.length > 0 ? begin[begin.length - 1] : 1;\n  for (let i = 0; i < begin.length - 1; i++) {\n    flatOffset += begin[i] * strides[i];\n  }\n  return flatOffset;\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {CustomGradientFunc, ENGINE} from './engine';\nimport {Scalar, Tensor, Variable} from './tensor';\nimport {NamedTensorMap} from './tensor_types';\nimport {convertToTensor, convertToTensorArray} from './tensor_util_env';\nimport {TensorLike} from './types';\nimport * as util from './util';\n\n/**\n * Provided `f(x)`, returns another function `g(x, dy?)`, which gives the\n * gradient of `f(x)` with respect to `x`.\n *\n * If `dy` is provided, the gradient of `f(x).mul(dy).sum()` with respect to\n * `x` is computed instead. `f(x)` must take a single tensor `x` and return a\n * single tensor `y`. If `f()` takes multiple inputs, use `tf.grads` instead.\n *\n * ```js\n * // f(x) = x ^ 2\n * const f = x => x.square();\n * // f'(x) = 2x\n * const g = tf.grad(f);\n *\n * const x = tf.tensor1d([2, 3]);\n * g(x).print();\n * ```\n *\n * ```js\n * // f(x) = x ^ 3\n * const f = x => x.pow(tf.scalar(3, 'int32'));\n * // f'(x) = 3x ^ 2\n * const g = tf.grad(f);\n * // f''(x) = 6x\n * const gg = tf.grad(g);\n *\n * const x = tf.tensor1d([2, 3]);\n * gg(x).print();\n * ```\n *\n * @param f The function f(x), to compute gradient for.\n */\n/** @doc {heading: 'Training', subheading: 'Gradients'} */\nfunction grad(f: (x: Tensor) => Tensor): (\n    x: TensorLike|Tensor, dy?: TensorLike|Tensor) => Tensor {\n  util.assert(\n      util.isFunction(f), () => 'The f passed in grad(f) must be a function');\n  return (x: TensorLike|Tensor, dy?: TensorLike|Tensor): Tensor => {\n    // x can be of any dtype, thus null as the last argument.\n    const $x = convertToTensor(x, 'x', 'tf.grad', null);\n    const $dy: Tensor =\n        (dy != null) ? convertToTensor(dy, 'dy', 'tf.grad') : null;\n    return ENGINE.tidy(() => {\n      const {value, grads} = ENGINE.gradients(() => f($x), [$x], $dy);\n      if ($dy != null) {\n        util.assertShapesMatch(\n            value.shape, $dy.shape,\n            'The shape of dy passed in grad(f)(x, dy) must match the shape ' +\n                'returned by f(x)');\n      }\n      checkGrads(grads);\n      return grads[0];\n    });\n  };\n}\n\n/**\n * Provided `f(x1, x2,...)`, returns another function `g([x1, x2,...], dy?)`,\n * which gives an array of gradients of `f()` with respect to each input\n * [`x1`,`x2`,...].\n *\n * If `dy` is passed when calling `g()`, the gradient of\n * `f(x1,...).mul(dy).sum()` with respect to each input is computed instead.\n * The provided `f` must take one or more tensors and return a single tensor\n * `y`. If `f()` takes a single input, we recommend using `tf.grad` instead.\n *\n * ```js\n * // f(a, b) = a * b\n * const f = (a, b) => a.mul(b);\n * // df / da = b, df / db = a\n * const g = tf.grads(f);\n *\n * const a = tf.tensor1d([2, 3]);\n * const b = tf.tensor1d([-2, -3]);\n * const [da, db] = g([a, b]);\n * console.log('da');\n * da.print();\n * console.log('db');\n * db.print();\n * ```\n *\n * @param f The function `f(x1, x2,...)` to compute gradients for.\n */\n/** @doc {heading: 'Training', subheading: 'Gradients'} */\nfunction grads(f: (...args: Tensor[]) => Tensor): (\n    args: Array<Tensor|TensorLike>, dy?: Tensor|TensorLike) => Tensor[] {\n  util.assert(\n      util.isFunction(f), () => 'The f passed in grads(f) must be a function');\n  return (args: Array<Tensor|TensorLike>, dy?: Tensor|TensorLike): Tensor[] => {\n    util.assert(\n        Array.isArray(args),\n        () => 'The args passed in grads(f)(args) must be an array ' +\n            'of `Tensor`s or `TensorLike`s');\n    // args can be of any dtype, thus null as the last argument.\n    const $args = convertToTensorArray(args, 'args', 'tf.grads', null);\n    const $dy: Tensor =\n        (dy != null) ? convertToTensor(dy, 'dy', 'tf.grads') : null;\n    return ENGINE.tidy(() => {\n      const {value, grads} = ENGINE.gradients(() => f(...$args), $args, $dy);\n      if ($dy != null) {\n        util.assertShapesMatch(\n            value.shape, $dy.shape,\n            'The shape of dy passed in grads(f)([x1,...], dy) must ' +\n                'match the shape returned by f([x1,...])');\n      }\n      checkGrads(grads);\n      return grads;\n    });\n  };\n}\n\n/**\n * Like `tf.grad`, but also returns the value of `f()`. Useful when `f()`\n * returns a metric you want to show.\n *\n * The result is a rich object with the following properties:\n * - grad: The gradient of `f(x)` w.r.t `x` (result of `tf.grad`).\n * - value: The value returned by `f(x)`.\n *\n * ```js\n * // f(x) = x ^ 2\n * const f = x => x.square();\n * // f'(x) = 2x\n * const g = tf.valueAndGrad(f);\n *\n * const x = tf.tensor1d([2, 3]);\n * const {value, grad} = g(x);\n *\n * console.log('value');\n * value.print();\n * console.log('grad');\n * grad.print();\n * ```\n */\n/** @doc {heading: 'Training', subheading: 'Gradients'} */\nfunction valueAndGrad<I extends Tensor, O extends Tensor>(f: (x: I) => O): (\n    x: I, dy?: O) => {\n  value: O;\n  grad: I;\n} {\n  util.assert(\n      util.isFunction(f),\n      () => 'The f passed in valueAndGrad(f) must be a function');\n  return (x: I, dy?: O) => {\n    util.assert(\n        x instanceof Tensor,\n        () => 'The x passed in valueAndGrad(f)(x) must be a tensor');\n    util.assert(\n        dy == null || dy instanceof Tensor,\n        () => 'The dy passed in valueAndGrad(f)(x, dy) must be a tensor');\n    const {grads, value} = ENGINE.gradients(() => f(x), [x], dy);\n    checkGrads(grads);\n    return {grad: grads[0] as I, value: value as O};\n  };\n}\n\n/**\n * Like `tf.grads`, but returns also the value of `f()`. Useful when `f()`\n * returns a metric you want to show.\n *\n * The result is a rich object with the following properties:\n * - grads: The gradients of `f()` w.r.t each input (result of `tf.grads`).\n * - value: The value returned by `f(x)`.\n *\n * ```js\n * // f(a, b) = a * b\n * const f = (a, b) => a.mul(b);\n * // df/da = b, df/db = a\n * const g = tf.valueAndGrads(f);\n *\n * const a = tf.tensor1d([2, 3]);\n * const b = tf.tensor1d([-2, -3]);\n * const {value, grads} = g([a, b]);\n *\n * const [da, db] = grads;\n *\n * console.log('value');\n * value.print();\n *\n * console.log('da');\n * da.print();\n * console.log('db');\n * db.print();\n * ```\n */\n/** @doc {heading: 'Training', subheading: 'Gradients'} */\nfunction valueAndGrads<O extends Tensor>(f: (...args: Tensor[]) => O): (\n    args: Tensor[], dy?: O) => {\n  grads: Tensor[];\n  value: O;\n} {\n  util.assert(\n      util.isFunction(f),\n      () => 'The f passed in valueAndGrads(f) must be a function');\n  return (args: Tensor[], dy?: O) => {\n    util.assert(\n        Array.isArray(args) && args.every(arg => arg instanceof Tensor),\n        () => 'The args passed in valueAndGrads(f)(args) must be array of ' +\n            'tensors');\n    util.assert(\n        dy == null || dy instanceof Tensor,\n        () => 'The dy passed in valueAndGrads(f)(args, dy) must be a tensor');\n    const res = ENGINE.gradients(() => f(...args), args, dy);\n    if (dy != null) {\n      util.assertShapesMatch(\n          res.value.shape, dy.shape,\n          'The shape of dy passed in valueAndGrads(f)([x1,...], dy) must ' +\n              'match the shape returned by f([x1,...])');\n    }\n    checkGrads(res.grads);\n    return res;\n  };\n}\n\n/**\n * Computes and returns the gradient of f(x) with respect to the list of\n * trainable variables provided by `varList`. If no list is provided, it\n * defaults to all trainable variables.\n *\n * ```js\n * const a = tf.variable(tf.tensor1d([3, 4]));\n * const b = tf.variable(tf.tensor1d([5, 6]));\n * const x = tf.tensor1d([1, 2]);\n *\n * // f(a, b) = a * x ^ 2 + b * x\n * const f = () => a.mul(x.square()).add(b.mul(x)).sum();\n * // df/da = x ^ 2, df/db = x\n * const {value, grads} = tf.variableGrads(f);\n *\n * Object.keys(grads).forEach(varName => grads[varName].print());\n * ```\n *\n * @param f The function to execute. f() should return a scalar.\n * @param varList The list of variables to compute the gradients with respect\n *     to. Defaults to all trainable variables.\n * @returns An object with the following keys and values:\n *   - `value`: The value of the function `f`.\n *   - `grads`: A map from the names of the variables to the gradients.\n *     If the `varList` argument is provided explicitly and contains a subset of\n *     non-trainable variables, this map in the return value will contain keys\n *     that map the names of the non-trainable variables to `null`.\n */\n/** @doc {heading: 'Training', subheading: 'Gradients'} */\nfunction variableGrads(f: () => Scalar, varList?: Variable[]):\n    {value: Scalar, grads: NamedTensorMap} {\n  util.assert(\n      util.isFunction(f),\n      () => 'The f passed in variableGrads(f) must be a function');\n  util.assert(\n      varList == null ||\n          Array.isArray(varList) && varList.every(v => v instanceof Variable),\n      () =>\n          'The varList passed in variableGrads(f, varList) must be an array ' +\n          'of variables');\n\n  const specifiedVarList = varList != null;\n  if (!specifiedVarList) {\n    // Get all of the trainable variables.\n    varList = [];\n    for (const varName in ENGINE.registeredVariables) {\n      varList.push(ENGINE.registeredVariables[varName]);\n    }\n  }\n\n  const specifiedNonTrainable: Variable[] =\n      specifiedVarList ? varList.filter(variable => !variable.trainable) : null;\n\n  // Prune non-trainable variables.\n  const originalVarCount = varList.length;\n  varList = varList.filter(variable => variable.trainable);\n  util.assert(\n      varList.length > 0,\n      () => `variableGrads() expects at least one of the input variables to ` +\n          `be trainable, but none of the ${originalVarCount} variables is ` +\n          `trainable.`);\n\n  const allowNoGradients = true;\n  const {value, grads} = ENGINE.gradients(f, varList, null, allowNoGradients);\n\n  util.assert(\n      grads.some(g => g != null),\n      () => 'Cannot find a connection between any variable and the result of ' +\n          'the loss function y=f(x). Please make sure the operations that ' +\n          'use variables are inside the function f passed to minimize().');\n  util.assert(\n      value.rank === 0,\n      () => `The f passed in variableGrads(f) must return a scalar, but it ` +\n          `returned a rank-${value.rank} tensor`);\n\n  const namedGrads: NamedTensorMap = {};\n  varList.forEach((v, i) => {\n    if (grads[i] != null) {\n      namedGrads[v.name] = grads[i];\n    }\n  });\n  if (specifiedNonTrainable != null) {\n    // If varList is explicitly provided and contains non-trainable values,\n    // add them to the returned gradients with `null` values.\n    specifiedNonTrainable.forEach(v => namedGrads[v.name] = null);\n  }\n  return {value, grads: namedGrads};\n}\n\n/**\n * Overrides the gradient computation of a function `f`.\n *\n * Takes a function\n * `f(...inputs, save) => {value: Tensor, gradFunc: (dy, saved) => Tensor[]}`\n * and returns another function `g(...inputs)` which takes the same inputs as\n * `f`. When called, `g` returns `f().value`. In backward mode, custom gradients\n * with respect to each input of `f` are computed using `f().gradFunc`.\n *\n * The `save` function passsed to `f` should be used for saving tensors needed\n * in the gradient. And the `saved` passed to the `gradFunc` is a\n * `NamedTensorMap`, which contains those saved tensor.\n *\n * ```js\n * const customOp = tf.customGrad((x, save) => {\n *   // Save x to make sure it's available later for the gradient.\n *   save([x]);\n *   // Override gradient of our custom x ^ 2 op to be dy * abs(x);\n *   return {\n *     value: x.square(),\n *     // Note `saved.x` which points to the `x` we saved earlier.\n *     gradFunc: (dy, saved) => [dy.mul(saved[0].abs())]\n *   };\n * });\n *\n * const x = tf.tensor1d([-1, -2, 3]);\n * const dx = tf.grad(x => customOp(x));\n *\n * console.log(`f(x):`);\n * customOp(x).print();\n * console.log(`f'(x):`);\n * dx(x).print();\n * ```\n *\n * @param f The function to evaluate in forward mode, which should return\n *     `{value: Tensor, gradFunc: (dy, saved) => Tensor[]}`, where `gradFunc`\n *     returns the custom gradients of `f` with respect to its inputs.\n */\n/** @doc {heading: 'Training', subheading: 'Gradients'} */\nfunction customGrad<T extends Tensor>(f: CustomGradientFunc<T>):\n    (...args: Tensor[]) => T {\n  return ENGINE.customGrad(f);\n}\n\nfunction checkGrads(grads: Tensor[]) {\n  const numNullGradients = grads.filter(g => g == null).length;\n  if (numNullGradients > 0) {\n    throw new Error(\n        `Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.`);\n  }\n}\n\nexport {\n  customGrad,\n  variableGrads,\n  valueAndGrad,\n  valueAndGrads,\n  grad,\n  grads,\n};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {customGrad} from '../gradients';\nimport {Tensor} from '../tensor';\nimport {GradSaveFunc} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {op} from './operation';\n\n/**\n * Computes the softmax normalized vector given the logits.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n *\n * a.softmax().print();  // or tf.softmax(a)\n * ```\n *\n * ```js\n * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);\n *\n * a.softmax().print();  // or tf.softmax(a)\n * ```\n *\n * @param logits The logits array.\n * @param dim The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n */\n/** @doc {heading: 'Operations', subheading: 'Normalization'} */\nfunction softmax_<T extends Tensor>(logits: T|TensorLike, dim = -1): T {\n  const $logits = convertToTensor(logits, 'logits', 'softmax');\n\n  if (dim === -1) {\n    dim = $logits.rank - 1;\n  }\n  if (dim !== $logits.rank - 1) {\n    throw Error(\n        'Softmax along a non-last dimension is not yet supported. ' +\n        `Logits was rank ${$logits.rank} and dim was ${dim}`);\n  }\n\n  const customOp = customGrad((logits: Tensor, save: GradSaveFunc) => {\n    // Do it in log space for numerical stability.\n    // exp(X - logSumExp(X))\n    const keepDims = true;\n    const lse = logits.logSumExp([dim], keepDims);\n    const logResult = logits.toFloat().sub(lse);\n    const y = logResult.exp() as T;\n    save([y]);\n    const gradFunc = (dy: T, saved: Tensor[]) => {\n      const [y] = saved;\n      const dyTimesY = dy.mul(y);\n      const keepDims = true;\n      return dyTimesY.sub(dyTimesY.sum([dim], keepDims).mul(y));\n    };\n\n    return {value: y, gradFunc};\n  });\n\n  return customOp($logits);\n}\n\n/**\n * Computes the log softmax.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n *\n * a.logSoftmax().print();  // or tf.logSoftmax(a)\n * ```\n *\n * ```js\n * const a = tf.tensor2d([2, 4, 6, 1, 2, 3], [2, 3]);\n *\n * a.logSoftmax().print();  // or tf.logSoftmax(a)\n * ```\n *\n * @param logits The logits array.\n * @param axis The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n */\n/** @doc {heading: 'Operations', subheading: 'Normalization'} */\nfunction logSoftmax_<T extends Tensor>(logits: T|TensorLike, axis = -1): T {\n  const $logits = convertToTensor(logits, 'logits', 'logSoftmax');\n\n  if (axis === -1) {\n    axis = $logits.rank - 1;\n  }\n  if (axis !== $logits.rank - 1) {\n    throw Error(\n        'Log Softmax along a non-last dimension is not yet supported. ' +\n        `Logits was rank ${$logits.rank} and axis was ${axis}`);\n  }\n\n  const customOp = customGrad((logits: Tensor, save: GradSaveFunc) => {\n    const keepDims = true;\n    const xMax = logits.max(axis, true);\n    const shifted = logits.sub(xMax);\n    const value =\n        shifted.toFloat().sub(shifted.exp().sum(axis, keepDims).log()) as T;\n    save([value]);\n    const gradFunc = (dy: T, saved: Tensor[]) => {\n      const [value] = saved;\n      const softmax = value.exp();\n      return dy.sub(dy.sum(axis, keepDims).mul(softmax));\n    };\n\n    return {value, gradFunc};\n  });\n\n  return customOp($logits);\n}\n\nexport const softmax = op({softmax_});\nexport const logSoftmax = op({logSoftmax_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Conv2DInfo, Conv3DInfo} from '../ops/conv_util';\nimport {Activation} from '../ops/fused_util';\nimport {Backend, DataId, Scalar, Tensor, Tensor1D, Tensor2D, Tensor3D, Tensor4D, Tensor5D} from '../tensor';\nimport {DataType, DataValues, PixelData, Rank, ShapeMap} from '../types';\n\nexport const EPSILON_FLOAT32 = 1e-7;\nexport const EPSILON_FLOAT16 = 1e-4;\n\n// Required information for all backends.\nexport interface BackendTimingInfo {\n  kernelMs: number;\n  getExtraProfileInfo?(): string;  // a field for additional timing information\n                                   // e.g. packing / unpacking for WebGL backend\n}\n\nexport interface TensorStorage {\n  read(dataId: DataId): Promise<DataValues>;\n  readSync(dataId: DataId): DataValues;\n  disposeData(dataId: DataId): void;\n  write(dataId: DataId, values: DataValues): void;\n  fromPixels(\n      pixels: PixelData|ImageData|HTMLImageElement|HTMLCanvasElement|\n      HTMLVideoElement,\n      numChannels: number): Tensor3D;\n  register(dataId: DataId, shape: number[], dtype: DataType): void;\n  memory(): {unreliable: boolean;};  // Backend-specific information.\n}\n\n/** Convenient class for storing tensor-related data. */\nexport class DataStorage<T> {\n  private data = new WeakMap<DataId, T>();\n\n  constructor(private backend: KernelBackend, private dataMover: DataMover) {}\n\n  get(dataId: DataId) {\n    if (!this.data.has(dataId)) {\n      this.dataMover.moveData(this.backend, dataId);\n    }\n    return this.data.get(dataId);\n  }\n\n  set(dataId: DataId, value: T): void {\n    this.data.set(dataId, value);\n  }\n\n  has(dataId: DataId): boolean {\n    return this.data.has(dataId);\n  }\n\n  delete(dataId: DataId): boolean {\n    return this.data.delete(dataId);\n  }\n}\n\nexport interface DataMover {\n  /**\n   * To be called by backends whenever they see a dataId that they don't own.\n   * Upon calling this method, the mover will fetch the tensor from another\n   * backend and register it with the current active backend.\n   */\n  moveData(backend: KernelBackend, dataId: DataId): void;\n}\n\nexport interface BackendTimer {\n  time(f: () => void): Promise<BackendTimingInfo>;\n}\n\n/**\n * The interface that defines the kernels that should be implemented when\n * adding a new backend. New backends don't need to implement every one of the\n * methods, this can be done gradually (throw an error for unimplemented\n * methods).\n */\nexport class KernelBackend implements TensorStorage, Backend, BackendTimer {\n  time(f: () => void): Promise<BackendTimingInfo> {\n    throw new Error('Not yet implemented.');\n  }\n  read(dataId: object): Promise<DataValues> {\n    throw new Error('Not yet implemented.');\n  }\n  readSync(dataId: object): DataValues {\n    throw new Error('Not yet implemented.');\n  }\n  disposeData(dataId: object): void {\n    throw new Error('Not yet implemented.');\n  }\n  write(dataId: object, values: DataValues): void {\n    throw new Error('Not yet implemented.');\n  }\n  fromPixels(\n      pixels: PixelData|ImageData|HTMLImageElement|HTMLCanvasElement|\n      HTMLVideoElement,\n      numChannels: number): Tensor<Rank.R3> {\n    throw new Error('Not yet implemented.');\n  }\n  register(dataId: object, shape: number[], dtype: DataType): void {\n    throw new Error('Not yet implemented.');\n  }\n  memory(): {unreliable: boolean; reasons?: string[]} {\n    throw new Error('Not yet implemented.');\n  }\n  /** Returns the highest precision for floats in bits (e.g. 16 or 32) */\n  floatPrecision(): 16|32 {\n    throw new Error('Not yet implemented');\n  }\n  /** Returns the smallest representable number.  */\n  epsilon(): number {\n    return this.floatPrecision() === 32 ? EPSILON_FLOAT32 : EPSILON_FLOAT16;\n  }\n\n  batchMatMul(\n      a: Tensor3D, b: Tensor3D, transposeA: boolean,\n      transposeB: boolean): Tensor3D {\n    throw new Error('Not yet implemented');\n  }\n\n  fusedBatchMatMul(\n      a: Tensor3D, b: Tensor3D, transposeA: boolean, transposeB: boolean,\n      bias?: Tensor, activation?: Activation): Tensor3D {\n    throw new Error('Not yet implemented');\n  }\n\n  slice<T extends Tensor>(x: T, begin: number[], size: number[]): T {\n    throw new Error('Not yet implemented');\n  }\n  stridedSlice<T extends Tensor>(\n      x: T, begin: number[], end: number[], strides: number[],\n      beginMask: number, endMask: number, ellipsisMask: number,\n      newAxisMask: number, shrinkAxisMask: number): T {\n    throw new Error('Not yet implemented');\n  }\n  unstack(x: Tensor, axis: number): Tensor[] {\n    throw new Error('Not yet implemented');\n  }\n  reverse<T extends Tensor>(a: T, axis: number[]): T {\n    throw new Error('Not yet implemented');\n  }\n\n  concat(tensors: Tensor[], axis: number): Tensor {\n    throw new Error('Not yet implemented');\n  }\n\n  neg<T extends Tensor>(a: T): T {\n    throw new Error('Not yet implemented');\n  }\n\n  add(a: Tensor, b: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n  addN<T extends Tensor>(tensors: T[]): T {\n    throw new Error('Not yet implemented');\n  }\n  subtract(a: Tensor, b: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n  multiply(a: Tensor, b: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n  realDivide(a: Tensor, b: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n  floorDiv(a: Tensor, b: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n\n  sum(x: Tensor, axes: number[]): Tensor {\n    throw new Error('Not yet implemented');\n  }\n  prod(x: Tensor, axes: number[]): Tensor {\n    throw new Error('Not yet implemented');\n  }\n\n  unsortedSegmentSum<T extends Tensor>(\n      x: T, segmentIds: Tensor1D, numSegments: number): Tensor {\n    throw new Error('Not yet implemented');\n  }\n\n  argMin(x: Tensor, axis: number): Tensor {\n    throw new Error('Not yet implemented');\n  }\n  argMax(x: Tensor, axis: number): Tensor {\n    throw new Error('Not yet implemented');\n  }\n\n  equal(a: Tensor, b: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n  notEqual(a: Tensor, b: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n\n  less(a: Tensor, b: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n  lessEqual(a: Tensor, b: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n\n  greater(a: Tensor, b: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n  greaterEqual(a: Tensor, b: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n\n  logicalNot<T extends Tensor>(a: T): T {\n    throw new Error('Not yet implemented');\n  }\n  logicalAnd(a: Tensor, b: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n  logicalOr(a: Tensor, b: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n\n  where(condition: Tensor): Tensor2D {\n    throw new Error('Not yet implemented');\n  }\n  select(condition: Tensor, a: Tensor, b: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n\n  topk<T extends Tensor>(x: T, k: number, sorted: boolean): [T, T] {\n    throw new Error('Not yet implemented');\n  }\n\n  min(x: Tensor, axes: number[]): Tensor {\n    throw new Error('Not yet implemented');\n  }\n  minimum(a: Tensor, b: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n\n  mod(a: Tensor, b: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n\n  max(x: Tensor, axes: number[]): Tensor {\n    throw new Error('Not yet implemented');\n  }\n  maximum(a: Tensor, b: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n\n  all(x: Tensor, axes: number[]): Tensor {\n    throw new Error('Not yet implemented');\n  }\n  any(x: Tensor, axes: number[]): Tensor {\n    throw new Error('Not yet implemented');\n  }\n\n  squaredDifference(a: Tensor, b: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n\n  ceil<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  floor<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  round<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n\n  sign<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n\n  isNaN<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  isInf<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  isFinite<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n\n  pow<T extends Tensor>(a: T, b: Tensor): T {\n    throw new Error('Not yet implemented');\n  }\n  exp<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  expm1<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  log<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  log1p<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  sqrt<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  rsqrt<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n\n  square<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  reciprocal<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  relu<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  prelu<T extends Tensor>(x: T, a: T): T {\n    throw new Error('Not yet implemented');\n  }\n  elu<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  eluDer<T extends Tensor>(dy: T, y: T): T {\n    throw new Error('Not yet implemented');\n  }\n  selu<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  int<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n\n  clip<T extends Tensor>(x: T, min: number, max: number): T {\n    throw new Error('Not yet implemented');\n  }\n\n  abs<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  complexAbs<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n\n  sigmoid<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n\n  softplus<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n\n  sin<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  cos<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  tan<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n\n  asin<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  acos<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  atan<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  atan2<T extends Tensor>(a: T, b: T): T {\n    throw new Error('Not yet implemented');\n  }\n\n  sinh<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  cosh<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  tanh<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n\n  asinh<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  acosh<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n  atanh<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n\n  erf<T extends Tensor>(x: T): T {\n    throw new Error('Not yet implemented');\n  }\n\n  step<T extends Tensor>(x: T, alpha: number): T {\n    throw new Error('Not yet implemented');\n  }\n\n  conv2d(x: Tensor4D, filter: Tensor4D, convInfo: Conv2DInfo): Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n  conv2dDerInput(dy: Tensor4D, filter: Tensor4D, convInfo: Conv2DInfo):\n      Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n  conv2dDerFilter(x: Tensor4D, dY: Tensor4D, convInfo: Conv2DInfo): Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n\n  depthwiseConv2D(input: Tensor4D, filter: Tensor4D, convInfo: Conv2DInfo):\n      Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n  depthwiseConv2DDerInput(dy: Tensor4D, filter: Tensor4D, convInfo: Conv2DInfo):\n      Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n  depthwiseConv2DDerFilter(x: Tensor4D, dY: Tensor4D, convInfo: Conv2DInfo):\n      Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n  conv3d(x: Tensor5D, filter: Tensor5D, convInfo: Conv3DInfo): Tensor5D {\n    throw new Error('Not yet implemented');\n  }\n  conv3dDerInput(dy: Tensor5D, filter: Tensor5D, convInfo: Conv3DInfo):\n      Tensor5D {\n    throw new Error('Not yet implemented');\n  }\n  conv3dDerFilter(x: Tensor5D, dY: Tensor5D, convInfo: Conv3DInfo): Tensor5D {\n    throw new Error('Not yet implemented');\n  }\n  maxPool(x: Tensor4D, convInfo: Conv2DInfo): Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n  maxPoolBackprop(dy: Tensor4D, x: Tensor4D, y: Tensor4D, convInfo: Conv2DInfo):\n      Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n  avgPool(x: Tensor4D, convInfo: Conv2DInfo): Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n  avgPoolBackprop(dy: Tensor4D, x: Tensor4D, convInfo: Conv2DInfo): Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n\n  reshape<T extends Tensor, R extends Rank>(x: T, shape: ShapeMap[R]):\n      Tensor<R> {\n    throw new Error('Not yet implemented');\n  }\n  cast<T extends Tensor>(x: T, dtype: DataType): T {\n    throw new Error('Not yet implemented');\n  }\n\n  tile<T extends Tensor>(x: T, reps: number[]): T {\n    throw new Error('Not yet implemented');\n  }\n\n  pad<T extends Tensor>(\n      x: T, paddings: Array<[number, number]>, constantValue: number): T {\n    throw new Error('Not yet implemented');\n  }\n\n  transpose<T extends Tensor>(x: T, perm: number[]): T {\n    throw new Error('Not yet implemented');\n  }\n\n  gather<T extends Tensor>(x: T, indices: Tensor1D, axis: number): T {\n    throw new Error('Not yet implemented');\n  }\n\n  gatherND(x: Tensor, indices: Tensor): Tensor {\n    throw new Error('Not yet implemented');\n  }\n\n  scatterND<R extends Rank>(\n      indices: Tensor, updates: Tensor, shape: ShapeMap[R]): Tensor<R> {\n    throw new Error('Not yet implemented');\n  }\n\n  batchToSpaceND<T extends Tensor>(\n      x: T, blockShape: number[], crops: number[][]): T {\n    throw new Error('Not yet implemented');\n  }\n\n  spaceToBatchND<T extends Tensor>(\n      x: T, blockShape: number[], paddings: number[][]): T {\n    throw new Error('Not yet implemented');\n  }\n\n  resizeBilinear(\n      x: Tensor4D, newHeight: number, newWidth: number,\n      alignCorners: boolean): Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n\n  resizeBilinearBackprop(dy: Tensor4D, x: Tensor4D, alignCorners: boolean):\n      Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n\n  resizeNearestNeighbor(\n      x: Tensor4D, newHEight: number, newWidth: number,\n      alignCorners: boolean): Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n\n  resizeNearestNeighborBackprop(\n      dy: Tensor4D, x: Tensor4D, alignCorners: boolean): Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n\n  batchNormalization(\n      x: Tensor4D, mean: Tensor4D|Tensor1D, variance: Tensor4D|Tensor1D,\n      varianceEpsilon: number, scale?: Tensor4D|Tensor1D,\n      offset?: Tensor4D|Tensor1D): Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n\n  localResponseNormalization4D(\n      x: Tensor4D, radius: number, bias: number, alpha: number,\n      beta: number): Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n\n  LRNGrad(\n      dy: Tensor4D, inputImage: Tensor4D, outputImage: Tensor4D, radius: number,\n      bias: number, alpha: number, beta: number): Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n\n  multinomial(\n      logits: Tensor2D, normalized: boolean, numSamples: number,\n      seed: number): Tensor2D {\n    throw new Error('Not yet implemented');\n  }\n\n  oneHot(indices: Tensor1D, depth: number, onValue: number, offValue: number):\n      Tensor2D {\n    throw new Error('Not yet implemented');\n  }\n\n  cumsum(x: Tensor, axis: number, exclusive: boolean, reverse: boolean):\n      Tensor {\n    throw new Error('Not yet implemented');\n  }\n\n  nonMaxSuppression(\n      boxes: Tensor2D, scores: Tensor1D, maxOutputSize: number,\n      iouThreshold: number, scoreThreshold?: number): Tensor1D {\n    throw new Error('Not yet implemented');\n  }\n\n  fft(x: Tensor2D): Tensor2D {\n    throw new Error('Not yet implemented');\n  }\n  ifft(x: Tensor2D): Tensor2D {\n    throw new Error('Not yet implemented');\n  }\n  complex<T extends Tensor>(real: T, imag: T): T {\n    throw new Error('Not yet implemented');\n  }\n  real<T extends Tensor>(input: T): T {\n    throw new Error('Not yet implemented');\n  }\n  imag<T extends Tensor>(input: T): T {\n    throw new Error('Not yet implemented');\n  }\n\n  cropAndResize(\n      image: Tensor4D, boxes: Tensor2D, boxIndex: Tensor1D,\n      cropSize: [number, number], method: 'bilinear'|'nearest',\n      extrapolationValue: number): Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n\n  depthToSpace(x: Tensor4D, blockSize: number, dataFormat: string): Tensor4D {\n    throw new Error('Not yet implemented');\n  }\n\n  // Aligns with the \"SplitV\" kernel in TensorFlow.\n  split<T extends Tensor>(value: T, sizeSplits: number[], axis: number): T[] {\n    throw new Error('Not yet implemented');\n  }\n\n  sparseToDense<R extends Rank>(\n      sparseIndices: Tensor, sparseValues: Tensor, outputShape: ShapeMap[R],\n      defaultValue: Scalar): Tensor<R> {\n    throw new Error('Not yet implemented');\n  }\n\n  fill<R extends Rank>(\n      shape: ShapeMap[R], value: number|string, dtype?: DataType): Tensor<R> {\n    throw new Error('Not yet implemented.');\n  }\n\n  onesLike<R extends Rank>(x: Tensor<R>): Tensor<R> {\n    throw new Error('Not yet implemented');\n  }\n\n  zerosLike<R extends Rank>(x: Tensor<R>): Tensor<R> {\n    throw new Error('Not yet implemented');\n  }\n\n  linspace(start: number, stop: number, num: number): Tensor1D {\n    throw new Error('Not yet implemented');\n  }\n\n  dispose(): void {\n    throw new Error('Not yet implemented');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Returns the dimensions in the input shape that are broadcasted to\n * produce the provided output shape.\n *\n * The returned dimensions are 0-indexed and sorted. An example:\n * inShape = [4, 1, 3]\n * outShape = [5, 4, 3, 3]\n * result = [1]. Dimension 1 (2nd dimension of input) gets broadcasted 1 => 3.\n */\nexport function getBroadcastDims(\n    inShape: number[], outShape: number[]): number[] {\n  const inRank = inShape.length;\n  const dims: number[] = [];\n  for (let i = 0; i < inRank; i++) {\n    const dim = inRank - 1 - i;\n    const a = inShape[dim] || 1;\n    const b = outShape[outShape.length - 1 - i] || 1;\n    if (b > 1 && a === 1) {\n      dims.unshift(dim);\n    }\n  }\n  return dims;\n}\n\n/**\n * Returns the axes in the output space that should be reduced to produce\n * the input space.\n */\nexport function getReductionAxes(\n    inShape: number[], outShape: number[]): number[] {\n  const result: number[] = [];\n  for (let i = 0; i < outShape.length; i++) {\n    const inDim = inShape[inShape.length - i - 1];\n    const outAxis = outShape.length - i - 1;\n    const outDim = outShape[outAxis];\n    if (inDim == null || (inDim === 1 && outDim > 1)) {\n      result.unshift(outAxis);\n    }\n  }\n  return result;\n}\n\nexport function assertAndGetBroadcastShape(\n    shapeA: number[], shapeB: number[]): number[] {\n  const result: number[] = [];\n  const l = Math.max(shapeA.length, shapeB.length);\n\n  for (let i = 0; i < l; i++) {\n    let a = shapeA[shapeA.length - i - 1];\n    if (a == null) {\n      a = 1;\n    }\n    let b = shapeB[shapeB.length - i - 1];\n    if (b == null) {\n      b = 1;\n    }\n    if (a === 1) {\n      result.unshift(b);\n    } else if (b === 1) {\n      result.unshift(a);\n    } else if (a !== b) {\n      const errMsg = `Operands could not be broadcast together with shapes ` +\n          `${shapeA} and ${shapeB}.`;\n      throw Error(errMsg);\n    } else {\n      result.unshift(a);\n    }\n  }\n  return result;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as util from '../util';\n\nexport type PadInfo = {\n  top: number,\n  left: number,\n  right: number,\n  bottom: number,\n  type: string\n};\n\nexport type PadInfo3D = {\n  top: number,\n  left: number,\n  right: number,\n  bottom: number,\n  front: number,\n  back: number,\n  type: string\n};\n\n/**\n * Information about the forward pass of a convolution/pooling operation.\n * It includes input and output shape, strides, filter size and padding\n * information.\n */\nexport type Conv2DInfo = {\n  batchSize: number,\n  inHeight: number,\n  inWidth: number,\n  inChannels: number,\n  outHeight: number,\n  outWidth: number,\n  outChannels: number,\n  dataFormat: 'channelsFirst'|'channelsLast',\n  strideHeight: number,\n  strideWidth: number,\n  dilationHeight: number,\n  dilationWidth: number,\n  filterHeight: number,\n  filterWidth: number,\n  effectiveFilterHeight: number,\n  effectiveFilterWidth: number,\n  padInfo: PadInfo,\n  inShape: [number, number, number, number],\n  outShape: [number, number, number, number],\n  filterShape: [number, number, number, number]\n};\n\nexport function computePool2DInfo(\n    inShape: [number, number, number, number],\n    filterSize: [number, number]|number, strides: number|[number, number],\n    dilations: number|[number, number], pad: 'same'|'valid'|number,\n    roundingMode?: 'floor'|'round'|'ceil',\n    dataFormat: 'channelsFirst'|'channelsLast' = 'channelsLast'): Conv2DInfo {\n  const [filterHeight, filterWidth] = parseTupleParam(filterSize);\n\n  let filterShape: [number, number, number, number];\n  if (dataFormat === 'channelsLast') {\n    filterShape = [filterHeight, filterWidth, inShape[3], inShape[3]];\n  } else if (dataFormat === 'channelsFirst') {\n    filterShape = [filterHeight, filterWidth, inShape[1], inShape[1]];\n  } else {\n    throw new Error(`Unknown dataFormat ${dataFormat}`);\n  }\n\n  return computeConv2DInfo(\n      inShape, filterShape, strides, dilations, pad, roundingMode, false,\n      dataFormat);\n}\n\n/**\n * Computes the information for a forward pass of a convolution/pooling\n * operation.\n */\nexport function computeConv2DInfo(\n    inShape: [number, number, number, number],\n    filterShape: [number, number, number, number],\n    strides: number|[number, number], dilations: number|[number, number],\n    pad: 'same'|'valid'|number, roundingMode?: 'floor'|'round'|'ceil',\n    depthwise = false,\n    dataFormat: 'channelsFirst'|'channelsLast' = 'channelsLast'): Conv2DInfo {\n  let [batchSize, inHeight, inWidth, inChannels] = [-1, -1, -1, -1];\n  if (dataFormat === 'channelsLast') {\n    [batchSize, inHeight, inWidth, inChannels] = inShape;\n  } else if (dataFormat === 'channelsFirst') {\n    [batchSize, inChannels, inHeight, inWidth] = inShape;\n  } else {\n    throw new Error(`Unknown dataFormat ${dataFormat}`);\n  }\n\n  const [filterHeight, filterWidth, , filterChannels] = filterShape;\n  const [strideHeight, strideWidth] = parseTupleParam(strides);\n  const [dilationHeight, dilationWidth] = parseTupleParam(dilations);\n\n  const effectiveFilterHeight =\n      getEffectiveFilterSize(filterHeight, dilationHeight);\n  const effectiveFilterWidth =\n      getEffectiveFilterSize(filterWidth, dilationWidth);\n  const {padInfo, outHeight, outWidth} = getPadAndOutInfo(\n      pad, inHeight, inWidth, strideHeight, strideWidth, effectiveFilterHeight,\n      effectiveFilterWidth, roundingMode);\n\n  const outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n\n  let outShape: [number, number, number, number];\n  if (dataFormat === 'channelsFirst') {\n    outShape = [batchSize, outChannels, outHeight, outWidth];\n  } else if (dataFormat === 'channelsLast') {\n    outShape = [batchSize, outHeight, outWidth, outChannels];\n  }\n\n  return {\n    batchSize,\n    dataFormat,\n    inHeight,\n    inWidth,\n    inChannels,\n    outHeight,\n    outWidth,\n    outChannels,\n    padInfo,\n    strideHeight,\n    strideWidth,\n    filterHeight,\n    filterWidth,\n    effectiveFilterHeight,\n    effectiveFilterWidth,\n    dilationHeight,\n    dilationWidth,\n    inShape,\n    outShape,\n    filterShape\n  };\n}\n\n/**\n * Information about the forward pass of a 3D convolution/pooling operation.\n * It includes input and output shape, strides, filter size and padding\n * information.\n */\nexport type Conv3DInfo = {\n  batchSize: number,\n  inDepth: number,\n  inHeight: number,\n  inWidth: number,\n  inChannels: number,\n  outDepth: number,\n  outHeight: number,\n  outWidth: number,\n  outChannels: number,\n  dataFormat: 'channelsFirst'|'channelsLast',\n  strideDepth: number,\n  strideHeight: number,\n  strideWidth: number,\n  dilationDepth: number,\n  dilationHeight: number,\n  dilationWidth: number,\n  filterDepth: number,\n  filterHeight: number,\n  filterWidth: number,\n  padInfo: PadInfo3D,\n  inShape: [number, number, number, number, number],\n  outShape: [number, number, number, number, number],\n  filterShape: [number, number, number, number, number]\n};\n\n/**\n * Computes the information for a forward pass of a 3D convolution/pooling\n * operation.\n */\nexport function computeConv3DInfo(\n    inShape: [number, number, number, number, number],\n    filterShape: [number, number, number, number, number],\n    strides: number|[number, number, number],\n    dilations: number|[number, number, number], pad: 'same'|'valid',\n    depthwise = false,\n    dataFormat: 'channelsFirst'|'channelsLast' = 'channelsLast'): Conv3DInfo {\n  let [batchSize, inDepth, inHeight, inWidth, inChannels] =\n      [-1, -1, -1, -1, -1];\n  if (dataFormat === 'channelsLast') {\n    [batchSize, inDepth, inHeight, inWidth, inChannels] = inShape;\n  } else if (dataFormat === 'channelsFirst') {\n    [batchSize, inChannels, inDepth, inHeight, inWidth] = inShape;\n  } else {\n    throw new Error(`Unknown dataFormat ${dataFormat}`);\n  }\n\n  const [filterDepth, filterHeight, filterWidth, , filterChannels] =\n      filterShape;\n  const [strideDepth, strideHeight, strideWidth] = parse3TupleParam(strides);\n  const [dilationDepth, dilationHeight, dilationWidth] =\n      parse3TupleParam(dilations);\n\n  const effectiveFilterDepth =\n      getEffectiveFilterSize(filterDepth, dilationDepth);\n  const effectiveFilterHeight =\n      getEffectiveFilterSize(filterHeight, dilationHeight);\n  const effectiveFilterWidth =\n      getEffectiveFilterSize(filterWidth, dilationWidth);\n  const {padInfo, outDepth, outHeight, outWidth} = get3DPadAndOutInfo(\n      pad, inDepth, inHeight, inWidth, strideDepth, strideHeight, strideWidth,\n      effectiveFilterDepth, effectiveFilterHeight, effectiveFilterWidth);\n\n  const outChannels = depthwise ? filterChannels * inChannels : filterChannels;\n\n  let outShape: [number, number, number, number, number];\n  if (dataFormat === 'channelsFirst') {\n    outShape = [batchSize, outChannels, outDepth, outHeight, outWidth];\n  } else if (dataFormat === 'channelsLast') {\n    outShape = [batchSize, outDepth, outHeight, outWidth, outChannels];\n  }\n\n  return {\n    batchSize,\n    dataFormat,\n    inDepth,\n    inHeight,\n    inWidth,\n    inChannels,\n    outDepth,\n    outHeight,\n    outWidth,\n    outChannels,\n    padInfo,\n    strideDepth,\n    strideHeight,\n    strideWidth,\n    filterDepth,\n    filterHeight,\n    filterWidth,\n    dilationDepth,\n    dilationHeight,\n    dilationWidth,\n    inShape,\n    outShape,\n    filterShape\n  };\n}\n\nfunction computeOutputShape3D(\n    inShape: [number, number, number], fieldSize: number, outDepth: number,\n    stride: number, zeroPad?: number,\n    roundingMode?: 'floor'|'round'|'ceil'): [number, number, number] {\n  if (zeroPad == null) {\n    zeroPad = computeDefaultPad(inShape, fieldSize, stride);\n  }\n  const inputRows = inShape[0];\n  const inputCols = inShape[1];\n\n  const outputRows = conditionalRound(\n      (inputRows - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n  util.assert(\n      util.isInt(outputRows),\n      () => `The output # of rows (${outputRows}) must be an integer. ` +\n          `Change the stride and/or zero pad parameters`);\n\n  const outputCols = conditionalRound(\n      (inputCols - fieldSize + 2 * zeroPad) / stride + 1, roundingMode);\n  util.assert(\n      util.isInt(outputCols),\n      () => `The output # of columns (${outputCols}) must be an integer. ` +\n          `Change the stride and/or zero pad parameters`);\n\n  return [outputRows, outputCols, outDepth];\n}\n\nexport function computeDefaultPad(\n    inputShape: [number, number, number], fieldSize: number, stride: number,\n    dilation = 1): number {\n  const effectiveFieldSize = getEffectiveFilterSize(fieldSize, dilation);\n  return Math.floor(\n      (inputShape[0] * (stride - 1) - stride + effectiveFieldSize) / 2);\n}\n\nfunction parseTupleParam(param: number|[number, number]): [number, number] {\n  return typeof param === 'number' ? [param, param] : param;\n}\n\nfunction parse3TupleParam(param: number|[number, number, number]):\n    [number, number, number] {\n  return typeof param === 'number' ? [param, param, param] : param;\n}\n\n/* See https://www.tensorflow.org/api_docs/python/tf/nn/atrous_conv2d\n * Atrous convolution is equivalent to standard convolution with upsampled\n * filters with effective_filter_height =\n * filter_height + (filter_height - 1) * (dilation - 1)\n * and effective_filter_width =\n * filter_width + (filter_width - 1) * (dilation - 1),\n * produced by inserting dilation - 1 zeros along consecutive elements across\n * the filters' spatial dimensions.\n * When there is a dilation, this converts a filter dimension to the\n * effective filter dimension, so it can be used in a standard convolution.\n */\nfunction getEffectiveFilterSize(filterSize: number, dilation: number) {\n  if (dilation <= 1) {\n    return filterSize;\n  }\n\n  return filterSize + (filterSize - 1) * (dilation - 1);\n}\n\nfunction getPadAndOutInfo(\n    pad: 'same'|'valid'|number, inHeight: number, inWidth: number,\n    strideHeight: number, strideWidth: number, filterHeight: number,\n    filterWidth: number, roundingMode?: 'floor'|'round'|'ceil'):\n    {padInfo: PadInfo, outHeight: number, outWidth: number} {\n  let padInfo: PadInfo;\n  let outHeight: number;\n  let outWidth: number;\n\n  if (typeof pad === 'number') {\n    const padType = (pad === 0) ? 'VALID' : 'NUMBER';\n    padInfo = {top: pad, bottom: pad, left: pad, right: pad, type: padType};\n    const outShape = computeOutputShape3D(\n        [inHeight, inWidth, 1], filterHeight, 1, strideHeight, pad,\n        roundingMode);\n    outHeight = outShape[0];\n    outWidth = outShape[1];\n  } else if (pad === 'same') {\n    outHeight = Math.ceil(inHeight / strideHeight);\n    outWidth = Math.ceil(inWidth / strideWidth);\n    const padAlongHeight =\n        Math.max(0, (outHeight - 1) * strideHeight + filterHeight - inHeight);\n    const padAlongWidth =\n        Math.max(0, (outWidth - 1) * strideWidth + filterWidth - inWidth);\n    const top = Math.floor(padAlongHeight / 2);\n    const bottom = padAlongHeight - top;\n    const left = Math.floor(padAlongWidth / 2);\n    const right = padAlongWidth - left;\n    padInfo = {top, bottom, left, right, type: 'SAME'};\n  } else if (pad === 'valid') {\n    padInfo = {top: 0, bottom: 0, left: 0, right: 0, type: 'VALID'};\n    outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n    outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n  } else {\n    throw Error(`Unknown padding parameter: ${pad}`);\n  }\n  return {padInfo, outHeight, outWidth};\n}\n\nfunction get3DPadAndOutInfo(\n    pad: 'same'|'valid', inDepth: number, inHeight: number, inWidth: number,\n    strideDepth: number, strideHeight: number, strideWidth: number,\n    filterDepth: number, filterHeight: number, filterWidth: number): {\n  padInfo: PadInfo3D,\n  outDepth: number,\n  outHeight: number,\n  outWidth: number\n} {\n  let padInfo: PadInfo3D;\n  let outDepth: number;\n  let outHeight: number;\n  let outWidth: number;\n\n  if (pad === 'same') {\n    outDepth = Math.ceil(inDepth / strideDepth);\n    outHeight = Math.ceil(inHeight / strideHeight);\n    outWidth = Math.ceil(inWidth / strideWidth);\n    const padAlongDepth = (outDepth - 1) * strideDepth + filterDepth - inDepth;\n    const padAlongHeight =\n        (outHeight - 1) * strideHeight + filterHeight - inHeight;\n    const padAlongWidth = (outWidth - 1) * strideWidth + filterWidth - inWidth;\n    const front = Math.floor(padAlongDepth / 2);\n    const back = padAlongDepth - front;\n    const top = Math.floor(padAlongHeight / 2);\n    const bottom = padAlongHeight - top;\n    const left = Math.floor(padAlongWidth / 2);\n    const right = padAlongWidth - left;\n\n    padInfo = {top, bottom, left, right, front, back, type: 'SAME'};\n  } else if (pad === 'valid') {\n    padInfo = {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      front: 0,\n      back: 0,\n      type: 'VALID'\n    };\n    outDepth = Math.ceil((inDepth - filterDepth + 1) / strideDepth);\n    outHeight = Math.ceil((inHeight - filterHeight + 1) / strideHeight);\n    outWidth = Math.ceil((inWidth - filterWidth + 1) / strideWidth);\n  } else {\n    throw Error(`Unknown padding parameter: ${pad}`);\n  }\n  return {padInfo, outDepth, outHeight, outWidth};\n}\n\n/**\n * Rounds a value depending on the rounding mode\n * @param value\n * @param roundingMode\n */\nfunction conditionalRound(\n    value: number, roundingMode?: 'floor'|'round'|'ceil') {\n  if (!roundingMode) {\n    return value;\n  }\n  switch (roundingMode) {\n    case 'round':\n      // used for Caffe Conv\n      return Math.round(value);\n    case 'ceil':\n      // used for Caffe Pool\n      return Math.ceil(value);\n    case 'floor':\n      return Math.floor(value);\n    default:\n      throw new Error(`Unknown roundingMode ${roundingMode}`);\n  }\n}\n\nexport function tupleValuesAreOne(param: number|[number, number]): boolean {\n  const [dimA, dimB] = parseTupleParam(param);\n  return dimA === 1 && dimB === 1;\n}\n\nexport function eitherStridesOrDilationsAreOne(\n    strides: number|[number, number],\n    dilations: number|[number, number]): boolean {\n  return tupleValuesAreOne(strides) || tupleValuesAreOne(dilations);\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {scalar, tensor1d, zeros} from '../ops/tensor_ops';\nimport {Tensor} from '../tensor';\nimport {Rank} from '../types';\nimport {DataType, ShapeMap} from '../types';\nimport {hasEncodingLoss, makeZerosTypedArray} from '../util';\n\nimport {KernelBackend} from './backend';\n\n// Utilities needed by backend consumers of tf-core.\nexport * from '../ops/axis_util';\nexport * from '../ops/broadcast_util';\nexport * from '../ops/concat_util';\nexport * from '../ops/conv_util';\nexport {TypedArray, upcastType, PixelData} from '../types';\n\nexport function castTensor<T extends Tensor>(\n    x: T, dtype: DataType, backend: KernelBackend): T {\n  if (dtype === 'complex64') {\n    if (x.dtype === 'complex64') {\n      return x.clone();\n    }\n    const zerosTensor = zeros(x.shape);\n    const floatX = x.toFloat();\n    const result = backend.complex(floatX, zerosTensor);\n    zerosTensor.dispose();\n    floatX.dispose();\n    return result as T;\n  }\n\n  if (!hasEncodingLoss(x.dtype, dtype)) {\n    // We don't change the underlying data, since we cast to higher\n    // precision.\n    return Tensor.make(x.shape, {dataId: x.dataId}, dtype) as T;\n  }\n  if (x.dtype === 'complex64') {\n    const real = backend.real(x);\n    const result = real.cast(dtype);\n    real.dispose();\n    return result;\n  }\n  if (dtype === 'int32') {\n    return backend.int(x);\n  } else if (dtype === 'bool') {\n    const zero = scalar(0, x.dtype);\n    const result = backend.notEqual(x, zero) as T;\n    zero.dispose();\n    return result;\n  } else {\n    throw new Error(`Error in Cast: failed to cast ${x.dtype} to ${dtype}`);\n  }\n}\n\nexport function reshapeTensor<T extends Tensor, R extends Rank>(\n    x: T, shape: ShapeMap[R]): Tensor<R> {\n  return Tensor.make(shape, {dataId: x.dataId}, x.dtype);\n}\n\nexport function linspaceImpl(start: number, stop: number, num: number) {\n  const step = (stop - start) / (num - 1);\n\n  const values = makeZerosTypedArray(num, 'float32');\n  values[0] = start;\n  for (let i = 1; i < values.length; i++) {\n    values[i] = values[i - 1] + step;\n  }\n\n  return tensor1d(values, 'float32');\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TypedArray} from '../types';\n/**\n * Merges real and imaginary Float32Arrays into a single complex Float32Array.\n *\n * The memory layout is interleaved as follows:\n * real: [r0, r1, r2]\n * imag: [i0, i1, i2]\n * complex: [r0, i0, r1, i1, r2, i2]\n *\n * This is the inverse of splitRealAndImagArrays.\n *\n * @param real The real values of the complex tensor values.\n * @param imag The imag values of the complex tensor values.\n * @returns A complex tensor as a Float32Array with merged values.\n */\nexport function mergeRealAndImagArrays(\n    real: Float32Array, imag: Float32Array): Float32Array {\n  if (real.length !== imag.length) {\n    throw new Error(\n        `Cannot merge real and imag arrays of different lengths. real:` +\n        `${real.length}, imag: ${imag.length}.`);\n  }\n  const result = new Float32Array(real.length * 2);\n  for (let i = 0; i < result.length; i += 2) {\n    result[i] = real[i / 2];\n    result[i + 1] = imag[i / 2];\n  }\n  return result;\n}\n\n/**\n * Splits a complex Float32Array into real and imag parts.\n *\n * The memory layout is interleaved as follows:\n * complex: [r0, i0, r1, i1, r2, i2]\n * real: [r0, r1, r2]\n * imag: [i0, i1, i2]\n *\n * This is the inverse of mergeRealAndImagArrays.\n *\n * @param complex The complex tensor values.\n * @returns An object with real and imag Float32Array components of the complex\n *     tensor.\n */\nexport function splitRealAndImagArrays(complex: Float32Array):\n    {real: Float32Array, imag: Float32Array} {\n  const real = new Float32Array(complex.length / 2);\n  const imag = new Float32Array(complex.length / 2);\n  for (let i = 0; i < complex.length; i += 2) {\n    real[i / 2] = complex[i];\n    imag[i / 2] = complex[i + 1];\n  }\n  return {real, imag};\n}\n\n/**\n * Extracts even indexed complex values in the given array.\n * @param complex The complex tensor values\n */\nexport function complexWithEvenIndex(complex: Float32Array):\n    {real: Float32Array, imag: Float32Array} {\n  const len = Math.ceil(complex.length / 4);\n  const real = new Float32Array(len);\n  const imag = new Float32Array(len);\n  for (let i = 0; i < complex.length; i += 4) {\n    real[Math.floor(i / 4)] = complex[i];\n    imag[Math.floor(i / 4)] = complex[i + 1];\n  }\n  return {real, imag};\n}\n\n/**\n * Extracts odd indexed comple values in the given array.\n * @param complex The complex tensor values\n */\nexport function complexWithOddIndex(complex: Float32Array):\n    {real: Float32Array, imag: Float32Array} {\n  const len = Math.floor(complex.length / 4);\n  const real = new Float32Array(len);\n  const imag = new Float32Array(len);\n  for (let i = 2; i < complex.length; i += 4) {\n    real[Math.floor(i / 4)] = complex[i];\n    imag[Math.floor(i / 4)] = complex[i + 1];\n  }\n  return {real, imag};\n}\n\n/**\n * Get the map representing a complex value in the given array.\n * @param complex The complex tensor values.\n * @param index An index of the target complex value.\n */\nexport function getComplexWithIndex(\n    complex: Float32Array, index: number): {real: number, imag: number} {\n  const real = complex[index * 2];\n  const imag = complex[index * 2 + 1];\n  return {real, imag};\n}\n\n/**\n * Insert a given complex value into the TypedArray.\n * @param data The array in which the complex value is inserted.\n * @param c The complex value to be inserted.\n * @param index An index of the target complex value.\n */\nexport function assignToTypedArray(\n    data: TypedArray, real: number, imag: number, index: number) {\n  data[index * 2] = real;\n  data[index * 2 + 1] = imag;\n}\n\n/**\n * Make the list of exponent terms used by FFT.\n */\nexport function exponents(\n    n: number, inverse: boolean): {real: Float32Array, imag: Float32Array} {\n  const real = new Float32Array(n / 2);\n  const imag = new Float32Array(n / 2);\n  for (let i = 0; i < Math.ceil(n / 2); i++) {\n    const x = (inverse ? 2 : -2) * Math.PI * (i / n);\n    real[i] = Math.cos(x);\n    imag[i] = Math.sin(x);\n  }\n  return {real, imag};\n}\n\n/**\n * Make the exponent term used by FFT.\n */\nexport function exponent(\n    k: number, n: number, inverse: boolean): {real: number, imag: number} {\n  const x = (inverse ? 2 : -2) * Math.PI * (k / n);\n  const real = Math.cos(x);\n  const imag = Math.sin(x);\n  return {real, imag};\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Implementation of the NonMaxSuppression kernel shared between webgl and cpu.\n */\n\nimport {tensor1d} from '../ops/tensor_ops';\nimport {Tensor1D} from '../tensor';\nimport {TypedArray} from '../types';\n\nexport function nonMaxSuppressionImpl(\n    boxes: TypedArray, scores: TypedArray, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number): Tensor1D {\n  const candidates = Array.from(scores)\n                         .map((score, boxIndex) => ({score, boxIndex}))\n                         .filter(c => c.score > scoreThreshold)\n                         .sort((c1, c2) => c2.score - c1.score);\n\n  const selected: number[] = [];\n\n  for (let i = 0; i < candidates.length; i++) {\n    const {score, boxIndex} = candidates[i];\n    if (score < scoreThreshold) {\n      break;\n    }\n\n    let ignoreCandidate = false;\n    for (let j = selected.length - 1; j >= 0; --j) {\n      const iou = intersectionOverUnion(boxes, boxIndex, selected[j]);\n      if (iou >= iouThreshold) {\n        ignoreCandidate = true;\n        break;\n      }\n    }\n\n    if (!ignoreCandidate) {\n      selected.push(boxIndex);\n      if (selected.length >= maxOutputSize) {\n        break;\n      }\n    }\n  }\n\n  return tensor1d(selected, 'int32');\n}\n\nfunction intersectionOverUnion(boxes: TypedArray, i: number, j: number) {\n  const iCoord = boxes.subarray(i * 4, i * 4 + 4);\n  const jCoord = boxes.subarray(j * 4, j * 4 + 4);\n  const yminI = Math.min(iCoord[0], iCoord[2]);\n  const xminI = Math.min(iCoord[1], iCoord[3]);\n  const ymaxI = Math.max(iCoord[0], iCoord[2]);\n  const xmaxI = Math.max(iCoord[1], iCoord[3]);\n  const yminJ = Math.min(jCoord[0], jCoord[2]);\n  const xminJ = Math.min(jCoord[1], jCoord[3]);\n  const ymaxJ = Math.max(jCoord[0], jCoord[2]);\n  const xmaxJ = Math.max(jCoord[1], jCoord[3]);\n  const areaI = (ymaxI - yminI) * (xmaxI - xminI);\n  const areaJ = (ymaxJ - yminJ) * (xmaxJ - xminJ);\n  if (areaI <= 0 || areaJ <= 0) {\n    return 0.0;\n  }\n  const intersectionYmin = Math.max(yminI, yminJ);\n  const intersectionXmin = Math.max(xminI, xminJ);\n  const intersectionYmax = Math.min(ymaxI, ymaxJ);\n  const intersectionXmax = Math.min(xmaxI, xmaxJ);\n  const intersectionArea = Math.max(intersectionYmax - intersectionYmin, 0.0) *\n      Math.max(intersectionXmax - intersectionXmin, 0.0);\n  return intersectionArea / (areaI + areaJ - intersectionArea);\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\n\n/** Shared implementation of the split kernel across WebGL and CPU. */\nexport function split<T extends Tensor>(\n    x: T, sizeSplits: number[], axis: number): T[] {\n  const begin = new Array(x.rank).fill(0);\n  const size = x.shape.slice();\n  return sizeSplits.map(s => {\n    size[axis] = s;\n    const slice = x.slice(begin, size);\n    begin[axis] += s;\n    return slice;\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * An implementation of the tile kernel shared between webgl and cpu for string\n * tensors only.\n */\n\nimport {buffer} from '../ops/array_ops';\nimport {Tensor, TensorBuffer} from '../tensor';\nimport {DataType, Rank} from '../types';\n\nexport function tile<R extends Rank>(\n    xBuf: TensorBuffer<R, DataType>, reps: number[]): Tensor<R> {\n  const newShape: number[] = new Array(xBuf.rank);\n  for (let i = 0; i < newShape.length; i++) {\n    newShape[i] = xBuf.shape[i] * reps[i];\n  }\n  const result = buffer(newShape, xBuf.dtype);\n  for (let i = 0; i < result.values.length; ++i) {\n    const newLoc = result.indexToLoc(i);\n\n    const originalLoc: number[] = new Array(xBuf.rank);\n    for (let i = 0; i < originalLoc.length; i++) {\n      originalLoc[i] = newLoc[i] % xBuf.shape[i];\n    }\n\n    const originalIndex = xBuf.locToIndex(originalLoc);\n\n    result.values[i] = xBuf.values[originalIndex];\n  }\n  return result.toTensor() as Tensor<R>;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/** An implementation of the TopK kernel shared between webgl and cpu. */\n\nimport {tensor} from '../ops/tensor_ops';\nimport {Tensor} from '../tensor';\nimport {NumericDataType, TypedArray} from '../types';\nimport {getTypedArrayFromDType} from '../util';\n\nexport function topkImpl<T extends Tensor>(\n    x: TypedArray, xShape: number[], xDtype: NumericDataType, k: number,\n    sorted: boolean): [T, T] {\n  // Reshape into a 2d tensor [batch, lastDim] and compute topk along lastDim.\n  const lastDim = xShape[xShape.length - 1];\n  const [batch, size] = [x.length / lastDim, lastDim];\n  const allTopKVals = getTypedArrayFromDType(xDtype, batch * k);\n  const allTopKIndices = getTypedArrayFromDType('int32', batch * k);\n\n  for (let b = 0; b < batch; b++) {\n    const offset = b * size;\n    const vals = x.subarray(offset, offset + size);\n    const valAndInd: Array<{value: number, index: number}> = [];\n    for (let i = 0; i < vals.length; i++) {\n      valAndInd.push({value: vals[i], index: i});\n    }\n    valAndInd.sort((a, b) => b.value - a.value);\n\n    const outOffset = b * k;\n    const topKVals = allTopKVals.subarray(outOffset, outOffset + k);\n    const topKIndices = allTopKIndices.subarray(outOffset, outOffset + k);\n    for (let i = 0; i < k; i++) {\n      topKVals[i] = valAndInd[i].value;\n      topKIndices[i] = valAndInd[i].index;\n    }\n  }\n  // Reshape back to the original input shape, except that the last\n  // dimension is k.\n  const outputShape = xShape.slice();\n  outputShape[outputShape.length - 1] = k;\n  return [\n    tensor(allTopKVals, outputShape, xDtype) as T,\n    tensor(allTopKIndices, outputShape, 'int32') as T\n  ];\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/** An implementation of the Where kernel shared between cpu and webgl */\n\nimport {buffer} from '../ops/array_ops';\nimport {Tensor2D} from '../tensor';\nimport {TypedArray} from '../types';\n\nexport function whereImpl(condShape: number[], condVals: TypedArray): Tensor2D {\n  const indices = [];\n  for (let i = 0; i < condVals.length; i++) {\n    if (condVals[i]) {\n      indices.push(i);\n    }\n  }\n\n  const inBuffer = buffer(condShape, 'int32');\n\n  const out = buffer([indices.length, condShape.length], 'int32');\n  for (let i = 0; i < indices.length; i++) {\n    const loc = inBuffer.indexToLoc(indices[i]);\n    const offset = i * condShape.length;\n    out.values.set(loc, offset);\n  }\n  return out.toTensor() as Tensor2D;\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class AddNProgram implements GPGPUProgram {\n  variableNames: string[];\n  outputShape: number[] = [];\n  userCode: string;\n\n  constructor(outputShape: number[], shapes: number[][]) {\n    this.outputShape = outputShape;\n    this.variableNames = shapes.map((_, i) => `T${i}`);\n\n    const snippets: string[] = [];\n    // Get target elements from every input tensor.\n    this.variableNames.forEach(variable => {\n      snippets.push(\n        `float v${variable} = get${variable}AtOutCoords();`\n      );\n    });\n\n    // Calculate the sum of all elements.\n    const operation = this.variableNames.map(variable => {\n      return `v${variable}`;\n    }).join(' + ');\n\n    this.userCode = `\n      void main() {\n        ${snippets.join('\\n        ')}\n\n        float result = ${operation};\n        setOutput(result);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class AddNPackedProgram implements GPGPUProgram {\n  variableNames: string[];\n  outputShape: number[] = [];\n  userCode: string;\n  usesPackedTextures = true;\n\n  constructor(outputShape: number[], shapes: number[][]) {\n    this.outputShape = outputShape;\n    this.variableNames = shapes.map((_, i) => `T${i}`);\n\n    const snippets: string[] = [];\n    // Get target elements from every input tensor.\n    this.variableNames.forEach(variable => {\n      snippets.push(\n        `vec4 v${variable} = get${variable}AtOutCoords();`\n      );\n    });\n\n    // Calculate the sum of all elements.\n    const operation = this.variableNames.map(variable => {\n      return `v${variable}`;\n    }).join(' + ');\n\n    this.userCode = `\n      void main() {\n        ${snippets.join('\\n        ')}\n\n        vec4 result = ${operation};\n        setOutput(result);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ReduceInfo} from '../../ops/reduce_util';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class ArgMinMaxProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(reduceInfo: ReduceInfo, op: 'max'|'min', firstPass: boolean) {\n    const windowSize = reduceInfo.windowSize;\n    const batchSize = reduceInfo.batchSize;\n    const inSize = reduceInfo.inSize;\n    const outSize = Math.ceil(inSize / windowSize);\n    if (!firstPass) {\n      this.variableNames.push('bestIndicesA');\n    }\n    this.outputShape = [batchSize, outSize];\n    const compOp = (op === 'max') ? '>' : '<';\n    const indexSnippet = firstPass ?\n        'inOffset + i;' :\n        'round(getBestIndicesA(batch, inOffset + i));';\n\n    this.userCode = `\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${windowSize};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${windowSize}; i++) {\n          int inIdx = ${indexSnippet};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${compOp} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport function getVecChannels(name: string, rank: number): string[] {\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank).map(d => `${name}.${d}`);\n}\n\nexport function getChannels(name: string, rank: number): string[] {\n  if (rank === 1) {\n    return [name];\n  }\n  return getVecChannels(name, rank);\n}\n\nexport function getSourceCoords(rank: number, dims: string[]): string {\n  if (rank === 1) {\n    return 'rc';\n  }\n\n  let coords = '';\n  for (let i = 0; i < rank; i++) {\n    coords += dims[i];\n    if (i < rank - 1) {\n      coords += ',';\n    }\n  }\n  return coords;\n}","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENV} from '../../environment';\n\nexport type GLSL = {\n  version: string,\n  attribute: string,\n  varyingVs: string,\n  varyingFs: string,\n  texture2D: string,\n  output: string,\n  defineOutput: string,\n  defineSpecialNaN: string,\n  defineSpecialInf: string,\n  defineRound: string\n};\n\nexport function getGlslDifferences(): GLSL {\n  let version: string;\n  let attribute: string;\n  let varyingVs: string;\n  let varyingFs: string;\n  let texture2D: string;\n  let output: string;\n  let defineOutput: string;\n  let defineSpecialNaN: string;\n  let defineSpecialInf: string;\n  let defineRound: string;\n\n  if (ENV.getNumber('WEBGL_VERSION') === 2) {\n    version = '#version 300 es';\n    attribute = 'in';\n    varyingVs = 'out';\n    varyingFs = 'in';\n    texture2D = 'texture';\n    output = 'outputColor';\n    defineOutput = 'out vec4 outputColor;';\n    defineSpecialNaN = `\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 0. || val == 0.) ? false : true;\n      }\n    `;\n    defineSpecialInf = `\n      const float INFINITY = uintBitsToFloat(uint(0x7f800000));\n    `;\n    defineRound = `\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    `;\n  } else {\n    version = '';\n    attribute = 'attribute';\n    varyingVs = 'varying';\n    varyingFs = 'varying';\n    texture2D = 'texture2D';\n    output = 'gl_FragColor';\n    defineOutput = '';\n    defineSpecialNaN = `\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n    `;\n    defineSpecialInf = `\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    `;\n    defineRound = `\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    `;\n  }\n\n  return {\n    version,\n    attribute,\n    varyingVs,\n    varyingFs,\n    texture2D,\n    output,\n    defineOutput,\n    defineSpecialNaN,\n    defineSpecialInf,\n    defineRound\n  };\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as util from '../../util';\n\n/**\n * Produces GLSL code that derives logical coordinates from a flat\n * index. The code performs integer division with each stride and decrements\n * the index until the index equals the final dimension coordinate.\n */\nexport function getLogicalCoordinatesFromFlatIndex(\n    coords: string[], shape: number[], index = 'index'): string {\n  const strides = util.computeStrides(shape);\n  return strides\n      .map((stride, i) => {\n        const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n        const line2 = i === strides.length - 1 ?\n            `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n            `index -= ${coords[i]} * ${stride}`;\n        return `${line1}; ${line2};`;\n      })\n      .join('');\n}\n\nfunction buildVec(x: string[]): string {\n  if (x.length === 1) {\n    return `${x[0]}`;\n  }\n  return `vec${x.length}(${x.join(',')})`;\n}\n\n/**\n * Produces GLSL code that computes the dot product of the input x and y\n * vectors. Handles splitting inputs into increments of vec4s when necessary.\n */\nexport function dotify(x: string[], y: string[]): string {\n  if (x.length !== y.length) {\n    throw new Error(\n        `Vectors to be dotted must be of the same length -` +\n        `got ${x.length} and ${y.length}`);\n  }\n\n  const slices: string[] = [];\n  const nearestVec4 = Math.floor(x.length / 4);\n  const nearestVec4Remainder = x.length % 4;\n\n  for (let i = 0; i < nearestVec4; i++) {\n    const xSlice = x.slice(i * 4, i * 4 + 4);\n    const ySlice = y.slice(i * 4, i * 4 + 4);\n    slices.push(`${buildVec(xSlice)}, ${buildVec(ySlice)}`);\n  }\n\n  if (nearestVec4Remainder !== 0) {\n    let xSlice = x.slice(nearestVec4 * 4);\n    let ySlice = y.slice(nearestVec4 * 4);\n    if (xSlice.length === 1) {\n      xSlice = xSlice.map(d => `float(${d})`);\n      ySlice = ySlice.map(d => `float(${d})`);\n    }\n    slices.push(`${buildVec(xSlice)}, ${buildVec(ySlice)}`);\n  }\n\n  return slices.map((d, i) => `dot(${d})`).join('+');\n}\n\n/**\n * Produces GLSL that computes the flat index from 3D coordinates.\n */\nexport function getFlatIndexFrom3D(shape: [number, number, number]): string {\n  const strides = util.computeStrides(shape).map(d => d.toString());\n\n  return `\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${strides[0]} + coords.y * ${strides[1]} + coords.z;\n  }\n`;\n}\n\nexport const ENCODE_FLOAT_SNIPPET = `\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n`;","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {getBroadcastDims} from '../../ops/broadcast_util';\nimport * as util from '../../util';\nimport {getGlslDifferences, GLSL} from './glsl_version';\nimport * as shader_util from './shader_compiler_util';\n\nexport type ShapeInfo = {\n  logicalShape: number[],\n  texShape: [number, number],\n  isUniform: boolean,\n  isPacked: boolean,\n  flatOffset: number\n};\n\nexport type InputInfo = {\n  name: string,\n  shapeInfo: ShapeInfo\n};\n\nexport function makeShader(\n    inputsInfo: InputInfo[], outputShape: ShapeInfo, userCode: string,\n    usesPackedTextures: boolean): string {\n  const prefixSnippets: string[] = [];\n  inputsInfo.forEach(x => {\n    const size = util.sizeFromShape(x.shapeInfo.logicalShape);\n\n    // Snippet when we decided to upload the values as uniform.\n    if (x.shapeInfo.isUniform) {\n      prefixSnippets.push(\n          `uniform float ${x.name}${size > 1 ? `[${size}]` : ''};`);\n    } else {\n      prefixSnippets.push(`uniform sampler2D ${x.name};`);\n      prefixSnippets.push(`uniform int offset${x.name};`);\n    }\n  });\n  const inputPrefixSnippet = prefixSnippets.join('\\n');\n\n  const inputSamplingSnippet =\n      inputsInfo\n          .map(x => getInputSamplingSnippet(x, outputShape, usesPackedTextures))\n          .join('\\n');\n  const outTexShape = outputShape.texShape;\n  const glsl = getGlslDifferences();\n  const floatTextureSampleSnippet = getFloatTextureSampleSnippet(glsl);\n  let outputSamplingSnippet: string;\n  let floatTextureSetOutputSnippet: string;\n  let shaderPrefix = getShaderPrefix(glsl);\n\n  if (outputShape.isPacked) {\n    outputSamplingSnippet =\n        getPackedOutputSamplingSnippet(outputShape.logicalShape, outTexShape);\n    floatTextureSetOutputSnippet = getFloatTextureSetRGBASnippet(glsl);\n  } else {\n    outputSamplingSnippet =\n        getOutputSamplingSnippet(outputShape.logicalShape, outTexShape);\n    floatTextureSetOutputSnippet = getFloatTextureSetRSnippet(glsl);\n  }\n\n  if (usesPackedTextures) {\n    shaderPrefix += SHADER_PACKED_PREFIX;\n  }\n\n  const source = [\n    shaderPrefix, floatTextureSampleSnippet, floatTextureSetOutputSnippet,\n    inputPrefixSnippet, outputSamplingSnippet, inputSamplingSnippet, userCode\n  ].join('\\n');\n  return source;\n}\n\nfunction getSamplerFromInInfo(inInfo: InputInfo): string {\n  const shape = inInfo.shapeInfo.logicalShape;\n  switch (shape.length) {\n    case 0:\n      return getSamplerScalar(inInfo);\n    case 1:\n      return getSampler1D(inInfo);\n    case 2:\n      return getSampler2D(inInfo);\n    case 3:\n      return getSampler3D(inInfo);\n    case 4:\n      return getSampler4D(inInfo);\n    case 5:\n      return getSampler5D(inInfo);\n    case 6:\n      return getSampler6D(inInfo);\n    default:\n      throw new Error(\n          `${shape.length}-D input sampling` +\n          ` is not yet supported`);\n  }\n}\n\nfunction getPackedSamplerFromInInfo(inInfo: InputInfo): string {\n  const shape = inInfo.shapeInfo.logicalShape;\n  switch (shape.length) {\n    case 0:\n      return getPackedSamplerScalar(inInfo);\n    case 1:\n      return getPackedSampler1D(inInfo);\n    case 2:\n      return getPackedSampler2D(inInfo);\n    case 3:\n      return getPackedSampler3D(inInfo);\n    default:\n      return getPackedSamplerND(inInfo);\n  }\n}\n\nfunction getInputSamplingSnippet(\n    inInfo: InputInfo, outShapeInfo: ShapeInfo,\n    usesPackedTextures = false): string {\n  let res = '';\n  if (usesPackedTextures) {\n    res += getPackedSamplerFromInInfo(inInfo);\n  } else {\n    res += getSamplerFromInInfo(inInfo);\n  }\n\n  const inShape = inInfo.shapeInfo.logicalShape;\n  const outShape = outShapeInfo.logicalShape;\n  if (inShape.length <= outShape.length) {\n    if (usesPackedTextures) {\n      res += getPackedSamplerAtOutputCoords(inInfo, outShapeInfo);\n    } else {\n      res += getSamplerAtOutputCoords(inInfo, outShapeInfo);\n    }\n  }\n  return res;\n}\n\nfunction getPackedOutputSamplingSnippet(\n    outShape: number[], outTexShape: [number, number]): string {\n  switch (outShape.length) {\n    case 0:\n      return getOutputScalarCoords();\n    case 1:\n      return getOutputPacked1DCoords(outShape as [number], outTexShape);\n    case 2:\n      return getOutputPacked2DCoords(outShape as [number, number], outTexShape);\n    case 3:\n      return getOutputPacked3DCoords(\n          outShape as [number, number, number], outTexShape);\n    default:\n      return getOutputPackedNDCoords(outShape, outTexShape);\n  }\n}\n\nfunction getOutputSamplingSnippet(\n    outShape: number[], outTexShape: [number, number]): string {\n  switch (outShape.length) {\n    case 0:\n      return getOutputScalarCoords();\n    case 1:\n      return getOutput1DCoords(outShape as [number], outTexShape);\n    case 2:\n      return getOutput2DCoords(outShape as [number, number], outTexShape);\n    case 3:\n      return getOutput3DCoords(\n          outShape as [number, number, number], outTexShape);\n    case 4:\n      return getOutput4DCoords(\n          outShape as [number, number, number, number], outTexShape);\n    case 5:\n      return getOutput5DCoords(\n          outShape as [number, number, number, number, number], outTexShape);\n    case 6:\n      return getOutput6DCoords(\n          outShape as [number, number, number, number, number, number],\n          outTexShape);\n    default:\n      throw new Error(\n          `${outShape.length}-D output sampling is not yet supported`);\n  }\n}\n\nfunction getFloatTextureSampleSnippet(glsl: GLSL): string {\n  return `\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${glsl.texture2D}(textureSampler, uv).r;\n    }\n  `;\n}\n\nfunction getFloatTextureSetRSnippet(glsl: GLSL): string {\n  return `\n    void setOutput(float val) {\n      ${glsl.output} = vec4(val, 0, 0, 0);\n    }\n  `;\n}\n\nfunction getFloatTextureSetRGBASnippet(glsl: GLSL): string {\n  return `\n    void setOutput(vec4 val) {\n      ${glsl.output} = val;\n    }\n  `;\n}\n\nfunction getShaderPrefix(glsl: GLSL): string {\n  const SHADER_PREFIX = `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFs} vec2 resultUV;\n    ${glsl.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    #define isnan(value) isnan_custom(value)\n    ${glsl.defineSpecialNaN}\n    bvec4 isnan_custom(vec4 val) {\n      return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n    }\n\n    ${glsl.defineSpecialInf}\n    ${glsl.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${SAMPLE_1D_SNIPPET}\n    ${SAMPLE_2D_SNIPPET}\n    ${SAMPLE_3D_SNIPPET}\n  `;\n\n  return SHADER_PREFIX;\n}\n\nconst SAMPLE_1D_SNIPPET = `\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n`;\n\nconst SAMPLE_2D_SNIPPET = `\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n`;\n\nconst SAMPLE_3D_SNIPPET = `\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n`;\n\nconst SHADER_PACKED_PREFIX = `\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n`;\n\nfunction getOutputScalarCoords() {\n  return `\n    int getOutputCoords() {\n      return 0;\n    }\n  `;\n}\n\nfunction getOutputPacked1DCoords(\n    shape: [number], texShape: [number, number]): string {\n  const packedTexShape =\n      [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n  if (packedTexShape[0] === 1) {\n    return `\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${packedTexShape[1]}.0);\n      }\n    `;\n  }\n\n  if (packedTexShape[1] === 1) {\n    return `\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${packedTexShape[0]}.0);\n      }\n    `;\n  }\n\n  return `\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n      return 2 * (resTexRC.x * ${packedTexShape[1]} + resTexRC.y);\n    }\n  `;\n}\n\nfunction getOutput1DCoords(\n    shape: [number], texShape: [number, number]): string {\n  if (texShape[0] === 1) {\n    return `\n      int getOutputCoords() {\n        return int(resultUV.x * ${texShape[1]}.0);\n      }\n    `;\n  }\n  if (texShape[1] === 1) {\n    return `\n      int getOutputCoords() {\n        return int(resultUV.y * ${texShape[0]}.0);\n      }\n    `;\n  }\n  return `\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${texShape[0]}, ${texShape[1]}));\n      return resTexRC.x * ${texShape[1]} + resTexRC.y;\n    }\n  `;\n}\n\nfunction getOutputPacked3DCoords(\n    shape: [number, number, number], texShape: [number, number]): string {\n  const packedTexShape =\n      [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n  const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n  const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n\n  return `\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n      int index = resTexRC.x * ${packedTexShape[1]} + resTexRC.y;\n\n      int b = index / ${texelsInBatch};\n      index -= b * ${texelsInBatch};\n\n      int r = 2 * (index / ${texelsInLogicalRow});\n      int c = imod(index, ${texelsInLogicalRow}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `;\n}\n\nfunction getOutput3DCoords(\n    shape: [number, number, number], texShape: [number, number]): string {\n  const coordsFromIndexSnippet =\n      shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], shape);\n\n  return `\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${texShape[0]}, ${texShape[1]}));\n      int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n      ${coordsFromIndexSnippet}\n      return ivec3(r, c, d);\n    }\n  `;\n}\n\nfunction getOutputPackedNDCoords(\n    shape: number[], texShape: [number, number]): string {\n  const packedTexShape =\n      [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n\n  const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n  const texelsInBatch =\n      texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n  let texelsInBatchN = texelsInBatch;\n  let batches = ``;\n  let coords = 'b, r, c';\n\n  for (let b = 2; b < shape.length - 1; b++) {\n    texelsInBatchN *= shape[shape.length - b - 1];\n    batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n    coords = `b${b}, ` + coords;\n  }\n\n  return `\n    ivec${shape.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n      int index = resTexRC.x * ${packedTexShape[1]} + resTexRC.y;\n\n      ${batches}\n\n      int b = index / ${texelsInBatch};\n      index -= b * ${texelsInBatch};\n\n      int r = 2 * (index / ${texelsInLogicalRow});\n      int c = imod(index, ${texelsInLogicalRow}) * 2;\n\n      return ivec${shape.length}(${coords});\n    }\n  `;\n}\n\nfunction getOutput4DCoords(\n    shape: [number, number, number, number],\n    texShape: [number, number]): string {\n  const coordsFromIndexSnippet = shader_util.getLogicalCoordinatesFromFlatIndex(\n      ['r', 'c', 'd', 'd2'], shape);\n\n  return `\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${texShape[0]}, ${texShape[1]}));\n      int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n      ${coordsFromIndexSnippet}\n      return ivec4(r, c, d, d2);\n    }\n  `;\n}\n\nfunction getOutput5DCoords(\n    shape: [number, number, number, number, number],\n    texShape: [number, number]): string {\n  const coordsFromIndexSnippet = shader_util.getLogicalCoordinatesFromFlatIndex(\n      ['r', 'c', 'd', 'd2', 'd3'], shape);\n\n  return `\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${texShape[0]},\n                             ${texShape[1]}));\n\n      int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n\n      ${coordsFromIndexSnippet}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `;\n}\n\nfunction getOutput6DCoords(\n    shape: [number, number, number, number, number, number],\n    texShape: [number, number]): string {\n  const coordsFromIndexSnippet = shader_util.getLogicalCoordinatesFromFlatIndex(\n      ['r', 'c', 'd', 'd2', 'd3', 'd4'], shape);\n\n  return `\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${texShape[0]}, ${texShape[1]}));\n      int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n\n      ${coordsFromIndexSnippet}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `;\n}\n\nfunction getOutputPacked2DCoords(\n    shape: [number, number], texShape: [number, number]): string {\n  const packedTexShape =\n      [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n  if (util.arraysEqual(shape, texShape)) {\n    return `\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${packedTexShape[0]}, ${\n        packedTexShape[1]}));\n      }\n    `;\n  }\n\n  // texels needed to accommodate a logical row\n  const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n\n  /**\n   * getOutputCoords\n   *\n   * resTexRC: The rows and columns of the texels. If you move over one\n   * texel to the right in the packed texture, you are moving over one column\n   * (not two).\n   *\n   * index: The texel index\n   */\n  return `\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n      int index = resTexRC.x * ${packedTexShape[1]} + resTexRC.y;\n      int r = 2 * (index / ${texelsInLogicalRow});\n      int c = imod(index, ${texelsInLogicalRow}) * 2;\n\n      return ivec2(r, c);\n    }\n  `;\n}\n\nfunction getOutput2DCoords(\n    shape: [number, number], texShape: [number, number]): string {\n  if (util.arraysEqual(shape, texShape)) {\n    return `\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${texShape[0]}, ${texShape[1]}));\n      }\n    `;\n  }\n  if (shape[1] === 1) {\n    return `\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n        int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;\n  }\n  if (shape[0] === 1) {\n    return `\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n        int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;\n  }\n  return `\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${texShape[0]}, ${texShape[1]}));\n      int index = resTexRC.x * ${texShape[1]} + resTexRC.y;\n      int r = index / ${shape[1]};\n      int c = index - r * ${shape[1]};\n      return ivec2(r, c);\n    }\n  `;\n}\n\nfunction getFlatOffsetUniformName(texName: string): string {\n  return `offset${texName}`;\n}\n\nfunction getPackedSamplerScalar(inputInfo: InputInfo): string {\n  const texName = inputInfo.name;\n  const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  const glsl = getGlslDifferences();\n  return `\n    vec4 ${funcName}() {\n      return ${glsl.texture2D}(${texName}, halfCR);\n    }\n  `;\n}\n\nfunction getSamplerScalar(inputInfo: InputInfo): string {\n  const texName = inputInfo.name;\n  const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  if (inputInfo.shapeInfo.isUniform) {\n    return `float ${funcName}() {return ${texName};}`;\n  }\n  const [texNumR, texNumC] = inputInfo.shapeInfo.texShape;\n  if (texNumR === 1 && texNumC === 1) {\n    return `\n      float ${funcName}() {\n        return sampleTexture(${texName}, halfCR);\n      }\n    `;\n  }\n\n  const [tNumR, tNumC] = inputInfo.shapeInfo.texShape;\n  const offset = getFlatOffsetUniformName(texName);\n  return `\n    float ${funcName}() {\n      vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, ${offset});\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n}\n\nfunction getPackedSampler1D(inputInfo: InputInfo): string {\n  const texName = inputInfo.name;\n  const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  const texShape = inputInfo.shapeInfo.texShape;\n  const packedTexShape =\n      [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n  const glsl = getGlslDifferences();\n\n  return `\n    vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${texName}, uv);\n    }\n  `;\n}\n\nfunction getSampler1D(inputInfo: InputInfo): string {\n  const texName = inputInfo.name;\n  const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n\n  if (inputInfo.shapeInfo.isUniform) {\n    // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n    return `\n      float ${funcName}(int index) {\n        ${getUniformSampler(inputInfo)}\n      }\n    `;\n  }\n\n  const texShape = inputInfo.shapeInfo.texShape;\n  const tNumR = texShape[0];\n  const tNumC = texShape[1];\n\n  if (tNumC === 1 && tNumR === 1) {\n    return `\n      float ${funcName}(int index) {\n        return sampleTexture(${texName}, halfCR);\n      }\n    `;\n  }\n  const offset = getFlatOffsetUniformName(texName);\n  if (tNumC === 1) {\n    return `\n      float ${funcName}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${offset}) + 0.5) / ${tNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n  }\n  if (tNumR === 1) {\n    return `\n      float ${funcName}(int index) {\n        vec2 uv = vec2((float(index + ${offset}) + 0.5) / ${tNumC}.0, 0.5);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n  }\n  return `\n    float ${funcName}(int index) {\n      vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index + ${offset});\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n}\n\nfunction getPackedSampler2D(inputInfo: InputInfo): string {\n  const shape = inputInfo.shapeInfo.logicalShape;\n  const texName = inputInfo.name;\n  const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  const texShape = inputInfo.shapeInfo.texShape;\n\n  const texNumR = texShape[0];\n  const texNumC = texShape[1];\n  const glsl = getGlslDifferences();\n  if (texShape != null && util.arraysEqual(shape, texShape)) {\n    return `\n      vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n\n        return ${glsl.texture2D}(${texName}, uv);\n      }\n    `;\n  }\n\n  const packedTexShape =\n      [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n  const valuesPerRow = Math.ceil(shape[1] / 2);\n\n  return `\n    vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${valuesPerRow}, ${packedTexShape[0]}, ${\n      packedTexShape[1]}, row, col);\n      return ${glsl.texture2D}(${texName}, uv);\n    }\n  `;\n}\n\nfunction getSampler2D(inputInfo: InputInfo): string {\n  const shape = inputInfo.shapeInfo.logicalShape;\n  const texName = inputInfo.name;\n  const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  const texShape = inputInfo.shapeInfo.texShape;\n\n  if (texShape != null && util.arraysEqual(shape, texShape)) {\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n    return `\n    float ${funcName}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n  }\n\n  const {newShape, keptDims} = util.squeezeShape(shape);\n  const squeezedShape = newShape;\n  if (squeezedShape.length < shape.length) {\n    const newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n    const params = ['row', 'col'];\n    return `\n      ${getSamplerFromInInfo(newInputInfo)}\n      float ${funcName}(int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      }\n    `;\n  }\n\n  if (inputInfo.shapeInfo.isUniform) {\n    // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n    return `\n      float ${funcName}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${shape[1]}, 1)));\n        ${getUniformSampler(inputInfo)}\n      }\n    `;\n  }\n\n  const texNumR = texShape[0];\n  const texNumC = texShape[1];\n  const offset = getFlatOffsetUniformName(texName);\n  if (texNumC === 1) {\n    // index is used directly as physical (no risk of float16 overflow).\n    return `\n    float ${funcName}(int row, int col) {\n      float index = dot(vec3(row, col, ${offset}), vec3(${shape[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n  }\n  if (texNumR === 1) {\n    // index is used directly as physical (no risk of float16 overflow).\n    return `\n    float ${funcName}(int row, int col) {\n      float index = dot(vec3(row, col, ${offset}), vec3(${shape[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n  }\n\n  return `\n  float ${funcName}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${shape[1]} + col + ${offset};\n    vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n    return sampleTexture(${texName}, uv);\n  }\n`;\n}\n\nfunction getPackedSampler3D(inputInfo: InputInfo): string {\n  const shape = inputInfo.shapeInfo.logicalShape;\n  const texName = inputInfo.name;\n  const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  const texShape = inputInfo.shapeInfo.texShape;\n  const packedTexShape =\n      [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n\n  if (shape[0] === 1) {\n    const squeezedShape = shape.slice(1);\n    const keptDims = [1, 2];\n    const newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n    const params = ['b', 'row', 'col'];\n    return `\n        ${getPackedSamplerFromInInfo(newInputInfo)}\n        vec4 ${funcName}(int b, int row, int col) {\n          return ${funcName}(${getSqueezedParams(params, keptDims)});\n        }\n      `;\n  }\n\n  const texNumR = packedTexShape[0];\n  const texNumC = packedTexShape[1];\n\n  const valuesPerRow = Math.ceil(shape[2] / 2);\n  const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n  const glsl = getGlslDifferences();\n\n  return `\n    vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumR}, ${texNumC}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${texName}, uv);\n    }\n  `;\n}\n\nfunction getSampler3D(inputInfo: InputInfo): string {\n  const shape = inputInfo.shapeInfo.logicalShape;\n  const texName = inputInfo.name;\n  const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  const stride0 = shape[1] * shape[2];\n  const stride1 = shape[2];\n\n  const {newShape, keptDims} = util.squeezeShape(shape);\n  const squeezedShape = newShape;\n  if (squeezedShape.length < shape.length) {\n    const newInputInfo = squeezeInputInfo(inputInfo, squeezedShape);\n    const params = ['row', 'col', 'depth'];\n    return `\n        ${getSamplerFromInInfo(newInputInfo)}\n        float ${funcName}(int row, int col, int depth) {\n          return ${funcName}(${getSqueezedParams(params, keptDims)});\n        }\n      `;\n  }\n\n  if (inputInfo.shapeInfo.isUniform) {\n    // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n    return `\n      float ${funcName}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${stride0}, ${stride1}, 1)));\n        ${getUniformSampler(inputInfo)}\n      }\n    `;\n  }\n\n  const texShape = inputInfo.shapeInfo.texShape;\n  const texNumR = texShape[0];\n  const texNumC = texShape[1];\n  const flatOffset = inputInfo.shapeInfo.flatOffset;\n  if (texNumC === stride0 && flatOffset == null) {\n    // texC is used directly as physical (no risk of float16 overflow).\n    return `\n        float ${funcName}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${stride1}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${texNumC}.0, ${texNumR}.0);\n          return sampleTexture(${texName}, uv);\n        }\n      `;\n  }\n\n  if (texNumC === stride1 && flatOffset == null) {\n    // texR is used directly as physical (no risk of float16 overflow).\n    return `\n    float ${funcName}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${shape[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n  }\n\n  const offset = getFlatOffsetUniformName(texName);\n  return `\n      float ${funcName}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${stride0} + col * ${stride1} + depth + ${offset};\n        vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n        return sampleTexture(${texName}, uv);\n      }\n  `;\n}\n\nfunction getPackedSamplerND(inputInfo: InputInfo): string {\n  const shape = inputInfo.shapeInfo.logicalShape;\n  const rank = shape.length;\n  const texName = inputInfo.name;\n  const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  const texShape = inputInfo.shapeInfo.texShape;\n  const packedTexShape =\n      [Math.ceil(texShape[0] / 2), Math.ceil(texShape[1] / 2)];\n  const texNumR = packedTexShape[0];\n  const texNumC = packedTexShape[1];\n\n  const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n  let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n  let params = `int b, int row, int col`;\n  let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n  for (let b = 2; b < rank - 1; b++) {\n    params = `int b${b}, ` + params;\n    texelsInBatch *= shape[rank - b - 1];\n    index = `b${b} * ${texelsInBatch} + ` + index;\n  }\n  const glsl = getGlslDifferences();\n  return `\n    vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${texName}, uv);\n    }\n  `;\n}\n\nfunction getSampler4D(inputInfo: InputInfo): string {\n  const shape = inputInfo.shapeInfo.logicalShape;\n  const texName = inputInfo.name;\n  const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  const stride2 = shape[3];\n  const stride1 = shape[2] * stride2;\n  const stride0 = shape[1] * stride1;\n\n  const {newShape, keptDims} = util.squeezeShape(shape);\n  if (newShape.length < shape.length) {\n    const newInputInfo = squeezeInputInfo(inputInfo, newShape);\n    const params = ['row', 'col', 'depth', 'depth2'];\n    return `\n      ${getSamplerFromInInfo(newInputInfo)}\n      float ${funcName}(int row, int col, int depth, int depth2) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      }\n    `;\n  }\n\n  if (inputInfo.shapeInfo.isUniform) {\n    // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n    return `\n      float ${funcName}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${stride0}, ${stride1}, ${stride2}, 1)));\n        ${getUniformSampler(inputInfo)}\n      }\n    `;\n  }\n\n  const flatOffset = inputInfo.shapeInfo.flatOffset;\n  const texShape = inputInfo.shapeInfo.texShape;\n  const texNumR = texShape[0];\n  const texNumC = texShape[1];\n\n  if (texNumC === stride0 && flatOffset == null) {\n    // texC is used directly as physical (no risk of float16 overflow).\n    return `\n      float ${funcName}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${stride1}, ${stride2}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${texNumC}.0, ${texNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n  }\n  if (texNumC === stride2 && flatOffset == null) {\n    // texR is used directly as physical (no risk of float16 overflow).\n    return `\n      float ${funcName}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${shape[1] * shape[2]}, ${shape[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${texNumC}.0, ${texNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n  }\n\n  const offset = getFlatOffsetUniformName(texName);\n  return `\n    float ${funcName}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${stride0} + col * ${stride1} +\n          depth * ${stride2} + depth2;\n      vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index + ${offset});\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n}\n\nfunction getSampler5D(inputInfo: InputInfo): string {\n  const shape = inputInfo.shapeInfo.logicalShape;\n  const texName = inputInfo.name;\n  const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n  const stride3 = shape[4];\n  const stride2 = shape[3] * stride3;\n  const stride1 = shape[2] * stride2;\n  const stride0 = shape[1] * stride1;\n\n  const {newShape, keptDims} = util.squeezeShape(shape);\n  if (newShape.length < shape.length) {\n    const newInputInfo = squeezeInputInfo(inputInfo, newShape);\n    const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n    return `\n      ${getSamplerFromInInfo(newInputInfo)}\n      float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      }\n    `;\n  }\n\n  if (inputInfo.shapeInfo.isUniform) {\n    // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n    return `\n      float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${stride0}, ${stride1}, ${stride2}, ${stride3})) +\n          depth3;\n        ${getUniformSampler(inputInfo)}\n      }\n    `;\n  }\n\n  const flatOffset = inputInfo.shapeInfo.flatOffset;\n  const texShape = inputInfo.shapeInfo.texShape;\n  const texNumR = texShape[0];\n  const texNumC = texShape[1];\n\n  if (texNumC === stride0 && flatOffset == null) {\n    // texC is used directly as physical (no risk of float16 overflow).\n    return `\n      float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${stride1}, ${stride2}, ${stride3}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${texNumC}.0, ${texNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n  }\n\n  if (texNumC === stride3 && flatOffset == null) {\n    // texR is used directly as physical (no risk of float16 overflow).\n    return `\n      float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${shape[1] * shape[2] * shape[3]},\n               ${shape[2] * shape[3]}, ${shape[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${texNumC}.0, ${texNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n  }\n\n  const offset = getFlatOffsetUniformName(texName);\n  return `\n    float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth2 * ${stride3} + depth3 + ${offset};\n      vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n}\n\nfunction getSampler6D(inputInfo: InputInfo): string {\n  const shape = inputInfo.shapeInfo.logicalShape;\n  const texName = inputInfo.name;\n  const funcName = 'get' + texName.charAt(0).toUpperCase() + texName.slice(1);\n\n  const {newShape, keptDims} = util.squeezeShape(shape);\n  if (newShape.length < shape.length) {\n    const newInputInfo = squeezeInputInfo(inputInfo, newShape);\n    const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n    return `\n      ${getSamplerFromInInfo(newInputInfo)}\n      float ${funcName}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      }\n    `;\n  }\n\n  const stride4 = shape[5];\n  const stride3 = shape[4] * stride4;\n  const stride2 = shape[3] * stride3;\n  const stride1 = shape[2] * stride2;\n  const stride0 = shape[1] * stride1;\n\n  if (inputInfo.shapeInfo.isUniform) {\n    // Uniform arrays will be less than 65505 (no risk of float16 overflow).\n    return `\n      float ${funcName}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${stride0}, ${stride1}, ${stride2}, ${stride3})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${stride4}, 1)));\n        ${getUniformSampler(inputInfo)}\n      }\n    `;\n  }\n\n  const flatOffset = inputInfo.shapeInfo.flatOffset;\n  const texShape = inputInfo.shapeInfo.texShape;\n  const texNumR = texShape[0];\n  const texNumC = texShape[1];\n  if (texNumC === stride0 && flatOffset == null) {\n    // texC is used directly as physical (no risk of float16 overflow).\n    return `\n      float ${funcName}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${stride1}, ${stride2}, ${stride3}, ${stride4})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${texNumC}.0, ${texNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n  }\n  if (texNumC === stride4 && flatOffset == null) {\n    // texR is used directly as physical (no risk of float16 overflow).\n    return `\n      float ${funcName}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${shape[1] * shape[2] * shape[3] * shape[4]},\n               ${shape[2] * shape[3] * shape[4]},\n               ${shape[3] * shape[4]},\n               ${shape[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${texNumC}.0, ${texNumR}.0);\n        return sampleTexture(${texName}, uv);\n      }\n    `;\n  }\n  const offset = getFlatOffsetUniformName(texName);\n  return `\n    float ${funcName}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth2 * ${stride3} + depth3 * ${stride4} + depth4 + ${offset};\n      vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n      return sampleTexture(${texName}, uv);\n    }\n  `;\n}\n\nfunction getUniformSampler(inputInfo: InputInfo): string {\n  const texName = inputInfo.name;\n  const inSize = util.sizeFromShape(inputInfo.shapeInfo.logicalShape);\n\n  if (inSize < 2) {\n    return `return ${texName};`;\n  }\n  return `\n    for (int i = 0; i < ${inSize}; i++) {\n      if (i == index) {\n        return ${texName}[i];\n      }\n    }\n  `;\n}\n\nfunction getPackedSamplerAtOutputCoords(\n    inputInfo: InputInfo, outShapeInfo: ShapeInfo) {\n  const texName = inputInfo.name;\n  const texFuncSnippet = texName.charAt(0).toUpperCase() + texName.slice(1);\n  const funcName = 'get' + texFuncSnippet + 'AtOutCoords';\n  const inRank = inputInfo.shapeInfo.logicalShape.length;\n  const outRank = outShapeInfo.logicalShape.length;\n\n  const broadcastDims = getBroadcastDims(\n      inputInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape);\n\n  const type = getCoordsDataType(outRank);\n  const rankDiff = outRank - inRank;\n  let coordsSnippet: string;\n  const fields = ['x', 'y', 'z', 'w', 'u', 'v'];\n\n  if (inRank === 0) {\n    coordsSnippet = '';\n  } else if (outRank < 2 && broadcastDims.length >= 1) {\n    coordsSnippet = 'coords = 0;';\n  } else {\n    coordsSnippet =\n        broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`)\n            .join('\\n');\n  }\n  let unpackedCoordsSnippet = '';\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inputInfo.shapeInfo.logicalShape\n                                .map((s, i) => `coords.${fields[i + rankDiff]}`)\n                                .join(', ');\n  }\n\n  let output = `return outputValue;`;\n  const inSize = util.sizeFromShape(inputInfo.shapeInfo.logicalShape);\n  const isInputScalar = inSize === 1;\n  const outSize = util.sizeFromShape(outShapeInfo.logicalShape);\n  const isOutputScalar = outSize === 1;\n\n  if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n    output = `\n      return vec4(outputValue.xy, outputValue.xy);\n    `;\n  } else if (isInputScalar && !isOutputScalar) {\n    if (outRank === 1) {\n      output = `\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      `;\n    } else {\n      output = `\n        return vec4(outputValue.x);\n      `;\n    }\n  } else if (broadcastDims.length) {\n    const rows = inRank - 2;\n    const cols = inRank - 1;\n\n    if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n      output = `return vec4(outputValue.x);`;\n    } else if (broadcastDims.indexOf(rows) > -1) {\n      output = `return vec4(outputValue.x, outputValue.y, ` +\n          `outputValue.x, outputValue.y);`;\n    } else if (broadcastDims.indexOf(cols) > -1) {\n      output = `return vec4(outputValue.xx, outputValue.zz);`;\n    }\n  }\n\n  return `\n    vec4 ${funcName}() {\n      ${type} coords = getOutputCoords();\n      ${coordsSnippet}\n      vec4 outputValue = get${texFuncSnippet}(${unpackedCoordsSnippet});\n      ${output}\n    }\n  `;\n}\n\nfunction getSamplerAtOutputCoords(\n    inputInfo: InputInfo, outShapeInfo: ShapeInfo) {\n  const texName = inputInfo.name;\n  const texFuncSnippet = texName.charAt(0).toUpperCase() + texName.slice(1);\n  const funcName = 'get' + texFuncSnippet + 'AtOutCoords';\n  const outTexShape = outShapeInfo.texShape;\n  const inTexShape = inputInfo.shapeInfo.texShape;\n  const inRank = inputInfo.shapeInfo.logicalShape.length;\n  const outRank = outShapeInfo.logicalShape.length;\n\n  if (!inputInfo.shapeInfo.isUniform && inRank === outRank &&\n      inputInfo.shapeInfo.flatOffset == null &&\n      util.arraysEqual(inTexShape, outTexShape)) {\n    return `\n      float ${funcName}() {\n        return sampleTexture(${texName}, resultUV);\n      }\n    `;\n  }\n\n  const type = getCoordsDataType(outRank);\n  const broadcastDims = getBroadcastDims(\n      inputInfo.shapeInfo.logicalShape, outShapeInfo.logicalShape);\n  const rankDiff = outRank - inRank;\n  let coordsSnippet: string;\n  const fields = ['x', 'y', 'z', 'w', 'u', 'v'];\n\n  if (inRank === 0) {\n    coordsSnippet = '';\n  } else if (outRank < 2 && broadcastDims.length >= 1) {\n    coordsSnippet = 'coords = 0;';\n  } else {\n    coordsSnippet =\n        broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`)\n            .join('\\n');\n  }\n  let unpackedCoordsSnippet = '';\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inputInfo.shapeInfo.logicalShape\n                                .map((s, i) => `coords.${fields[i + rankDiff]}`)\n                                .join(', ');\n  }\n\n  return `\n    float ${funcName}() {\n      ${type} coords = getOutputCoords();\n      ${coordsSnippet}\n      return get${texFuncSnippet}(${unpackedCoordsSnippet});\n    }\n  `;\n}\n\nexport function getCoordsDataType(rank: number): string {\n  if (rank <= 1) {\n    return 'int';\n  } else if (rank === 2) {\n    return 'ivec2';\n  } else if (rank === 3) {\n    return 'ivec3';\n  } else if (rank === 4) {\n    return 'ivec4';\n  } else if (rank === 5) {\n    return 'ivec5';\n  } else if (rank === 6) {\n    return 'ivec6';\n  } else {\n    throw Error(`GPU for rank ${rank} is not yet supported`);\n  }\n}\n\n/** Returns a new input info (a copy) that has a squeezed logical shape. */\nfunction squeezeInputInfo(\n    inInfo: InputInfo, squeezedShape: number[]): InputInfo {\n  // Deep copy.\n  const newInputInfo: InputInfo = JSON.parse(JSON.stringify(inInfo));\n  newInputInfo.shapeInfo.logicalShape = squeezedShape;\n  return newInputInfo;\n}\n\nfunction getSqueezedParams(params: string[], keptDims: number[]): string {\n  return keptDims.map(d => params[d]).join(', ');\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {assert} from '../../util';\nimport {getChannels} from '../packing_util';\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class ArgMinMaxPackedProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  outputShape: number[];\n  userCode: string;\n  usesPackedTextures = true;\n\n  constructor(\n      shape: number[], windowSize: number, op: 'max'|'min',\n      firstPass: boolean) {\n    assert(\n        shape.length > 2,\n        () => `Packed arg${\n            op.charAt(0).toUpperCase() +\n            op.slice(1)} supports only inputs with rank above 2.`);\n    const inSize = shape[shape.length - 1];\n    const outSize = Math.ceil(inSize / windowSize);\n    this.outputShape = shape.slice(0, -1);\n    if (outSize > 1) {\n      this.outputShape.push(outSize);\n    }\n    if (!firstPass) {\n      this.variableNames.push('bestIndicesA');\n    }\n    const outShape = this.outputShape;\n    const rank = outShape.length;\n    const dtype = getCoordsDataType(rank);\n    const coords = getChannels('coords', rank);\n\n    let sourceLocSetup;\n    let sourceRank;\n    if (outSize === 1) {\n      sourceRank = rank + 1;\n      const sourceLocDType = getCoordsDataType(sourceRank);\n      sourceLocSetup = `\n        ${sourceLocDType} sourceLocR = ${sourceLocDType}(${coords.join()}, 0);\n        ++${coords[rank - 1]};\n        ${sourceLocDType} sourceLocG = ${sourceLocDType}(${coords.join()}, 0);\n        ++${coords[rank - 2]};\n        ${sourceLocDType} sourceLocA = ${sourceLocDType}(${coords.join()}, 0);\n        --${coords[rank - 1]};\n        ${sourceLocDType} sourceLocB = ${sourceLocDType}(${coords.join()}, 0);\n        --${coords[rank - 2]};`;\n    } else {\n      sourceRank = rank;\n      sourceLocSetup = `\n        ${dtype} sourceLocR = coords;\n        ++${coords[rank - 1]};\n        ${dtype} sourceLocG = coords;\n        ++${coords[rank - 2]};\n        ${dtype} sourceLocA = coords;\n        --${coords[rank - 1]};\n        ${dtype} sourceLocB = coords;\n        --${coords[rank - 2]};`;\n    }\n    const channels = ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, sourceRank);\n    const inChannel = '.' + channels[sourceRank - 1];  // e.g. \".b\" for rank 3.\n    const intChannels = channels.map(x => 'int ' + x);\n    const srcRCoords =\n        getChannels('sourceLocR', sourceRank - 1).concat('inIdx.r');\n    const srcGCoords =\n        getChannels('sourceLocG', sourceRank - 1).concat('inIdx.g');\n    const srcBCoords =\n        getChannels('sourceLocB', sourceRank - 1).concat('inIdx.b');\n    const srcACoords =\n        getChannels('sourceLocA', sourceRank - 1).concat('inIdx.a');\n\n    const compOp = (op === 'max') ? 'greaterThan' : 'lessThan';\n    const fetchCandidateIdx = firstPass ? '' : `\n          inIdx = round(vec4(getBestIndicesAChannel(${srcRCoords.join()}),\n                             getBestIndicesAChannel(${srcGCoords.join()}),\n                             getBestIndicesAChannel(${srcBCoords.join()}),\n                             getBestIndicesAChannel(${srcACoords.join()})));`;\n\n    const fetchValue = `vec4(\n            getAChannel(${srcRCoords.join()}),\n            hasNextCol ? getAChannel(${srcGCoords.join()}) : 0.,\n            hasNextRow ? getAChannel(${srcBCoords.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${srcACoords.join()}) : 0.)`;\n\n    const getBestIndicesAChannelSnippet = firstPass ? '' : `\n      float getBestIndicesAChannel(${intChannels.join()}) {\n        return getChannel(getBestIndicesA(${channels.join()}),\n                                          vec2(${channels.slice(-2).join()}));\n      }`;\n\n    this.userCode = `\n      float getAChannel(${intChannels.join()}) {\n        return getChannel(getA(${channels.join()}),\n                               vec2(${channels.slice(-2).join()}));\n      }\n      ${getBestIndicesAChannelSnippet}\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        bool hasNextCol = ${coords[rank - 1]} < ${outShape[rank - 1] - 1};\n        bool hasNextRow = ${coords[rank - 2]} < ${outShape[rank - 2] - 1};\n        ${sourceLocSetup}\n        ivec4 srcIdx = ivec4(sourceLocR${inChannel}, sourceLocG${inChannel},\n          sourceLocB${inChannel}, sourceLocA${inChannel}) * ${windowSize};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${fetchValue};\n\n        for (int i = 0; i < ${windowSize}; i++) {\n          inIdx = srcIdx;\n          ${fetchCandidateIdx}\n          vec4 candidate = ${fetchValue};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${compOp}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Conv2DInfo} from '../../ops/conv_util';\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class AvgPool2DBackpropProgram implements GPGPUProgram {\n  variableNames = ['dy'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: Conv2DInfo) {\n    this.outputShape = convInfo.inShape;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n\n    const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n    const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n\n    const avgMultiplier = 1 / (filterHeight * filterWidth);\n\n    this.userCode = `\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n      const float avgMultiplier = float(${avgMultiplier});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${effectiveFilterHeight};\n            wR += ${dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${effectiveFilterWidth};\n            wC+= ${dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as broadcast_util from '../../ops/broadcast_util';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class BatchNormProgram implements GPGPUProgram {\n  variableNames: string[];\n  outputShape: number[] = [];\n  userCode: string;\n\n  constructor(\n      xShape: number[], meanShape: number[], varianceShape: number[],\n      offsetShape: number[]|null, scaleShape: number[]|null,\n      varianceEpsilon: number) {\n    this.variableNames = ['x', 'mean', 'variance'];\n    broadcast_util.assertAndGetBroadcastShape(xShape, meanShape);\n    broadcast_util.assertAndGetBroadcastShape(xShape, varianceShape);\n\n    let offsetSnippet = '0.0';\n    if (offsetShape != null) {\n      broadcast_util.assertAndGetBroadcastShape(xShape, offsetShape);\n      this.variableNames.push('offset');\n      offsetSnippet = 'getOffsetAtOutCoords()';\n    }\n\n    let scaleSnippet = '1.0';\n    if (scaleShape != null) {\n      broadcast_util.assertAndGetBroadcastShape(xShape, scaleShape);\n      this.variableNames.push('scale');\n      scaleSnippet = 'getScaleAtOutCoords()';\n    }\n\n    this.outputShape = xShape;\n    this.userCode = `\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${offsetSnippet};\n        float scale = ${scaleSnippet};\n        float inv = scale * inversesqrt(variance + float(${varianceEpsilon}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as broadcast_util from '../../ops/broadcast_util';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class BatchNormPackedProgram implements GPGPUProgram {\n  variableNames: string[];\n  outputShape: number[];\n  userCode: string;\n  usesPackedTextures = true;\n\n  constructor(\n      xShape: number[], meanShape: number[], varianceShape: number[],\n      offsetShape: number[]|null, scaleShape: number[]|null,\n      varianceEpsilon: number) {\n    this.variableNames = ['x', 'mean', 'variance'];\n    broadcast_util.assertAndGetBroadcastShape(xShape, meanShape);\n    broadcast_util.assertAndGetBroadcastShape(xShape, varianceShape);\n\n    let offsetSnippet = 'vec4(0.0)';\n    if (offsetShape != null) {\n      broadcast_util.assertAndGetBroadcastShape(xShape, offsetShape);\n      this.variableNames.push('offset');\n      offsetSnippet = 'getOffsetAtOutCoords()';\n    }\n\n    let scaleSnippet = 'vec4(1.0)';\n    if (scaleShape != null) {\n      broadcast_util.assertAndGetBroadcastShape(xShape, scaleShape);\n      this.variableNames.push('scale');\n      scaleSnippet = 'getScaleAtOutCoords()';\n    }\n\n    this.outputShape = xShape;\n    this.userCode = `\n      void main() {\n        vec4 offset = ${offsetSnippet};\n        vec4 scale = ${scaleSnippet};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${varianceEpsilon}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as broadcast_util from '../../ops/broadcast_util';\nimport {GPGPUProgram} from './gpgpu_math';\n\n// (Ar + Ai)(Br + Bi) =\n// ArBr + ArBi + AiBr + AiBi = ArBr - AB + ArBi + AiBr\n// Yr = ArBr - AB\n// Yi = ArBi + AiBr\nexport const COMPLEX_MULTIPLY = {\n  REAL: 'return areal * breal - aimag * bimag;',\n  IMAG: 'return areal * bimag + aimag * breal;'\n};\n\nexport class BinaryOpComplexProgram implements GPGPUProgram {\n  variableNames = ['AReal', 'AImag', 'BReal', 'BImag'];\n  userCode: string;\n  outputShape: number[];\n\n  constructor(op: string, aShape: number[], bShape: number[]) {\n    this.outputShape =\n        broadcast_util.assertAndGetBroadcastShape(aShape, bShape);\n\n    this.userCode = `\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${op}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as broadcast_util from '../../ops/broadcast_util';\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nconst CHECK_NAN_SNIPPET = `\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n`;\n\nexport const ADD = 'return a + b;';\nexport const SUB = 'return a - b;';\nexport const MUL = 'return a * b;';\n\n// Without the equality check div produces 0.9999 for a = b, which when\n// floored can cause errors.\nexport const DIV = `\nif (b == 0.0) {\n  return NAN;\n} \nif (a == b) {\n  return 1.0;\n};\nreturn a / b;`;\n\n// We use native integer division to deal with floating point imprecision. Since\n// we implement floor division and glsl implements truncated division, we\n// correct for this by subtracting 1 from result when the result is negative and\n// there is a remainder.\nexport const INT_DIV = `\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n`;\n\nexport const POW = `\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n`;\nexport const SQUARED_DIFFERENCE = 'return (a - b) * (a - b);';\n\nexport const EQUAL = `return float(a == b);`;\n\nexport const NOT_EQUAL = `return float(a != b);`;\n\nexport const LESS = `return float(a < b);`;\n\nexport const LESS_EQUAL = `return float(a <= b);`;\n\nexport const GREATER = `return float(a > b);`;\n\nexport const GREATER_EQUAL = `return float(a >= b);`;\n\nexport const LOGICAL_AND = `return float(a >= 1.0 && b >= 1.0);`;\n\nexport const LOGICAL_OR = `return float(a >= 1.0 || b >= 1.0);`;\n\nexport const MAX = CHECK_NAN_SNIPPET + `\n  return max(a, b);\n`;\nexport const MIN = CHECK_NAN_SNIPPET + `\n  return min(a, b);\n`;\nexport const MOD = `if (b == 0.0) return NAN;\n  return mod(a, b);`;\n\nexport const ATAN2 = CHECK_NAN_SNIPPET + `\n  return atan(a, b);\n`;\n\nexport const ELU_DER = `return (b >= 1.0) ? a : a * (b + 1.0);`;\n\nexport const PRELU = `return (a < 0.) ? b * a : a;`;\n\nexport class BinaryOpProgram implements GPGPUProgram {\n  variableNames = ['A', 'B'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(op: string, aShape: number[], bShape: number[]) {\n    this.outputShape =\n        broadcast_util.assertAndGetBroadcastShape(aShape, bShape);\n    this.userCode = `\n      float binaryOperation(float a, float b) {\n        ${op}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as broadcast_util from '../../ops/broadcast_util';\nimport {sizeFromShape} from '../../util';\nimport {getChannels} from '../packing_util';\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nconst CHECK_NAN_SNIPPET = `\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n`;\n\n// We do the same as in ./binaryop_gpu, with vec4 and ivec4.\n// On Linux, the vectorized implementation produces NaNs when a and b are 0.\nexport const DIV = `\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(b.x == 0.0) {\n    result.x = NAN;\n  } else if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(b.y == 0.0) {\n    result.y = NAN;\n  } else if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(b.z == 0.0) {\n    result.z = NAN;\n  } else if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(b.w == 0.0) {\n    result.w = NAN;\n  } else if(a.w == b.w) {\n    result.w = 1.;\n  }\n  \n  return result;\n`;\n\nexport const INT_DIV = `\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n`;\n\nexport const POW = `\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  ` +\n    CHECK_NAN_SNIPPET + `\n  return result;\n`;\n\nexport const PRELU = `\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n`;\n\nexport const ELU_DER = `\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n`;\n\nexport const ATAN2 = `\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  ` +\n    CHECK_NAN_SNIPPET + `\n  return result;\n`;\n\nexport const EQUAL = `\n  return vec4(equal(a, b));\n`;\n\nexport const NOT_EQUAL = `\n  return vec4(notEqual(a, b));\n`;\n\nexport const LESS = `\n  return vec4(lessThan(a, b));\n`;\n\nexport const LESS_EQUAL = `\n  return vec4(lessThanEqual(a, b));\n`;\n\nexport const GREATER = `\n  return vec4(greaterThan(a, b));\n`;\n\nexport const GREATER_EQUAL = `\n  return vec4(greaterThanEqual(a, b));\n`;\n\nexport const LOGICAL_AND = `\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n`;\n\nexport const LOGICAL_OR = `\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n`;\n\nexport const MAX = `\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  ` +\n    CHECK_NAN_SNIPPET + `\n  return result;\n`;\n\nexport const MIN = `\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  ` +\n    CHECK_NAN_SNIPPET + `\n  return result;\n`;\n\nexport const MOD = `\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  ` +\n    CHECK_NAN_SNIPPET + `\n  return result;\n`;\n\nexport class BinaryOpPackedProgram implements GPGPUProgram {\n  variableNames = ['A', 'B'];\n  outputShape: number[];\n  userCode: string;\n  supportsBroadcasting = true;\n  usesPackedTextures = true;\n\n  constructor(\n      op: string, aShape: number[], bShape: number[],\n      checkOutOfBounds = false) {\n    this.outputShape =\n        broadcast_util.assertAndGetBroadcastShape(aShape, bShape);\n    const rank = this.outputShape.length;\n    let checkOutOfBoundsString = '';\n    if (checkOutOfBounds) {\n      if (rank === 0 || sizeFromShape(this.outputShape) === 1) {\n        checkOutOfBoundsString = `\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        `;\n      } else {\n        const dtype = getCoordsDataType(rank);\n        checkOutOfBoundsString = `\n          ${dtype} coords = getOutputCoords();\n        `;\n        if (rank === 1) {\n          checkOutOfBoundsString += `\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;\n        } else {\n          const channels = getChannels('coords', rank);\n          checkOutOfBoundsString += `\n            bool nextRowOutOfBounds =\n              (${channels[rank - 2]} + 1) >= ${this.outputShape[rank - 2]};\n            bool nextColOutOfBounds =\n              (${channels[rank - 1]} + 1) >= ${this.outputShape[rank - 1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `;\n        }\n      }\n    }\n\n    this.userCode = `\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${op}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${checkOutOfBoundsString}\n\n        setOutput(result);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUContext} from './gpgpu_context';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class ClipProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  userCode: string;\n  outputShape: number[];\n\n  // Caching uniform locations for speed.\n  minLoc: WebGLUniformLocation;\n  maxLoc: WebGLUniformLocation;\n\n  constructor(aShape: number[]) {\n    this.outputShape = aShape;\n    this.userCode = `\n      uniform float min;\n      uniform float max;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, min, max));\n      }\n    `;\n  }\n\n  getCustomSetupFunc(min: number, max: number) {\n    return (gpgpu: GPGPUContext, webGLProgram: WebGLProgram) => {\n      if (this.minLoc == null) {\n        this.minLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'min');\n        this.maxLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'max');\n      }\n      gpgpu.gl.uniform1f(this.minLoc, min);\n      gpgpu.gl.uniform1f(this.maxLoc, max);\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUContext} from './gpgpu_context';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class ClipPackedProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  usesPackedTextures = true;\n  userCode: string;\n  outputShape: number[];\n\n  // Caching uniform locations for speed.\n  minLoc: WebGLUniformLocation;\n  maxLoc: WebGLUniformLocation;\n\n  constructor(aShape: number[]) {\n    this.outputShape = aShape;\n    this.userCode = `\n      uniform float min;\n      uniform float max;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(min), vec4(max)));\n      }\n    `;\n  }\n\n  getCustomSetupFunc(min: number, max: number) {\n    return (gpgpu: GPGPUContext, webGLProgram: WebGLProgram) => {\n      if (this.minLoc == null) {\n        this.minLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'min');\n        this.maxLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'max');\n      }\n      gpgpu.gl.uniform1f(this.minLoc, min);\n      gpgpu.gl.uniform1f(this.maxLoc, max);\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class ComplexAbsProgram implements GPGPUProgram {\n  variableNames = ['real', 'imag'];\n  userCode: string;\n  outputShape: number[];\n\n  constructor(shape: number[]) {\n    this.outputShape = shape;\n    this.userCode = `\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as concat_util from '../../ops/concat_util';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class ConcatProgram implements GPGPUProgram {\n  variableNames: string[];\n  outputShape: number[] = [];\n  userCode: string;\n\n  // Concats 2d tensors along axis=1. See comments in MathBackendWebGL.concat().\n  constructor(shapes: Array<[number, number]>) {\n    this.outputShape = concat_util.computeOutShape(shapes, 1 /* axis */);\n    this.variableNames = shapes.map((_, i) => `T${i}`);\n\n    const offsets: number[] = new Array(shapes.length - 1);\n    offsets[0] = shapes[0][1];\n    for (let i = 1; i < offsets.length; i++) {\n      offsets[i] = offsets[i - 1] + shapes[i][1];\n    }\n\n    const snippets = [`if (yC < ${offsets[0]}) setOutput(getT0(yR, yC));`];\n    for (let i = 1; i < offsets.length; i++) {\n      const shift = offsets[i - 1];\n      snippets.push(\n          `else if (yC < ${offsets[i]}) ` +\n          `setOutput(getT${i}(yR, yC-${shift}));`);\n    }\n    const lastIndex = offsets.length;\n    const lastShift = offsets[offsets.length - 1];\n    snippets.push(`else setOutput(getT${lastIndex}(yR, yC-${lastShift}));`);\n\n    this.userCode = `\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${snippets.join('\\n        ')}\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as concat_util from '../../ops/concat_util';\nimport {getChannels} from '../packing_util';\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class ConcatPackedProgram implements GPGPUProgram {\n  variableNames: string[];\n  usesPackedTextures = true;\n  outputShape: number[] = [];\n  userCode: string;\n\n  constructor(shapes: number[][], axis: number) {\n    this.outputShape = concat_util.computeOutShape(shapes, axis);\n    const shape = this.outputShape;\n    const rank = shape.length;\n    const dtype = getCoordsDataType(rank);\n    const coords = getChannels('coords', rank);\n    const channels = ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n    this.variableNames = shapes.map((_, i) => `T${i}`);\n\n    const offsets: number[] = new Array(shapes.length - 1);\n    offsets[0] = shapes[0][axis];\n    for (let i = 1; i < offsets.length; i++) {\n      offsets[i] = offsets[i - 1] + shapes[i][axis];\n    }\n\n    const channel = channels[axis];\n    const lastChannels = 'vec2(' + channels.slice(-2).join() + ')';\n    const allChannels = channels.join();\n\n    let getValueSnippet = `if (${channel} < ${offsets[0]})\n          return getChannel(getT0(${allChannels}), ${lastChannels});`;\n    for (let i = 1; i < offsets.length; i++) {\n      const shift = offsets[i - 1];\n      getValueSnippet += `\n        else if (${channel} < ${offsets[i]}) {\n          ${channel} -= ${shift};\n          return getChannel(getT${i}(${allChannels}), ${lastChannels});\n        }`;\n    }\n    const lastIndex = offsets.length;\n    const shift = offsets[offsets.length - 1];\n    getValueSnippet += `\n        else {\n          ${channel} -= ${shift};\n          return getChannel(getT${lastIndex}(${allChannels}), ${lastChannels});\n        }`;\n\n    this.userCode = `\n      float getValue(${channels.map(x => 'int ' + x)}) {\n        ${getValueSnippet}\n      }\n\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n        if (++${coords[rank - 1]} < ${shape[rank - 1]}) {\n          result.g = getValue(${coords});\n        }\n        if (++${coords[rank - 2]} < ${shape[rank - 2]}) {\n          result.a = getValue(${coords});\n        }\n        if (${coords[rank - 2]} < ${shape[rank - 2]} &&\n            --${coords[rank - 1]} < ${shape[rank - 1]}) {\n          result.b = getValue(${coords});\n        }\n        setOutput(result);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Conv2DInfo, Conv3DInfo} from '../../ops/conv_util';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class Conv2DDerFilterProgram implements GPGPUProgram {\n  variableNames = ['x', 'dy'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: Conv2DInfo) {\n    this.outputShape = convInfo.filterShape;\n\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n\n    this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${convInfo.batchSize}; b++) {\n          for (int yR = 0; yR < ${convInfo.outHeight}; yR++) {\n            int xR = wR + yR * ${strideHeight} - ${padTop};\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${convInfo.outWidth}; yC++) {\n              int xC = wC + yC * ${strideWidth} - ${padLeft};\n\n              if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n\nexport class Conv2DDerInputProgram implements GPGPUProgram {\n  variableNames = ['dy', 'W'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: Conv2DInfo) {\n    this.outputShape = convInfo.inShape;\n\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n\n    const padTop = filterHeight - 1 - convInfo.padInfo.top;\n    const padLeft = filterWidth - 1 - convInfo.padInfo.left;\n\n    this.userCode = `\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${filterHeight}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${filterHeight} - 1 - wR;\n\n          for (int wC = 0; wC < ${filterWidth}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${filterWidth} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${convInfo.outChannels}; d2++) {\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, d2);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n\nexport class Conv3DDerFilterProgram implements GPGPUProgram {\n  variableNames = ['x', 'dy'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: Conv3DInfo) {\n    this.outputShape = convInfo.filterShape;\n\n    const strideDepth = convInfo.strideDepth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const padFront = convInfo.padInfo.front;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n\n    this.userCode = `\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${convInfo.batchSize}; b++) {\n          for (int yF = 0; yF < ${convInfo.outDepth}; yF++) {\n            int xF = wF + yF * ${strideDepth} - ${padFront};\n\n            if (xF < 0 || xF >= ${convInfo.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${convInfo.outHeight}; yR++) {\n              int xR = wR + yR * ${strideHeight} - ${padTop};\n\n              if (xR < 0 || xR >= ${convInfo.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${convInfo.outWidth}; yC++) {\n                int xC = wC + yC * ${strideWidth} - ${padLeft};\n\n                if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n\nexport class Conv3DDerInputProgram implements GPGPUProgram {\n  variableNames = ['dy', 'W'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: Conv3DInfo) {\n    this.outputShape = convInfo.inShape;\n\n    const filterDepth = convInfo.filterDepth;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const strideDepth = convInfo.strideDepth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n\n    const padFront = filterDepth - 1 - convInfo.padInfo.front;\n    const padTop = filterHeight - 1 - convInfo.padInfo.top;\n    const padLeft = filterWidth - 1 - convInfo.padInfo.left;\n\n    this.userCode = `\n      const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${filterDepth}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${convInfo.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${filterDepth} - 1 - wF;\n\n          for (int wR = 0; wR < ${filterHeight}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${filterHeight} - 1 - wR;\n\n            for (int wC = 0; wC < ${filterWidth}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${filterWidth} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${convInfo.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Conv2DInfo} from '../../ops/conv_util';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class DepthwiseConv2DDerFilterProgram implements GPGPUProgram {\n  variableNames = ['x', 'dy'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: Conv2DInfo) {\n    this.outputShape = convInfo.filterShape;\n\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    const channelMul = convInfo.outChannels / convInfo.inChannels;\n\n    this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${channelMul} + dm;\n\n        float dotProd = 0.0;\n\n        // TODO: Vec4 over the batch size\n        for (int b = 0; b < ${convInfo.batchSize}; b++) {\n          for (int yR = 0; yR < ${convInfo.outHeight}; yR++) {\n            int xR = wR + yR * ${strideHeight} - ${padTop};\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${convInfo.outWidth}; yC++) {\n              int xC = wC + yC * ${strideWidth} - ${padLeft};\n\n              if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n\nexport class DepthwiseConv2DDerInputProgram implements GPGPUProgram {\n  variableNames = ['dy', 'W'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: Conv2DInfo) {\n    this.outputShape = convInfo.inShape;\n\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n\n    const padTop = filterHeight - 1 - convInfo.padInfo.top;\n    const padLeft = filterWidth - 1 - convInfo.padInfo.left;\n    const channelMul = convInfo.outChannels / convInfo.inChannels;\n\n    this.userCode = `\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${filterHeight}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${filterHeight} - 1 - wR;\n\n          for (int wC = 0; wC < ${filterWidth}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${filterWidth} - 1 - wC;\n\n            // TODO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${channelMul}; dm++) {\n              int d2 = d1 * ${channelMul} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Conv2DInfo, Conv3DInfo} from '../../ops/conv_util';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class Conv2DProgram implements GPGPUProgram {\n  variableNames = ['x', 'W'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: Conv2DInfo) {\n    this.outputShape = convInfo.outShape;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n\n    const inputDepthNearestVec4 = Math.floor(convInfo.inChannels / 4) * 4;\n    const inputDepthVec4Remainder = convInfo.inChannels % 4;\n\n    this.userCode = `\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${filterHeight}; wR++) {\n          int xR = xRCorner + wR * ${dilationHeight};\n\n          if (xR < 0 || xR >= ${convInfo.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${filterWidth}; wC++) {\n            int xC = xCCorner + wC * ${dilationWidth};\n\n            if (xC < 0 || xC >= ${convInfo.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${inputDepthNearestVec4}; d1 += 4) {\n              vec4 xValues = vec4(\n                getX(batch, xR, xC, d1),\n                getX(batch, xR, xC, d1 + 1),\n                getX(batch, xR, xC, d1 + 2),\n                getX(batch, xR, xC, d1 + 3)\n              );\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              dotProd += dot(xValues, wValues);\n            }\n\n            if (${inputDepthVec4Remainder === 1}) {\n              dotProd +=\n                getX(batch, xR, xC, ${inputDepthNearestVec4}) *\n                getW(wR, wC, ${inputDepthNearestVec4}, d2);\n            } else if (${inputDepthVec4Remainder === 2}) {\n              vec2 xValues = vec2(\n                getX(batch, xR, xC, ${inputDepthNearestVec4}),\n                getX(batch, xR, xC, ${inputDepthNearestVec4} + 1)\n              );\n              vec2 wValues = vec2(\n                getW(wR, wC, ${inputDepthNearestVec4}, d2),\n                getW(wR, wC, ${inputDepthNearestVec4} + 1, d2)\n              );\n              dotProd += dot(xValues, wValues);\n            } else if (${inputDepthVec4Remainder === 3}) {\n              vec3 xValues = vec3(\n                getX(batch, xR, xC, ${inputDepthNearestVec4}),\n                getX(batch, xR, xC, ${inputDepthNearestVec4} + 1),\n                getX(batch, xR, xC, ${inputDepthNearestVec4} + 2)\n              );\n              vec3 wValues = vec3(\n                getW(wR, wC, ${inputDepthNearestVec4}, d2),\n                getW(wR, wC, ${inputDepthNearestVec4} + 1, d2),\n                getW(wR, wC, ${inputDepthNearestVec4} + 2, d2)\n              );\n              dotProd += dot(xValues, wValues);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n\nexport class Conv3DProgram implements GPGPUProgram {\n  variableNames = ['x', 'W'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: Conv3DInfo) {\n    this.outputShape = convInfo.outShape;\n    const padFront = convInfo.padInfo.front;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    const strideDepth = convInfo.strideDepth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationDepth = convInfo.dilationDepth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const filterDepth = convInfo.filterDepth;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n\n    const inputDepthNearestVec4 = Math.floor(convInfo.inChannels / 4) * 4;\n    const inputDepthVec4Remainder = convInfo.inChannels % 4;\n\n    this.userCode = `\n      const ivec3 strides = ivec3(${strideDepth}, ${strideHeight}, ${\n        strideWidth});\n      const ivec3 pads = ivec3(${padFront}, ${padTop}, ${padLeft});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${filterDepth}; wF++) {\n          int xF = xFCorner + wF * ${dilationDepth};\n\n          if (xF < 0 || xF >= ${convInfo.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${filterHeight}; wR++) {\n            int xR = xRCorner + wR * ${dilationHeight};\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${filterWidth}; wC++) {\n              int xC = xCCorner + wC * ${dilationWidth};\n\n              if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${inputDepthNearestVec4}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${inputDepthVec4Remainder === 1}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${inputDepthNearestVec4}) *\n                  getW(wF, wR, wC, ${inputDepthNearestVec4}, d2);\n              } else if (${inputDepthVec4Remainder === 2}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${inputDepthNearestVec4}),\n                  getX(batch, xF, xR, xC, ${inputDepthNearestVec4} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${inputDepthNearestVec4}, d2),\n                  getW(wF, wR, wC, ${inputDepthNearestVec4} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${inputDepthVec4Remainder === 3}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${inputDepthNearestVec4}),\n                  getX(batch, xF, xR, xC, ${inputDepthNearestVec4} + 1),\n                  getX(batch, xF, xR, xC, ${inputDepthNearestVec4} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${inputDepthNearestVec4}, d2),\n                  getW(wF, wR, wC, ${inputDepthNearestVec4} + 1, d2),\n                  getW(wF, wR, wC, ${inputDepthNearestVec4} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Conv2DInfo} from '../../ops/conv_util';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class DepthwiseConv2DProgram implements GPGPUProgram {\n  variableNames = ['x', 'W'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: Conv2DInfo) {\n    this.outputShape = convInfo.outShape;\n\n    const xNumRows = convInfo.inHeight;\n    const xNumCols = convInfo.inWidth;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const channelMul = convInfo.outChannels / convInfo.inChannels;\n\n    this.userCode = `\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${channelMul};\n        int q = d2 - d1 * ${channelMul};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TODO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${filterHeight}; wR++) {\n          int xR = xRCorner + wR * ${dilationHeight};\n\n          if (xR < 0 || xR >= ${xNumRows}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${filterWidth}; wC++) {\n            int xC = xCCorner + wC * ${dilationWidth};\n\n            if (xC < 0 || xC >= ${xNumCols}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Conv2DInfo} from '../../ops/conv_util';\nimport * as util from '../../util';\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class DepthwiseConvPacked2DProgram implements GPGPUProgram {\n  variableNames = ['x', 'W'];\n  usesPackedTextures = true;\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: Conv2DInfo) {\n    this.outputShape = convInfo.outShape;\n\n    const xNumRows = convInfo.inHeight;\n    const xNumCols = convInfo.inWidth;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const texelsAcross = filterWidth;\n\n    let mainLoop = `int xR; int xC; int xCOffset;`;\n\n    for (let r = 0; r < filterHeight; r++) {\n      for (let c = 0; c < filterWidth; c++) {\n        mainLoop += `\n          vec4 xTexelR${r}C${c * 2} = vec4(0.);\n          vec4 wR${r}C${c} = vec4(0.);\n          vec4 xR${r}C${c} = vec4(0.);`;\n      }\n    }\n\n    /**\n     * This vectorized implementation works by gathering the values needed for\n     * each output channel's dot product into vec4's and then multiplying them\n     * all together (this happens in the final double for-loop below). Most of\n     * the main loop consists of constructing these vec4's with the minimum\n     * number of texture2D calls, which means making use of all four returned\n     * values from a texture2D call at once.\n     */\n    for (let r = 0; r < filterHeight; r++) {\n      for (let texelC = 0; texelC < texelsAcross; texelC++) {\n        const c = texelC * 2;\n\n        mainLoop += `\n          xR = xRCorner + ${r * dilationHeight};\n          xC = xCCorner + ${c * dilationWidth};\n        `;\n\n        if (strideWidth === 1) {\n          if (c < filterWidth) {\n            // If padding is odd, the outer texels have to be composed.\n            if (padLeft % 2 === 1) {\n              // TODO: Ensure vec4 previous does not result in redundant sample,\n              // and avoid setting xTexelRC's that exceed the boundary in the\n              // first place rather than resetting them to vec4(0)).\n\n              // To compute xCOffset:\n              // - If padding is odd, we must add 1 to ensure we ask for an\n              // even-numbered row.\n              // - We subtract 2 to access the previous texel.\n\n              mainLoop += `\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${xNumRows} && xCOffset >= 0 && xCOffset < ${\n                  xNumCols}) {\n                  xTexelR${r}C${c} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${r}C${c} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${xNumRows} && xCOffset >= 0 && xCOffset < ${\n                  xNumCols}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n                  xR${r}C${c} = vec4(previous.zw, xTexelR${r}C${c}.xy);\n                } else {\n                  xR${r}C${c} = vec4(0, 0, xTexelR${r}C${c}.xy);\n                }\n              `;\n            } else {\n              // Padding is even, so xRC corresponds to a single texel.\n              mainLoop += `\n                if(xR >= 0 && xR < ${xNumRows} && xC >= 0 && xC < ${xNumCols}) {\n                  xTexelR${r}C${c} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${r}C${c} = vec4(0.);\n                }\n\n                xR${r}C${c} = xTexelR${r}C${c};\n              `;\n            }\n\n            if (c + 1 < filterWidth) {\n              // If dilation is even, the second entry should match the first\n              // (either both are composed or both are single samples). But if\n              // dilation is odd, then the second entry should be the opposite\n              // of the first (if the first is composed, the second is a single\n              // sample, and vice versa.)\n\n              const nextTexelOffset = padLeft % 2 === 0 ?\n                  util.nearestLargerEven(dilationWidth) :\n                  dilationWidth;\n\n              if ((dilationWidth % 2 === 0 && padLeft % 2 === 1) ||\n                  (dilationWidth % 2 !== 0 && padLeft % 2 !== 1)) {\n                mainLoop += `\n                  xCOffset = xC + ${padLeft % 2} + ${nextTexelOffset};\n\n                  if(xR >= 0 && xR < ${xNumRows} &&\n                    xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                    xTexelR${r}C${c + 2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `;\n\n                // If dilation > 1 then the xRC's will not be able to share any\n                // values, so each xRC will require two unique calls to getX.\n                if (dilationWidth > 1) {\n                  mainLoop += `\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${xNumRows} &&\n                      xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                      xTexelR${r}C${c} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${r}C${c} = vec4(0.);\n                    }\n                  `;\n                }\n\n                mainLoop += `\n                  xR${r}C${c + 1} = vec4(\n                    xTexelR${r}C${c}.zw, xTexelR${r}C${c + 2}.xy);\n                `;\n              } else {\n                mainLoop += `\n                  xCOffset = xC + ${nextTexelOffset};\n\n                  if(xR >= 0 && xR < ${xNumRows} &&\n                    xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                    xTexelR${r}C${c + 2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${r}C${c + 1} = xTexelR${r}C${c + 2};\n                `;\n              }\n            }\n          }\n        } else {  // stride > 1\n          if (c < filterWidth) {\n            mainLoop += `\n              if(xR >= 0 && xR < ${xNumRows}) {\n            `;\n\n            // Depending on whether padLeft is even or odd, we want either the\n            // xy or zw channels from X texels for xR${r}C${c}. If padLeft is\n            // even, xR${r}C${c + 1} is simply the zw channels of texels we've\n            // already sampled. But if padLeft is odd, xR${r}C{$c + 1}.zw will\n            // need to come from the xy channels of a new texel, hence the `vec4\n            // final` initialized below.\n            if (padLeft % 2 === 1) {\n              mainLoop += `\n                xCOffset = xC + 1 - ${strideWidth};\n                if(xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                  xTexelR${r}C${c} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${r}C${c} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${xNumCols}) {\n                  xTexelR${r}C${c + 2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${r}C${c + 2} = vec4(0.);\n                }\n\n                xR${r}C${c} = vec4(\n                  xTexelR${r}C${c}.zw, xTexelR${r}C${c + 2}.zw);\n              `;\n\n              if (c + 1 < filterWidth) {\n                mainLoop += `\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${strideWidth};\n                  if(xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${r}C${c + 1} = vec4(xTexelR${r}C${c + 2}.xy, final.xy);\n                `;\n              }\n            } else {\n              mainLoop += `\n                if(xC >= 0 && xC < ${xNumCols}) {\n                  xTexelR${r}C${c} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${r}C${c} = vec4(0.);\n                }\n\n                xCOffset = xC + ${strideWidth};\n                if(xCOffset >= 0 && xCOffset < ${xNumCols}) {\n                  xTexelR${r}C${c + 2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${r}C${c + 2} = vec4(0.);\n                }\n\n                xR${r}C${c} = vec4(\n                  xTexelR${r}C${c}.xy, xTexelR${r}C${c + 2}.xy);\n              `;\n\n              if (c + 1 < filterWidth) {\n                mainLoop += `\n                  xR${r}C${c + 1} = vec4(\n                    xTexelR${r}C${c}.zw, xTexelR${r}C${c + 2}.zw);\n                `;\n              }\n            }\n\n            mainLoop += `}`;\n          }\n        }\n\n        if (c < filterWidth) {\n          mainLoop += `\n            vec4 wTexelR${r}C${c} = getW(${r}, ${c}, d1, q);\n            wR${r}C${c} = vec4(wTexelR${r}C${c}.xz, wTexelR${r}C${c}.xz);\n          `;\n\n          if (c + 1 < filterWidth) {\n            mainLoop += `\n              vec4 wTexelR${r}C${c + 1} = getW(${r}, ${c + 1}, d1, q);\n              wR${r}C${c + 1} =\n                vec4(wTexelR${r}C${c + 1}.xz, wTexelR${r}C${c + 1}.xz);`;\n          }\n        }\n      }\n    }\n\n    for (let r = 0; r < filterHeight; r++) {\n      for (let c = 0; c < filterWidth; c++) {\n        mainLoop += `result += xR${r}C${c} * wR${r}C${c};`;\n      }\n    }\n\n    this.userCode = `\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 result = vec4(0.);\n\n        ${mainLoop}\n\n        setOutput(result);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport { GPGPUProgram } from './gpgpu_math';\n\nexport class CropAndResizeProgram implements GPGPUProgram {\n  variableNames = ['Image', 'Boxes', 'BoxInd'];\n  outputShape: number[] = [];\n  userCode: string;\n\n  constructor(\n    imageShape: [number, number, number, number], boxShape: [number, number],\n    cropSize: [number, number], method: 'bilinear' | 'nearest',\n    extrapolationValue: number) {\n    const [batch, imageHeight, imageWidth, depth] = imageShape;\n    const [numBoxes,] = boxShape;\n    const [cropHeight, cropWidth] = cropSize;\n    this.outputShape = [numBoxes, cropHeight, cropWidth, depth];\n    const methodId = method === 'bilinear' ? 1 : 0;\n\n    const [inputHeightFloat, inputWidthFloat] =\n      [`${imageHeight - 1}.0`, `${imageWidth - 1}.0`];\n\n    const [heightRatio, heightScale, inY] = cropHeight > 1 ?\n      [\n        `${(imageHeight-1)/(cropHeight-1)}`,\n        '(y2-y1) * height_ratio',\n        `y1*${inputHeightFloat} + float(y)*(height_scale)`,\n      ] :\n      [\n        '0.0',\n        '0.0',\n        `0.5 * (y1+y2) * ${inputHeightFloat}`,\n      ];\n    const [widthRatio, widthScale, inX] = cropWidth > 1 ?\n      [\n        `${(imageWidth-1)/(cropWidth-1)}`,\n        '(x2-x1) * width_ratio',\n        `x1*${inputWidthFloat} + float(x)*(width_scale)`,\n      ] :\n      [\n        '0.0',\n        '0.0',\n        `0.5 * (x1+x2) * ${inputWidthFloat}`,\n      ];\n\n    // Reference implementation\n    // tslint:disable-next-line:max-line-length\n    // https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/crop_and_resize_op_gpu.cu.cc\n    this.userCode = `\n      const float height_ratio = float(${heightRatio});\n      const float width_ratio = float(${widthRatio});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${batch}) {\n          return;\n        }\n\n        float height_scale = ${heightScale};\n        float width_scale = ${widthScale};\n\n        float in_y = ${inY};\n        if( in_y < 0.0 || in_y > ${inputHeightFloat} ) {\n          setOutput(float(${extrapolationValue}));\n          return;\n        }\n        float in_x = ${inX};\n        if( in_x < 0.0 || in_x > ${inputWidthFloat} ) {\n          setOutput(float(${extrapolationValue}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${methodId} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class CumSumProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(shape: number[], exclusive: boolean, reverse: boolean) {\n    this.outputShape = shape;\n    const rank = shape.length;\n    const finalDim = shape[shape.length - 1];\n    const comparator = reverse ? '<' : '>';\n\n    this.userCode = `\n      int getIndex(int i) {\n        ${reverse ? `return ${finalDim} -i - 1;` : 'return i;'}\n      }\n\n      void main() {\n        ${getCoordsDataType(rank)} coords = getOutputCoords();\n        int end = ${getFinalCoord(rank, 'coords')};\n        float val = 0.0;\n        for (int i = ${finalDim} - 1; i >= 0; i -= 1) {\n          int idx = getIndex(i);\n          if (idx ${comparator} end) {\n            continue;\n          }\n          if (idx == end && ${exclusive}) {\n            continue;\n          }\n          ${getFinalCoord(rank, 'coords')} = idx;\n          val += getX(${getCoords(rank, 'coords')});\n        }\n        setOutput(val);\n      }\n    `;\n  }\n}\n\nfunction getCoords(rank: number, name: string): string {\n  if (rank === 1) {\n    return `${name}`;\n  } else if (rank === 2) {\n    return `${name}.x, ${name}.y`;\n  } else if (rank === 3) {\n    return `${name}.x, ${name}.y, ${name}.z`;\n  } else if (rank === 4) {\n    return `${name}.x, ${name}.y, ${name}.z, ${name}.w`;\n  } else {\n    throw Error(`Cumulative sum for rank ${rank} is not yet supported`);\n  }\n}\n\nfunction getFinalCoord(rank: number, name: string): string {\n  if (rank === 1) {\n    return `${name}`;\n  } else if (rank === 2) {\n    return `${name}.y`;\n  } else if (rank === 3) {\n    return `${name}.z`;\n  } else if (rank === 4) {\n    return `${name}.w`;\n  } else {\n    throw Error(`Cumulative sum for rank ${rank} is not yet supported`);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {getGlslDifferences} from './glsl_version';\nimport {GPGPUProgram} from './gpgpu_math';\nimport * as shader_util from './shader_compiler_util';\n\nexport class DecodeMatrixProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  userCode: string;\n  outputShape: [number, number, number];\n\n  constructor(outputShape: [number, number, number], texShape: [\n    number, number\n  ]) {\n    const glsl = getGlslDifferences();\n    this.outputShape = outputShape;\n\n    this.userCode = `\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${\n        shader_util.getLogicalCoordinatesFromFlatIndex(\n            ['r', 'c', 'd'], outputShape)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${texShape[0]}, ${texShape[1]}));\n        int index = 4 * (resTexRC.x * ${texShape[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${glsl.output} = result;\n      }\n    `;\n  }\n}","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {getGlslDifferences} from './glsl_version';\nimport {GPGPUProgram} from './gpgpu_math';\nimport * as shader_util from './shader_compiler_util';\n\nexport class DecodeMatrixPackedProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  userCode: string;\n  usesPackedTextures = true;\n  outputShape: [number, number, number];\n\n  constructor(outputShape: [number, number, number], texShape: [\n    number, number\n  ]) {\n    const glsl = getGlslDifferences();\n    this.outputShape = outputShape;\n\n    this.userCode = `\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${\n        shader_util.getLogicalCoordinatesFromFlatIndex(\n            ['r', 'c', 'd'], outputShape)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${texShape[0]}, ${texShape[1]}));\n        int index = 4 * (resTexRC.x * ${texShape[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${glsl.output} = result;\n      }\n    `;\n  }\n}","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class DepthToSpaceProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[] = [];\n  userCode: string;\n  blockSize: number;\n  dataFormat: string;\n\n  constructor(\n      outputShape: number[], blockSize: number, dataFormat: 'NHWC'|'NCHW') {\n    this.outputShape = outputShape;\n    this.blockSize = blockSize;\n    this.dataFormat = dataFormat;\n    this.userCode = `\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${blockSize};\n      int offset_h = imod(h, ${blockSize});\n      int in_w = w / ${blockSize};\n      int offset_w = imod(w, ${blockSize});\n      int offset_d = (offset_h * ${blockSize} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `;\n  }\n\n  private getHeightCoordString(): string {\n    if (this.dataFormat === 'NHWC') {\n      return `coords[1]`;\n    } else {\n      return `coords[2]`;\n    }\n  }\n\n  private getWidthCoordString(): string {\n    if (this.dataFormat === 'NHWC') {\n      return `coords[2]`;\n    } else {\n      return `coords[3]`;\n    }\n  }\n\n  private getDepthCoordString(): string {\n    if (this.dataFormat === 'NHWC') {\n      return `coords[3]`;\n    } else {\n      return `coords[1]`;\n    }\n  }\n\n  private getOutputDepthSize(): number {\n    if (this.dataFormat === 'NHWC') {\n      return this.outputShape[3];\n    } else {\n      return this.outputShape[1];\n    }\n  }\n\n  private getInputSamplingString(): string {\n    if (this.dataFormat === 'NHWC') {\n      return `getX(b, in_h, in_w, in_d)`;\n    } else {\n      return `getX(b, in_d, in_h, in_w)`;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {getGlslDifferences} from './glsl_version';\nimport {GPGPUProgram} from './gpgpu_math';\nimport {ENCODE_FLOAT_SNIPPET} from './shader_compiler_util';\n\nexport class EncodeFloatProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  userCode: string;\n  outputShape: number[];\n\n  constructor(outputShape: number[]) {\n    const glsl = getGlslDifferences();\n    this.outputShape = outputShape;\n    this.userCode = `\n      ${ENCODE_FLOAT_SNIPPET}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${glsl.output} = encode_float(x);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {getGlslDifferences} from './glsl_version';\nimport {GPGPUProgram} from './gpgpu_math';\nimport {ENCODE_FLOAT_SNIPPET} from './shader_compiler_util';\n\nexport class EncodeFloatPackedProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  userCode: string;\n  outputShape: number[];\n  usesPackedTextures = true;\n\n  constructor(outputShape: [number, number, number]) {\n    const glsl = getGlslDifferences();\n    this.outputShape = outputShape;\n    this.userCode = `\n      ${ENCODE_FLOAT_SNIPPET}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${glsl.output} = encode_float(x);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {getGlslDifferences} from './glsl_version';\nimport {GPGPUProgram} from './gpgpu_math';\nimport * as shader_util from './shader_compiler_util';\n\nexport class EncodeMatrixProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  userCode: string;\n  outputShape: number[];\n\n  constructor(\n      outputShape: [number, number, number], texShape: [number, number],\n      inputIsUnsignedByte = false) {\n    const glsl = getGlslDifferences();\n    const [height, width] = texShape;\n    this.outputShape = outputShape;\n\n    let output = `result`;\n    if (inputIsUnsignedByte) {\n      output = `floor(result * 255. + 0.5)`;\n    }\n\n    this.userCode = `\n      ${shader_util.getFlatIndexFrom3D(outputShape)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex /= 4;\n        int r = flatIndex / ${width};\n        int c = imod(flatIndex, ${width});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${width}.0, ${height}.0);\n        vec4 values = ${glsl.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${glsl.output} = vec4(${output}, 0., 0., 0.);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {getGlslDifferences} from './glsl_version';\nimport {GPGPUProgram} from './gpgpu_math';\nimport * as shader_util from './shader_compiler_util';\n\n/*\nThis is how the shader encodes a tensor with shape = [2, 3, 5]\n(indices are [batch, row, col]).\n\n000|001   002|003   004|xxx   020|021   022|023   024|xxx\n-------   -------   -------   -------   -------   -------\n010|011   012|013   014|xxx   xxx|xxx   xxx|xxx   xxx|xxx\n\n100|101   102|103   104|xxx   120|121   122|123   124|xxx\n-------   -------   -------   -------   -------   -------\n110|111   112|113   114|xxx   xxx|xxx   xxx|xxx   xxx|xxx\n\nSingle texels contain only values from the same batch, and from adjacent rows\nand columns.\n */\n\nexport class EncodeMatrixPackedProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  userCode: string;\n  outputShape: number[];\n\n  constructor(\n      outputShape: [number, number, number], texShape: [number, number],\n      inputIsUnsignedByte = false) {\n    const glsl = getGlslDifferences();\n    const [height, width] = texShape;\n    this.outputShape = outputShape;\n\n    let mainLoop = '';\n    let output = 'result';\n    if (inputIsUnsignedByte) {\n      output = 'floor(result * 255. + 0.5)';\n    }\n\n    for (let row = 0; row <= 1; row++) {\n      for (let col = 0; col <= 1; col++) {\n        const channel = row * 2 + col;\n\n        mainLoop += `\n          localCoords = coords;\n          if(localCoords[2] + ${col} < ${outputShape[2]}) {\n            localCoords[2] += ${col};\n            if(localCoords[1] + ${row} < ${outputShape[1]}) {\n              localCoords[1] += ${row};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n    \n              flatIndex /= 4;\n              r = flatIndex / ${width};\n              c = imod(flatIndex, ${width});\n              uv = (vec2(c, r) + halfCR) / vec2(${width}.0, ${height}.0);\n              values = ${glsl.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${channel}] = values[0];\n              } else if(offset == 1) {\n                result[${channel}] = values[1];\n              } else if(offset == 2) {\n                result[${channel}] = values[2];\n              } else {\n                result[${channel}] = values[3];\n              }\n            }\n          }\n        `;\n      }\n    }\n\n    this.userCode = `\n      ${shader_util.getFlatIndexFrom3D(outputShape)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n        \n        ${mainLoop}\n\n        ${glsl.output} = ${output};\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport const COMPLEX_FFT = {\n  REAL: 'return real * expR - imag * expI;',\n  IMAG: 'return real * expI + imag * expR;'\n};\n\nexport class FFTProgram implements GPGPUProgram {\n  variableNames = ['real', 'imag'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(op: string, inputShape: [number, number], inverse: boolean) {\n    const innerDim = inputShape[1];\n    this.outputShape = inputShape;\n\n    const exponentMultiplierSnippet =\n        inverse ? `2.0 * ${Math.PI}` : `-2.0 * ${Math.PI}`;\n    const resultDenominator = inverse ? `${innerDim}.0` : '1.0';\n\n    this.userCode = `\n      const float exponentMultiplier = ${exponentMultiplierSnippet};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${op}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${innerDim});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${innerDim}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${resultDenominator};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {GPGPUContext} from './gpgpu_context';\n\nexport class FillProgram implements GPGPUProgram {\n  variableNames: string[];\n  outputShape: number[] = [];\n  userCode: string;\n\n  valueLoc: WebGLUniformLocation;\n\n  constructor(shape: number[], value: number) {\n    this.variableNames = ['x'];\n    this.outputShape = shape;\n\n    this.userCode = `\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    `;\n  }\n\n  getCustomSetupFunc(value: number) {\n    return (gpgpu: GPGPUContext, webGLProgram: WebGLProgram) => {\n      if (this.valueLoc == null) {\n        this.valueLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'value');\n      }\n      gpgpu.gl.uniform1f(this.valueLoc, value);\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {getGlslDifferences} from './glsl_version';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class FromPixelsProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  userCode: string;\n  outputShape: number[];\n\n  constructor(outputShape: number[]) {\n    const glsl = getGlslDifferences();\n    const [height, width, ] = outputShape;\n    this.outputShape = outputShape;\n    this.userCode = `\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${width}.0, ${height}.0);\n\n        vec4 values = ${glsl.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {getGlslDifferences} from './glsl_version';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class FromPixelsPackedProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  userCode: string;\n  outputShape: number[];\n\n  constructor(outputShape: number[]) {\n    const glsl = getGlslDifferences();\n    const [height, width, ] = outputShape;\n    this.outputShape = outputShape;\n    this.userCode = `\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${width}.0, ${\n        height}.0);\n            vec4 values = ${glsl.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${glsl.output} = result;\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class GatherProgram implements GPGPUProgram {\n  variableNames = ['A', 'indices'];\n  outputShape: number[];\n  userCode: string;\n  rank: number;\n\n  constructor(aShape: number[], indicesLength: number, axis: number) {\n    const outputShape: number[] = aShape.slice();\n    outputShape[axis] = indicesLength;\n    this.outputShape = outputShape;\n    this.rank = outputShape.length;\n    const dtype = getCoordsDataType(this.rank);\n    const sourceCoords = getSourceCoords(aShape, axis);\n\n    this.userCode = `\n      void main() {\n        ${dtype} resRC = getOutputCoords();\n        setOutput(getA(${sourceCoords}));\n      }\n    `;\n  }\n}\n\nfunction getSourceCoords(aShape: number[], axis: number): string {\n  const rank = aShape.length;\n  if (rank > 4) {\n    throw Error(`Gather for rank ${rank} is not yet supported`);\n  }\n  if (rank === 1) {\n    return `int(getIndices(resRC))`;\n  }\n\n  const currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n\n  const sourceCoords = [];\n  for (let i = 0; i < aShape.length; i++) {\n    if (i === axis) {\n      sourceCoords.push(`int(getIndices(${currentCoords[i]}))`);\n    } else {\n      sourceCoords.push(`${currentCoords[i]}`);\n    }\n  }\n  return sourceCoords.join();\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class GatherNDProgram implements GPGPUProgram {\n  variableNames = ['x', 'indices'];\n  outputShape: number[];\n  userCode: string;\n  constructor(\n      private sliceDim: number, private strides: number[], shape: number[]) {\n    this.outputShape = shape;\n    const stridesType = getCoordsDataType(strides.length);\n    const dtype = getCoordsDataType(shape.length);\n    const strideString = this.sliceDim > 1 ? 'strides[j]' : 'strides';\n    this.userCode = `\n        ${stridesType} strides = ${stridesType}(${this.strides});\n         void main() {\n          ${dtype} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${strideString};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataId, Tensor} from '../../tensor';\nimport {DataType, DataValues} from '../../types';\nimport * as util from '../../util';\n\nexport enum TextureUsage {\n  RENDER,\n  UPLOAD,\n  PIXELS,\n  DOWNLOAD\n}\n\nexport enum PhysicalTextureType {\n  UNPACKED_FLOAT16,\n  UNPACKED_FLOAT32,\n  PACKED_4X1_UNSIGNED_BYTE,\n  PACKED_2X2_FLOAT32,\n  PACKED_2X2_FLOAT16\n}\n\nexport interface TextureData {\n  // Required.\n  shape: number[];\n  dtype: DataType;\n\n  // Optional.\n  values?: DataValues;\n  texture?: WebGLTexture;\n  // For complex numbers, the real and imaginary parts are stored as their own\n  // individual tensors, with a parent joining the two with the\n  // complexTensors field. When this is defined, texture will be null.\n  complexTensors?: {real: Tensor, imag: Tensor};\n  /** [rows, columns] shape of the texture. */\n  texShape?: [number, number];\n  usage?: TextureUsage;\n  isPacked?: boolean;\n\n  // Available when the tensor has been sliced.\n  slice?: {\n    // Offset in the 'flat index' space.\n    flatOffset: number;\n    // Used for counting how many sliced tensors point to the same texture.\n    origDataId: DataId;\n  };\n}\n\nexport function getUnpackedMatrixTextureShapeWidthHeight(\n    rows: number, columns: number): [number, number] {\n  return [columns, rows];\n}\n\nexport function getUnpackedArraySizeFromMatrixSize(\n    matrixSize: number, channelsPerTexture: number): number {\n  return matrixSize * channelsPerTexture;\n}\n\nexport function getColorMatrixTextureShapeWidthHeight(\n    rows: number, columns: number): [number, number] {\n  return [columns * 4, rows];\n}\n\n/**\n * Get shape for densely packed RGBA texture.\n */\nexport function getDenseTexShape(shape: number[]): [number, number] {\n  const size = util.sizeFromShape(shape);\n  const texelsNeeded = Math.ceil(size / 4);\n  return util.sizeToSquarishShape(texelsNeeded);\n}\n\nexport function getMatrixSizeFromUnpackedArraySize(\n    unpackedSize: number, channelsPerTexture: number): number {\n  if (unpackedSize % channelsPerTexture !== 0) {\n    throw new Error(\n        `unpackedSize (${unpackedSize}) must be a multiple of ` +\n        `${channelsPerTexture}`);\n  }\n  return unpackedSize / channelsPerTexture;\n}\n\nexport function decodeMatrixFromUnpackedColorRGBAArray(\n    unpackedArray: Float32Array, matrix: Float32Array, channels: number) {\n  const requiredSize = unpackedArray.length * channels / 4;\n  if (matrix.length < requiredSize) {\n    throw new Error(\n        `matrix length (${matrix.length}) must be >= ${requiredSize}`);\n  }\n  let dst = 0;\n  for (let src = 0; src < unpackedArray.length; src += 4) {\n    for (let c = 0; c < channels; c++) {\n      matrix[dst++] = unpackedArray[src + c];\n    }\n  }\n}\n\nexport function getPackedMatrixTextureShapeWidthHeight(\n    rows: number, columns: number): [number, number] {\n  return [\n    Math.max(1, Math.ceil(columns / 2)), Math.max(1, Math.ceil(rows / 2))\n  ];\n}\n\nexport function getPackedRGBAArraySizeFromMatrixShape(\n    rows: number, columns: number): number {\n  const [w, h] = getPackedMatrixTextureShapeWidthHeight(rows, columns);\n  return w * h * 4;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENV} from '../../environment';\nimport {PixelData, TypedArray} from '../../types';\n\nimport {getGlslDifferences} from './glsl_version';\nimport * as tex_util from './tex_util';\nimport * as webgl_util from './webgl_util';\n\nexport interface TextureConfig {\n  internalFormatFloat: number;\n  textureFormatFloat: number;\n  internalFormatPackedHalfFloat: number;\n  internalFormatHalfFloat: number;\n  internalFormatPackedFloat: number;\n\n  // The format to use during a gl.readPixels call.\n  downloadTextureFormat: number;\n  // How many channels need to be unpacked after a gl.readPixels call.\n  downloadUnpackNumChannels: number;\n\n  defaultNumChannels: number;\n  textureTypeHalfFloat: number;\n}\n\nexport function createVertexShader(\n    gl: WebGLRenderingContext, debug: boolean): WebGLShader {\n  const glsl = getGlslDifferences();\n  const vertexShaderSource = `${glsl.version}\n    precision highp float;\n    ${glsl.attribute} vec3 clipSpacePos;\n    ${glsl.attribute} vec2 uv;\n    ${glsl.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;\n  return webgl_util.createVertexShader(gl, debug, vertexShaderSource);\n}\n\nexport function createVertexBuffer(\n    gl: WebGLRenderingContext, debug: boolean): WebGLBuffer {\n  // [x y z u v] * [upper-left, lower-left, upper-right, lower-right]\n  const vertexArray = new Float32Array(\n      [-1, 1, 0, 0, 1, -1, -1, 0, 0, 0, 1, 1, 0, 1, 1, 1, -1, 0, 1, 0]);\n  return webgl_util.createStaticVertexBuffer(gl, debug, vertexArray);\n}\n\nexport function createIndexBuffer(\n    gl: WebGLRenderingContext, debug: boolean): WebGLBuffer {\n  // OpenGL (and WebGL) have \"CCW == front\" winding\n  const triangleVertexIndices = new Uint16Array([0, 1, 2, 2, 1, 3]);\n  return webgl_util.createStaticIndexBuffer(gl, debug, triangleVertexIndices);\n}\n\nexport function getTextureConfig(\n    // tslint:disable-next-line:no-any\n    gl: WebGLRenderingContext, textureHalfFloatExtension?: any): TextureConfig {\n  // tslint:disable-next-line:no-any\n  const glany = gl as any;\n\n  let internalFormatFloat: number;\n  let internalFormatHalfFloat: number;\n  let internalFormatPackedHalfFloat: number;\n  let internalFormatPackedFloat: number;\n  let textureFormatFloat: number;\n\n  let downloadTextureFormat: number;\n  let downloadUnpackNumChannels: number;\n\n  let defaultNumChannels: number;\n  let textureTypeHalfFloat: number;\n\n  if (ENV.getNumber('WEBGL_VERSION') === 2) {\n    internalFormatFloat = glany.R32F;\n    internalFormatHalfFloat = glany.R16F;\n    internalFormatPackedHalfFloat = glany.RGBA16F;\n    internalFormatPackedFloat = glany.RGBA32F;\n    textureFormatFloat = glany.RED;\n    downloadUnpackNumChannels = 4;\n    defaultNumChannels = 1;\n    textureTypeHalfFloat = glany.HALF_FLOAT;\n  } else {\n    internalFormatFloat = gl.RGBA;\n    internalFormatHalfFloat = gl.RGBA;\n    internalFormatPackedHalfFloat = gl.RGBA;\n    internalFormatPackedFloat = glany.RGBA;\n    textureFormatFloat = gl.RGBA;\n    downloadUnpackNumChannels = 4;\n    defaultNumChannels = 4;\n    textureTypeHalfFloat = textureHalfFloatExtension != null ?\n        textureHalfFloatExtension.HALF_FLOAT_OES :\n        null;\n  }\n  downloadTextureFormat = gl.RGBA;\n\n  return {\n    internalFormatFloat,\n    internalFormatHalfFloat,\n    internalFormatPackedHalfFloat,\n    internalFormatPackedFloat,\n    textureFormatFloat,\n    downloadTextureFormat,\n    downloadUnpackNumChannels,\n    defaultNumChannels,\n    textureTypeHalfFloat\n  };\n}\n\nfunction createAndConfigureTexture(\n    gl: WebGLRenderingContext, debug: boolean, width: number, height: number,\n    internalFormat: number, textureFormat: number,\n    textureType: number): WebGLTexture {\n  webgl_util.validateTextureSize(width, height);\n  const texture = webgl_util.createTexture(gl, debug);\n\n  const tex2d = gl.TEXTURE_2D;\n  webgl_util.callAndCheck(gl, debug, () => gl.bindTexture(tex2d, texture));\n  webgl_util.callAndCheck(\n      gl, debug,\n      () => gl.texParameteri(tex2d, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE));\n  webgl_util.callAndCheck(\n      gl, debug,\n      () => gl.texParameteri(tex2d, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE));\n  webgl_util.callAndCheck(\n      gl, debug,\n      () => gl.texParameteri(tex2d, gl.TEXTURE_MIN_FILTER, gl.NEAREST));\n  webgl_util.callAndCheck(\n      gl, debug,\n      () => gl.texParameteri(tex2d, gl.TEXTURE_MAG_FILTER, gl.NEAREST));\n  webgl_util.callAndCheck(\n      gl, debug,\n      () => gl.texImage2D(\n          tex2d, 0, internalFormat, width, height, 0, textureFormat,\n          textureType, null));\n  webgl_util.callAndCheck(gl, debug, () => gl.bindTexture(gl.TEXTURE_2D, null));\n  return texture;\n}\n\nexport function createFloat32MatrixTexture(\n    gl: WebGLRenderingContext, debug: boolean, rows: number, columns: number,\n    textureConfig: TextureConfig): WebGLTexture {\n  const [width, height] =\n      tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns);\n  return createAndConfigureTexture(\n      gl, debug, width, height, textureConfig.internalFormatFloat,\n      textureConfig.textureFormatFloat, gl.FLOAT);\n}\n\nexport function createFloat16MatrixTexture(\n    gl: WebGLRenderingContext, debug: boolean, rows: number, columns: number,\n    textureConfig: TextureConfig): WebGLTexture {\n  const [width, height] =\n      tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns);\n  return createAndConfigureTexture(\n      gl, debug, width, height, textureConfig.internalFormatHalfFloat,\n      textureConfig.textureFormatFloat, textureConfig.textureTypeHalfFloat);\n}\n\nexport function createUnsignedBytesMatrixTexture(\n    gl: WebGLRenderingContext, debug: boolean, rows: number, columns: number,\n    textureConfig: TextureConfig): WebGLTexture {\n  const [width, height] =\n      tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns);\n  return createAndConfigureTexture(\n      gl, debug, width, height, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE);\n}\n\nexport function createPackedMatrixTexture(\n    gl: WebGLRenderingContext, debug: boolean, rows: number, columns: number,\n    textureConfig: TextureConfig): WebGLTexture {\n  const [width, height] =\n      tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns);\n  return createAndConfigureTexture(\n      gl, debug, width, height, textureConfig.internalFormatPackedFloat,\n      gl.RGBA, gl.FLOAT);\n}\n\nexport function createFloat16PackedMatrixTexture(\n    gl: WebGLRenderingContext, debug: boolean, rows: number, columns: number,\n    textureConfig: TextureConfig): WebGLTexture {\n  const [width, height] =\n      tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns);\n  return createAndConfigureTexture(\n      gl, debug, width, height, textureConfig.internalFormatPackedHalfFloat,\n      gl.RGBA, textureConfig.textureTypeHalfFloat);\n}\n\nexport function bindVertexProgramAttributeStreams(\n    gl: WebGLRenderingContext, debug: boolean, program: WebGLProgram,\n    vertexBuffer: WebGLBuffer): boolean {\n  const posOffset = 0;               // x is the first buffer element\n  const uvOffset = 3 * 4;            // uv comes after [x y z]\n  const stride = (3 * 4) + (2 * 4);  // xyz + uv, each entry is 4-byte float.\n  webgl_util.callAndCheck(\n      gl, debug, () => gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer));\n  const success = webgl_util.bindVertexBufferToProgramAttribute(\n      gl, debug, program, 'clipSpacePos', vertexBuffer, 3, stride, posOffset);\n  return success &&\n      webgl_util.bindVertexBufferToProgramAttribute(\n          gl, debug, program, 'uv', vertexBuffer, 2, stride, uvOffset);\n}\n\nexport function uploadDenseMatrixToTexture(\n    gl: WebGLRenderingContext, debug: boolean, texture: WebGLTexture,\n    width: number, height: number, data: TypedArray,\n    textureConfig: TextureConfig) {\n  webgl_util.callAndCheck(\n      gl, debug, () => gl.bindTexture(gl.TEXTURE_2D, texture));\n\n  let dataForUpload: TypedArray, texelDataType: number, internalFormat: number;\n  if (data instanceof Uint8Array) {\n    dataForUpload = new Uint8Array(width * height * 4);\n    texelDataType = gl.UNSIGNED_BYTE;\n    internalFormat = gl.RGBA;\n  } else {\n    dataForUpload = new Float32Array(width * height * 4);\n    texelDataType = gl.FLOAT;\n    internalFormat = textureConfig.internalFormatPackedFloat;\n  }\n\n  dataForUpload.set(data);\n\n  webgl_util.callAndCheck(\n      gl, debug,\n      () => gl.texImage2D(\n          gl.TEXTURE_2D, 0, internalFormat, width, height, 0, gl.RGBA,\n          texelDataType, dataForUpload));\n\n  webgl_util.callAndCheck(gl, debug, () => gl.bindTexture(gl.TEXTURE_2D, null));\n}\n\nexport function uploadPixelDataToTexture(\n    gl: WebGLRenderingContext, debug: boolean, texture: WebGLTexture,\n    pixels: PixelData|ImageData|HTMLImageElement|HTMLCanvasElement|\n    HTMLVideoElement) {\n  webgl_util.callAndCheck(\n      gl, debug, () => gl.bindTexture(gl.TEXTURE_2D, texture));\n  if ((pixels as PixelData).data instanceof Uint8Array) {\n    webgl_util.callAndCheck(\n        gl, debug,\n        () => gl.texImage2D(\n            gl.TEXTURE_2D, 0, gl.RGBA, pixels.width, pixels.height, 0, gl.RGBA,\n            gl.UNSIGNED_BYTE, (pixels as PixelData).data));\n  } else {\n    webgl_util.callAndCheck(\n        gl, debug,\n        () => gl.texImage2D(\n            gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE,\n            pixels as ImageData | HTMLImageElement | HTMLCanvasElement |\n                HTMLVideoElement));\n  }\n\n  webgl_util.callAndCheck(gl, debug, () => gl.bindTexture(gl.TEXTURE_2D, null));\n}\n\nexport function createBufferFromOutputTexture(\n    gl2: WebGL2RenderingContext, debug: boolean, rows: number, columns: number,\n    textureConfig: TextureConfig): WebGLBuffer {\n  // Create and bind the buffer.\n  const buffer = gl2.createBuffer();\n  webgl_util.callAndCheck(\n      gl2, debug, () => gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer));\n\n  // Initialize the buffer to the size of the texture in bytes.\n  const bytesPerFloat = 4;\n  const valuesPerTexel = 4;\n  const bufferSizeBytes = bytesPerFloat * valuesPerTexel * rows * columns;\n\n  webgl_util.callAndCheck(\n      gl2, debug,\n      () => gl2.bufferData(\n          gl2.PIXEL_PACK_BUFFER, bufferSizeBytes, gl2.STREAM_READ));\n\n  // Enqueue a command on the GPU command queue to copy of texture into the\n  // buffer.\n  webgl_util.callAndCheck(\n      gl2, debug,\n      () => gl2.readPixels(0, 0, columns, rows, gl2.RGBA, gl2.FLOAT, 0));\n\n  webgl_util.callAndCheck(\n      gl2, debug, () => gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, null));\n\n  return buffer;\n}\n\nexport function downloadFloat32MatrixFromBuffer(\n    gl: WebGLRenderingContext, buffer: WebGLBuffer,\n    size: number): Float32Array {\n  const gl2 = gl as WebGL2RenderingContext;\n\n  const downloadTarget = new Float32Array(size);\n\n  gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer);\n  gl2.getBufferSubData(gl2.PIXEL_PACK_BUFFER, 0, downloadTarget);\n  gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, null);\n\n  return downloadTarget;\n}\n\nexport function downloadByteEncodedFloatMatrixFromOutputTexture(\n    gl: WebGLRenderingContext, debug: boolean, rows: number, columns: number,\n    textureConfig: TextureConfig) {\n  const [w, h] =\n      tex_util.getUnpackedMatrixTextureShapeWidthHeight(rows, columns);\n\n  const numChannels = 4;\n  const downloadTarget = new Uint8Array(\n      tex_util.getUnpackedArraySizeFromMatrixSize(rows * columns, numChannels));\n\n  webgl_util.callAndCheck(\n      gl, debug,\n      () => gl.readPixels(\n          0, 0, w, h, textureConfig.downloadTextureFormat, gl.UNSIGNED_BYTE,\n          downloadTarget));\n\n  // By wrapping the buffer in a Float32Array, we use native browser IEEE 754\n  // decoding of the 4 bytes that back each 32 bit float.\n  return new Float32Array(downloadTarget.buffer);\n}\n\nexport function downloadPackedMatrixFromBuffer(\n    gl: WebGLRenderingContext, buffer: WebGLBuffer, batch: number, rows: number,\n    cols: number, physicalRows: number, physicalCols: number,\n    textureConfig: TextureConfig): Float32Array {\n  const gl2 = gl as WebGL2RenderingContext;\n\n  const downloadTarget =\n      new Float32Array(tex_util.getPackedRGBAArraySizeFromMatrixShape(\n          physicalRows, physicalCols));\n\n  gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, buffer);\n  gl2.getBufferSubData(gl2.PIXEL_PACK_BUFFER, 0, downloadTarget);\n  gl2.bindBuffer(gl2.PIXEL_PACK_BUFFER, null);\n\n  return downloadTarget;\n}\n\nexport function downloadMatrixFromPackedOutputTexture(\n    gl: WebGLRenderingContext, debug: boolean, physicalRows: number,\n    physicalCols: number): Float32Array {\n  const packedRGBA = new Float32Array(physicalRows * physicalCols * 4);\n  webgl_util.callAndCheck(\n      gl, debug,\n      () => gl.readPixels(\n          0, 0, physicalCols, physicalRows, gl.RGBA, gl.FLOAT, packedRGBA));\n\n  return packedRGBA;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENV} from '../../environment';\nimport {PixelData, TypedArray} from '../../types';\nimport * as util from '../../util';\n\nimport {getWebGLContext, setWebGLContext} from './canvas_util';\nimport * as gpgpu_util from './gpgpu_util';\nimport {TextureConfig} from './gpgpu_util';\nimport * as tex_util from './tex_util';\nimport {WebGL1DisjointQueryTimerExtension, WebGL2DisjointQueryTimerExtension} from './webgl_types';\nimport * as webgl_util from './webgl_util';\n\nexport interface FenceContext {\n  query: WebGLQuery|WebGLSync;\n  isFencePassed(): boolean;\n}\n\nexport class GPGPUContext {\n  gl: WebGLRenderingContext;\n  textureFloatExtension: {};\n  textureHalfFloatExtension: {};\n  colorBufferFloatExtension: {};\n  colorBufferHalfFloatExtension: {};\n  disjointQueryTimerExtension: WebGL2DisjointQueryTimerExtension|\n      WebGL1DisjointQueryTimerExtension;\n  vertexBuffer: WebGLBuffer;\n  indexBuffer: WebGLBuffer;\n  framebuffer: WebGLFramebuffer;\n  outputTexture: WebGLTexture|null = null;\n  program: WebGLProgram|null = null;\n  private disposed = false;\n  private disjoint: boolean;\n  private textureConfig: TextureConfig;\n\n  constructor(gl?: WebGLRenderingContext) {\n    const glVersion = ENV.getNumber('WEBGL_VERSION');\n    if (gl != null) {\n      this.gl = gl;\n      setWebGLContext(glVersion, gl);\n    } else {\n      this.gl = getWebGLContext(glVersion);\n    }\n    // WebGL 2.0 enables texture floats without an extension.\n    if (ENV.getNumber('WEBGL_VERSION') === 1) {\n      this.textureFloatExtension = webgl_util.getExtensionOrThrow(\n          this.gl, this.debug, 'OES_texture_float');\n      this.colorBufferFloatExtension =\n          this.gl.getExtension('WEBGL_color_buffer_float');\n\n      if (!ENV.getBool('WEBGL_RENDER_FLOAT32_ENABLED')) {\n        this.textureHalfFloatExtension = webgl_util.getExtensionOrThrow(\n            this.gl, this.debug, 'OES_texture_half_float');\n        this.colorBufferHalfFloatExtension =\n            this.gl.getExtension('EXT_color_buffer_half_float');\n      }\n    } else {\n      this.colorBufferFloatExtension = webgl_util.getExtensionOrThrow(\n          this.gl, this.debug, 'EXT_color_buffer_float');\n    }\n\n    this.vertexBuffer = gpgpu_util.createVertexBuffer(this.gl, this.debug);\n    this.indexBuffer = gpgpu_util.createIndexBuffer(this.gl, this.debug);\n    this.framebuffer = webgl_util.createFramebuffer(this.gl, this.debug);\n\n    this.textureConfig =\n        gpgpu_util.getTextureConfig(this.gl, this.textureHalfFloatExtension);\n  }\n\n  private get debug(): boolean {\n    return ENV.getBool('DEBUG');\n  }\n\n  public dispose() {\n    if (this.disposed) {\n      return;\n    }\n    if (this.program != null) {\n      console.warn(\n          'Disposing a GPGPUContext that still has a bound WebGLProgram.' +\n          ' This is probably a resource leak, delete the program with ' +\n          'GPGPUContext.deleteProgram before disposing.');\n    }\n    if (this.outputTexture != null) {\n      console.warn(\n          'Disposing a GPGPUContext that still has a bound output matrix ' +\n          'texture.  This is probably a resource leak, delete the output ' +\n          'matrix texture with GPGPUContext.deleteMatrixTexture before ' +\n          'disposing.');\n    }\n    const gl = this.gl;\n    webgl_util.callAndCheck(gl, this.debug, () => gl.finish());\n    webgl_util.callAndCheck(\n        gl, this.debug, () => gl.bindFramebuffer(gl.FRAMEBUFFER, null));\n    webgl_util.callAndCheck(\n        gl, this.debug, () => gl.deleteFramebuffer(this.framebuffer));\n    webgl_util.callAndCheck(\n        gl, this.debug, () => gl.bindBuffer(gl.ARRAY_BUFFER, null));\n    webgl_util.callAndCheck(\n        gl, this.debug, () => gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null));\n    webgl_util.callAndCheck(\n        gl, this.debug, () => gl.deleteBuffer(this.indexBuffer));\n    this.disposed = true;\n  }\n\n  public createFloat32MatrixTexture(rows: number, columns: number):\n      WebGLTexture {\n    this.throwIfDisposed();\n    return gpgpu_util.createFloat32MatrixTexture(\n        this.gl, this.debug, rows, columns, this.textureConfig);\n  }\n\n  public createFloat16MatrixTexture(rows: number, columns: number):\n      WebGLTexture {\n    this.throwIfDisposed();\n    return gpgpu_util.createFloat16MatrixTexture(\n        this.gl, this.debug, rows, columns, this.textureConfig);\n  }\n\n  public createUnsignedBytesMatrixTexture(rows: number, columns: number):\n      WebGLTexture {\n    this.throwIfDisposed();\n    return gpgpu_util.createUnsignedBytesMatrixTexture(\n        this.gl, this.debug, rows, columns, this.textureConfig);\n  }\n\n  public uploadPixelDataToTexture(\n      texture: WebGLTexture,\n      pixels: PixelData|ImageData|HTMLImageElement|HTMLCanvasElement) {\n    this.throwIfDisposed();\n    gpgpu_util.uploadPixelDataToTexture(this.gl, this.debug, texture, pixels);\n  }\n\n  public uploadDenseMatrixToTexture(\n      texture: WebGLTexture, width: number, height: number, data: TypedArray) {\n    this.throwIfDisposed();\n    gpgpu_util.uploadDenseMatrixToTexture(\n        this.gl, this.debug, texture, width, height, data, this.textureConfig);\n  }\n\n  public createFloat16PackedMatrixTexture(rows: number, columns: number):\n      WebGLTexture {\n    this.throwIfDisposed();\n    return gpgpu_util.createFloat16PackedMatrixTexture(\n        this.gl, this.debug, rows, columns, this.textureConfig);\n  }\n\n  public createPackedMatrixTexture(rows: number, columns: number):\n      WebGLTexture {\n    this.throwIfDisposed();\n    return gpgpu_util.createPackedMatrixTexture(\n        this.gl, this.debug, rows, columns, this.textureConfig);\n  }\n\n  public deleteMatrixTexture(texture: WebGLTexture) {\n    this.throwIfDisposed();\n    if (this.outputTexture === texture) {\n      webgl_util.unbindColorTextureFromFramebuffer(\n          this.gl, this.debug, this.framebuffer);\n      this.outputTexture = null;\n    }\n    webgl_util.callAndCheck(\n        this.gl, this.debug, () => this.gl.deleteTexture(texture));\n  }\n\n  public downloadByteEncodedFloatMatrixFromOutputTexture(\n      texture: WebGLTexture, rows: number, columns: number): Float32Array {\n    return this.downloadMatrixDriver(\n        texture,\n        () => gpgpu_util.downloadByteEncodedFloatMatrixFromOutputTexture(\n            this.gl, this.debug, rows, columns, this.textureConfig));\n  }\n\n  public downloadPackedMatrixFromBuffer(\n      buffer: WebGLBuffer, batch: number, rows: number, columns: number,\n      physicalRows: number, physicalCols: number): Float32Array {\n    return gpgpu_util.downloadPackedMatrixFromBuffer(\n        this.gl, buffer, batch, rows, columns, physicalRows, physicalCols,\n        this.textureConfig);\n  }\n\n  public downloadFloat32MatrixFromBuffer(buffer: WebGLBuffer, size: number):\n      Float32Array {\n    return gpgpu_util.downloadFloat32MatrixFromBuffer(this.gl, buffer, size);\n  }\n\n  public createBufferFromTexture(\n      texture: WebGLTexture, rows: number, columns: number): WebGLBuffer {\n    this.bindTextureToFrameBuffer(texture);\n    const result = gpgpu_util.createBufferFromOutputTexture(\n        this.gl as WebGL2RenderingContext, this.debug, rows, columns,\n        this.textureConfig);\n    this.unbindTextureToFrameBuffer();\n    return result;\n  }\n\n  public createAndWaitForFence(): Promise<void> {\n    const fenceContext = this.createFence(this.gl);\n    return this.pollFence(fenceContext);\n  }\n\n  private createFence(gl: WebGLRenderingContext): FenceContext {\n    let query: WebGLQuery|WebGLSync;\n    let isFencePassed: () => boolean;\n\n    if (ENV.getBool('WEBGL_FENCE_API_ENABLED')) {\n      const gl2 = gl as WebGL2RenderingContext;\n\n      const sync = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n      gl.flush();\n\n      isFencePassed = () => {\n        const status = gl2.clientWaitSync(sync, 0, 0);\n        return status === gl2.ALREADY_SIGNALED ||\n            status === gl2.CONDITION_SATISFIED;\n      };\n\n      query = sync;\n    } else if (\n        ENV.getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0) {\n      query = this.beginQuery();\n      this.endQuery();\n      isFencePassed = () => this.isQueryAvailable(\n          query, ENV.getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION'));\n    } else {\n      // If we have no way to fence, return true immediately. This will fire in\n      // WebGL 1.0 when there is no disjoint query timer. In this case, because\n      // the fence passes immediately, we'll immediately ask for a download of\n      // the texture, which will cause the UI thread to hang.\n      isFencePassed = () => true;\n    }\n\n    return {query, isFencePassed};\n  }\n\n  public downloadMatrixFromPackedTexture(\n      texture: WebGLTexture, physicalRows: number,\n      physicalCols: number): Float32Array {\n    return this.downloadMatrixDriver(\n        texture,\n        () => gpgpu_util.downloadMatrixFromPackedOutputTexture(\n            this.gl, this.debug, physicalRows, physicalCols));\n  }\n\n  private vertexAttrsAreBound = false;\n\n  public createProgram(fragmentShaderSource: string): WebGLProgram {\n    this.throwIfDisposed();\n    const gl = this.gl;\n    const fragmentShader: WebGLShader =\n        webgl_util.createFragmentShader(gl, this.debug, fragmentShaderSource);\n    const vertexShader: WebGLShader =\n        gpgpu_util.createVertexShader(gl, this.debug);\n    const program: WebGLProgram = webgl_util.createProgram(\n        gl,\n        this.debug,\n    );\n    webgl_util.callAndCheck(\n        gl, this.debug, () => gl.attachShader(program, vertexShader));\n    webgl_util.callAndCheck(\n        gl, this.debug, () => gl.attachShader(program, fragmentShader));\n    webgl_util.linkProgram(gl, this.debug, program);\n    if (this.debug) {\n      webgl_util.validateProgram(gl, this.debug, program);\n    }\n    if (!this.vertexAttrsAreBound) {\n      this.setProgram(program);\n      this.vertexAttrsAreBound = gpgpu_util.bindVertexProgramAttributeStreams(\n          gl, this.debug, this.program, this.vertexBuffer);\n    }\n    return program;\n  }\n\n  public deleteProgram(program: WebGLProgram) {\n    this.throwIfDisposed();\n    if (program === this.program) {\n      this.program = null;\n    }\n    if (program != null) {\n      webgl_util.callAndCheck(\n          this.gl, this.debug, () => this.gl.deleteProgram(program));\n    }\n  }\n\n  public setProgram(program: WebGLProgram|null) {\n    this.throwIfDisposed();\n    this.program = program;\n    if ((this.program != null) && this.debug) {\n      webgl_util.validateProgram(this.gl, this.debug, this.program);\n    }\n    webgl_util.callAndCheck(\n        this.gl, this.debug, () => this.gl.useProgram(program));\n  }\n\n  public getUniformLocation(\n      program: WebGLProgram, uniformName: string,\n      shouldThrow = true): WebGLUniformLocation {\n    this.throwIfDisposed();\n    if (shouldThrow) {\n      return webgl_util.getProgramUniformLocationOrThrow(\n          this.gl, this.debug, program, uniformName);\n    } else {\n      return webgl_util.getProgramUniformLocation(\n          this.gl, program, uniformName);\n    }\n  }\n\n  public getAttributeLocation(program: WebGLProgram, attribute: string):\n      number {\n    this.throwIfDisposed();\n    return webgl_util.callAndCheck(\n        this.gl, this.debug,\n        () => this.gl.getAttribLocation(program, attribute));\n  }\n\n  public getUniformLocationNoThrow(program: WebGLProgram, uniformName: string):\n      WebGLUniformLocation {\n    this.throwIfDisposed();\n    return this.gl.getUniformLocation(program, uniformName);\n  }\n\n  public setInputMatrixTexture(\n      inputMatrixTexture: WebGLTexture, uniformLocation: WebGLUniformLocation,\n      textureUnit: number) {\n    this.throwIfDisposed();\n    this.throwIfNoProgram();\n    webgl_util.bindTextureToProgramUniformSampler(\n        this.gl, this.debug, this.program, inputMatrixTexture, uniformLocation,\n        textureUnit);\n  }\n\n  public setOutputMatrixTexture(\n      outputMatrixTexture: WebGLTexture, rows: number, columns: number) {\n    this.setOutputMatrixTextureDriver(outputMatrixTexture, columns, rows);\n  }\n\n  public setOutputPackedMatrixTexture(\n      outputPackedMatrixTexture: WebGLTexture, rows: number, columns: number) {\n    this.throwIfDisposed();\n    const [width, height] =\n        tex_util.getPackedMatrixTextureShapeWidthHeight(rows, columns);\n    this.setOutputMatrixTextureDriver(outputPackedMatrixTexture, width, height);\n  }\n\n  public setOutputMatrixWriteRegion(\n      startRow: number, numRows: number, startColumn: number,\n      numColumns: number) {\n    this.setOutputMatrixWriteRegionDriver(\n        startColumn, startRow, numColumns, numRows);\n  }\n\n  public setOutputPackedMatrixWriteRegion(\n      startRow: number, numRows: number, startColumn: number,\n      numColumns: number) {\n    throw new Error('setOutputPackedMatrixWriteRegion not implemented.');\n  }\n\n  public debugValidate() {\n    if (this.program != null) {\n      webgl_util.validateProgram(this.gl, this.debug, this.program);\n    }\n    webgl_util.validateFramebuffer(this.gl);\n  }\n\n  public executeProgram() {\n    this.throwIfDisposed();\n    this.throwIfNoProgram();\n    const gl = this.gl;\n    if (this.debug) {\n      this.debugValidate();\n    }\n    webgl_util.callAndCheck(\n        gl, this.debug,\n        () => gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0));\n  }\n\n  public blockUntilAllProgramsCompleted() {\n    this.throwIfDisposed();\n    webgl_util.callAndCheck(this.gl, this.debug, () => this.gl.finish());\n  }\n\n  private getQueryTimerExtension(): WebGL1DisjointQueryTimerExtension\n      |WebGL2DisjointQueryTimerExtension {\n    if (this.disjointQueryTimerExtension == null) {\n      this.disjointQueryTimerExtension =\n          webgl_util.getExtensionOrThrow(\n              this.gl, this.debug,\n              ENV.getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') ===\n                      2 ?\n                  'EXT_disjoint_timer_query_webgl2' :\n                  'EXT_disjoint_timer_query') as\n              WebGL1DisjointQueryTimerExtension |\n          WebGL2DisjointQueryTimerExtension;\n    }\n    return this.disjointQueryTimerExtension;\n  }\n\n  private getQueryTimerExtensionWebGL2(): WebGL2DisjointQueryTimerExtension {\n    return this.getQueryTimerExtension();\n  }\n\n  private getQueryTimerExtensionWebGL1(): WebGL1DisjointQueryTimerExtension {\n    return this.getQueryTimerExtension() as WebGL1DisjointQueryTimerExtension;\n  }\n\n  beginQuery(): WebGLQuery {\n    if (ENV.getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.getQueryTimerExtensionWebGL2();\n\n      const query = gl2.createQuery();\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n      return query;\n    }\n    const ext = this.getQueryTimerExtensionWebGL1();\n    const query = ext.createQueryEXT() as WebGLQuery;\n    ext.beginQueryEXT(ext.TIME_ELAPSED_EXT, query);\n    return query;\n  }\n\n  endQuery() {\n    if (ENV.getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.getQueryTimerExtensionWebGL2();\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\n      return;\n    }\n    const ext = this.getQueryTimerExtensionWebGL1();\n    ext.endQueryEXT(ext.TIME_ELAPSED_EXT);\n  }\n\n  public async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\n    await util.repeatedTry(\n        () => this.disposed ||  // while testing contexts are created / disposed\n                                // in rapid succession, so without this check we\n                                // may poll for the query timer indefinitely\n            this.isQueryAvailable(\n                query,\n                ENV.getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') as\n                    number));\n    return this.getQueryTime(\n        query, ENV.getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION'));\n  }\n\n  private getQueryTime(query: WebGLQuery, queryTimerVersion: number): number {\n    if (queryTimerVersion === 0) {\n      return null;\n    }\n\n    if (queryTimerVersion === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n\n      const timeElapsedNanos = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n      // Return milliseconds.\n      return timeElapsedNanos / 1000000;\n    } else {\n      const ext = this.getQueryTimerExtensionWebGL1();\n\n      const timeElapsedNanos =\n          ext.getQueryObjectEXT(query, ext.QUERY_RESULT_EXT);\n      // Return milliseconds.\n      return timeElapsedNanos / 1000000;\n    }\n  }\n\n  private isQueryAvailable(query: WebGLQuery, queryTimerVersion: number):\n      boolean {\n    if (queryTimerVersion === 0) {\n      return true;\n    }\n\n    if (queryTimerVersion === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.getQueryTimerExtensionWebGL2();\n\n      const available =\n          gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n      if (this.disjoint == null) {\n        this.disjoint = this.gl.getParameter(ext.GPU_DISJOINT_EXT);\n      }\n\n      return available && !this.disjoint;\n    } else {\n      const ext = this.getQueryTimerExtensionWebGL1();\n\n      const available =\n          ext.getQueryObjectEXT(query, ext.QUERY_RESULT_AVAILABLE_EXT);\n      if (this.disjoint == null) {\n        this.disjoint = this.gl.getParameter(ext.GPU_DISJOINT_EXT);\n      }\n\n      return available && !this.disjoint;\n    }\n  }\n\n  pollFence(fenceContext: FenceContext) {\n    return new Promise<void>(resolve => {\n      this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n    });\n  }\n\n  private itemsToPoll: PollItem[] = [];\n\n  pollItems(): void {\n    // Find the last query that has finished.\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n    for (let i = 0; i <= index; ++i) {\n      const {resolveFn} = this.itemsToPoll[i];\n      resolveFn();\n    }\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n  }\n\n  private addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\n    this.itemsToPoll.push({isDoneFn, resolveFn});\n    if (this.itemsToPoll.length > 1) {\n      // We already have a running loop that polls.\n      return;\n    }\n    // Start a new loop that polls.\n    util.repeatedTry(() => {\n      this.pollItems();\n      // End the loop if no more items to poll.\n      return this.itemsToPoll.length === 0;\n    });\n  }\n\n  private bindTextureToFrameBuffer(texture: WebGLTexture) {\n    this.throwIfDisposed();\n    webgl_util.bindColorTextureToFramebuffer(\n        this.gl, this.debug, texture, this.framebuffer);\n    if (this.debug) {\n      webgl_util.validateFramebuffer(this.gl);\n    }\n  }\n\n  private unbindTextureToFrameBuffer() {\n    if (this.outputTexture != null) {\n      webgl_util.bindColorTextureToFramebuffer(\n          this.gl, this.debug, this.outputTexture, this.framebuffer);\n      if (this.debug) {\n        webgl_util.validateFramebuffer(this.gl);\n      }\n    } else {\n      webgl_util.unbindColorTextureFromFramebuffer(\n          this.gl, this.debug, this.framebuffer);\n    }\n  }\n\n  private downloadMatrixDriver(\n      texture: WebGLTexture,\n      downloadAndDecode: () => Float32Array): Float32Array {\n    this.bindTextureToFrameBuffer(texture);\n    const result = downloadAndDecode();\n    this.unbindTextureToFrameBuffer();\n\n    return result;\n  }\n\n  private setOutputMatrixTextureDriver(\n      outputMatrixTextureMaybePacked: WebGLTexture, width: number,\n      height: number) {\n    this.throwIfDisposed();\n    const gl = this.gl;\n    webgl_util.bindColorTextureToFramebuffer(\n        gl, this.debug, outputMatrixTextureMaybePacked, this.framebuffer);\n    if (this.debug) {\n      webgl_util.validateFramebuffer(gl);\n    }\n    this.outputTexture = outputMatrixTextureMaybePacked;\n    webgl_util.callAndCheck(\n        gl, this.debug, () => gl.viewport(0, 0, width, height));\n    webgl_util.callAndCheck(\n        gl, this.debug, () => gl.scissor(0, 0, width, height));\n  }\n\n  private setOutputMatrixWriteRegionDriver(\n      x: number, y: number, width: number, height: number) {\n    this.throwIfDisposed();\n    webgl_util.callAndCheck(\n        this.gl, this.debug, () => this.gl.scissor(x, y, width, height));\n  }\n\n  private throwIfDisposed() {\n    if (this.disposed) {\n      throw new Error('Attempted to use disposed GPGPUContext.');\n    }\n  }\n\n  private throwIfNoProgram() {\n    if (this.program == null) {\n      throw new Error('No GPU program is currently set.');\n    }\n  }\n}\n\ntype PollItem = {\n  isDoneFn: () => boolean,\n  resolveFn: () => void\n};\n\n/**\n * Finds the index of the last true element using linear search.\n * Note: We can't do binary search because Chrome expects us to explicitly\n * test all fences before download:\n * https://github.com/tensorflow/tfjs/issues/1145\n */\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\n  let i = 0;\n  for (; i < arr.length; ++i) {\n    const isDone = arr[i]();\n    if (!isDone) {\n      break;\n    }\n  }\n  return i - 1;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENV} from '../../environment';\nimport {Tensor} from '../../tensor';\nimport {TypedArray} from '../../types';\nimport * as util from '../../util';\n\nimport {GPGPUContext} from './gpgpu_context';\nimport * as shader_compiler from './shader_compiler';\nimport {InputInfo, ShapeInfo} from './shader_compiler';\nimport {TextureData} from './tex_util';\n\nexport interface GPGPUProgram {\n  variableNames: string[];\n  outputShape: number[];\n  userCode: string;\n  usesPackedTextures?: boolean;\n}\n\nexport interface GPGPUBinary {\n  webGLProgram: WebGLProgram;\n  program: GPGPUProgram;\n  uniformLocations: {[name: string]: WebGLUniformLocation};\n  source: string;\n  inShapeInfos: ShapeInfo[];\n  outShapeInfo: ShapeInfo;\n  infLoc: WebGLUniformLocation;\n  nanLoc: WebGLUniformLocation;\n}\n\nexport interface TensorData {\n  shape: number[];\n  texData: TextureData;\n  isUniform: boolean;\n  // Available when we decide to upload as uniform instead of texture.\n  uniformValues?: TypedArray;\n}\n\nexport function compileProgram<T extends Tensor, K extends Tensor>(\n    gpgpu: GPGPUContext, program: GPGPUProgram, inputs: TensorData[],\n    output: TensorData): GPGPUBinary {\n  const userCode = program.userCode;\n  const inputInfos: InputInfo[] = inputs.map((input, i) => {\n    const shapeInfo: ShapeInfo = {\n      logicalShape: input.shape,\n      texShape: input.isUniform ? null : input.texData.texShape,\n      isUniform: input.isUniform,\n      isPacked: input.isUniform ? false : input.texData.isPacked,\n      flatOffset: null\n    };\n    if (input.texData != null && input.texData.slice != null &&\n        input.texData.slice.flatOffset > 0) {\n      shapeInfo.flatOffset = input.texData.slice.flatOffset;\n    }\n    return {name: program.variableNames[i], shapeInfo};\n  });\n  const inShapeInfos = inputInfos.map(x => x.shapeInfo);\n  const outShapeInfo: ShapeInfo = {\n    logicalShape: output.shape,\n    texShape: output.texData.texShape,\n    isUniform: false,\n    isPacked: output.texData.isPacked,\n    flatOffset: null\n  };\n  const source = shader_compiler.makeShader(\n      inputInfos, outShapeInfo, userCode, program.usesPackedTextures);\n\n  const webGLProgram = gpgpu.createProgram(source);\n\n  // Add special uniforms (NAN, INFINITY)\n  let infLoc: WebGLUniformLocation = null;\n  const nanLoc = gpgpu.getUniformLocation(webGLProgram, 'NAN', false);\n  if (ENV.getNumber('WEBGL_VERSION') === 1) {\n    infLoc = gpgpu.getUniformLocation(webGLProgram, 'INFINITY', false);\n  }\n\n  // Add user-defined uniforms\n  const uniformLocations: {[name: string]: WebGLUniformLocation} = {};\n  for (let i = 0; i < program.variableNames.length; i++) {\n    const varName = program.variableNames[i];\n    const shouldThrow = false;\n    uniformLocations[varName] =\n        gpgpu.getUniformLocation(webGLProgram, varName, shouldThrow);\n    uniformLocations[`offset${varName}`] =\n        gpgpu.getUniformLocation(webGLProgram, `offset${varName}`, shouldThrow);\n  }\n\n  return {\n    program,\n    source,\n    webGLProgram,\n    uniformLocations,\n    inShapeInfos,\n    outShapeInfo,\n    infLoc,\n    nanLoc,\n  };\n}\n\nfunction validateBinaryAndProgram(\n    shapeInfos: ShapeInfo[], inputs: TensorData[]) {\n  if (shapeInfos.length !== inputs.length) {\n    throw Error(\n        `Binary was compiled with ${shapeInfos.length} inputs, but ` +\n        `was executed with ${inputs.length} inputs`);\n  }\n\n  shapeInfos.forEach((s, i) => {\n    const shapeA = s.logicalShape;\n    const input = inputs[i];\n    const shapeB = input.shape;\n\n    if (!util.arraysEqual(shapeA, shapeB)) {\n      throw Error(\n          `Binary was compiled with different shapes than ` +\n          `the current args. Shapes ${shapeA} and ${shapeB} must match`);\n    }\n    // The input is uploaded as uniform.\n    if (s.isUniform && input.isUniform) {\n      return;\n    }\n\n    const texShapeA = s.texShape;\n    const texShapeB = input.isUniform ? null : input.texData.texShape;\n    if (!util.arraysEqual(texShapeA, texShapeB)) {\n      throw Error(\n          `Binary was compiled with different texture shapes than the` +\n          ` current args. Shape ${texShapeA} and ${texShapeB} must match`);\n    }\n  });\n}\n\nexport function runProgram<T extends Tensor, K extends Tensor>(\n    gpgpu: GPGPUContext, binary: GPGPUBinary, inputs: TensorData[],\n    output: TensorData,\n    customSetup?: (gpgpu: GPGPUContext, webGLProgram: WebGLProgram) =>\n        void): void {\n  validateBinaryAndProgram(binary.inShapeInfos, inputs);\n  validateBinaryAndProgram([binary.outShapeInfo], [output]);\n\n  const outTex = output.texData.texture;\n  const outTexShape = output.texData.texShape;\n  if (output.texData.isPacked) {\n    gpgpu.setOutputPackedMatrixTexture(outTex, outTexShape[0], outTexShape[1]);\n  } else {\n    gpgpu.setOutputMatrixTexture(outTex, outTexShape[0], outTexShape[1]);\n  }\n  gpgpu.setProgram(binary.webGLProgram);\n\n  // Set special uniforms (NAN, INFINITY)\n  if (ENV.getNumber('WEBGL_VERSION') === 1) {\n    if (binary.infLoc !== null) {\n      gpgpu.gl.uniform1f(binary.infLoc, Infinity);\n    }\n  }\n  if (binary.nanLoc !== null) {\n    gpgpu.gl.uniform1f(binary.nanLoc, NaN);\n  }\n\n  // Set user-defined inputs\n  inputs.forEach((input, i) => {\n    const varName = binary.program.variableNames[i];\n    const varLoc = binary.uniformLocations[varName];\n    const varOffsetLoc = binary.uniformLocations[`offset${varName}`];\n\n    if (varLoc == null) {\n      // The compiler inferred that this variable is not used in this shader.\n      return;\n    }\n\n    if (input.isUniform) {\n      // Upload the values of the tensor as uniform.\n      if (util.sizeFromShape(input.shape) < 2) {\n        gpgpu.gl.uniform1f(varLoc, input.uniformValues[0]);\n      } else {\n        let vals = input.uniformValues;\n        if (!(vals instanceof Float32Array)) {\n          vals = new Float32Array(vals);\n        }\n        gpgpu.gl.uniform1fv(varLoc, vals);\n      }\n      return;\n    }\n\n    // If the input was sliced, upload the flat offset index.\n    if (input.texData.slice != null && varOffsetLoc != null) {\n      gpgpu.gl.uniform1i(varOffsetLoc, input.texData.slice.flatOffset);\n    }\n\n    gpgpu.setInputMatrixTexture(input.texData.texture, varLoc, i);\n  });\n\n  if (customSetup != null) {\n    customSetup(gpgpu, binary.webGLProgram);\n  }\n  gpgpu.executeProgram();\n}\n\nexport function makeShaderKey(\n    program: GPGPUProgram, inputs: TensorData[], output: TensorData): string {\n  let keyInputs = '';\n  inputs.concat(output).forEach(x => {\n    const hasOffset = x.texData != null && x.texData.slice != null &&\n        x.texData.slice.flatOffset > 0;\n    const texShape = x.isUniform ? 'uniform' : x.texData.texShape;\n    keyInputs += `${x.shape}_${texShape}_${hasOffset}`;\n  });\n  const keyUserCode = program.userCode;\n  let key = program.constructor.name;\n  // Fast string concat. See https://jsperf.com/string-concatenation/14.\n  key += '_' + keyInputs + '_' + keyUserCode;\n  return key;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Conv2DInfo} from '../../ops/conv_util';\nimport {getGlslDifferences} from './glsl_version';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class Im2ColPackedProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  usesPackedTextures = true;\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      outputShape: number[], inputShape: number[], convInfo: Conv2DInfo) {\n    this.outputShape = outputShape;\n\n    const {\n      filterWidth,\n      inChannels,\n      strideWidth,\n      strideHeight,\n      padInfo,\n      outWidth,\n      dilationWidth,\n      dilationHeight\n    } = convInfo;\n    const {left, top} = padInfo;\n    const itemsPerBlockRow = inChannels * filterWidth;\n    const glsl = getGlslDifferences();\n\n    this.userCode = `\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            int blockIndex = rc.y + col;\n            int pos = rc.x + row;\n\n            if(blockIndex >= ${outputShape[1]} || pos >= ${\n        outputShape[0]}) continue;\n\n            int offsetY = int(blockIndex / (${outWidth})) * ${strideHeight} - ${\n        top};\n            int d0 = offsetY + ${dilationHeight} * (pos / ${itemsPerBlockRow});\n\n            if(d0 >= ${inputShape[0]} || d0 < 0) continue;\n\n            int offsetX = int(mod(float(blockIndex), ${outWidth}.) * ${\n        strideWidth}. - ${left}.);\n            int d1 = offsetX + ${dilationWidth} * (int(mod(float(pos), ${\n        itemsPerBlockRow}.) / ${inChannels}.));\n\n            if(d1 >= ${inputShape[1]} || d1 < 0) continue;\n\n            vec2 innerDims = vec2(d1, int(mod(float(pos), ${inChannels}.)));\n            result[row * 2 + col] = getChannel(getA(d0, int(innerDims.x),\n                                              int(innerDims.y)), innerDims);\n          }\n        }\n\n        ${glsl.output} = result;\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class LRNProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[] = [];\n  userCode: string;\n\n  constructor(\n      xShape: number[], radius: number, bias: number, alpha: number,\n      beta: number) {\n    const rad = radius;\n    const maxD = xShape[3] - 1;\n    this.outputShape = xShape;\n\n    // optimize pow(bias + alpha * sum, -beta)\n    // src: https://github.com/tensorflow/tensorflow/..\n    // blob/26033a1644a9c4a5fbe3170ab2e864b6a4ccd4ca/..\n    // tensorflow/core/kernels/mkl_lrn_op.cc#L320\n    let powOperator;\n    const basis = `float(${bias}) + float(${alpha}) * sum`;\n    if (beta === 0.5) {\n      powOperator = `inversesqrt(${basis})`;\n    } else if (beta === 1.0) {\n      powOperator = `1.0/(${basis})`;\n    } else {\n      powOperator = `exp(log(${basis}) * float(-${beta}));`;\n    }\n\n    this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${rad}; j <= ${rad}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${maxD}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${powOperator};\n        setOutput(val);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class LRNGradProgram implements GPGPUProgram {\n  variableNames = ['inputImage', 'outputImage', 'dy'];\n  outputShape: number[] = [];\n  userCode: string;\n  depthRadius: number;\n  bias: number;\n  alpha: number;\n  beta: number;\n  depth: number;\n\n  constructor(\n      inputShape: number[], depthRadius: number, bias: number, alpha: number,\n      beta: number) {\n    this.outputShape = inputShape;\n    this.depth = inputShape[3];\n    this.depthRadius = depthRadius;\n    this.bias = bias;\n    this.alpha = alpha;\n    this.beta = beta;\n    this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${depthRadius})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${depthRadius} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${alpha}) * norm + float(${bias});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${alpha})\n                * float(${beta})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${beta});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class LRNPackedProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[] = [];\n  userCode: string;\n  usesPackedTextures = true;\n\n  constructor(\n      xShape: number[], radius: number, bias: number, alpha: number,\n      beta: number) {\n    const rad = radius;\n    const maxD = xShape[3] - 1;\n    this.outputShape = xShape;\n\n    // optimize pow(bias + alpha * sum, -beta)\n    // src: https://github.com/tensorflow/tensorflow/..\n    // blob/26033a1644a9c4a5fbe3170ab2e864b6a4ccd4ca/..\n    // tensorflow/core/kernels/mkl_lrn_op.cc#L320\n    let powOperator;\n    const basis = `float(${bias}) + float(${alpha}) * sum`;\n    if (beta === 0.5) {\n      powOperator = `inversesqrt(${basis})`;\n    } else if (beta === 1.0) {\n      powOperator = `1.0/(${basis})`;\n    } else {\n      powOperator = `exp(log(${basis}) * float(-${beta}));`;\n    }\n\n    this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${rad};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${rad}; j <= ${rad}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${maxD}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${powOperator};\n        setOutput(result);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Conv2DInfo} from '../../ops/conv_util';\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class MaxPool2DBackpropProgram implements GPGPUProgram {\n  variableNames = ['dy', 'maxPos'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(convInfo: Conv2DInfo) {\n    this.outputShape = convInfo.inShape;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n\n    const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n    const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n\n    const lastIndex = effectiveFilterHeight * effectiveFilterWidth - 1;\n    this.userCode = `\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${effectiveFilterHeight};\n          wR += ${dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${convInfo.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${effectiveFilterWidth}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${convInfo.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${lastIndex} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${effectiveFilterWidth} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class MatMulPackedProgram implements GPGPUProgram {\n  variableNames = ['matrixA', 'matrixB'];\n  usesPackedTextures = true;\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      aShape: [number, number, number], outputShape: [number, number, number],\n      transposeA = false, transposeB = false,\n      addBias = false, activation: string = null) {\n    this.outputShape = outputShape;\n\n    const sharedDim = transposeA ? aShape[1] : aShape[2];\n    const sharedDimensionPacked = Math.ceil(sharedDim / 2);\n\n    const aSample = transposeA ? 'i * 2, rc.y' : 'rc.y, i * 2';\n    const bSample = transposeB ? 'rc.z, i * 2' : 'i * 2, rc.z';\n    const aSwizzle = transposeA ? ['a.xxyy', 'a.zzww'] : ['a.xxzz', 'a.yyww'];\n    const bSwizzle = transposeB ? ['b.xzxz', 'b.ywyw'] : ['b.xyxy', 'b.zwzw'];\n\n    let activationSnippet = '', applyActivationSnippet = '';\n    if (activation) {\n      activationSnippet = `vec4 activation(vec4 x) {\n        ${activation}\n      }`;\n\n      applyActivationSnippet = `result = activation(result);`;\n    }\n\n    const addBiasSnippet = addBias ? 'result += getBiasAtOutCoords();' : '';\n    if (addBias) {\n      this.variableNames.push('bias');\n    }\n\n    this.userCode = `\n      ${activationSnippet}\n\n      const float sharedDimension = ${sharedDimensionPacked}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${sharedDimensionPacked}; i++) {\n          vec4 a = getMatrixA(rc.x, ${aSample});\n          vec4 b = getMatrixB(rc.x, ${bSample});\n\n          result += (${aSwizzle[0]} * ${bSwizzle[0]}) + (${aSwizzle[1]} * ${\n        bSwizzle[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${addBiasSnippet}\n\n        ${applyActivationSnippet}\n\n        setOutput(result);\n      }\n    `;\n  }\n}","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUContext} from './gpgpu_context';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class MultinomialProgram implements GPGPUProgram {\n  variableNames = ['probs'];\n  outputShape: number[];\n  userCode: string;\n\n  // Caching uniform location for speed.\n  seedLoc: WebGLUniformLocation;\n\n  constructor(batchSize: number, numOutcomes: number, numSamples: number) {\n    this.outputShape = [batchSize, numSamples];\n\n    this.userCode = `\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${numOutcomes - 1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${numOutcomes - 1}));\n      }\n    `;\n  }\n\n  getCustomSetupFunc(seed: number) {\n    return (gpgpu: GPGPUContext, webGLProgram: WebGLProgram) => {\n      if (this.seedLoc == null) {\n        this.seedLoc = gpgpu.getUniformLocation(webGLProgram, 'seed');\n      }\n      gpgpu.gl.uniform1f(this.seedLoc, seed);\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class OneHotProgram implements GPGPUProgram {\n  variableNames = ['indices'];\n  outputShape: number[];\n  userCode: string;\n\n  // Caching uniform location for speed.\n  seedLoc: WebGLUniformLocation;\n\n  constructor(\n      numIndices: number, depth: number, onValue: number, offValue: number) {\n    this.outputShape = [numIndices, depth];\n\n    this.userCode = `\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${offValue}), float(${onValue}),\n                      float(index == coords.y)));\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {getChannels} from '../packing_util';\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class PackProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      outputShape:\n          number[]) {  // TODO(https://github.com/tensorflow/tfjs/issues/893):\n                       // Only input / output 3D tensors.\n    this.outputShape = outputShape;\n    const rank = outputShape.length;\n\n    if (rank === 0) {\n      this.userCode = `\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      `;\n    } else {\n      const channels = getChannels('rc', rank);\n      const dtype = getCoordsDataType(rank);\n      const outOfBoundsCondition =\n          getOutOfBoundsCondition(rank, outputShape, channels);\n      const setup = getSetup(\n          rank, outputShape[outputShape.length - 1],\n          outputShape[outputShape.length - 2], channels);\n      const output = getOutput(outputShape, channels);\n\n      this.userCode = `\n        void main() {\n          ${dtype} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            setOutput(vec4(0));\n          } else {\n            ${setup}\n\n            setOutput(vec4(${output}));\n          }\n        }\n      `;\n    }\n  }\n}\n\nfunction getSourceCoordsArr(rank: number, dims: string[]): string[] {\n  const coords = [];\n\n  for (let row = 0; row <= 1; row++) {\n    for (let col = 0; col <= 1; col++) {\n      let coord = `${row === 0 ? 'r' : 'rp1'}, ${col === 0 ? 'c' : 'cp1'}`;\n\n      for (let d = 2; d < rank; d++) {\n        coord = `${dims[dims.length - 1 - d]},` + coord;\n      }\n\n      coords.push(coord);\n    }\n  }\n  return coords;\n}\n\nfunction getOutOfBoundsCondition(\n    rank: number, shape: number[], dims: string[]): string {\n  if (rank === 1) {\n    return `rc > ${shape[0]}`;\n  }\n\n  let cond = '';\n  for (let i = rank - 2; i < rank; i++) {\n    cond += `${dims[i]} >= ${shape[i]}`;\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\nfunction getSetup(\n    rank: number, cols: number, rows: number, dims: string[]): string {\n  if (rank === 1) {\n    return '';\n  }\n\n  const innerDims = dims.slice(-2);\n\n  return `\n    int r = ${innerDims[0]};\n    int c = ${innerDims[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${cols};\n    bool rEdge = rp1 >= ${rows};\n  `;\n}\n\nfunction getOutput(shape: number[], dims: string[]): string {\n  const rank = shape.length;\n  const sourceCoords = getSourceCoordsArr(rank, dims);\n  if (rank === 1) {\n    return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n  }\n\n  return `getA(${sourceCoords[0]}),\n          cEdge ? 0. : getA(${sourceCoords[1]}),\n          rEdge ? 0. : getA(${sourceCoords[2]}),\n          rEdge || cEdge ? 0. : getA(${sourceCoords[3]})`;\n}","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class PadProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      xShape: number[], paddings: Array<[number, number]>,\n      constantValue: number) {\n    this.outputShape = paddings.map(\n        (p, i) => p[0] /* beforePad */ + xShape[i] + p[1] /* afterPad */);\n    const rank = xShape.length;\n    const type = getCoordsDataType(rank);\n\n    const start = paddings.map(p => p[0]).join(',');\n    const end = paddings.map((p, i) => p[0] + xShape[i]).join(',');\n    const unpackedCoords =\n        ['coords[0]', 'coords[1]', 'coords[2]', 'coords[3]'].slice(0, rank);\n\n    if (rank === 1) {\n      this.userCode = `\n        int start = ${start};\n        int end = ${end};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${constantValue}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `;\n      return;\n    }\n    this.userCode = `\n      ${type} start = ${type}(${start});\n      ${type} end = ${type}(${end});\n\n      void main() {\n        ${type} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${constantValue}));\n        } else {\n          ${type} coords = outC - start;\n          setOutput(getX(${unpackedCoords}));\n        }\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\nimport {getChannels} from '../packing_util';\n\nexport class PadPackedProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  usesPackedTextures = true;\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      xShape: number[], paddings: Array<[number, number]>,\n      constantValue: number) {\n    this.outputShape = paddings.map(\n        (p, i) => p[0] /* beforePad */ + xShape[i] + p[1] /* afterPad */);\n    const rank = xShape.length;\n    const dtype = getCoordsDataType(rank);\n\n    const start = paddings.map(p => p[0]).join(',');\n    const end = paddings.map((p, i) => p[0] + xShape[i]).join(',');\n    const coords = getChannels('rc', rank);\n    const source = getChannels('source', rank);\n    const cLimit = `${coords[rank - 1]} < ${this.outputShape[rank - 1]}`;\n    const innerDims =\n        rank === 1 ? 'source' : `vec2(${source.slice(-2).join()})`;\n\n    const componentSetup = [\n      `${dtype} rc = outputLoc;`,\n      `${coords[rank - 1]} += 1;\n       if(${cLimit}) {\n      `,\n      rank === 1 ? '' : \n      `}\n       rc = outputLoc;\n       ${coords[rank - 2]} += 1;\n       if(${coords[rank - 2]} < ${this.outputShape[rank - 2]}) {`,\n      rank === 1 ? '' :\n      `  ${coords[rank - 1]} += 1;\n         if(${cLimit}) {`\n    ];\n    \n    const paddingArea = rank === 1 ?\n        'rc < start || rc >= end' :\n        'any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))';\n    let mainLoop = '';\n    for (let i = 0, j = rank === 1 ? 2 : 4; i < j; i++) {\n      mainLoop += `\n        ${componentSetup[i]}\n        if (${paddingArea}) {\n          result[${i}] = float(${constantValue});\n        } else {\n          ${dtype} source = rc - start;\n          result[${i}] = getChannel(getX(${source.join()}), ${innerDims});\n        }\n      `;\n    }\n    mainLoop += (rank === 1 ? `} ` : `}}`);\n\n    this.userCode = `\n      const ${dtype} start = ${dtype}(${start});\n      const ${dtype} end = ${dtype}(${end});\n\n      void main() {\n        ${dtype} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${mainLoop}\n        setOutput(result);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Conv2DInfo} from '../../ops/conv_util';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class Pool2DProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      convInfo: Conv2DInfo, poolType: 'max'|'avg', computePositions: boolean) {\n    if (poolType === 'avg' && computePositions) {\n      throw new Error('Cannot compute positions for average pool.');\n    }\n\n    const filterWidth = convInfo.filterWidth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n    this.outputShape = convInfo.outShape;\n\n    const isAvgPool = poolType === 'avg';\n\n    let initializationValue = '0.0';\n    if (!isAvgPool) {\n      // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n      initializationValue = '-1.0 / 1e-20';\n    }\n\n    if (computePositions) {\n      const compareOp = '>=';\n\n      this.userCode = `\n        const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n        const ivec2 pads = ivec2(${padTop}, ${padLeft});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${effectiveFilterHeight};\n              wR += ${dilationHeight}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${convInfo.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${effectiveFilterWidth};\n                wC += ${dilationWidth}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${convInfo.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${compareOp} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = wR * ${effectiveFilterWidth} + wC;\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `;\n      return;\n    }\n\n    const compareOp = 'max';\n\n    let returnValue = `${poolType}(${poolType}(${poolType}(` +\n        'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n    if (poolType === 'avg') {\n      returnValue = `avgValue / count`;\n    }\n\n    const filterWidthNearestVec4 = Math.floor(filterWidth / 4) * 4;\n    const filterWidthVec4Remainder = filterWidth % 4;\n\n    const updateSnippet = `\n      if (${isAvgPool}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${compareOp}(values, minMaxValue);\n      }\n    `;\n\n    this.userCode = `\n      const ivec2 strides = ivec2(${strideHeight}, ${strideWidth});\n      const ivec2 pads = ivec2(${padTop}, ${padLeft});\n      const float initializationValue = ${initializationValue};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${convInfo.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${initializationValue});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${effectiveFilterHeight};\n            wR += ${dilationHeight}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${convInfo.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${filterWidthNearestVec4}; wC += 4) {\n            int xC = xCCorner + wC * ${dilationWidth};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${dilationWidth}, d),\n              getValue(batch, xR, xC + 2 * ${dilationWidth}, d),\n              getValue(batch, xR, xC + 3 * ${dilationWidth}, d)\n            );\n\n            ${updateSnippet}\n          }\n\n          int xC = xCCorner + ${filterWidthNearestVec4};\n          if (${filterWidthVec4Remainder === 1}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${updateSnippet}\n          } else if (${filterWidthVec4Remainder === 2}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${dilationWidth}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${updateSnippet}\n          } else if (${filterWidthVec4Remainder === 3}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${dilationWidth}, d),\n              getValue(batch, xR, xC + 2 * ${dilationWidth}, d),\n              initializationValue\n            );\n\n            ${updateSnippet}\n          }\n        }\n        setOutput(${returnValue});\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ReduceInfo} from '../../ops/reduce_util';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class ReduceProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      reduceInfo: ReduceInfo,\n      reduceType: 'all'|'any'|'max'|'min'|'sum'|'prod') {\n    const windowSize = reduceInfo.windowSize;\n    const batchSize = reduceInfo.batchSize;\n    const inSize = reduceInfo.inSize;\n    const outSize = Math.ceil(inSize / windowSize);\n    this.outputShape = [batchSize, outSize];\n\n    let initializationValue = '0.0';\n    let compareOp = ``;\n\n    if (reduceType === 'prod') {\n      initializationValue = '1.0';\n    } else if (reduceType === 'min') {\n      // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n      initializationValue = '1.0 / 1e-20';\n      compareOp = `min`;\n    } else if (reduceType === 'max') {\n      // WebGL on Firefox Linux can't compile 1/0 so we do 1/eps.\n      initializationValue = '-1.0 / 1e-20';\n      compareOp = `max`;\n    }\n\n    let returnValue = `${reduceType}(${reduceType}(${reduceType}(` +\n        'minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])';\n\n    if (reduceType === 'sum') {\n      returnValue = `sumValue`;\n    } else if (reduceType === 'prod') {\n      returnValue = `prodValue`;\n    } else if (reduceType === 'all') {\n      returnValue = `allValue`;\n    } else if (reduceType === 'any') {\n      returnValue = `anyValue`;\n    }\n\n    const windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n    const windowSizeVec4Remainder = windowSize % 4;\n\n    let updateSnippet = `\n      if (${reduceType === 'sum'}) {\n        sumValue += dot(values, ones);\n      } else if (${reduceType === 'prod'}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${compareOp}(values, minMaxValue);\n      }\n    `;\n\n    let vecType = `vec4`;\n\n    if (reduceType === 'all') {\n      initializationValue = '1.0';\n      updateSnippet = `\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      `;\n      vecType = `bvec4`;\n    } else if (reduceType === 'any') {\n      initializationValue = '0.0';\n      updateSnippet = `\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      `;\n      vecType = `bvec4`;\n    }\n\n    let checkOutOfBounds = '';\n    if (inSize % windowSize > 0) {\n      checkOutOfBounds = `\n        if (inIdx < 0 || inIdx >= ${inSize}) {\n          return initializationValue;\n        }\n      `;\n    }\n    this.userCode = `\n      const float initializationValue = ${initializationValue};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${checkOutOfBounds}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${windowSize};\n\n        vec4 minMaxValue = vec4(${initializationValue});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${windowSizeNearestVec4}; i += 4) {\n          int inIdx = inOffset + i;\n          ${vecType} values = ${vecType}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${updateSnippet}\n        }\n\n        int inIdx = inOffset + ${windowSizeNearestVec4};\n        if (${windowSizeVec4Remainder === 1}) {\n          ${vecType} values = ${vecType}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 2}) {\n          ${vecType} values = ${vecType}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 3}) {\n          ${vecType} values = ${vecType}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${updateSnippet}\n        }\n        setOutput(${returnValue});\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport * as shader_util from './shader_compiler_util';\n\nexport class ReshapePackedProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  usesPackedTextures = true;\n  outputShape: number[];\n  userCode: string;\n\n  constructor(outputShape: [number, number, number], inputShape: [\n    number, number, number\n  ]) {\n    this.outputShape = outputShape;\n\n    let mainLoop = ``;\n    for (let i = 0; i < 4; i++) {\n      let thisRC = `thisRC = rc;`;\n      if (i % 2 === 1) {\n        thisRC += `thisRC.z += 1;`;\n      }\n      if (i > 1) {\n        thisRC += `thisRC.y += 1;`;\n      }\n\n      mainLoop += `\n        ${thisRC}\n        ${i > 0 ? `if(thisRC.y < rows && thisRC.z < cols){` : ''}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${i > 0 ? '}' : ''}\n      `;\n    }\n\n    this.userCode = `\n      ${getReshapedInputCoords(inputShape)}\n      ${shader_util.getFlatIndexFrom3D(outputShape)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${outputShape[1]};\n        int cols = ${outputShape[2]};\n\n        ${mainLoop}\n\n        setOutput(result);\n      }\n    `;\n  }\n}\n\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\n  const coordsFromIndexSnippet =\n      shader_util.getLogicalCoordinatesFromFlatIndex(['r', 'c', 'd'], shape);\n\n  return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(r, c, d);\n    }\n  `;\n}","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor4D} from '../../tensor';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class ResizeBilinearBackpropProgram implements GPGPUProgram {\n  variableNames = ['dy'];\n  outputShape: number[] = [];\n  userCode: string;\n\n  constructor(dy: Tensor4D, x: Tensor4D, alignCorners: boolean) {\n    this.outputShape = x.shape;\n    const [, xHeight, xWidth, ] = x.shape;\n    const [, yHeight, yWidth] = dy.shape;\n\n    // In the backwards pass, we want to find the pixels that were generated for\n    // each pixel in the input image the forward pass and add the corresponding\n    // coefficient from dy to the gradient (with some interpolation).\n\n    const effectiveXSize: [number, number] = [\n      (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n      (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n    ];\n\n    const effectiveYSize: [number, number] = [\n      (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n      (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n    ];\n\n    const heightScale = effectiveXSize[0] / effectiveYSize[0];\n    const widthScale = effectiveXSize[1] / effectiveYSize[1];\n\n    const invHeightScale = 1 / heightScale;\n    const invWidthScale = 1 / widthScale;\n\n    // This defines the size of the window of values around a particular\n    // index in dy that we want to search for contributions to dx.\n    const winHeight = (Math.ceil(invHeightScale) * 2) + 2;\n    const winWidth = (Math.ceil(invWidthScale) * 2) + 2;\n\n    this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${heightScale});\n        const float widthScale = float(${widthScale});\n\n        const float invHeightScale = float(${invHeightScale});\n        const float invWidthScale = float(${invWidthScale});\n\n        const int winHeight = int(${winHeight});\n        const int winWidth = int(${winWidth});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${yHeight}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${yWidth}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${xHeight - 1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${xWidth - 1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class ResizeBilinearProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  outputShape: number[] = [];\n  userCode: string;\n\n  constructor(\n      inputShape: [number, number, number, number], newHeight: number,\n      newWidth: number, alignCorners: boolean) {\n    const [batch, oldHeight, oldWidth, depth] = inputShape;\n    this.outputShape = [batch, newHeight, newWidth, depth];\n\n    const effectiveInSize: [number, number] = [\n      (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n      (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n    ];\n\n    const effectiveOutSize: [number, number] = [\n      (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n      (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n    ];\n\n    this.userCode = `\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${effectiveInSize[0] / effectiveOutSize[0]},\n          ${effectiveInSize[1] / effectiveOutSize[1]});\n      const vec2 inputShapeRC = vec2(${oldHeight}.0, ${oldWidth}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class ResizeBilinearPackedProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  usesPackedTextures = true;\n  outputShape: number[] = [];\n  userCode: string;\n\n  constructor(\n      inputShape: [number, number, number, number], newHeight: number,\n      newWidth: number, alignCorners: boolean) {\n    const [batch, oldHeight, oldWidth, depth] = inputShape;\n    this.outputShape = [batch, newHeight, newWidth, depth];\n\n    const effectiveInSize: [number, number] = [\n      (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n      (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n    ];\n\n    const effectiveOutSize: [number, number] = [\n      (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n      (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n    ];\n\n    this.userCode = `\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${effectiveInSize[0] / effectiveOutSize[0]},\n          ${effectiveInSize[1] / effectiveOutSize[1]},\n          ${effectiveInSize[1] / effectiveOutSize[1]});\n      const vec3 inputShapeRC = vec3(${oldHeight}.0, ${oldWidth}.0,\n                                     ${oldWidth}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n        \n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${depth - 1}; \n        bool hasNextRow = coords.z < ${newWidth - 1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor4D} from '../../tensor';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class ResizeNearestNeigborBackpropProgram implements GPGPUProgram {\n  variableNames = ['dy'];\n  outputShape: number[] = [];\n  userCode: string;\n\n  constructor(dy: Tensor4D, x: Tensor4D, alignCorners: boolean) {\n    this.outputShape = x.shape;\n    const [, xHeight, xWidth, ] = x.shape;\n    const [, yHeight, yWidth] = dy.shape;\n\n    // In the backwards pass, we want to find the pixels that were generated for\n    // each pixel in the input image the forward pass and add the corresponding\n    // coefficient from dy to the gradient (with some interpolation).\n\n    const effectiveXSize: [number, number] = [\n      (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n      (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n    ];\n\n    const effectiveYSize: [number, number] = [\n      (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n      (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n    ];\n\n    const heightScale = effectiveXSize[0] / effectiveYSize[0];\n    const widthScale = effectiveXSize[1] / effectiveYSize[1];\n\n    const invHeightScale = 1 / heightScale;\n    const invWidthScale = 1 / widthScale;\n\n    // This defines the size of the window of values around a particular\n    // index in dy that we want to search for contributions to dx.\n    const winHeight = (Math.ceil(invHeightScale) * 2) + 2;\n    const winWidth = (Math.ceil(invWidthScale) * 2) + 2;\n\n    this.userCode = `\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${heightScale});\n        const float widthScale = float(${widthScale});\n\n        const float invHeightScale = float(${invHeightScale});\n        const float invWidthScale = float(${invWidthScale});\n\n        const int winHeight = int(${winHeight});\n        const int winWidth = int(${winWidth});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${yHeight}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${yWidth}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${effectiveXSize[0]}) *\n                (float(dyR) / float(${effectiveYSize[0]}));\n\n            float sourceFracCol =\n                float(${effectiveXSize[1]}) *\n                  (float(dyC) / float(${effectiveYSize[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${xHeight}) - 1),\n                ${alignCorners} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${xWidth}) - 1),\n                ${alignCorners} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class ResizeNearestNeighborProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  outputShape: number[] = [];\n  userCode: string;\n\n  constructor(\n      inputShape: [number, number, number, number], newHeight: number,\n      newWidth: number, alignCorners: boolean) {\n    const [batch, oldHeight, oldWidth, depth] = inputShape;\n    this.outputShape = [batch, newHeight, newWidth, depth];\n\n    const effectiveInSize: [number, number] = [\n      (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n      (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n    ];\n\n    const effectiveOutSize: [number, number] = [\n      (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n      (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n    ];\n\n    // When align corners is false, we rounds the value with floor.\n    const roundBase = alignCorners ? '0.5' : '0.0';\n\n    this.userCode = `\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${effectiveInSize[0] / effectiveOutSize[0]},\n          ${effectiveInSize[1] / effectiveOutSize[1]});\n      const vec2 inputShapeRC = vec2(${oldHeight}.0, ${oldWidth}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${roundBase})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class ReverseProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(xShape: number[], axis: number[]) {\n    const rank = xShape.length;\n    if (rank > 4) {\n      throw new Error(\n          `WebGL backend: Reverse of rank-${rank} tensor is not yet supported`);\n    }\n    this.outputShape = xShape;\n\n    if (rank === 1) {\n      this.userCode = `\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${xShape[0]} - coord - 1));\n        }\n      `;\n      return;\n    }\n    const getInCoord = (i: number) => {\n      if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n        return `${xShape[i]} - coords[${i}] - 1`;\n      }\n      return `coords[${i}]`;\n    };\n    const inCoords = xShape.map((_, i) => getInCoord(i)).join(',');\n    const type = getCoordsDataType(rank);\n\n    this.userCode = `\n      void main() {\n        ${type} coords = getOutputCoords();\n        setOutput(getX(${inCoords}));\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {getChannels} from '../packing_util';\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class ReversePackedProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[];\n  userCode: string;\n  usesPackedTextures = true;\n\n  constructor(xShape: number[], axis: number[]) {\n    const rank = xShape.length;\n    if (rank > 4) {\n      throw new Error(\n          `WebGL backend: Reverse of rank-${rank} tensor is not yet supported`);\n    }\n    this.outputShape = xShape;\n    const channels = getChannels('rc', rank);\n    const nextColumn =\n        `${channels[rank - 1]} + 1 < ${this.outputShape[rank - 1]}`;\n    const nextRow = `${channels[rank - 2]} + 1 < ${this.outputShape[rank - 2]}`;\n    const type = getCoordsDataType(rank);\n    if (rank === 1) {\n      this.userCode = `\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${xShape[0]} - rc - 1),\n            ${xShape[0]} - rc - 1);\n          if(${nextColumn}){\n              result.g = getChannel(getX(${xShape[0]} - (rc  + 1) - 1),\n                ${xShape[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `;\n    } else {\n      this.userCode = `\n        void main() {\n          ${type} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${getR(channels.slice())};\n          if(${nextColumn}){\n            result.g = ${getG(channels.slice())};\n          }\n          if(${nextRow}) {\n            result.b = ${getB(channels.slice())};\n            if(${nextColumn}) {\n              result.a = ${getA(channels.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `;\n    }\n\n    function getR(channels: string[]): string {\n      return getChannel(channels);\n    }\n\n    function getG(channels: string[]): string {\n      channels[rank - 1] = '(' + channels[rank - 1] + ` + 1)`;\n      return getChannel(channels);\n    }\n\n    function getB(channels: string[]): string {\n      channels[rank - 2] = '(' + channels[rank - 2] + ` + 1)`;\n      return getChannel(channels);\n    }\n\n    function getA(channels: string[]): string {\n      channels[rank - 1] = '(' + channels[rank - 1] + ` + 1)`;\n      channels[rank - 2] = '(' + channels[rank - 2] + ` + 1)`;\n      return getChannel(channels);\n    }\n\n    function getChannel(channels: string[]): string {\n      const inCoordsArray = xShape.map((_, i) => getInCoord(i, channels));\n      const inCoords = inCoordsArray.join(',');\n      const innerDims = inCoordsArray.slice(-2).join(',');\n      return `getChannel(getX(${inCoords}), vec2(${innerDims}))`;\n    }\n\n    function getInCoord(i: number, channels1: string[]): string {\n      if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n        return `${xShape[i]} - ${channels1[i]} - 1`;\n      } else {\n        return `${channels1[i]}`;\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class ScatterProgram implements GPGPUProgram {\n  variableNames = ['updates', 'indices', 'defaultValue'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      updateSize: number, sliceDim: number, indicesRank: number,\n      updatesRank: number, strides: number[], shape: number[],\n      summingDupeIndex = true) {\n    this.outputShape = shape;\n    const stridesType = getCoordsDataType(strides.length);\n    const dtype = getCoordsDataType(shape.length);\n    let indicesString = '';\n    if (indicesRank === 1) {\n      indicesString = 'i';\n    } else if (indicesRank === 2) {\n      indicesString = 'i, j';\n    }\n    const indicesSnippet = `getIndices(${indicesString})`;\n\n    let updatesString = '';\n    if (updatesRank === 1) {\n      updatesString = 'i';\n    } else if (updatesRank === 2) {\n      updatesString = 'i, coords[1]';\n    }\n    const updatesSnippet = `getUpdates(${updatesString})`;\n\n    const strideString = sliceDim > 1 ? 'strides[j]' : 'strides';\n    this.userCode = `\n        ${stridesType} strides = ${stridesType}(${strides});\n\n        void main() {\n          ${dtype} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${updateSize}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${sliceDim}; j++) {\n              int index = round(${indicesSnippet});\n              flattenedIndex += index * ${strideString};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${updatesSnippet};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {SegOpInfo} from '../../ops/segment_util';\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class SegmentOpProgram implements GPGPUProgram {\n  variableNames = ['x', 'segmentIds'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(segOpInfo: SegOpInfo, segOpType: 'unsortedSegmentSum') {\n    const windowSize = segOpInfo.windowSize;\n    const batchSize = segOpInfo.batchSize;\n    const inSize = segOpInfo.inSize;\n    const numSegments = segOpInfo.numSegments;\n    const outSize = numSegments * Math.ceil(inSize / windowSize);\n    this.outputShape = [batchSize, outSize];\n\n    const initializationValue = '0.0';\n    const returnValue = `sumValue`;\n\n    const windowSizeNearestVec4 = Math.floor(windowSize / 4) * 4;\n    const windowSizeVec4Remainder = windowSize % 4;\n\n    const updateSnippet = `\n        sumValue += dot(values, segFilter);\n    `;\n\n    let checkValueOutOfBounds = '';\n    if (inSize % windowSize > 0) {\n      checkValueOutOfBounds = `\n        if (inIdx < 0 || inIdx >= ${inSize}) {\n          return initializationValue;\n        }\n      `;\n    }\n\n    let checkSegmentIdOutOfBounds = '';\n    if (inSize % windowSize > 0) {\n      checkSegmentIdOutOfBounds = `\n        if (inIdx < 0 || inIdx >= ${inSize}) {\n          return -1.0;\n        }\n      `;\n    }\n\n    this.userCode = `\n      const float initializationValue = ${initializationValue};\n\n      float getValue(int batch, int inIdx) {\n        ${checkValueOutOfBounds}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${checkSegmentIdOutOfBounds}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${numSegments})) * float(${windowSize}));\n        int currentSeg = int(mod(float(outIdx), float(${numSegments})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${windowSizeNearestVec4}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${updateSnippet}\n        }\n\n        int inIdx = inOffset + ${windowSizeNearestVec4};\n        if (${windowSizeVec4Remainder === 1}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 2}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${updateSnippet}\n        } else if (${windowSizeVec4Remainder === 3}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${updateSnippet}\n        }\n        setOutput(${returnValue});\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class SelectProgram implements GPGPUProgram {\n  variableNames = ['c', 'a', 'b'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(cRank: number, shape: number[], rank: number) {\n    this.outputShape = shape;\n\n    let cCoords;\n    let abCoords;\n    if (rank > 4) {\n      throw Error(`Where for rank ${rank} is not yet supported`);\n    }\n\n    if (rank === 1) {\n      abCoords = `resRC`;\n      cCoords = `resRC`;\n    } else {\n      const currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n      const cCoordVars = [];\n      const abCoordVars = [];\n      for (let i = 0; i < shape.length; i++) {\n        abCoordVars.push(`${currentCoords[i]}`);\n        if (i < cRank) {\n          cCoordVars.push(`${currentCoords[i]}`);\n        }\n      }\n      cCoords = cCoordVars.join();\n      abCoords = abCoordVars.join();\n    }\n\n    const dtype = getCoordsDataType(rank);\n\n    this.userCode = `\n      void main() {\n        ${dtype} resRC = getOutputCoords();\n        float cVal = getC(${cCoords});\n        if (cVal >= 1.0) {\n          setOutput(getA(${abCoords}));\n        } else {\n          setOutput(getB(${abCoords}));\n        }\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUContext} from './gpgpu_context';\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class SliceProgram implements GPGPUProgram {\n  variableNames = ['source'];\n  outputShape: number[];\n  userCode: string;\n  rank: number;\n\n  // Caching uniform location for speed.\n  startLoc: WebGLUniformLocation;\n\n  constructor(destSize: number[]) {\n    this.outputShape = destSize;\n    this.rank = destSize.length;\n\n    const dtype = getCoordsDataType(this.rank);\n    const uniformPart = `uniform int start[${this.rank}];`;\n    const sourceCoords = getCoords(this.rank);\n\n    let body: string;\n    const coordSum = destSize.map((_, i) => {\n      return `sourceLoc.${coords[i]} = start[${i}] + coords.${coords[i]};`;\n    });\n    body = `\n        ${dtype} sourceLoc;\n        ${dtype} coords = getOutputCoords();\n        ${coordSum.join('\\n')}\n      `;\n    this.userCode = `\n      ${uniformPart}\n      void main() {\n        ${body}\n        setOutput(getSource(${sourceCoords}));\n      }\n    `;\n  }\n\n  getCustomSetupFunc(start: number[]) {\n    if (start.length !== this.rank) {\n      throw Error(\n          `The rank (${this.rank}) of the program must match the ` +\n          `length of start (${start.length})`);\n    }\n    return (gpgpu: GPGPUContext, webGLProgram: WebGLProgram) => {\n      if (this.startLoc == null) {\n        this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n        if (this.startLoc == null) {\n          // This means the compiler has optimized and realized it doesn't need\n          // the uniform.\n          return;\n        }\n      }\n      gpgpu.gl.uniform1iv(this.startLoc, start);\n    };\n  }\n}\n\nconst coords = ['x', 'y', 'z', 'w', 'u', 'v'];\n\nfunction getCoords(rank: number): string {\n  if (rank === 1) {\n    return 'sourceLoc';\n  } else if (rank <= 6) {\n    return coords.slice(0, rank).map(x => 'sourceLoc.' + x).join(',');\n  } else {\n    throw Error(`Slicing for rank ${rank} is not yet supported`);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUContext} from './gpgpu_context';\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\nimport {getChannels} from '../packing_util';\n\nexport class SlicePackedProgram implements GPGPUProgram {\n  variableNames = ['source'];\n  usesPackedTextures = true;\n  outputShape: number[];\n  userCode: string;\n  rank: number;\n\n  // Caching uniform location for speed.\n  startLoc: WebGLUniformLocation;\n\n  constructor(destSize: number[]) {\n    this.outputShape = destSize;\n    this.rank = destSize.length;\n\n    const dtype = getCoordsDataType(this.rank);\n    const coords = getChannels('coords', this.rank);\n    const sourceLoc = getChannels('sourceLoc', this.rank);\n\n    const innerDims =\n        this.rank === 1 ? 'sourceLoc' : `vec2(${sourceLoc.slice(-2).join()})`;\n    const getChannel = \n        `getChannel(getSource(${sourceLoc.join()}), ${innerDims})`;\n    const upperRow = `\n      result.x = ${getChannel};\n      if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n        ++${sourceLoc[this.rank - 1]};\n        result.y = ${getChannel};\n        --${sourceLoc[this.rank - 1]};\n      }\n    `;\n    const lowerRow = this.rank === 1 ? '' : `\n      --${coords[this.rank - 1]};\n      if (++${coords[this.rank - 2]} < ${destSize[this.rank - 2]}) {\n        ++${sourceLoc[this.rank - 2]};\n        result.z = ${getChannel};\n        if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n          ++${sourceLoc[this.rank - 1]};\n          result.w = ${getChannel};\n        }\n      }\n    `;\n\n    const sourceLocSetup = this.rank <= 4 ?\n        `sourceLoc = coords +\n            ${dtype}(${destSize.map((_, i) => `start[${i}]`).join()});` :\n        destSize.map((_, i) => `${sourceLoc[i]} = ${coords[i]} + start[${i}];`)\n            .join('\\n');\n    this.userCode = `\n      uniform int start[${this.rank}];\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        ${dtype} sourceLoc;\n        ${sourceLocSetup} \n        vec4 result = vec4(0.);\n        ${upperRow}\n        ${lowerRow}\n        setOutput(result);\n      }\n    `;\n  }\n\n  getCustomSetupFunc(start: number[]) {\n    if (start.length !== this.rank) {\n      throw Error(\n          `The rank (${this.rank}) of the program must match the ` +\n          `length of start (${start.length})`);\n    }\n    return (gpgpu: GPGPUContext, webGLProgram: WebGLProgram) => {\n      if (this.startLoc == null) {\n        this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n        if (this.startLoc == null) {\n          // This means the compiler has optimized and realized it doesn't need\n          // the uniform.\n          return;\n        }\n      }\n      gpgpu.gl.uniform1iv(this.startLoc, start);\n    };\n  }\n}","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class StridedSliceProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  outputShape: number[];\n  userCode: string;\n\n  constructor(\n      begin: number[], strides: number[], size: number[],\n      shrinkAxis: number[]) {\n    const shape = size.filter((v, index) => shrinkAxis.indexOf(index) === -1);\n    this.outputShape = shape;\n    const rank = size.length;\n    const inputDtype = getCoordsDataType(size.length);\n    const dtype = getCoordsDataType(shape.length);\n\n    let newCoords = '';\n    if (rank === 1) {\n      newCoords = 'coords * strides + begin';\n    } else {\n      let outputAxis = 0;\n      newCoords =\n          size.map((_, i) => {\n                if (shrinkAxis.indexOf(i) === -1) {\n                  outputAxis++;\n                  return shape.length === 1 ?\n                      `coords * strides[${i}] + begin[${i}]` :\n                      `coords[${outputAxis - 1}] * strides[${i}] + begin[${i}]`;\n                } else {\n                  return `begin[${i}]`;\n                }\n              })\n              .join(',');\n    }\n\n    this.userCode = `\n      ${inputDtype} begin = ${inputDtype}(${begin});\n      ${inputDtype} strides = ${inputDtype}(${strides});\n\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        setOutput(getX(${newCoords}));\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENV} from '../../environment';\nimport {GPGPUContext} from './gpgpu_context';\nimport {PhysicalTextureType, TextureUsage} from './tex_util';\n\nexport class TextureManager {\n  private numUsedTextures = 0;\n  private numFreeTextures = 0;\n  private freeTextures: {[shape: string]: WebGLTexture[]} = {};\n  private logEnabled = false;\n  private usedTextures: {[shape: string]: WebGLTexture[]} = {};\n\n  constructor(private gpgpu: GPGPUContext) {}\n\n  acquireTexture(\n      shapeRC: [number, number], usage: TextureUsage,\n      isPacked: boolean): WebGLTexture {\n    const physicalTexType = getPhysicalFromLogicalTextureType(usage, isPacked);\n\n    const shapeKey = getKeyFromTextureShape(shapeRC, physicalTexType, isPacked);\n    if (!(shapeKey in this.freeTextures)) {\n      this.freeTextures[shapeKey] = [];\n    }\n    if (!(shapeKey in this.usedTextures)) {\n      this.usedTextures[shapeKey] = [];\n    }\n\n    if (this.freeTextures[shapeKey].length > 0) {\n      this.numFreeTextures--;\n      this.numUsedTextures++;\n      this.log();\n      const newTexture = this.freeTextures[shapeKey].shift();\n      this.usedTextures[shapeKey].push(newTexture);\n      return newTexture;\n    }\n    this.numUsedTextures++;\n    this.log();\n\n    let newTexture: WebGLTexture;\n    if (physicalTexType === PhysicalTextureType.PACKED_2X2_FLOAT32) {\n      newTexture = this.gpgpu.createPackedMatrixTexture(shapeRC[0], shapeRC[1]);\n    } else if (physicalTexType === PhysicalTextureType.PACKED_2X2_FLOAT16) {\n      newTexture =\n          this.gpgpu.createFloat16PackedMatrixTexture(shapeRC[0], shapeRC[1]);\n    } else if (physicalTexType === PhysicalTextureType.UNPACKED_FLOAT32) {\n      newTexture =\n          this.gpgpu.createFloat32MatrixTexture(shapeRC[0], shapeRC[1]);\n    } else if (physicalTexType === PhysicalTextureType.UNPACKED_FLOAT16) {\n      newTexture =\n          this.gpgpu.createFloat16MatrixTexture(shapeRC[0], shapeRC[1]);\n\n    } else if (\n        physicalTexType === PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE) {\n      newTexture =\n          this.gpgpu.createUnsignedBytesMatrixTexture(shapeRC[0], shapeRC[1]);\n    }\n    this.usedTextures[shapeKey].push(newTexture);\n\n    return newTexture;\n  }\n\n  releaseTexture(\n      texture: WebGLTexture, shape: [number, number],\n      logicalTexType: TextureUsage, isPacked: boolean): void {\n    if (this.freeTextures == null) {\n      // Already disposed.\n      return;\n    }\n    const physicalTexType =\n        getPhysicalFromLogicalTextureType(logicalTexType, isPacked);\n    const shapeKey = getKeyFromTextureShape(shape, physicalTexType, isPacked);\n    if (!(shapeKey in this.freeTextures)) {\n      this.freeTextures[shapeKey] = [];\n    }\n    this.freeTextures[shapeKey].push(texture);\n    this.numFreeTextures++;\n    this.numUsedTextures--;\n    const texList = this.usedTextures[shapeKey];\n    const texIndex = texList.indexOf(texture);\n    if (texIndex < 0) {\n      throw new Error(\n          'Cannot release a texture that was never provided by this ' +\n          'texture manager');\n    }\n    texList.splice(texIndex, 1);\n    this.log();\n  }\n\n  private log() {\n    if (!this.logEnabled) {\n      return;\n    }\n    const total = this.numFreeTextures + this.numUsedTextures;\n    console.log(\n        'Free/Used', `${this.numFreeTextures} / ${this.numUsedTextures}`,\n        `(${total})`);\n  }\n\n  getNumUsedTextures(): number {\n    return this.numUsedTextures;\n  }\n\n  getNumFreeTextures(): number {\n    return this.numFreeTextures;\n  }\n\n  dispose() {\n    if (this.freeTextures == null) {\n      // Already disposed.\n      return;\n    }\n    for (const texShape in this.freeTextures) {\n      this.freeTextures[texShape].forEach(tex => {\n        this.gpgpu.deleteMatrixTexture(tex);\n      });\n    }\n    for (const texShape in this.usedTextures) {\n      this.usedTextures[texShape].forEach(tex => {\n        this.gpgpu.deleteMatrixTexture(tex);\n      });\n    }\n    this.freeTextures = null;\n    this.usedTextures = null;\n    this.numUsedTextures = 0;\n    this.numFreeTextures = 0;\n  }\n}\n\nfunction getPhysicalFromLogicalTextureType(\n    logicalTexType: TextureUsage, isPacked: boolean): PhysicalTextureType {\n  if (logicalTexType === TextureUsage.UPLOAD) {\n    return PhysicalTextureType.PACKED_2X2_FLOAT32;\n  } else if (logicalTexType === TextureUsage.RENDER || logicalTexType == null) {\n    if (isPacked) {\n      return ENV.getBool('WEBGL_RENDER_FLOAT32_ENABLED') ?\n          PhysicalTextureType.PACKED_2X2_FLOAT32 :\n          PhysicalTextureType.PACKED_2X2_FLOAT16;\n    }\n    return ENV.getBool('WEBGL_RENDER_FLOAT32_ENABLED') ?\n        PhysicalTextureType.UNPACKED_FLOAT32 :\n        PhysicalTextureType.UNPACKED_FLOAT16;\n  } else if (\n      logicalTexType === TextureUsage.DOWNLOAD ||\n      logicalTexType === TextureUsage.PIXELS) {\n    return PhysicalTextureType.PACKED_4X1_UNSIGNED_BYTE;\n  }\n  throw new Error(`Unknown logical texture type ${logicalTexType}`);\n}\n\nfunction getKeyFromTextureShape(\n    shapeRowsCol: [number, number], physicalTexType: PhysicalTextureType,\n    isPacked: boolean): string {\n  return `${shapeRowsCol[0]}_${shapeRowsCol[1]}_${physicalTexType}_${isPacked}`;\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class TileProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  outputShape: number[];\n  userCode: string;\n  rank: number;\n\n  constructor(aShape: number[], reps: number[]) {\n    const outputShape: number[] = new Array(aShape.length);\n    for (let i = 0; i < outputShape.length; i++) {\n      outputShape[i] = aShape[i] * reps[i];\n    }\n    this.outputShape = outputShape;\n    this.rank = outputShape.length;\n    const dtype = getCoordsDataType(this.rank);\n    const sourceCoords = getSourceCoords(aShape);\n\n    this.userCode = `\n      void main() {\n        ${dtype} resRC = getOutputCoords();\n        setOutput(getA(${sourceCoords}));\n      }\n    `;\n  }\n}\n\nfunction getSourceCoords(aShape: number[]): string {\n  const rank = aShape.length;\n  if (rank > 5) {\n    throw Error(`Tile for rank ${rank} is not yet supported`);\n  }\n  if (rank === 1) {\n    return `imod(resRC, ${aShape[0]})`;\n  }\n\n  const currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w', 'resRC.u'];\n\n  const sourceCoords = [];\n  for (let i = 0; i < aShape.length; i++) {\n    sourceCoords.push(`imod(${currentCoords[i]}, ${aShape[i]})`);\n  }\n  return sourceCoords.join();\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class TransposeProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  outputShape: number[];\n  userCode: string;\n  rank: number;\n\n  constructor(aShape: number[], newDim: number[]) {\n    const outputShape: number[] = new Array(aShape.length);\n    for (let i = 0; i < outputShape.length; i++) {\n      outputShape[i] = aShape[newDim[i]];\n    }\n    this.outputShape = outputShape;\n    this.rank = outputShape.length;\n    const dtype = getCoordsDataType(this.rank);\n    const switched = getSwitchedCoords(newDim);\n\n    this.userCode = `\n    void main() {\n      ${dtype} resRC = getOutputCoords();\n      setOutput(getA(${switched}));\n    }\n    `;\n  }\n}\n\nfunction getSwitchedCoords(newDim: number[]): string {\n  const rank = newDim.length;\n  if (rank > 6) {\n    throw Error(`Transpose for rank ${rank} is not yet supported`);\n  }\n  const originalOrder =\n      ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w', 'resRC.u', 'resRC.v'];\n  const switchedCoords = new Array(rank);\n  for (let i = 0; i < newDim.length; i++) {\n    switchedCoords[newDim[i]] = originalOrder[i];\n  }\n  return switchedCoords.join();\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\nimport { getVecChannels } from '../packing_util';\n\nexport class TransposePackedProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  outputShape: number[];\n  userCode: string;\n  rank: number;\n  usesPackedTextures = true;\n\n  constructor(aShape: number[], newDim: number[]) {\n    const outputShape: number[] = new Array(aShape.length);\n    for (let i = 0; i < outputShape.length; i++) {\n      outputShape[i] = aShape[newDim[i]];\n    }\n    this.outputShape = outputShape;\n    this.rank = outputShape.length;\n    if (this.rank > 6) {\n      throw Error(\n          `Packed transpose for rank ${this.rank} is not yet supported.`);\n    }\n    const dtype = getCoordsDataType(this.rank);\n\n    const outputOrder = getVecChannels('rc', this.rank);\n    const switchedOrder = new Array(this.rank);\n    for (let i = 0; i < newDim.length; i++) {\n      switchedOrder[newDim[i]] = outputOrder[i];\n    }\n    const innerDims = `vec2(${switchedOrder.slice(-2).join()})`;\n    const nextColumn =\n        `++${outputOrder[this.rank - 1]} < ${outputShape[this.rank - 1]}`;\n    const getc = `getChannel(getA(${switchedOrder.join()}), ${innerDims})`;\n\n    this.userCode = `\n    void main() {\n      ${dtype} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${getc};\n      if(${nextColumn}) {\n        result[1] = ${getc};\n      }\n      --${outputOrder[this.rank - 1]};\n      if(++${outputOrder[this.rank - 2]} < ${outputShape[this.rank - 2]}) {\n        result[2] = ${getc};\n        if(${nextColumn}) {\n          result[3] = ${getc};\n        }\n      }  \n      setOutput(result);\n    }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const SELU_SCALEALPHA = 1.7580993408473768599402175208123;\nexport const SELU_SCALE = 1.0507009873554804934193349852946;\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as erf_util from '../../ops/erf_util';\nimport * as selu_util from '../../ops/selu_util';\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport class UnaryOpProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  userCode: string;\n  outputShape: number[];\n\n  constructor(aShape: number[], opSnippet: string) {\n    this.outputShape = aShape;\n    this.userCode = `\n      float unaryOperation(float x) {\n        ${opSnippet}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `;\n  }\n}\n\nconst CHECK_NAN_SNIPPET = `if (isnan(x)) return x;`;\n\nexport const LINEAR = `return x;`;\n\nexport const ABS = `return abs(x);`;\n\nexport const RELU = CHECK_NAN_SNIPPET + `\n  return (x < 0.0) ? 0.0 : x;\n`;\n\nexport const ELU = `return (x >= 0.0) ? x : (exp(x) - 1.0);`;\n\nexport const SELU = `\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${selu_util.SELU_SCALEALPHA};\n  float scale = ${selu_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`;\n\nexport function STEP(alpha = 0.0) {\n  return CHECK_NAN_SNIPPET + `\n    return x > 0.0 ? 1.0 : float(${alpha});\n  `;\n}\n\nexport const NEG = `return -x;`;\n\nexport const CEIL = `return ceil(x);`;\n\nexport const FLOOR = `return floor(x);`;\n\nexport const SIGN = `\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n`;\n\nexport const IS_NAN = `return float(isnan(x));`;\n\nexport const IS_INF = `return float(isinf(x));`;\n\nexport const IS_FINITE = `return float(!isnan(x) && !isinf(x));`;\n\nexport const ROUND = `\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n`;\n\nexport const EXP = `return exp(x);`;\n\nexport const EXPM1 = `return exp(x) - 1.0;`;\n\nexport const LOG = `if (x < 0.0) return NAN;\n  return log(x);`;\n\nexport const LOG1P = `return log(1.0 + x);`;\n\nexport const SQRT = `return sqrt(x);`;\n\nexport const RSQRT = `return inversesqrt(x);`;\n\nexport const SIGMOID = `return 1.0 / (1.0 + exp(-1.0 * x));`;\n\n/**\n * mirrors the implementation of tf.nn.softplus: https://goo.gl/vkcvwX\n *\n * epsilon is the difference between 1.0 and the next representable\n * float. For a single precision 32 bit float this should be 2^-23, see:\n * https://math.byu.edu/~schow/work/IEEEFloatingPoint.htm\n *\n * too_large = (x > -threshold) is value above which exp(x) may overflow\n * but softplus(x) == x is within machine epsilon\n *\n * too_small = (x < threshold) is value below which exp(x) may underflow,\n * but softplus(x) == exp(x) is within machine epsilon.\n */\nexport const SOFTPLUS = `\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n`;\n\nexport const SIN = CHECK_NAN_SNIPPET + `\n  return sin(x);\n`;\n\nexport const COS = CHECK_NAN_SNIPPET + `\n  return cos(x);\n`;\n\nexport const TAN = `return tan(x);`;\n\nexport const ASIN = `return asin(x);`;\n\nexport const ACOS = `return acos(x);`;\n\nexport const ATAN = CHECK_NAN_SNIPPET + `\n  return atan(x);\n`;\n\nexport const SINH = `\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n`;\n\nexport const COSH = `\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n`;\n\nexport const TANH = `\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n`;\n\nexport const ASINH = `return log(x + sqrt(x * x + 1.0));`;\n\nexport const ACOSH = CHECK_NAN_SNIPPET + `\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));`;\n\nexport const ATANH = CHECK_NAN_SNIPPET + `\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;`;\n\nexport const ERF = `\n  // Error function is calculated approximately with elementary function.\n  // See \"Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables\", Abramowitz and Stegun.\n  float p = ${erf_util.ERF_P};\n  float a1 = ${erf_util.ERF_A1};\n  float a2 = ${erf_util.ERF_A2};\n  float a3 = ${erf_util.ERF_A3};\n  float a4 = ${erf_util.ERF_A4};\n  float a5 = ${erf_util.ERF_A5};\n\n  float t = 1.0 / (1.0 + p * x);\n  return 1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x);\n`;\n\nexport const SQUARE = `return x * x;`;\n\nexport const RECIPROCAL = `return 1.0 / x;`;\n\nexport const LOGICAL_NOT = `return float(!(x >= 1.0));`;\n\nexport const TO_INT = `return float(int(x));`;\n\nexport const CLONE = 'return x;';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GPGPUProgram} from './gpgpu_math';\n\nexport const LINEAR = `return x;`;\n\nexport const LOG = `\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n`;\n\nexport const RELU = `\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n`;\n\nexport class UnaryOpPackedProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  userCode: string;\n  outputShape: number[];\n  usesPackedTextures = true;\n\n  constructor(aShape: number[], opSnippet: string) {\n    this.outputShape = aShape;\n    this.userCode = `\n      vec4 unaryOperation(vec4 x) {\n        ${opSnippet}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {getChannels, getSourceCoords} from '../packing_util';\n\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType} from './shader_compiler';\n\nexport class UnpackProgram implements GPGPUProgram {\n  variableNames = ['A'];\n  usesPackedTextures = true;\n  outputShape: number[];\n  userCode: string;\n\n  constructor(outputShape: number[]) {\n    this.outputShape = outputShape;\n    const rank = outputShape.length;\n\n    const channels = getChannels('rc', rank);\n    const dtype = getCoordsDataType(rank);\n    const sourceCoords = getSourceCoords(rank, channels);\n    const innerDims = channels.slice(-2);\n    const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n\n    this.userCode = `\n      void main() {\n        ${dtype} rc = getOutputCoords();\n        vec4 packedInput = getA(${sourceCoords});\n\n        setOutput(getChannel(packedInput, ${coords}));\n      }\n    `;\n  }\n}","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Import webgl flags.\nimport './flags_webgl';\n\nimport * as device_util from '../../device_util';\nimport {ENGINE, MemoryInfo, TimingInfo} from '../../engine';\nimport {ENV} from '../../environment';\nimport {tidy} from '../../globals';\nimport {warn} from '../../log';\nimport {buffer} from '../../ops/array_ops';\nimport * as array_ops_util from '../../ops/array_ops_util';\nimport * as axis_util from '../../ops/axis_util';\nimport {computeOutShape} from '../../ops/concat_util';\nimport {Conv2DInfo, Conv3DInfo} from '../../ops/conv_util';\nimport {Activation} from '../../ops/fused_util';\nimport * as gather_nd_util from '../../ops/gather_nd_util';\nimport * as reduce_util from '../../ops/reduce_util';\nimport * as scatter_nd_util from '../../ops/scatter_nd_util';\nimport * as segment_util from '../../ops/segment_util';\nimport {computeFlatOffset, getStridedSlicedInfo, isSliceContinous} from '../../ops/slice_util';\nimport {softmax} from '../../ops/softmax';\nimport {range, scalar, tensor} from '../../ops/tensor_ops';\nimport {DataId, Scalar, Tensor, Tensor1D, Tensor2D, Tensor3D, Tensor4D, Tensor5D} from '../../tensor';\nimport {DataType, DataTypeMap, DataValues, NumericDataType, PixelData, Rank, RecursiveArray, ShapeMap, sumOutType, TypedArray, upcastType} from '../../types';\nimport * as util from '../../util';\nimport {getArrayFromDType, getTypedArrayFromDType, inferDtype, sizeFromShape} from '../../util';\nimport {DataStorage, EPSILON_FLOAT16, EPSILON_FLOAT32, KernelBackend} from '../backend';\nimport * as backend_util from '../backend_util';\nimport {mergeRealAndImagArrays} from '../complex_util';\nimport {nonMaxSuppressionImpl} from '../non_max_suppression_impl';\nimport {split} from '../split_shared';\nimport {tile} from '../tile_impl';\nimport {topkImpl} from '../topk_impl';\nimport {whereImpl} from '../where_impl';\n\nimport {AddNProgram} from './addn_gpu';\nimport {AddNPackedProgram} from './addn_packed_gpu';\nimport {ArgMinMaxProgram} from './argminmax_gpu';\nimport {ArgMinMaxPackedProgram} from './argminmax_packed_gpu';\nimport {AvgPool2DBackpropProgram} from './avg_pool_backprop_gpu';\nimport {BatchNormProgram} from './batchnorm_gpu';\nimport {BatchNormPackedProgram} from './batchnorm_packed_gpu';\nimport * as binaryop_complex_gpu from './binaryop_complex_gpu';\nimport {BinaryOpComplexProgram} from './binaryop_complex_gpu';\nimport * as binaryop_gpu from './binaryop_gpu';\nimport {BinaryOpProgram} from './binaryop_gpu';\nimport * as binaryop_packed_gpu from './binaryop_packed_gpu';\nimport {BinaryOpPackedProgram} from './binaryop_packed_gpu';\nimport {getWebGLContext} from './canvas_util';\nimport {ClipProgram} from './clip_gpu';\nimport {ClipPackedProgram} from './clip_packed_gpu';\nimport {ComplexAbsProgram} from './complex_abs_gpu';\nimport {ConcatProgram} from './concat_gpu';\nimport {ConcatPackedProgram} from './concat_packed_gpu';\nimport {Conv2DDerFilterProgram, Conv2DDerInputProgram, Conv3DDerFilterProgram, Conv3DDerInputProgram} from './conv_backprop_gpu';\nimport {DepthwiseConv2DDerFilterProgram, DepthwiseConv2DDerInputProgram} from './conv_backprop_gpu_depthwise';\nimport {Conv2DProgram, Conv3DProgram} from './conv_gpu';\nimport {DepthwiseConv2DProgram} from './conv_gpu_depthwise';\nimport {DepthwiseConvPacked2DProgram} from './conv_packed_gpu_depthwise';\nimport {CropAndResizeProgram} from './crop_and_resize_gpu';\nimport {CumSumProgram} from './cumsum_gpu';\nimport {DecodeMatrixProgram} from './decode_matrix_gpu';\nimport {DecodeMatrixPackedProgram} from './decode_matrix_packed_gpu';\nimport {DepthToSpaceProgram} from './depth_to_space_gpu';\nimport {EncodeFloatProgram} from './encode_float_gpu';\nimport {EncodeFloatPackedProgram} from './encode_float_packed_gpu';\nimport {EncodeMatrixProgram} from './encode_matrix_gpu';\nimport {EncodeMatrixPackedProgram} from './encode_matrix_packed_gpu';\nimport * as fft_gpu from './fft_gpu';\nimport {FFTProgram} from './fft_gpu';\nimport {FillProgram} from './fill_gpu';\nimport {FromPixelsProgram} from './from_pixels_gpu';\nimport {FromPixelsPackedProgram} from './from_pixels_packed_gpu';\nimport {GatherProgram} from './gather_gpu';\nimport {GatherNDProgram} from './gather_nd_gpu';\nimport {GPGPUContext} from './gpgpu_context';\nimport * as gpgpu_math from './gpgpu_math';\nimport {GPGPUBinary, GPGPUProgram, TensorData} from './gpgpu_math';\nimport {Im2ColPackedProgram} from './im2col_packed_gpu';\nimport {LRNProgram} from './lrn_gpu';\nimport {LRNGradProgram} from './lrn_grad_gpu';\nimport {LRNPackedProgram} from './lrn_packed_gpu';\nimport {MaxPool2DBackpropProgram} from './max_pool_backprop_gpu';\nimport {MatMulPackedProgram} from './mulmat_packed_gpu';\nimport {MultinomialProgram} from './multinomial_gpu';\nimport {OneHotProgram} from './onehot_gpu';\nimport {PackProgram} from './pack_gpu';\nimport {PadProgram} from './pad_gpu';\nimport {PadPackedProgram} from './pad_packed_gpu';\nimport {Pool2DProgram} from './pool_gpu';\nimport {ReduceProgram} from './reduce_gpu';\nimport {ReshapePackedProgram} from './reshape_packed_gpu';\nimport {ResizeBilinearBackpropProgram} from './resize_bilinear_backprop_gpu';\nimport {ResizeBilinearProgram} from './resize_bilinear_gpu';\nimport {ResizeBilinearPackedProgram} from './resize_bilinear_packed_gpu';\nimport {ResizeNearestNeigborBackpropProgram} from './resize_nearest_neighbor_backprop_gpu';\nimport {ResizeNearestNeighborProgram} from './resize_nearest_neighbor_gpu';\nimport {ReverseProgram} from './reverse_gpu';\nimport {ReversePackedProgram} from './reverse_packed_gpu';\nimport {ScatterProgram} from './scatter_gpu';\nimport {SegmentOpProgram} from './segment_gpu';\nimport {SelectProgram} from './select_gpu';\nimport {SliceProgram} from './slice_gpu';\nimport {SlicePackedProgram} from './slice_packed_gpu';\nimport {StridedSliceProgram} from './strided_slice_gpu';\nimport * as tex_util from './tex_util';\nimport {TextureData, TextureUsage} from './tex_util';\nimport {TextureManager} from './texture_manager';\nimport {TileProgram} from './tile_gpu';\nimport {TransposeProgram} from './transpose_gpu';\nimport {TransposePackedProgram} from './transpose_packed_gpu';\nimport * as unary_op from './unaryop_gpu';\nimport {UnaryOpProgram} from './unaryop_gpu';\nimport * as unary_packed_op from './unaryop_packed_gpu';\nimport {UnaryOpPackedProgram} from './unaryop_packed_gpu';\nimport {UnpackProgram} from './unpack_gpu';\nimport * as webgl_util from './webgl_util';\n\ntype KernelInfo = {\n  name: string; query: Promise<number>;\n};\n\nexport type TimerNode = RecursiveArray<KernelInfo>|KernelInfo;\nexport interface CPUTimerQuery {\n  startMs: number;\n  endMs?: number;\n}\n\nexport interface WebGLMemoryInfo extends MemoryInfo {\n  numBytesInGPU: number;\n  unreliable: boolean;\n}\n\nexport interface WebGLTimingInfo extends TimingInfo {\n  uploadWaitMs: number;\n  downloadWaitMs: number;\n}\n\nconst binaryCaches: {[webGLVersion: string]: {[key: string]: GPGPUBinary}} = {};\n\nfunction getBinaryCache(webGLVersion: number) {\n  if (webGLVersion in binaryCaches) {\n    return binaryCaches[webGLVersion];\n  }\n  binaryCaches[webGLVersion] = {};\n  return binaryCaches[webGLVersion];\n}\n\nfunction mapActivationToShaderProgram(\n    activation: Activation, packed = false): string {\n  if (activation === 'linear') {\n    if (packed) {\n      return unary_packed_op.LINEAR;\n    }\n    return unary_op.LINEAR;\n  } else if (activation === 'relu') {\n    if (packed) {\n      return unary_packed_op.RELU;\n    }\n    return unary_op.RELU;\n  }\n  throw new Error(`Activation ${\n      activation} has not been implemented for the WebGL backend.`);\n}\n\n// Combines a dataId, a shape, and a dtype without a Tensor object so that\n// programs can be executed without a full Tensor object.\nexport interface TensorHandle {\n  dataId: DataId;\n  shape: number[];\n  dtype: DataType;\n}\n\n// Empirically determined constant used to determine size threshold for handing\n// off execution to the CPU.\nconst CPU_HANDOFF_SIZE_THRESHOLD = 128;\n\n// Empirically determined constant used to decide the number of MB on GPU\n// before we warn about high memory use. The MB are this constant * screen area\n// * dpi / 1024 / 1024.\nconst BEFORE_PAGING_CONSTANT = 600;\nfunction numMBBeforeWarning(): number {\n  if (ENV.global.screen == null) {\n    return 1024;  // 1 GB.\n  }\n  return (ENV.global.screen.height * ENV.global.screen.width *\n          window.devicePixelRatio) *\n      BEFORE_PAGING_CONSTANT / 1024 / 1024;\n}\n\n// Empirically determined minimal shared dimension in matmul before we forward\n// to a.mul(b).sum() in order to take advantage of GPU parallelism. See\n// https://github.com/tensorflow/tfjs-core/pull/1379 for benchmarks.\nexport const MATMUL_SHARED_DIM_THRESHOLD = 1000;\n\nexport class MathBackendWebGL implements KernelBackend {\n  private texData: DataStorage<TextureData>;\n  // Maps data ids that have a pending read operation, to list of subscribers.\n  private pendingRead = new WeakMap<DataId, Array<(arr: TypedArray) => void>>();\n  // List of data ids that are scheduled for disposal, but are waiting on a\n  // pending read operation.\n  private pendingDisposal = new WeakSet<DataId>();\n  // Used to count the number of 'shallow' sliced tensors that point to the\n  // same data id.\n  private dataRefCount = new WeakMap<DataId, number>();\n  private numBytesInGPU = 0;\n\n  private canvas: HTMLCanvasElement;\n  private fromPixels2DContext: CanvasRenderingContext2D;\n\n  private programTimersStack: TimerNode[];\n  private activeTimers: TimerNode[];\n  // Accumulated time spent (including blocking) in uploading data to webgl.\n  private uploadWaitMs = 0;\n  // Accumulated time spent (including blocking in downloading data from webgl.\n  private downloadWaitMs = 0;\n  private cpuBackend: KernelBackend;\n\n  // Number of bits of precision of this backend.\n  private floatPrecisionValue: 32|16;\n\n  private textureManager: TextureManager;\n  private binaryCache: {[key: string]: GPGPUBinary};\n  private gpgpuCreatedLocally: boolean;\n  private numMBBeforeWarning: number;\n  private warnedAboutMemory = false;\n\n  constructor(private gpgpu?: GPGPUContext) {\n    if (!ENV.getBool('HAS_WEBGL')) {\n      throw new Error('WebGL is not supported on this device');\n    }\n\n    if (gpgpu == null) {\n      const gl = getWebGLContext(ENV.getNumber('WEBGL_VERSION'));\n      this.binaryCache = getBinaryCache(ENV.getNumber('WEBGL_VERSION'));\n      this.gpgpu = new GPGPUContext(gl);\n      this.canvas = gl.canvas;\n      this.gpgpuCreatedLocally = true;\n    } else {\n      this.binaryCache = {};\n      this.gpgpuCreatedLocally = false;\n      this.canvas = gpgpu.gl.canvas;\n    }\n    this.textureManager = new TextureManager(this.gpgpu);\n    this.numMBBeforeWarning = numMBBeforeWarning();\n\n    this.texData = new DataStorage(this, ENGINE);\n  }\n\n  register(dataId: DataId, shape: number[], dtype: DataType): void {\n    if (this.texData.has(dataId)) {\n      throw new Error('Data buffer is already registered');\n    }\n    this.texData.set(dataId, {shape, dtype});\n  }\n\n  fromPixels(\n      pixels: PixelData|ImageData|HTMLImageElement|HTMLCanvasElement|\n      HTMLVideoElement,\n      numChannels: number): Tensor3D {\n    if (pixels == null) {\n      throw new Error(\n          'pixels passed to tf.browser.fromPixels() can not be null');\n    }\n    const texShape: [number, number] = [pixels.height, pixels.width];\n    const outShape = [pixels.height, pixels.width, numChannels];\n\n    if (ENV.getBool('IS_BROWSER')) {\n      if (!(pixels instanceof HTMLVideoElement) &&\n          !(pixels instanceof HTMLImageElement) &&\n          !(pixels instanceof HTMLCanvasElement) &&\n          !(pixels instanceof ImageData) &&\n          !((pixels as PixelData).data instanceof Uint8Array)) {\n        throw new Error(\n            'pixels passed to tf.browser.fromPixels() must be either an ' +\n            `HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData` +\n            ` or {data: Uint32Array, width: number, height: number}, ` +\n            `but was ${(pixels as {}).constructor.name}`);\n      }\n      if (pixels instanceof HTMLVideoElement) {\n        if (this.fromPixels2DContext == null) {\n          if (document.readyState !== 'complete') {\n            throw new Error(\n                'The DOM is not ready yet. Please call ' +\n                'tf.browser.fromPixels() once the DOM is ready. One way to ' +\n                'do that is to add an event listener for `DOMContentLoaded` ' +\n                'on the document object');\n          }\n          this.fromPixels2DContext =\n              document.createElement('canvas').getContext('2d');\n        }\n        this.fromPixels2DContext.canvas.width = pixels.width;\n        this.fromPixels2DContext.canvas.height = pixels.height;\n        this.fromPixels2DContext.drawImage(\n            pixels, 0, 0, pixels.width, pixels.height);\n        pixels = this.fromPixels2DContext.canvas;\n      }\n    }\n    const tempPixelHandle = this.makeTensorHandle(texShape, 'int32');\n    // This is a byte texture with pixels.\n    this.texData.get(tempPixelHandle.dataId).usage = TextureUsage.PIXELS;\n    this.gpgpu.uploadPixelDataToTexture(\n        this.getTexture(tempPixelHandle.dataId), pixels as ImageData);\n    let program, res;\n    if (ENV.getBool('WEBGL_PACK')) {\n      program = new FromPixelsPackedProgram(outShape);\n      const packedOutput =\n          this.makePackedTensor(program.outputShape, tempPixelHandle.dtype);\n      res = this.compileAndRun(program, [tempPixelHandle], packedOutput);\n    } else {\n      program = new FromPixelsProgram(outShape);\n      res = this.compileAndRun(program, [tempPixelHandle]);\n    }\n\n    this.disposeData(tempPixelHandle.dataId);\n\n    return res as Tensor3D;\n  }\n\n  private makeTensorHandle(shape: number[], dtype: DataType): TensorHandle {\n    const dataId = {};\n    this.register(dataId, shape, dtype);\n    return {dataId, shape, dtype};\n  }\n\n  write(dataId: DataId, values: DataValues): void {\n    if (values == null) {\n      throw new Error('MathBackendWebGL.write(): values can not be null');\n    }\n\n    if (ENV.getBool('DEBUG')) {\n      for (let i = 0; i < values.length; i++) {\n        const num = values[i] as number;\n        if (!webgl_util.canBeRepresented(num)) {\n          throw Error(`The value ${num} cannot be represented on this device.`);\n        }\n      }\n    }\n\n    const texData = this.texData.get(dataId);\n    const {dtype} = texData;\n    if (dtype === 'complex64') {\n      throw new Error(\n          `Cannot write to a complex64 dtype. ` +\n          `Please use tf.complex(real, imag).`);\n    }\n\n    this.releaseGPUData(dataId);\n    texData.usage = TextureUsage.UPLOAD;\n    texData.values = values;\n  }\n\n  readSync(dataId: DataId): DataValues {\n    const texData = this.texData.get(dataId);\n    const {values, dtype, complexTensors, slice, shape} = texData;\n    if (slice != null) {\n      const program = new UnaryOpProgram(shape, unary_op.CLONE);\n      const res = this.compileAndRun(program, [{dataId, shape, dtype}]);\n      const data = this.readSync(res.dataId);\n      (res as Tensor).dispose();\n      return data;\n    }\n    if (values != null) {\n      return this.convertAndCacheOnCPU(dataId);\n    }\n    if (dtype === 'string') {\n      return values;\n    }\n    const shouldTimeProgram = this.activeTimers != null;\n    let start: number;\n    if (shouldTimeProgram) {\n      start = performance.now();\n    }\n\n    let result: Float32Array;\n    if (dtype === 'complex64') {\n      const realValues = complexTensors.real.dataSync() as Float32Array;\n      const imagValues = complexTensors.imag.dataSync() as Float32Array;\n      result = mergeRealAndImagArrays(realValues, imagValues);\n    } else {\n      result = this.getValuesFromTexture(dataId);\n    }\n\n    if (shouldTimeProgram) {\n      this.downloadWaitMs += performance.now() - start;\n    }\n    return this.convertAndCacheOnCPU(dataId, result);\n  }\n\n  async read(dataId: DataId): Promise<DataValues> {\n    if (this.pendingRead.has(dataId)) {\n      const subscribers = this.pendingRead.get(dataId);\n      return new Promise<TypedArray>(resolve => subscribers.push(resolve));\n    }\n    const texData = this.texData.get(dataId);\n    const {values, shape, slice, dtype, complexTensors} = texData;\n\n    if (slice != null) {\n      const program = new UnaryOpProgram(shape, unary_op.CLONE);\n      const res = this.compileAndRun(program, [{dataId, shape, dtype}]);\n      const data = this.read(res.dataId);\n      (res as Tensor).dispose();\n      return data;\n    }\n\n    if (values != null) {\n      return this.convertAndCacheOnCPU(dataId);\n    }\n\n    if (!ENV.getBool('WEBGL_DOWNLOAD_FLOAT_ENABLED') &&\n        ENV.getNumber('WEBGL_VERSION') === 2) {\n      throw new Error(\n          `tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and ` +\n          `WEBGL_VERSION=2 not yet supported.`);\n    }\n\n    let buffer = null;\n    if (dtype !== 'complex64' && ENV.get('WEBGL_BUFFER_SUPPORTED')) {\n      // Possibly copy the texture into a buffer before inserting a fence.\n      const tmpTarget = this.decode(dataId);\n\n      dataId = tmpTarget.dataId;\n      const tmpData = this.texData.get(tmpTarget.dataId);\n\n      buffer = this.gpgpu.createBufferFromTexture(\n          tmpData.texture, ...tex_util.getDenseTexShape(shape));\n    }\n\n    this.pendingRead.set(dataId, []);\n\n    if (dtype !== 'complex64') {\n      // Create a fence and wait for it to resolve.\n      await this.gpgpu.createAndWaitForFence();\n    }\n\n    // Download the values from the GPU.\n    let vals: Float32Array;\n    if (dtype === 'complex64') {\n      const ps =\n          Promise.all([complexTensors.real.data(), complexTensors.imag.data()]);\n      const [realValues, imagValues] = await ps;\n      vals = mergeRealAndImagArrays(\n          realValues as Float32Array, imagValues as Float32Array);\n    } else if (buffer == null) {\n      vals = this.getValuesFromTexture(dataId);\n    } else {\n      const size = util.sizeFromShape(shape);\n\n      vals = this.gpgpu.downloadFloat32MatrixFromBuffer(buffer, size);\n      this.disposeData(dataId);\n    }\n    const dTypeVals = this.convertAndCacheOnCPU(dataId, vals);\n\n    const subscribers = this.pendingRead.get(dataId);\n    this.pendingRead.delete(dataId);\n\n    // Notify all pending reads.\n    subscribers.forEach(resolve => resolve(dTypeVals));\n    if (this.pendingDisposal.has(dataId)) {\n      this.pendingDisposal.delete(dataId);\n      this.disposeData(dataId);\n    }\n    return dTypeVals;\n  }\n\n  private getValuesFromTexture(dataId: DataId): Float32Array {\n    const {shape, dtype, isPacked} = this.texData.get(dataId);\n    const size = util.sizeFromShape(shape);\n    if (ENV.getBool('WEBGL_DOWNLOAD_FLOAT_ENABLED')) {\n      const tmpTarget = this.decode(dataId);\n      const tmpData = this.texData.get(tmpTarget.dataId);\n      const vals = this.gpgpu\n                       .downloadMatrixFromPackedTexture(\n                           tmpData.texture, ...tex_util.getDenseTexShape(shape))\n                       .subarray(0, size);\n\n      this.disposeData(tmpTarget.dataId);\n\n      return vals;\n    }\n\n    const shouldUsePackedProgram =\n        ENV.getBool('WEBGL_PACK') && isPacked === true;\n    const outputShape =\n        shouldUsePackedProgram ? webgl_util.getShapeAs3D(shape) : shape;\n    const tmpTarget =\n        this.makeTensorHandle(outputShape, 'float32') as TensorHandle &\n        {size: number};\n    tmpTarget.size = sizeFromShape(shape);\n    this.texData.get(tmpTarget.dataId).usage = TextureUsage.DOWNLOAD;\n\n    const output = tidy(() => {\n      const program = shouldUsePackedProgram ?\n          new EncodeFloatPackedProgram(\n              outputShape as [number, number, number]) :\n          new EncodeFloatProgram(outputShape);\n\n      return this.compileAndRun(\n          program, [{shape: outputShape, dtype, dataId}], tmpTarget, null);\n    });\n\n    const tmpData = this.texData.get(output.dataId);\n    const vals =\n        this.gpgpu\n            .downloadByteEncodedFloatMatrixFromOutputTexture(\n                tmpData.texture, tmpData.texShape[0], tmpData.texShape[1])\n            .subarray(0, size);\n    this.disposeData(tmpTarget.dataId);\n\n    return vals;\n  }\n\n  async time(f: () => void): Promise<WebGLTimingInfo> {\n    const oldActiveTimers = this.activeTimers;\n    const newActiveTimers: TimerNode[] = [];\n\n    let outerMostTime = false;\n    if (this.programTimersStack == null) {\n      this.programTimersStack = newActiveTimers;\n      outerMostTime = true;\n    } else {\n      this.activeTimers.push(newActiveTimers);\n    }\n    this.activeTimers = newActiveTimers;\n\n    f();\n\n    // needing to split these up because util.flatten only accepts certain types\n    const flattenedActiveTimerQueries =\n        util.flatten(this.activeTimers.map((d: KernelInfo) => d.query))\n            .filter(d => d != null);\n    const flattenedActiveTimerNames =\n        util.flatten(this.activeTimers.map((d: KernelInfo) => d.name))\n            .filter(d => d != null);\n\n    this.activeTimers = oldActiveTimers;\n\n    if (outerMostTime) {\n      this.programTimersStack = null;\n    }\n\n    const kernelMs = await Promise.all(flattenedActiveTimerQueries);\n\n    const res: WebGLTimingInfo = {\n      uploadWaitMs: this.uploadWaitMs,\n      downloadWaitMs: this.downloadWaitMs,\n      kernelMs: util.sum(kernelMs),\n      getExtraProfileInfo: () =>\n          kernelMs.map((d, i) => ({name: flattenedActiveTimerNames[i], ms: d}))\n              .map(d => `${d.name}: ${d.ms}`)\n              .join(', '),\n      wallMs: null  // will be filled by the engine\n    };\n    this.uploadWaitMs = 0;\n    this.downloadWaitMs = 0;\n    return res;\n  }\n  memory(): WebGLMemoryInfo {\n    return {unreliable: false, numBytesInGPU: this.numBytesInGPU} as\n        WebGLMemoryInfo;\n  }\n\n  private startTimer(): WebGLQuery|CPUTimerQuery {\n    if (ENV.getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0) {\n      return this.gpgpu.beginQuery();\n    }\n    return {startMs: performance.now(), endMs: null};\n  }\n\n  private endTimer(query: WebGLQuery|CPUTimerQuery): WebGLQuery|CPUTimerQuery {\n    if (ENV.getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0) {\n      this.gpgpu.endQuery();\n      return query;\n    }\n    (query as CPUTimerQuery).endMs = performance.now();\n    return query;\n  }\n\n  private async getQueryTime(query: WebGLQuery|CPUTimerQuery): Promise<number> {\n    if (ENV.getNumber('WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION') > 0) {\n      return this.gpgpu.waitForQueryAndGetTime(query as WebGLQuery);\n    }\n    const timerQuery = query as CPUTimerQuery;\n    return timerQuery.endMs - timerQuery.startMs;\n  }\n\n  disposeData(dataId: DataId): void {\n    if (this.pendingDisposal.has(dataId)) {\n      return;\n    }\n    if (this.pendingRead.has(dataId)) {\n      this.pendingDisposal.add(dataId);\n      return;\n    }\n    // No-op if already disposed.\n    if (!this.texData.has(dataId)) {\n      return;\n    }\n\n    this.releaseGPUData(dataId);\n    const {complexTensors} = this.texData.get(dataId);\n    if (complexTensors != null) {\n      complexTensors.real.dispose();\n      complexTensors.imag.dispose();\n    }\n    this.texData.delete(dataId);\n  }\n\n  private releaseGPUData(dataId: DataId): void {\n    const {texture, dtype, texShape, usage, isPacked, slice} =\n        this.texData.get(dataId);\n    const key = slice && slice.origDataId || dataId;\n    const refCount = this.dataRefCount.get(key);\n    if (refCount > 1) {\n      this.dataRefCount.set(key, refCount - 1);\n    } else {\n      this.dataRefCount.delete(key);\n      if (texture != null) {\n        this.numBytesInGPU -= this.computeBytes(texShape, dtype);\n        this.textureManager.releaseTexture(texture, texShape, usage, isPacked);\n      }\n    }\n    const texData = this.texData.get(dataId);\n    texData.texture = null;\n    texData.texShape = null;\n    texData.isPacked = false;\n    texData.slice = null;\n  }\n\n  getTexture(dataId: DataId): WebGLTexture {\n    this.uploadToGPU(dataId);\n    return this.texData.get(dataId).texture;\n  }\n\n  private getCPUBackend(): KernelBackend|null {\n    if (!ENV.getBool('WEBGL_CPU_FORWARD')) {\n      return null;\n    }\n\n    if (this.cpuBackend == null) {\n      this.cpuBackend = ENGINE.findBackend('cpu');\n    }\n\n    return this.cpuBackend;\n  }\n\n  /*\n  Tests whether all the inputs to an op are small and on the CPU. This heuristic\n  determines when it would be faster to execute a kernel on the CPU. WebGL\n  kernels opt into running this check and forwarding when appropriate.\n  TODO(https://github.com/tensorflow/tfjs/issues/872): Develop a more\n  sustainable strategy for optimizing backend execution of ops.\n   */\n  private shouldExecuteOnCPU(\n      inputs: Tensor[], sizeThreshold = CPU_HANDOFF_SIZE_THRESHOLD): boolean {\n    return this.getCPUBackend() != null &&\n        inputs.every(\n            input => this.texData.get(input.dataId).texture == null &&\n                input.size < sizeThreshold);\n  }\n\n  getGPGPUContext(): GPGPUContext {\n    return this.gpgpu;\n  }\n\n  complex<T extends Tensor>(real: T, imag: T): T {\n    const result = this.makeOutputArray(real.shape, 'complex64') as T;\n    const resultData = this.texData.get(result.dataId);\n    // The backend owns the reference to the underlying real and imaginary\n    // clones. These will explicitly get disposed when the complex tensor is\n    // disposed.\n    resultData.complexTensors = {\n      real: ENGINE.keep(real.clone()),\n      imag: ENGINE.keep(imag.clone())\n    };\n\n    return result;\n  }\n  real<T extends Tensor>(input: T): T {\n    const resultData = this.texData.get(input.dataId);\n    return resultData.complexTensors.real.clone() as T;\n  }\n  imag<T extends Tensor>(input: T): T {\n    const resultData = this.texData.get(input.dataId);\n    return resultData.complexTensors.imag.clone() as T;\n  }\n\n  slice<T extends Tensor>(x: T, begin: number[], size: number[]): T {\n    if (this.shouldExecuteOnCPU([x])) {\n      return this.cpuBackend.slice(x, begin, size);\n    }\n    // Short-circuit computation if the slice is zero-sized.\n    if (util.sizeFromShape(size) === 0) {\n      return tensor([], size, x.dtype) as T;\n    }\n    const {isPacked} = this.texData.get(x.dataId);\n    const isContinous = isSliceContinous(x.shape, begin, size);\n    if (isPacked || !isContinous) {\n      const program = ENV.getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n          new SlicePackedProgram(size) :\n          new SliceProgram(size);\n      const customSetup = program.getCustomSetupFunc(begin);\n      return this.compileAndRun(program, [x], null, customSetup);\n    }\n    this.uploadToGPU(x.dataId);\n    return this.shallowSlice(x, begin, size) as T;\n  }\n\n  private shallowSlice(x: Tensor, begin: number[], size: number[]): Tensor {\n    const xTexData = this.texData.get(x.dataId);\n    const t = Tensor.make(size, {}, x.dtype, this);\n    const newTexData = this.texData.get(t.dataId);\n    // Copy texture data from the original tensor.\n    Object.assign(newTexData, xTexData);\n    newTexData.shape = size;\n    newTexData.dtype = x.dtype;\n    let flatOffset = computeFlatOffset(begin, x.strides);\n    if (xTexData.slice) {\n      // We are slicing an already sliced tensor, so we have to accumulate\n      // the offset.\n      flatOffset += xTexData.slice.flatOffset;\n    }\n    newTexData.slice = {\n      flatOffset,\n      // Point to the original dataId, which is used to do ref counting.\n      origDataId: xTexData.slice && xTexData.slice.origDataId || x.dataId\n    };\n\n    // Increase the ref count for that data bucket.\n    const refCount = this.dataRefCount.get(newTexData.slice.origDataId) || 1;\n    this.dataRefCount.set(newTexData.slice.origDataId, refCount + 1);\n\n    return t;\n  }\n\n  stridedSlice<T extends Tensor>(\n      x: T, begin: number[], end: number[], strides: number[],\n      beginMask: number, endMask: number, ellipsisMask: number,\n      newAxisMask: number, shrinkAxisMask: number): T {\n    if (this.shouldExecuteOnCPU([x])) {\n      return this.cpuBackend.stridedSlice(\n          x, begin, end, strides, beginMask, endMask, ellipsisMask, newAxisMask,\n          shrinkAxisMask);\n    }\n\n    const [beginIndex, size, shrinkAxis] = getStridedSlicedInfo(\n        x.shape, begin, end, strides, beginMask, endMask, ellipsisMask,\n        newAxisMask, shrinkAxisMask);\n\n    const shape = size.filter((v, index) => shrinkAxis.indexOf(index) === -1);\n    if (shape.some(axis => axis === 0)) {\n      return tensor([], shape) as T;\n    }\n\n    const program =\n        new StridedSliceProgram(beginIndex, strides, size, shrinkAxis);\n    return this.compileAndRun(program, [x]);\n  }\n\n  reverse<T extends Tensor>(x: T, axis: number[]): T {\n    const program = ENV.getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n        new ReversePackedProgram(x.shape, axis) :\n        new ReverseProgram(x.shape, axis);\n    return this.compileAndRun(program, [x]);\n  }\n\n  concat(tensors: Tensor[], axis: number): Tensor {\n    if (this.shouldExecuteOnCPU(tensors)) {\n      return this.cpuBackend.concat(tensors, axis);\n    }\n\n    if (tensors.length === 1) {\n      return tensors[0];\n    }\n    if (tensors.length > ENV.getNumber('WEBGL_MAX_TEXTURES_IN_SHADER')) {\n      const midIndex = Math.floor(tensors.length / 2);\n      const leftSide = this.concat(tensors.slice(0, midIndex), axis);\n      const rightSide = this.concat(tensors.slice(midIndex), axis);\n      return this.concat([leftSide, rightSide], axis);\n    }\n    if (ENV.getBool('WEBGL_PACK_ARRAY_OPERATIONS') && tensors[0].rank > 1) {\n      const program = new ConcatPackedProgram(tensors.map(t => t.shape), axis);\n      return this.compileAndRun(program, tensors);\n    }\n    // Any concat of n-dimensional tensors across any axis can be reduced to\n    // a concatenation of two-dimensional tensors across the axis 1 by first\n    // partitioning the axes of the original tensors into those less than the\n    // axis to be concatenated and the rest. Then reshape the tensors\n    // into a two-dimensional tensor by collapsing these two sets of axes and\n    // concatenate the resulting matrices across the axis 1, finally reshaping\n    // the result to have the proper shape.\n    const outShape = computeOutShape(tensors.map(t => t.shape), axis);\n    const tensors2D =\n        tensors.map(t => t.as2D(-1, sizeFromShape(t.shape.slice(axis))));\n    const program = new ConcatProgram(tensors2D.map(t => t.shape));\n    const res = this.compileAndRun(program, tensors2D) as Tensor;\n    return res.reshape(outShape);\n  }\n\n  neg<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.NEG);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  batchMatMul(\n      a: Tensor3D, b: Tensor3D, transposeA: boolean,\n      transposeB: boolean): Tensor3D {\n    const outerShapeA = transposeA ? a.shape[2] : a.shape[1];\n    const outerShapeB = transposeB ? b.shape[1] : b.shape[2];\n    const sharedDim = transposeA ? a.shape[1] : a.shape[2];\n    const [batch, , ] = a.shape;\n\n    // Since the matrices are vectors, it is faster to call mul().sum()\n    // because sum() is O(sqrt(N)) due to divide-and-conquer.\n    if ((outerShapeA === 1 || outerShapeB === 1) &&\n        sharedDim > MATMUL_SHARED_DIM_THRESHOLD) {\n      if (transposeA) {\n        a = a.transpose([0, 2, 1]);\n      }\n      if (transposeB) {\n        b = b.transpose([0, 2, 1]);\n      }\n\n      const a3D = outerShapeB === 1 ? a : a.as3D(batch, sharedDim, 1);\n      const axis = outerShapeB === 1 ? 2 : 1;\n      const b3D = outerShapeB === 1 ? b.as3D(batch, 1, sharedDim) : b;\n      return this.multiply(a3D, b3D).sum(axis, true /* keepDims */);\n    }\n\n    const dtype = upcastType(a.dtype, b.dtype);\n\n    const program = new MatMulPackedProgram(\n        a.shape, [batch, outerShapeA, outerShapeB], transposeA, transposeB);\n    const output =\n        this.makePackedTensor(program.outputShape, dtype) as Tensor3D;\n    return this.compileAndRun<Tensor3D>(program, [a, b], output);\n  }\n\n  fusedBatchMatMul(\n      a: Tensor3D, b: Tensor3D, transposeA: boolean, transposeB: boolean,\n      bias?: Tensor, activation?: Activation): Tensor3D {\n    const outerShapeA = transposeA ? a.shape[2] : a.shape[1];\n    const outerShapeB = transposeB ? b.shape[1] : b.shape[2];\n    const [batch, , ] = a.shape;\n\n    const dtype = upcastType(a.dtype, b.dtype);\n\n    const program = new MatMulPackedProgram(\n        a.shape, [batch, outerShapeA, outerShapeB], transposeA, transposeB,\n        !!bias,\n        activation ? mapActivationToShaderProgram(activation, true) : null);\n    const output =\n        this.makePackedTensor(program.outputShape, dtype) as Tensor3D;\n    const inputs: TensorHandle[] = [a, b];\n    if (bias) {\n      inputs.push(bias);\n    }\n    return this.compileAndRun<Tensor3D>(program, inputs, output);\n  }\n\n  multiply(a: Tensor, b: Tensor): Tensor {\n    if (a.dtype === 'complex64') {\n      const aData = this.texData.get(a.dataId);\n      const bData = this.texData.get(b.dataId);\n\n      const realProgram = new BinaryOpComplexProgram(\n          binaryop_complex_gpu.COMPLEX_MULTIPLY.REAL, a.shape, b.shape);\n      const imagProgram = new BinaryOpComplexProgram(\n          binaryop_complex_gpu.COMPLEX_MULTIPLY.IMAG, a.shape, b.shape);\n\n      const inputs = [\n        this.makeComplexComponentTensorHandle(a, aData.complexTensors.real),\n        this.makeComplexComponentTensorHandle(a, aData.complexTensors.imag),\n        this.makeComplexComponentTensorHandle(b, bData.complexTensors.real),\n        this.makeComplexComponentTensorHandle(b, bData.complexTensors.imag)\n      ];\n      const real = this.compileAndRun<Tensor>(realProgram, inputs);\n      const imag = this.compileAndRun<Tensor>(imagProgram, inputs);\n\n      const complex = this.complex(real, imag);\n      real.dispose();\n      imag.dispose();\n      return complex;\n    }\n\n    if (this.shouldExecuteOnCPU([a, b])) {\n      return this.cpuBackend.multiply(a, b);\n    }\n    if (ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n      return this.packedBinaryOp(a, b, binaryop_gpu.MUL, a.dtype);\n    }\n    const program = new BinaryOpProgram(binaryop_gpu.MUL, a.shape, b.shape);\n    const output = this.makeOutputArray(program.outputShape, a.dtype) as Tensor;\n    return this.compileAndRun(program, [a, b], output) as Tensor;\n  }\n\n  batchNormalization(\n      x: Tensor4D, mean: Tensor4D|Tensor1D, variance: Tensor4D|Tensor1D,\n      varianceEpsilon: number, scale?: Tensor4D|Tensor1D,\n      offset?: Tensor4D|Tensor1D): Tensor4D {\n    const inputs = [x, mean, variance];\n\n    let offsetShape = null;\n    if (offset != null) {\n      offsetShape = offset.shape;\n      inputs.push(offset);\n    }\n\n    let scaleShape = null;\n    if (scale != null) {\n      scaleShape = scale.shape;\n      inputs.push(scale);\n    }\n\n    if (ENV.getBool('WEBGL_PACK_NORMALIZATION')) {\n      const batchNormPackedProgram = new BatchNormPackedProgram(\n          x.shape, mean.shape, variance.shape, offsetShape, scaleShape,\n          varianceEpsilon);\n      return this.compileAndRun<Tensor4D>(batchNormPackedProgram, inputs);\n    }\n\n    const batchNormProgram = new BatchNormProgram(\n        x.shape, mean.shape, variance.shape, offsetShape, scaleShape,\n        varianceEpsilon);\n    return this.compileAndRun(batchNormProgram, inputs);\n  }\n\n  localResponseNormalization4D(\n      x: Tensor4D, radius: number, bias: number, alpha: number,\n      beta: number): Tensor4D {\n    const program = ENV.getBool('WEBGL_PACK_NORMALIZATION') ?\n        new LRNPackedProgram(x.shape, radius, bias, alpha, beta) :\n        new LRNProgram(x.shape, radius, bias, alpha, beta);\n    return this.compileAndRun(program, [x]);\n  }\n\n  LRNGrad(\n      dy: Tensor4D, inputImage: Tensor4D, outputImage: Tensor4D,\n      depthRadius: number, bias: number, alpha: number,\n      beta: number): Tensor4D {\n    const program =\n        new LRNGradProgram(inputImage.shape, depthRadius, bias, alpha, beta);\n    return this.compileAndRun(program, [inputImage, outputImage, dy]);\n  }\n\n  tile<T extends Tensor>(x: T, reps: number[]): T {\n    if (x.dtype === 'string') {\n      const buf = buffer(x.shape, x.dtype, this.readSync(x.dataId) as string[]);\n      return tile(buf, reps) as T;\n    }\n    const program = new TileProgram(x.shape, reps);\n    return this.compileAndRun(program, [x]);\n  }\n\n  pad<T extends Tensor>(\n      x: T, paddings: Array<[number, number]>, constantValue: number): T {\n    const program = ENV.getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n        new PadPackedProgram(x.shape, paddings, constantValue) :\n        new PadProgram(x.shape, paddings, constantValue);\n    return this.compileAndRun(program, [x]);\n  }\n\n  transpose<T extends Tensor>(x: T, perm: number[]): T {\n    if (this.shouldExecuteOnCPU([x])) {\n      return this.cpuBackend.transpose(x, perm);\n    }\n    const program = ENV.getBool('WEBGL_PACK_ARRAY_OPERATIONS') ?\n        new TransposePackedProgram(x.shape, perm) :\n        new TransposeProgram(x.shape, perm);\n    return this.compileAndRun(program, [x]);\n  }\n\n  gather<T extends Tensor>(x: T, indices: Tensor1D, axis: number): T {\n    if (this.shouldExecuteOnCPU([x, indices])) {\n      return this.cpuBackend.gather(x, indices, axis);\n    }\n    const program = new GatherProgram(x.shape, indices.size, axis);\n    return this.compileAndRun(program, [x, indices]);\n  }\n\n  batchToSpaceND<T extends Tensor>(\n      x: T, blockShape: number[], crops: number[][]): T {\n    util.assert(\n        x.rank <= 4,\n        () => 'batchToSpaceND for rank > 4 with a WebGL backend not ' +\n            'implemented yet');\n    const prod = blockShape.reduce((a, b) => a * b);\n\n    const reshaped = array_ops_util.getReshaped(x.shape, blockShape, prod);\n    const permuted =\n        array_ops_util.getPermuted(reshaped.length, blockShape.length);\n    const reshapedPermuted =\n        array_ops_util.getReshapedPermuted(x.shape, blockShape, prod);\n    const sliceBeginCoords =\n        array_ops_util.getSliceBeginCoords(crops, blockShape.length);\n    const sliceSize =\n        array_ops_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n\n    return x.reshape(reshaped)\n               .transpose(permuted)\n               .reshape(reshapedPermuted)\n               .slice(sliceBeginCoords, sliceSize) as T;\n  }\n\n  spaceToBatchND<T extends Tensor>(\n      x: T, blockShape: number[], paddings: Array<[number, number]>): T {\n    util.assert(\n        x.rank <= 4,\n        () => 'spaceToBatchND for rank > 4 with a WebGL backend not ' +\n            'implemented yet');\n\n    const prod = blockShape.reduce((a, b) => a * b);\n\n    const completePaddings: Array<[number, number]> = [[0, 0]];\n    completePaddings.push(...paddings);\n    for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n      completePaddings.push([0, 0]);\n    }\n\n    const paddedX = x.pad(completePaddings);\n\n    const reshapedPaddedShape =\n        array_ops_util.getReshaped(paddedX.shape, blockShape, prod, false);\n\n    const permutedReshapedPaddedPermutation = array_ops_util.getPermuted(\n        reshapedPaddedShape.length, blockShape.length, false);\n\n    const flattenShape = array_ops_util.getReshapedPermuted(\n        paddedX.shape, blockShape, prod, false);\n\n    return paddedX.reshape(reshapedPaddedShape)\n               .transpose(permutedReshapedPaddedPermutation)\n               .reshape(flattenShape) as T;\n  }\n\n  private reduce(\n      x: Tensor2D, reduceType: 'all'|'any'|'max'|'min'|'sum'|'prod',\n      dtype: DataType): Tensor2D {\n    const batchSize = x.shape[0];\n    const inSize = x.shape[1];\n    const windowSize = reduce_util.computeOptimalWindowSize(inSize);\n    const reduceInfo = {windowSize, inSize, batchSize};\n    const program = new ReduceProgram(reduceInfo, reduceType);\n    const [rows, cols] = program.outputShape;\n    const output = this.makeOutputArray<Tensor2D>([rows, cols], dtype);\n\n    this.compileAndRun(program, [x], output);\n    // No need to run another GPGPU program.\n    if (output.shape[1] === 1) {\n      return output;\n    }\n    return this.reduce(output, reduceType, dtype);\n  }\n\n  private argReduce(\n      x: Tensor2D, reduceType: 'max'|'min',\n      bestIndicesA: Tensor2D = null): Tensor2D {\n    let batchSize = x.shape[0];\n    let inSize = x.shape[1];\n    if (bestIndicesA != null) {\n      batchSize = bestIndicesA.shape[0];\n      inSize = bestIndicesA.shape[1];\n    }\n    const windowSize = reduce_util.computeOptimalWindowSize(inSize);\n    const reduceInfo = {windowSize, inSize, batchSize};\n    const program =\n        new ArgMinMaxProgram(reduceInfo, reduceType, bestIndicesA == null);\n    const [rows, cols] = program.outputShape;\n    const output = this.makeOutputArray<Tensor2D>([rows, cols], 'int32');\n    const inputs = [x];\n    if (bestIndicesA != null) {\n      inputs.push(bestIndicesA);\n    }\n    this.compileAndRun(program, inputs, output);\n    // No need to run another GPGPU program.\n    if (output.shape[1] === 1) {\n      return output;\n    }\n    return this.argReduce(x, reduceType, output);\n  }\n\n  private argReducePacked(\n      x: Tensor, reduceType: 'max'|'min', bestIndicesA: Tensor = null): Tensor {\n    const inShape = bestIndicesA != null ? bestIndicesA.shape : x.shape;\n    const inSize = inShape[inShape.length - 1];\n    const windowSize = reduce_util.computeOptimalWindowSize(inSize);\n    const program = new ArgMinMaxPackedProgram(\n        inShape, windowSize, reduceType, bestIndicesA == null);\n    const output = this.makePackedTensor(program.outputShape, 'int32');\n    const inputs = bestIndicesA == null ? [x] : [x, bestIndicesA];\n    this.compileAndRun(program, inputs, output);\n    if (output.rank === x.rank) {\n      return this.argReducePacked(x, reduceType, output);\n    }\n    return output;\n  }\n\n  sum(x: Tensor, axes: number[]): Tensor {\n    axis_util.assertAxesAreInnerMostDims('sum', axes, x.rank);\n    const [outShape, reduceShape] =\n        axis_util.computeOutAndReduceShapes(x.shape, axes);\n    const inSize = util.sizeFromShape(reduceShape);\n    const a2D = x.as2D(-1, inSize);\n    const outputDType = sumOutType(x.dtype);\n    return this.reduce(a2D, 'sum', outputDType).reshape(outShape);\n  }\n\n  prod(x: Tensor, axes: number[]): Tensor {\n    if (this.shouldExecuteOnCPU([x])) {\n      return this.cpuBackend.prod(x, axes);\n    }\n\n    const [outShape, reduceShape] =\n        axis_util.computeOutAndReduceShapes(x.shape, axes);\n    const inSize = util.sizeFromShape(reduceShape);\n    const a2D = x.as2D(-1, inSize);\n    const outputDType = sumOutType(x.dtype);\n    return this.reduce(a2D, 'prod', outputDType).reshape(outShape);\n  }\n\n  unsortedSegmentSum<T extends Tensor>(\n      x: T, segmentIds: Tensor1D, numSegments: number): Tensor {\n    let axis = 0;\n    const permutation = axis_util.getAxesPermutation([axis], x.rank);\n    let permutedX = x;\n    if (permutation != null) {\n      permutedX = x.transpose(permutation);\n      axis = axis_util.getInnerMostAxes(1, x.rank)[0];\n    }\n\n    const outShape =\n        segment_util.computeOutShape(permutedX.shape, axis, numSegments);\n    const inSize = util.sizeFromShape([permutedX.shape[axis]]);\n    const a2D = permutedX.as2D(-1, inSize);\n    const outputDType = sumOutType(x.dtype);\n    let result =\n        this.segOpCompute(\n                a2D, 'unsortedSegmentSum', segmentIds, outputDType, numSegments)\n            .reshape(outShape);\n    if (permutation != null) {\n      result = result.transpose(axis_util.getUndoAxesPermutation(permutation));\n    }\n    return result;\n  }\n\n  private segOpCompute(\n      x: Tensor2D, segOpType: 'unsortedSegmentSum', segmentIds: Tensor1D,\n      dtype: DataType, numSegments: number): Tensor2D {\n    const batchSize = x.shape[0];\n    const inSize = x.shape[1];\n    const windowSize =\n        segment_util.segOpComputeOptimalWindowSize(inSize, numSegments);\n    const segOpInfo = {windowSize, inSize, batchSize, numSegments};\n    const program = new SegmentOpProgram(segOpInfo, segOpType);\n    const [rows, cols] = program.outputShape;\n    const output = this.makeOutputArray<Tensor2D>([rows, cols], dtype);\n    this.compileAndRun(program, [x, segmentIds], output);\n    // No need to run another GPGPU program.\n    if (output.shape[1] === numSegments) {\n      return output;\n    }\n    segmentIds = range(0, numSegments).tile([inSize / windowSize]);\n    return this.segOpCompute(output, segOpType, segmentIds, dtype, numSegments);\n  }\n\n  private argMinMaxReduce(x: Tensor, axis: number, reduceType: 'min'|'max'):\n      Tensor {\n    const axes = [axis];\n    axis_util.assertAxesAreInnerMostDims(\n        'arg' + reduceType.charAt(0).toUpperCase() + reduceType.slice(1), axes,\n        x.rank);\n    if (!ENV.getBool('WEBGL_PACK_REDUCE') || x.rank <= 2) {\n      const [outShape, reduceShape] =\n          axis_util.computeOutAndReduceShapes(x.shape, axes);\n      const inSize = util.sizeFromShape(reduceShape);\n      const a2D = x.as2D(-1, inSize);\n      return this.argReduce(a2D, reduceType).reshape(outShape);\n    }\n    return this.argReducePacked(x, reduceType);\n  }\n\n  argMin(x: Tensor, axis: number): Tensor {\n    return this.argMinMaxReduce(x, axis, 'min');\n  }\n\n  argMax(x: Tensor, axis: number): Tensor {\n    return this.argMinMaxReduce(x, axis, 'max');\n  }\n\n  cumsum(x: Tensor, axis: number, exclusive: boolean, reverse: boolean):\n      Tensor {\n    if (axis !== x.rank - 1) {\n      throw new Error(\n          `WebGL cumsum shader expects an inner-most axis=${x.rank - 1} ` +\n          `but got axis=${axis}`);\n    }\n    const program = new CumSumProgram(x.shape, exclusive, reverse);\n    return this.compileAndRun(program, [x]);\n  }\n\n  equal(a: Tensor, b: Tensor): Tensor {\n    if (ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n      return this.packedBinaryOp(a, b, binaryop_packed_gpu.EQUAL, 'bool');\n    }\n    const program = new BinaryOpProgram(binaryop_gpu.EQUAL, a.shape, b.shape);\n    const output = this.makeOutputArray(program.outputShape, 'bool');\n    return this.compileAndRun(program, [a, b], output);\n  }\n\n  notEqual(a: Tensor, b: Tensor): Tensor {\n    if (ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n      return this.packedBinaryOp(a, b, binaryop_packed_gpu.NOT_EQUAL, 'bool');\n    }\n    const program =\n        new BinaryOpProgram(binaryop_gpu.NOT_EQUAL, a.shape, b.shape);\n    const output = this.makeOutputArray(program.outputShape, 'bool');\n    return this.compileAndRun(program, [a, b], output);\n  }\n\n  less(a: Tensor, b: Tensor): Tensor {\n    if (this.shouldExecuteOnCPU([a, b])) {\n      return this.cpuBackend.less(a, b);\n    }\n\n    if (ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n      return this.packedBinaryOp(a, b, binaryop_packed_gpu.LESS, 'bool');\n    }\n\n    const program = new BinaryOpProgram(binaryop_gpu.LESS, a.shape, b.shape);\n    const output = this.makeOutputArray(program.outputShape, 'bool');\n    return this.compileAndRun(program, [a, b], output);\n  }\n\n  lessEqual(a: Tensor, b: Tensor): Tensor {\n    if (ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n      return this.packedBinaryOp(a, b, binaryop_packed_gpu.LESS_EQUAL, 'bool');\n    }\n    const program =\n        new BinaryOpProgram(binaryop_gpu.LESS_EQUAL, a.shape, b.shape);\n    const output = this.makeOutputArray(program.outputShape, 'bool');\n    return this.compileAndRun(program, [a, b], output);\n  }\n\n  greater(a: Tensor, b: Tensor): Tensor {\n    if (this.shouldExecuteOnCPU([a, b])) {\n      return this.cpuBackend.greater(a, b);\n    }\n\n    if (ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n      return this.packedBinaryOp(a, b, binaryop_packed_gpu.GREATER, 'bool');\n    }\n\n    const program = new BinaryOpProgram(binaryop_gpu.GREATER, a.shape, b.shape);\n    const output = this.makeOutputArray(program.outputShape, 'bool');\n    return this.compileAndRun(program, [a, b], output);\n  }\n\n  greaterEqual(a: Tensor, b: Tensor): Tensor {\n    if (ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n      return this.packedBinaryOp(\n          a, b, binaryop_packed_gpu.GREATER_EQUAL, 'bool');\n    }\n    const program =\n        new BinaryOpProgram(binaryop_gpu.GREATER_EQUAL, a.shape, b.shape);\n    const output = this.makeOutputArray(program.outputShape, 'bool');\n    return this.compileAndRun(program, [a, b], output);\n  }\n\n  logicalNot<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.LOGICAL_NOT);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  logicalAnd(a: Tensor, b: Tensor): Tensor {\n    if (ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n      return this.packedBinaryOp(a, b, binaryop_packed_gpu.LOGICAL_AND, 'bool');\n    }\n    const program =\n        new BinaryOpProgram(binaryop_gpu.LOGICAL_AND, a.shape, b.shape);\n    const output = this.makeOutputArray(program.outputShape, 'bool');\n    return this.compileAndRun(program, [a, b], output);\n  }\n\n  logicalOr(a: Tensor, b: Tensor): Tensor {\n    if (ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n      return this.packedBinaryOp(a, b, binaryop_packed_gpu.LOGICAL_OR, 'bool');\n    }\n    const program =\n        new BinaryOpProgram(binaryop_gpu.LOGICAL_OR, a.shape, b.shape);\n    const output = this.makeOutputArray(program.outputShape, 'bool');\n    return this.compileAndRun(program, [a, b], output);\n  }\n\n  select(condition: Tensor, a: Tensor, b: Tensor): Tensor {\n    const program = new SelectProgram(condition.rank, a.shape, a.rank);\n    const output =\n        this.makeOutputArray(program.outputShape, upcastType(a.dtype, b.dtype));\n    return this.compileAndRun(program, [condition, a, b], output);\n  }\n\n  where(condition: Tensor): Tensor2D {\n    warn(\n        'tf.where() in webgl locks the UI thread. ' +\n        'Call tf.whereAsync() instead');\n    const condVals = condition.dataSync();\n    return whereImpl(condition.shape, condVals);\n  }\n\n  topk<T extends Tensor>(x: T, k: number, sorted: boolean): [T, T] {\n    const xVals = x.dataSync();\n    return topkImpl(xVals, x.shape, x.dtype as NumericDataType, k, sorted);\n  }\n\n  min(x: Tensor, axes: number[]): Tensor {\n    axis_util.assertAxesAreInnerMostDims('min', axes, x.rank);\n    const [outShape, reduceShape] =\n        axis_util.computeOutAndReduceShapes(x.shape, axes);\n    const inSize = util.sizeFromShape(reduceShape);\n    const a2D = x.as2D(-1, inSize);\n    return this.reduce(a2D, 'min', a2D.dtype).reshape(outShape);\n  }\n\n  minimum(a: Tensor, b: Tensor): Tensor {\n    if (this.shouldExecuteOnCPU([a, b])) {\n      return this.cpuBackend.minimum(a, b);\n    }\n\n    const program = ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n        new BinaryOpPackedProgram(binaryop_packed_gpu.MIN, a.shape, b.shape) :\n        new BinaryOpProgram(binaryop_gpu.MIN, a.shape, b.shape);\n    return this.compileAndRun(program, [a, b]);\n  }\n\n  mod(a: Tensor, b: Tensor): Tensor {\n    const program = ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n        new BinaryOpPackedProgram(binaryop_packed_gpu.MOD, a.shape, b.shape) :\n        new BinaryOpProgram(binaryop_gpu.MOD, a.shape, b.shape);\n    return this.compileAndRun(program, [a, b]);\n  }\n\n  max(x: Tensor, axes: number[]): Tensor {\n    if (this.shouldExecuteOnCPU([x])) {\n      return this.cpuBackend.max(x, axes);\n    }\n\n    axis_util.assertAxesAreInnerMostDims('max', axes, x.rank);\n    const [outShape, reduceShape] =\n        axis_util.computeOutAndReduceShapes(x.shape, axes);\n    const inSize = util.sizeFromShape(reduceShape);\n    const a2D = x.as2D(-1, inSize);\n    return this.reduce(a2D, 'max', a2D.dtype).reshape(outShape);\n  }\n\n  maximum(a: Tensor, b: Tensor): Tensor {\n    if (this.shouldExecuteOnCPU([a, b])) {\n      return this.cpuBackend.maximum(a, b);\n    }\n\n    const program = ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n        new BinaryOpPackedProgram(binaryop_packed_gpu.MAX, a.shape, b.shape) :\n        new BinaryOpProgram(binaryop_gpu.MAX, a.shape, b.shape);\n    return this.compileAndRun(program, [a, b]);\n  }\n\n  all(x: Tensor, axes: number[]): Tensor {\n    axis_util.assertAxesAreInnerMostDims('all', axes, x.rank);\n    const [outShape, reduceShape] =\n        axis_util.computeOutAndReduceShapes(x.shape, axes);\n    const inSize = util.sizeFromShape(reduceShape);\n    const a2D = x.as2D(-1, inSize);\n    return this.reduce(a2D, 'all', a2D.dtype).reshape(outShape);\n  }\n\n  any(x: Tensor, axes: number[]): Tensor {\n    axis_util.assertAxesAreInnerMostDims('any', axes, x.rank);\n    const [outShape, reduceShape] =\n        axis_util.computeOutAndReduceShapes(x.shape, axes);\n    const inSize = util.sizeFromShape(reduceShape);\n    const a2D = x.as2D(-1, inSize);\n    return this.reduce(a2D, 'any', a2D.dtype).reshape(outShape);\n  }\n\n  squaredDifference(a: Tensor, b: Tensor): Tensor {\n    const program = ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n        new BinaryOpPackedProgram(\n            binaryop_gpu.SQUARED_DIFFERENCE, a.shape, b.shape) :\n        new BinaryOpProgram(binaryop_gpu.SQUARED_DIFFERENCE, a.shape, b.shape);\n    return this.compileAndRun(program, [a, b]);\n  }\n\n  realDivide(a: Tensor, b: Tensor): Tensor {\n    const op = binaryop_gpu.DIV;\n    const outputDtype = 'float32';\n    if (ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n      const checkOutOfBounds = true;\n      return this.packedBinaryOp(\n          a, b, binaryop_packed_gpu.DIV, outputDtype, checkOutOfBounds);\n    }\n    const program = new BinaryOpProgram(op, a.shape, b.shape);\n    const output = this.makeOutputArray(program.outputShape, outputDtype);\n    return this.compileAndRun<Tensor>(program, [a, b], output);\n  }\n\n  floorDiv(a: Tensor, b: Tensor): Tensor {\n    const op = binaryop_gpu.INT_DIV;\n    const outputDtype = 'int32';\n    if (ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n      return this.packedBinaryOp(\n          a, b, binaryop_packed_gpu.INT_DIV, outputDtype);\n    }\n    const program = new BinaryOpProgram(op, a.shape, b.shape);\n    const output = this.makeOutputArray(program.outputShape, outputDtype);\n    return this.compileAndRun<Tensor>(program, [a, b], output);\n  }\n\n  add(a: Tensor, b: Tensor): Tensor {\n    if (a.dtype === 'complex64' && b.dtype === 'complex64') {\n      return this.complexSeparableBinaryOp(a, b, binaryop_gpu.ADD);\n    }\n\n    if (this.shouldExecuteOnCPU([a, b])) {\n      return this.cpuBackend.add(a, b);\n    }\n\n    const dtype = upcastType(a.dtype, b.dtype);\n    if (ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n      return this.packedBinaryOp(a, b, binaryop_gpu.ADD, dtype);\n    }\n    const program = new BinaryOpProgram(binaryop_gpu.ADD, a.shape, b.shape);\n    const output = this.makeOutputArray(program.outputShape, dtype) as Tensor;\n    return this.compileAndRun<Tensor>(program, [a, b], output);\n  }\n\n  private packedBinaryOp(\n      a: TensorHandle, b: TensorHandle, op: string, dtype: DataType,\n      checkOutOfBounds = false) {\n    const program =\n        new BinaryOpPackedProgram(op, a.shape, b.shape, checkOutOfBounds);\n    const output = this.makePackedTensor(program.outputShape, dtype) as Tensor;\n    return this.compileAndRun<Tensor>(program, [a, b], output);\n  }\n\n  /**\n   * Computes a complex binary operation that can be decomposed into a simple\n   * binary operation on both the real and imagary parts.\n   */\n  private complexSeparableBinaryOp(a: Tensor, b: Tensor, op: string): Tensor {\n    const aData = this.texData.get(a.dataId);\n    const bData = this.texData.get(b.dataId);\n\n    const [real, imag] = [\n      [aData.complexTensors.real, bData.complexTensors.real],\n      [aData.complexTensors.imag, bData.complexTensors.imag]\n    ].map(complexParts => {\n      const [aPart, bPart] = complexParts;\n\n      const aHandle = this.makeComplexComponentTensorHandle(a, aPart);\n      const bHandle = this.makeComplexComponentTensorHandle(b, bPart);\n\n      const program = new BinaryOpProgram(op, a.shape, b.shape);\n      const output = this.makeOutputArray(\n                         program.outputShape,\n                         upcastType(aPart.dtype, bPart.dtype)) as Tensor;\n\n      return this.compileAndRun<Tensor>(program, [aHandle, bHandle], output);\n    });\n\n    const complex = this.complex(real, imag);\n    real.dispose();\n    imag.dispose();\n    return complex;\n  }\n\n  // Returns a TensorHandle with the complex shape and the dataId of the\n  // underlying part. We need to do this because a reshaped complex tensor is\n  // not reflected in its parts.\n  private makeComplexComponentTensorHandle(\n      complexTensor: Tensor, complexPart: Tensor): TensorHandle {\n    return {\n      dataId: complexPart.dataId,\n      dtype: complexPart.dtype,\n      shape: complexTensor.shape\n    };\n  }\n\n  addN<T extends Tensor>(tensors: T[]): T {\n    if (tensors.length === 1) {\n      return tensors[0];\n    }\n\n    // Limit the number of uploaded textures for optimization.\n    if (tensors.length > ENV.get('WEBGL_MAX_TEXTURES_IN_SHADER')) {\n      const midIndex = Math.floor(tensors.length / 2);\n      const leftSide = this.addN(tensors.slice(0, midIndex));\n      const rightSide = this.addN(tensors.slice(midIndex));\n      return this.addN([leftSide, rightSide]);\n    }\n\n    const dtype =\n        tensors.map(t => t.dtype).reduce((d1, d2) => upcastType(d1, d2));\n    const shapes = tensors.map(t => t.shape);\n    // We can make sure shapes are identical in op level.\n    const usePackedOp = ENV.getBool('WEBGL_PACK');\n    const program = usePackedOp ?\n        new AddNPackedProgram(tensors[0].shape, shapes) :\n        new AddNProgram(tensors[0].shape, shapes);\n    const output = usePackedOp ?\n        this.makePackedTensor(program.outputShape, dtype) as T :\n        this.makeOutputArray(program.outputShape, dtype) as T;\n    return this.compileAndRun<T>(program, tensors, output);\n  }\n\n  subtract(a: Tensor, b: Tensor): Tensor {\n    if (a.dtype === 'complex64' && b.dtype === 'complex64') {\n      return this.complexSeparableBinaryOp(a, b, binaryop_gpu.SUB);\n    }\n\n    if (this.shouldExecuteOnCPU([a, b])) {\n      return this.cpuBackend.subtract(a, b);\n    }\n    const dtype = upcastType(a.dtype, b.dtype);\n    if (ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS')) {\n      return this.packedBinaryOp(a, b, binaryop_gpu.SUB, a.dtype);\n    }\n    const program = new BinaryOpProgram(binaryop_gpu.SUB, a.shape, b.shape);\n    const output = this.makeOutputArray(program.outputShape, dtype) as Tensor;\n    return this.compileAndRun<Tensor>(program, [a, b], output);\n  }\n\n  pow<T extends Tensor>(a: T, b: Tensor): T {\n    const usePackedOp = ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS');\n    const program = usePackedOp ?\n        new BinaryOpPackedProgram(binaryop_packed_gpu.POW, a.shape, b.shape) :\n        new BinaryOpProgram(binaryop_gpu.POW, a.shape, b.shape);\n    const dtype = upcastType(a.dtype, b.dtype);\n    const output = usePackedOp ?\n        this.makePackedTensor(program.outputShape, dtype) as T :\n        this.makeOutputArray(program.outputShape, dtype) as T;\n    return this.compileAndRun<T>(program, [a, b], output);\n  }\n\n  ceil<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.CEIL);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  floor<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.FLOOR);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  sign<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.SIGN);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  isNaN<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.IS_NAN);\n    const output = this.makeOutputArray(program.outputShape, 'bool');\n    return this.compileAndRun(program, [x], output) as T;\n  }\n  isInf<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.IS_INF);\n    const output = this.makeOutputArray(program.outputShape, 'bool');\n    return this.compileAndRun(program, [x], output) as T;\n  }\n  isFinite<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.IS_FINITE);\n    const output = this.makeOutputArray(program.outputShape, 'bool');\n    return this.compileAndRun(program, [x], output) as T;\n  }\n\n  round<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.ROUND);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  exp<T extends Tensor>(x: T): T {\n    let program: UnaryOpProgram|UnaryOpPackedProgram;\n    if (ENV.getBool('WEBGL_PACK')) {\n      program = new UnaryOpPackedProgram(x.shape, unary_op.EXP);\n    } else {\n      program = new UnaryOpProgram(x.shape, unary_op.EXP);\n    }\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  expm1<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.EXPM1);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  log<T extends Tensor>(x: T): T {\n    let program: UnaryOpProgram|UnaryOpPackedProgram;\n    if (ENV.getBool('WEBGL_PACK')) {\n      program = new UnaryOpPackedProgram(x.shape, unary_packed_op.LOG);\n    } else {\n      program = new UnaryOpProgram(x.shape, unary_op.LOG);\n    }\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  log1p<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.LOG1P);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  sqrt<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.SQRT);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  rsqrt<T extends Tensor>(x: T): T {\n    if (this.shouldExecuteOnCPU([x])) {\n      return this.cpuBackend.rsqrt(x);\n    }\n    const program = new UnaryOpProgram(x.shape, unary_op.RSQRT);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  square<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.SQUARE);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  reciprocal<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.RECIPROCAL);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  relu<T extends Tensor>(x: T): T {\n    let program: UnaryOpProgram|UnaryOpPackedProgram;\n    if (ENV.getBool('WEBGL_PACK')) {\n      program = new UnaryOpPackedProgram(x.shape, unary_packed_op.RELU);\n    } else {\n      program = new UnaryOpProgram(x.shape, unary_op.RELU);\n    }\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  prelu<T extends Tensor>(x: T, alpha: T): T {\n    const program = ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n        new BinaryOpPackedProgram(\n            binaryop_packed_gpu.PRELU, x.shape, alpha.shape) :\n        new BinaryOpProgram(binaryop_gpu.PRELU, x.shape, alpha.shape);\n    return this.compileAndRun(program, [x, alpha]) as T;\n  }\n\n  elu<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.ELU);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  eluDer<T extends Tensor>(dy: T, y: T): T {\n    const program = ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n        new BinaryOpPackedProgram(\n            binaryop_packed_gpu.ELU_DER, dy.shape, y.shape) :\n        new BinaryOpProgram(binaryop_gpu.ELU_DER, dy.shape, y.shape);\n    return this.compileAndRun(program, [dy, y]) as T;\n  }\n\n  selu<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.SELU);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  int<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.TO_INT);\n    const output = this.makeOutputArray(program.outputShape, 'int32');\n    return this.compileAndRun(program, [x], output) as T;\n  }\n\n  clip<T extends Tensor>(x: T, min: number, max: number): T {\n    let program;\n    if (ENV.getBool('WEBGL_PACK_CLIP')) {\n      program = new ClipPackedProgram(x.shape);\n    } else {\n      program = new ClipProgram(x.shape);\n    }\n    const customSetup = program.getCustomSetupFunc(min, max);\n    return this.compileAndRun(program, [x], null, customSetup) as T;\n  }\n\n  abs<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.ABS);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  complexAbs<T extends Tensor>(x: T): T {\n    const xData = this.texData.get(x.dataId);\n\n    const program = new ComplexAbsProgram(x.shape);\n    const inputs = [\n      this.makeComplexComponentTensorHandle(x, xData.complexTensors.real),\n      this.makeComplexComponentTensorHandle(x, xData.complexTensors.imag),\n    ];\n\n    return this.compileAndRun<Tensor>(program, inputs) as T;\n  }\n\n  sigmoid<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.SIGMOID);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  softplus<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.SOFTPLUS);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  sin<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.SIN);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  cos<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.COS);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  tan<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.TAN);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  asin<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.ASIN);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  acos<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.ACOS);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  atan<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.ATAN);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  atan2<T extends Tensor>(a: T, b: T): T {\n    const program = ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS') ?\n        new BinaryOpPackedProgram(binaryop_packed_gpu.ATAN2, a.shape, b.shape) :\n        new BinaryOpProgram(binaryop_gpu.ATAN2, a.shape, b.shape);\n    return this.compileAndRun(program, [a, b]) as T;\n  }\n\n  sinh<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.SINH);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  cosh<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.COSH);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  tanh<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.TANH);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  asinh<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.ASINH);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  acosh<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.ACOSH);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  atanh<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.ATANH);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  erf<T extends Tensor>(x: T): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.ERF);\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  step<T extends Tensor>(x: T, alpha: number): T {\n    const program = new UnaryOpProgram(x.shape, unary_op.STEP(alpha));\n    return this.compileAndRun(program, [x]) as T;\n  }\n\n  conv2dByMatMul(x: Tensor4D, filter: Tensor4D, convInfo: Conv2DInfo):\n      Tensor4D {\n    // Reshapes conv2D input to 2D tensors, uses matMul and then reshape the\n    // result from 2D to 4D.\n    const xShape = x.shape;\n    const xTexData = this.texData.get(x.dataId);\n    const sharedMatMulDim = convInfo.inChannels;\n    const outerShapeX = xShape[0] * xShape[1] * xShape[2];\n    const outerShapeFilter = convInfo.outChannels;\n\n    // TODO: Once reduction ops are packed, batchMatMul will always be packed\n    // and we can remove this condition.\n    const batchMatMulWillBeUnpacked =\n        (outerShapeX === 1 || outerShapeFilter === 1) &&\n        sharedMatMulDim > MATMUL_SHARED_DIM_THRESHOLD;\n    const reshapeWillBeExpensive = xShape[2] % 2 !== 0 && !!xTexData.isPacked;\n\n    if (batchMatMulWillBeUnpacked || !ENV.getBool('WEBGL_LAZILY_UNPACK') ||\n        !ENV.getBool('WEBGL_PACK_BINARY_OPERATIONS') ||\n        !reshapeWillBeExpensive) {\n      const xReshaped =\n          this.reshape(\n              x, [1, xShape[0] * xShape[1] * xShape[2], convInfo.inChannels]) as\n          Tensor3D;\n      const filterReshaped =\n          this.reshape(\n              filter, [1, convInfo.inChannels, convInfo.outChannels]) as\n          Tensor3D;\n      return this.reshape<Rank.R4>(\n          this.batchMatMul(xReshaped, filterReshaped, false, false),\n          convInfo.outShape);\n    }\n\n    // Following optimization is specific to packed |x| with odd row count\n    // ('row count' refers to x.shape[2]): we avoid expensive packed 2x2\n    // reshape by padding row count to next, even number. When x.shape[2] is\n    // odd, the result of packed batchMatMul is the same (has the same texture\n    // layout and and values in the texture) as it is for even x.shape[2] + 1.\n    // We make the odd-rows tensor to look like even-rows tensor before the\n    // operation and, after the batchMatMul, fix the even-rows result to have\n    // odd number of rows.\n    const xReshaped =\n        Tensor.make(\n            [1, xShape[0] * xShape[1] * (xShape[2] + 1), convInfo.inChannels],\n            {dataId: x.dataId}, x.dtype, this) as Tensor3D;\n\n    // xTexData.shape gets referenced from GPGPUBinary.inShapeInfos.\n    // Decrementing row count, after batchMatMul->...->compileProgram leads to\n    // invalid row count within the reference in GPGPUBinary.inShapeInfos.\n    // Alternative fix would be to provide a copy to GPGPUBinary.inShapeInfos\n    // in compileProgram method, but that would affect compilation of all\n    // programs - instead, provide a copy here, with even row count, before\n    // calling batchMatMul->...->compileProgram and after that, the original\n    // xTexData.shape is restored.\n    const originalXTexDataShape = xTexData.shape;\n    xTexData.shape = xTexData.shape.slice();\n    xTexData.shape[xTexData.shape.length - 2]++;\n    util.assert(\n        webgl_util.isReshapeFree(xTexData.shape, xReshaped.shape),\n        () => `packed reshape ${xTexData.shape} to ${\n            xReshaped.shape} isn't free`);\n    const filterReshaped =\n        this.reshape(filter, [1, convInfo.inChannels, convInfo.outChannels]) as\n        Tensor3D;\n\n    const pointwiseConv =\n        this.batchMatMul(xReshaped, filterReshaped, false, false);\n    const pointwiseConvTexData = this.texData.get(pointwiseConv.dataId);\n    util.assert(\n        pointwiseConvTexData.isPacked,\n        () => 'batchMatMul result is expected to be packed');\n    // Restore the input shape to original.\n    xTexData.shape = originalXTexDataShape;\n    // Set the output shape - there is no need for expensive reshape as data\n    // layout is already correct.\n    pointwiseConvTexData.shape = convInfo.outShape;\n    return Tensor.make(\n               convInfo.outShape, {dataId: pointwiseConv.dataId},\n               pointwiseConv.dtype, this) as Tensor4D;\n  }\n\n  conv2dWithIm2Row(x: Tensor4D, filter: Tensor4D, convInfo: Conv2DInfo):\n      Tensor4D {\n    // Rearranges conv2d input so each block to be convolved over forms the\n    // column of a new matrix with shape [filterWidth * filterHeight *\n    // inChannels, outHeight * outWidth]. The filter is also rearranged so each\n    // output channel forms a row of a new matrix with shape [outChannels,\n    // filterWidth * filterHeight * inChannels]. The convolution is then\n    // computed by multiplying these matrices and reshaping the result.\n    const {\n      filterWidth,\n      filterHeight,\n      inChannels,\n      outWidth,\n      outHeight,\n    } = convInfo;\n\n    const sharedDim = filterWidth * filterHeight * inChannels;\n    const numCols = outHeight * outWidth;\n    const x2ColShape = [sharedDim, numCols];\n\n    const xSqueezed = x.squeeze([0]);\n    const w2Row = filter.reshape([1, sharedDim, -1]) as Tensor3D;\n\n    const im2ColProgram =\n        new Im2ColPackedProgram(x2ColShape, xSqueezed.shape, convInfo);\n    const im2Col =\n        this.compileAndRun<Tensor2D>(im2ColProgram, [xSqueezed]).reshape([\n          1, x2ColShape[0], x2ColShape[1]\n        ]) as Tensor3D;\n\n    const matmulProgram = new MatMulPackedProgram(\n        im2Col.shape, [1, numCols, convInfo.outChannels], true, false);\n    const product =\n        this.compileAndRun<Tensor4D>(matmulProgram, [im2Col, w2Row]);\n\n    return product.reshape([1, outHeight, outWidth, convInfo.outChannels]);\n  }\n\n  conv2d(x: Tensor4D, filter: Tensor4D, convInfo: Conv2DInfo): Tensor4D {\n    if (convInfo.filterHeight === 1 && convInfo.filterWidth === 1 &&\n        convInfo.dilationHeight === 1 && convInfo.dilationWidth === 1 &&\n        convInfo.strideHeight === 1 && convInfo.strideWidth === 1 &&\n        (convInfo.padInfo.type === 'SAME' ||\n         convInfo.padInfo.type === 'VALID')) {\n      return this.conv2dByMatMul(x, filter, convInfo);\n    }\n    if (ENV.getBool('WEBGL_CONV_IM2COL') && x.shape[0] === 1) {\n      return this.conv2dWithIm2Row(x, filter, convInfo);\n    }\n    const program = new Conv2DProgram(convInfo);\n    return this.compileAndRun(program, [x, filter]);\n  }\n\n  conv2dDerInput(dy: Tensor4D, filter: Tensor4D, convInfo: Conv2DInfo):\n      Tensor4D {\n    const program = new Conv2DDerInputProgram(convInfo);\n    return this.compileAndRun(program, [dy, filter]);\n  }\n\n  conv2dDerFilter(x: Tensor4D, dy: Tensor4D, convInfo: Conv2DInfo): Tensor4D {\n    const program = new Conv2DDerFilterProgram(convInfo);\n    return this.compileAndRun(program, [x, dy]);\n  }\n\n  depthwiseConv2D(x: Tensor4D, filter: Tensor4D, convInfo: Conv2DInfo):\n      Tensor4D {\n    let program: DepthwiseConv2DProgram|DepthwiseConvPacked2DProgram;\n    if (ENV.getBool('WEBGL_PACK_DEPTHWISECONV') && convInfo.strideWidth <= 2 &&\n        convInfo.outChannels / convInfo.inChannels === 1) {\n      program = new DepthwiseConvPacked2DProgram(convInfo);\n      return this.compileAndRun(\n          program, [x, filter],\n          this.makePackedTensor(convInfo.outShape, x.dtype));\n    }\n\n    program = new DepthwiseConv2DProgram(convInfo);\n    return this.compileAndRun(program, [x, filter]);\n  }\n\n  depthwiseConv2DDerInput(dy: Tensor4D, filter: Tensor4D, convInfo: Conv2DInfo):\n      Tensor4D {\n    const program = new DepthwiseConv2DDerInputProgram(convInfo);\n    return this.compileAndRun(program, [dy, filter]);\n  }\n\n  depthwiseConv2DDerFilter(x: Tensor4D, dy: Tensor4D, convInfo: Conv2DInfo):\n      Tensor4D {\n    const program = new DepthwiseConv2DDerFilterProgram(convInfo);\n    return this.compileAndRun(program, [x, dy]);\n  }\n\n  conv3d(x: Tensor5D, filter: Tensor5D, convInfo: Conv3DInfo): Tensor5D {\n    const program = new Conv3DProgram(convInfo);\n    return this.compileAndRun(program, [x, filter]);\n  }\n\n  conv3dDerInput(dy: Tensor5D, filter: Tensor5D, convInfo: Conv3DInfo):\n      Tensor5D {\n    const program = new Conv3DDerInputProgram(convInfo);\n    return this.compileAndRun(program, [dy, filter]);\n  }\n\n  conv3dDerFilter(x: Tensor5D, dy: Tensor5D, convInfo: Conv3DInfo): Tensor5D {\n    const program = new Conv3DDerFilterProgram(convInfo);\n    return this.compileAndRun(program, [x, dy]);\n  }\n\n  maxPool(x: Tensor4D, convInfo: Conv2DInfo): Tensor4D {\n    const program = new Pool2DProgram(convInfo, 'max', false);\n    const output =\n        this.makeOutputArray(program.outputShape, x.dtype) as Tensor4D;\n    return this.compileAndRun(program, [x], output);\n  }\n\n  avgPool(x: Tensor4D, convInfo: Conv2DInfo): Tensor4D {\n    const program = new Pool2DProgram(convInfo, 'avg', false);\n    const output = this.makeOutputArray(program.outputShape, 'float32');\n    return this.compileAndRun(program, [x], output) as Tensor4D;\n  }\n\n  maxPoolBackprop(dy: Tensor4D, x: Tensor4D, y: Tensor4D, convInfo: Conv2DInfo):\n      Tensor4D {\n    const getPositions = true;\n    const maxPoolPositionsProgram =\n        new Pool2DProgram(convInfo, 'max', getPositions);\n    const maxPoolPositions: Tensor4D =\n        this.compileAndRun(maxPoolPositionsProgram, [x]);\n\n    const maxPoolBackPropProgram = new MaxPool2DBackpropProgram(convInfo);\n    const output =\n        this.makeOutputArray(maxPoolBackPropProgram.outputShape, x.dtype);\n    const result = this.compileAndRun(\n        maxPoolBackPropProgram, [dy, maxPoolPositions], output);\n    maxPoolPositions.dispose();\n    return result as Tensor4D;\n  }\n\n  avgPoolBackprop(dy: Tensor4D, x: Tensor4D, convInfo: Conv2DInfo): Tensor4D {\n    const avgPoolBackpropProgram = new AvgPool2DBackpropProgram(convInfo);\n    const output =\n        this.makeOutputArray(avgPoolBackpropProgram.outputShape, x.dtype);\n    return this.compileAndRun(avgPoolBackpropProgram, [dy], output) as Tensor4D;\n  }\n\n  cast<T extends Tensor>(x: T, dtype: DataType): T {\n    return backend_util.castTensor(x, dtype, this);\n  }\n\n  unstack(x: Tensor, axis: number): Tensor[] {\n    const num = x.shape[axis];\n    const outShape: number[] = new Array(x.rank - 1);\n    let outIndex = 0;\n    for (let i = 0; i < x.rank; i++) {\n      if (i !== axis) {\n        outShape[outIndex++] = x.shape[i];\n      }\n    }\n\n    const begin = new Array(x.rank).fill(0);\n    const size = x.shape.slice();\n    size[axis] = 1;\n    const res = new Array(num);\n    for (let i = 0; i < res.length; i++) {\n      begin[axis] = i;\n      res[i] = this.slice(x, begin, size).reshape(outShape);\n    }\n    return res;\n  }\n\n  reshape<R extends Rank>(x: Tensor, shape: ShapeMap[R]): Tensor<R> {\n    const texData = this.texData.get(x.dataId);\n    if (texData.isPacked && !webgl_util.isReshapeFree(x.shape, shape) &&\n        !(texData.texture !== null &&\n          webgl_util.isReshapeFree(texData.shape, shape))) {\n      return this.packedReshape(x, shape);\n    }\n    return backend_util.reshapeTensor(x, shape);\n  }\n\n  resizeBilinear(\n      x: Tensor4D, newHeight: number, newWidth: number,\n      alignCorners: boolean): Tensor4D {\n    const program = ENV.getBool('WEBGL_PACK_IMAGE_OPERATIONS') ?\n        new ResizeBilinearPackedProgram(\n            x.shape, newHeight, newWidth, alignCorners) :\n        new ResizeBilinearProgram(x.shape, newHeight, newWidth, alignCorners);\n    return this.compileAndRun(program, [x]);\n  }\n\n  resizeBilinearBackprop(dy: Tensor4D, x: Tensor4D, alignCorners: boolean):\n      Tensor4D {\n    const program = new ResizeBilinearBackpropProgram(dy, x, alignCorners);\n\n    return this.compileAndRun(program, [dy]);\n  }\n\n  resizeNearestNeighbor(\n      x: Tensor4D, newHeight: number, newWidth: number,\n      alignCorners: boolean): Tensor4D {\n    const program = new ResizeNearestNeighborProgram(\n        x.shape, newHeight, newWidth, alignCorners);\n    return this.compileAndRun(program, [x]);\n  }\n\n  resizeNearestNeighborBackprop(\n      dy: Tensor4D, x: Tensor4D, alignCorners: boolean): Tensor4D {\n    const program =\n        new ResizeNearestNeigborBackpropProgram(dy, x, alignCorners);\n    return this.compileAndRun(program, [dy]);\n  }\n\n  multinomial(\n      logits: Tensor2D, normalized: boolean, numSamples: number,\n      seed: number): Tensor2D {\n    const probs = normalized ? logits : softmax(logits);\n    const batchSize = probs.shape[0];\n    const numOutcomes = probs.shape[1];\n    const program = new MultinomialProgram(batchSize, numOutcomes, numSamples);\n    const output =\n        this.makeOutputArray(program.outputShape, 'int32') as Tensor2D;\n    const customSetup = program.getCustomSetupFunc(seed);\n    return this.compileAndRun(program, [probs], output, customSetup);\n  }\n\n  oneHot(indices: Tensor1D, depth: number, onValue: number, offValue: number):\n      Tensor2D {\n    const program = new OneHotProgram(indices.size, depth, onValue, offValue);\n    return this.compileAndRun(program, [indices]);\n  }\n\n  nonMaxSuppression(\n      boxes: Tensor2D, scores: Tensor1D, maxOutputSize: number,\n      iouThreshold: number, scoreThreshold: number): Tensor1D {\n    warn(\n        'tf.nonMaxSuppression() in webgl locks the UI thread. ' +\n        'Call tf.nonMaxSuppressionAsync() instead');\n    const boxesVals = boxes.dataSync();\n    const scoresVals = scores.dataSync();\n    return nonMaxSuppressionImpl(\n        boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n  }\n\n  cropAndResize(\n      image: Tensor4D, boxes: Tensor2D, boxIndex: Tensor1D,\n      cropSize: [number, number], method: 'bilinear'|'nearest',\n      extrapolationValue: number): Tensor4D {\n    const program = new CropAndResizeProgram(\n        image.shape, boxes.shape, cropSize, method, extrapolationValue);\n    return this.compileAndRun(program, [image, boxes, boxIndex]);\n  }\n\n  depthToSpace(x: Tensor4D, blockSize: number, dataFormat: 'NHWC'|'NCHW'):\n      Tensor4D {\n    util.assert(\n        blockSize > 1,\n        () =>\n            `blockSize should be > 1 for depthToSpace, but was: ${blockSize}`);\n\n    const batchSize = x.shape[0];\n    const inputHeight = (dataFormat === 'NHWC') ? x.shape[1] : x.shape[2];\n    const inputWidth = (dataFormat === 'NHWC') ? x.shape[2] : x.shape[3];\n    const inputDepth = (dataFormat === 'NHWC') ? x.shape[3] : x.shape[1];\n\n    const outputHeight = inputHeight * blockSize;\n    const outputWidth = inputWidth * blockSize;\n    const outputDepth = inputDepth / (blockSize * blockSize);\n\n    const outputShape = (dataFormat === 'NHWC') ?\n        [batchSize, outputHeight, outputWidth, outputDepth] :\n        [batchSize, outputDepth, outputHeight, outputWidth];\n\n    const program = new DepthToSpaceProgram(outputShape, blockSize, dataFormat);\n    return this.compileAndRun(program, [x]);\n  }\n\n  split<T extends Tensor>(x: T, sizeSplits: number[], axis: number): T[] {\n    return split(x, sizeSplits, axis);\n  }\n\n  scatterND<R extends Rank>(\n      indices: Tensor, updates: Tensor, shape: ShapeMap[R]): Tensor<R> {\n    const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n        scatter_nd_util.calculateShapes(updates, indices, shape);\n\n    const flattenShape = [outputSize / sliceSize, sliceSize];\n    const flattenIndices = indices.reshape([numUpdates, sliceRank]);\n    const flattenX = updates.reshape([numUpdates, sliceSize]);\n\n    if (outputSize === 0) {\n      return backend_util.reshapeTensor(tensor([]), shape);\n    }\n    const defaultValue = scalar(0);\n    const program = new ScatterProgram(\n        numUpdates, sliceRank, flattenIndices.rank, flattenX.rank, strides,\n        flattenShape);\n    return (this.compileAndRun(\n                program, [flattenX, flattenIndices, defaultValue]) as Tensor)\n        .reshape(shape);\n  }\n\n  sparseToDense<R extends Rank>(\n      sparseIndices: Tensor, sparseValues: Tensor, outputShape: ShapeMap[R],\n      defaultValue: Scalar): Tensor<R> {\n    const {sliceRank, numUpdates, strides, outputSize} =\n        scatter_nd_util.calculateShapes(\n            sparseValues, sparseIndices, outputShape);\n\n    const sumDupeIndices = false;\n    const program = new ScatterProgram(\n        numUpdates, sliceRank, sparseIndices.rank, sparseValues.rank, strides,\n        [outputSize, 1], sumDupeIndices);\n    return (this.compileAndRun(\n                program, [sparseValues, sparseIndices, defaultValue]) as Tensor)\n        .reshape(outputShape);\n  }\n\n  fft(x: Tensor2D): Tensor2D {\n    const inverse = false;\n    return this.fftImpl(x, inverse);\n  }\n\n  ifft(x: Tensor2D): Tensor2D {\n    const inverse = true;\n    return this.fftImpl(x, inverse);\n  }\n\n  private fftImpl(x: Tensor2D, inverse: boolean): Tensor2D {\n    const xData = this.texData.get(x.dataId);\n\n    const realProgram =\n        new FFTProgram(fft_gpu.COMPLEX_FFT.REAL, x.shape, inverse);\n    const imagProgram =\n        new FFTProgram(fft_gpu.COMPLEX_FFT.IMAG, x.shape, inverse);\n    const inputs = [\n      this.makeComplexComponentTensorHandle(x, xData.complexTensors.real),\n      this.makeComplexComponentTensorHandle(x, xData.complexTensors.imag),\n    ];\n\n    const real = this.compileAndRun<Tensor>(realProgram, inputs);\n    const imag = this.compileAndRun<Tensor>(imagProgram, inputs);\n    const complex = this.complex(real, imag).as2D(x.shape[0], x.shape[1]);\n    real.dispose();\n    imag.dispose();\n    return complex;\n  }\n\n  gatherND(x: Tensor, indices: Tensor): Tensor {\n    const indicesShape = indices.shape;\n    const sliceRank = indicesShape[indicesShape.length - 1];\n\n    const [resultShape, numSlices, sliceSize, strides] =\n        gather_nd_util.prepareAndValidate(x, indices);\n\n    const flattenIndices = indices.reshape([numSlices, sliceRank]);\n    const flattenX = x.reshape([x.size / sliceSize, sliceSize]);\n    const program =\n        new GatherNDProgram(sliceRank, strides, [numSlices, sliceSize]);\n    return (this.compileAndRun(program, [flattenX, flattenIndices]) as Tensor)\n        .reshape(resultShape);\n  }\n\n  fill<R extends Rank>(\n      shape: ShapeMap[R], value: number|string, dtype?: DataType): Tensor<R> {\n    dtype = dtype || inferDtype(value);\n\n    if (dtype === 'string') {\n      // String type should be handled in CPU memory.\n      const values = getArrayFromDType(dtype, sizeFromShape(shape));\n      values.fill(value as string);\n      return Tensor.make(shape, {values}, dtype);\n    } else {\n      const program = new FillProgram(shape, value as number);\n      const customSetup = program.getCustomSetupFunc(value as number);\n      const output = this.makeOutputArray(shape, dtype) as Tensor<R>;\n      return this.compileAndRun(program, [], output, customSetup) as Tensor<R>;\n    }\n  }\n\n  onesLike<R extends Rank>(x: Tensor<R>): Tensor<R> {\n    if (x.dtype === 'string') {\n      throw new Error('onesLike is not supported under string dtype');\n    } else {\n      // TODO(cais, smilkov): Add WebGL shader for onesLike:\n      //   https://github.com/tensorflow/tfjs/issues/1293\n      return this.fill(x.shape, 1, x.dtype);\n    }\n  }\n\n  zerosLike<R extends Rank>(x: Tensor<R>): Tensor<R> {\n    return this.fill(x.shape, x.dtype === 'string' ? '' : 0, x.dtype);\n  }\n\n  linspace(start: number, stop: number, num: number): Tensor1D {\n    // TODO: Use CPU implementation due to the precision problem in Safari.\n    return backend_util.linspaceImpl(start, stop, num);\n  }\n\n  private makeOutputArray<T extends Tensor>(shape: number[], dtype: DataType):\n      T {\n    return Tensor.make(shape, {}, dtype, this) as T;\n  }\n\n  private makePackedTensor<T extends Tensor, D extends DataType = 'float32'>(\n      shape: number[], dtype?: D): T {\n    const packedTensor = Tensor.make(shape, {}, dtype, this);\n    this.texData.get(packedTensor.dataId).isPacked = true;\n    return packedTensor as T;\n  }\n\n  private unpackTensor<T extends Tensor>(input: T|TensorHandle): T {\n    const program = new UnpackProgram(input.shape);\n    return this.compileAndRun(\n        program, [input],\n        Tensor.make(program.outputShape, {}, input.dtype, this));\n  }\n\n  private packTensor<T extends Tensor>(input: T|TensorHandle): T {\n    const program = new PackProgram(input.shape);\n    return this.compileAndRun(\n        program, [input], this.makePackedTensor(input.shape, input.dtype), null,\n        true);\n  }\n\n  private packedReshape<R extends Rank>(input: Tensor, afterShape: ShapeMap[R]):\n      Tensor<R> {\n    const inputAs3D = input.reshape([\n      webgl_util.getBatchDim(input.shape),\n      ...webgl_util.getRowsCols(input.shape)\n    ]);\n    const afterShapeAs3D = [\n      webgl_util.getBatchDim(afterShape), ...webgl_util.getRowsCols(afterShape)\n    ];\n    const program = new ReshapePackedProgram(\n        afterShapeAs3D as [number, number, number],\n        inputAs3D.shape as [number, number, number]);\n    return this.compileAndRun<Tensor<R>>(program, [inputAs3D])\n        .reshape(afterShape);\n  }\n\n  private decode(dataId: DataId): TensorHandle {\n    const texData = this.texData.get(dataId);\n    const {isPacked, shape, dtype} = texData;\n    const shapeAs3D =\n        webgl_util.getShapeAs3D(shape) as [number, number, number];\n    const denseTexShape = tex_util.getDenseTexShape(shape);\n\n    const tmpTarget = this.makeTensorHandle(shape, 'float32') as TensorHandle &\n        {size: number};\n    this.texData.get(tmpTarget.dataId).isPacked = true;\n    this.texData.get(tmpTarget.dataId).dtype = dtype;\n    this.texData.get(tmpTarget.dataId).texShape =\n        denseTexShape.map(\n            d => d * 2) as [number, number];  // To undo the effect of isPacked\n                                              // being set to true.\n\n    let program;\n    if (isPacked) {\n      program = new DecodeMatrixPackedProgram(shapeAs3D, denseTexShape);\n    } else {\n      program = new DecodeMatrixProgram(shapeAs3D, denseTexShape);\n    }\n\n    this.compileAndRun(\n        program, [{shape: shapeAs3D, dtype, dataId}], tmpTarget, null, true);\n    return tmpTarget;\n  }\n\n  public compileAndRun<\n      K extends {dtype: DataType, size: number, dataId: {}, shape: number[]}>(\n      program: GPGPUProgram, inputs: TensorHandle[], output?: K,\n      customSetup?: (gpgpu: GPGPUContext, webGLProgram: WebGLProgram) => void,\n      preventEagerUnpackingOfOutput = false): K {\n    if (output == null) {\n      if (program.usesPackedTextures) {\n        output = this.makePackedTensor(program.outputShape, inputs[0].dtype) as\n            {} as K;\n      } else {\n        output = this.makeOutputArray(program.outputShape, inputs[0].dtype) as\n            {} as K;\n      }\n    }\n\n    if (output.size === 0) {\n      // Short-circuit the computation since the result is empty (has 0 in its\n      // shape).\n      this.texData.get(output.dataId).values =\n          getTypedArrayFromDType(output.dtype as 'float32', 0);\n      return output;\n    }\n\n    const inputsData: TensorData[] = inputs.map(input => {\n      if (input.dtype === 'complex64') {\n        throw new Error(\n            `GPGPUProgram does not support complex64 input. For complex64 ` +\n            `dtypes, please separate the program into real and imaginary ` +\n            `parts.`);\n      }\n\n      let texData = this.texData.get(input.dataId);\n\n      if (texData.texture == null) {\n        if (!program.usesPackedTextures &&\n            util.sizeFromShape(input.shape) <=\n                ENV.getNumber('WEBGL_SIZE_UPLOAD_UNIFORM')) {\n          // Upload small tensors that live on the CPU as uniforms, not as\n          // textures. Do this only when the environment supports 32bit floats\n          // due to problems when comparing 16bit floats with 32bit floats.\n          // TODO(https://github.com/tensorflow/tfjs/issues/821): Make it\n          // possible for packed shaders to sample from uniforms.\n          return {\n            shape: input.shape,\n            texData: null,\n            isUniform: true,\n            uniformValues: texData.values as TypedArray\n          };\n        }\n\n        // This ensures that if a packed program's inputs have not yet been\n        // uploaded to the GPU, they get uploaded as packed right off the bat.\n        if (program.usesPackedTextures) {\n          texData.isPacked = true;\n          texData.shape = input.shape;\n        }\n      } else if (!!texData.isPacked !== !!program.usesPackedTextures) {\n        input = texData.isPacked ? this.unpackTensor(input) :\n                                   this.packTensor(input);\n        texData = this.texData.get(input.dataId);\n      } else if (\n          texData.isPacked &&\n          !webgl_util.isReshapeFree(texData.shape, input.shape)) {\n        // This is a special case where a texture exists for a tensor\n        // but the shapes are incompatible (due to packing constraints) because\n        // the tensor did not have a chance to go through the packed reshape\n        // shader. This only happens when we reshape the *same* tensor to form\n        // *distinct* inputs to an op, e.g. dotting a vector with itself. This\n        // case will disappear once packed uploading is the default.\n\n        const savedInput = input;\n        const targetShape = input.shape;\n\n        input.shape = texData.shape;\n        input = this.packedReshape(input as Tensor, targetShape);\n        texData = this.texData.get(input.dataId);\n\n        savedInput.shape = targetShape;\n      }\n\n      this.uploadToGPU(input.dataId);\n      return {shape: input.shape, texData, isUniform: false};\n    });\n\n    this.uploadToGPU(output.dataId);\n    const outputData: TensorData = {\n      shape: output.shape,\n      texData: this.texData.get(output.dataId),\n      isUniform: false\n    };\n    const key = gpgpu_math.makeShaderKey(program, inputsData, outputData);\n    const binary = this.getAndSaveBinary(key, () => {\n      return gpgpu_math.compileProgram(\n          this.gpgpu, program, inputsData, outputData);\n    });\n    const shouldTimeProgram = this.activeTimers != null;\n    let query: WebGLQuery|CPUTimerQuery;\n    if (shouldTimeProgram) {\n      query = this.startTimer();\n    }\n\n    gpgpu_math.runProgram(\n        this.gpgpu, binary, inputsData, outputData, customSetup);\n\n    if (shouldTimeProgram) {\n      query = this.endTimer(query);\n      this.activeTimers.push(\n          {name: program.constructor.name, query: this.getQueryTime(query)});\n    }\n\n    if (!ENV.getBool('WEBGL_LAZILY_UNPACK') &&\n        this.texData.get(output.dataId).isPacked &&\n        preventEagerUnpackingOfOutput === false) {\n      return this.unpackTensor(output as {} as Tensor) as {} as K;\n    }\n    return output;\n  }\n\n  private getAndSaveBinary(key: string, getBinary: () => GPGPUBinary):\n      GPGPUBinary {\n    if (!(key in this.binaryCache)) {\n      this.binaryCache[key] = getBinary();\n    }\n    return this.binaryCache[key];\n  }\n\n  getTextureManager(): TextureManager {\n    return this.textureManager;\n  }\n\n  private disposed = false;\n\n  dispose() {\n    if (this.disposed) {\n      return;\n    }\n    this.textureManager.dispose();\n    if (this.canvas != null && this.canvas.remove != null) {\n      this.canvas.remove();\n    } else {\n      this.canvas = null;\n    }\n    if (this.fromPixels2DContext != null &&\n        this.fromPixels2DContext.canvas.remove != null) {\n      this.fromPixels2DContext.canvas.remove();\n    }\n    if (this.gpgpuCreatedLocally) {\n      this.gpgpu.program = null;\n      this.gpgpu.dispose();\n    }\n    this.disposed = true;\n  }\n\n  floatPrecision(): 16|32 {\n    if (this.floatPrecisionValue == null) {\n      this.floatPrecisionValue = tidy(() => {\n        // Momentarily switching DEBUG flag to false so we don't throw an error\n        // trying to upload a small value.\n        const debugFlag = ENV.getBool('DEBUG');\n        ENV.set('DEBUG', false);\n        const underflowCheckValue = this.abs(scalar(1e-8)).dataSync()[0];\n        ENV.set('DEBUG', debugFlag);\n\n        if (underflowCheckValue > 0) {\n          return 32;\n        }\n        return 16;\n      });\n    }\n    return this.floatPrecisionValue;\n  }\n  /** Returns the smallest representable number.  */\n  epsilon(): number {\n    return this.floatPrecision() === 32 ? EPSILON_FLOAT32 : EPSILON_FLOAT16;\n  }\n\n  private uploadToGPU(dataId: DataId): void {\n    const texData = this.texData.get(dataId);\n    const {shape, dtype, values, texture, usage, isPacked} = texData;\n\n    if (texture != null) {\n      // Array is already on GPU. No-op.\n      return;\n    }\n    const shouldTimeProgram = this.activeTimers != null;\n    let start: number;\n    if (shouldTimeProgram) {\n      start = performance.now();\n    }\n\n    let texShape = texData.texShape;\n    if (texShape == null) {\n      texShape = webgl_util.getTextureShapeFromLogicalShape(shape, isPacked);\n      texData.texShape = texShape;\n    }\n\n    if (values != null) {\n      const shapeAs3D = webgl_util.getShapeAs3D(shape);\n\n      let program;\n      let width = texShape[1], height = texShape[0];\n      const isByteArray = values instanceof Uint8Array;\n\n      if (isPacked) {\n        [width, height] = tex_util.getPackedMatrixTextureShapeWidthHeight(\n            texShape[0], texShape[1]);\n        program = new EncodeMatrixPackedProgram(\n            shapeAs3D, [height, width], isByteArray);\n      } else {\n        program =\n            new EncodeMatrixProgram(shapeAs3D, [height, width], isByteArray);\n      }\n\n      const tempDenseInputHandle =\n          this.makeTensorHandle([height, width], dtype);\n      if (isByteArray) {\n        this.texData.get(tempDenseInputHandle.dataId).usage =\n            TextureUsage.PIXELS;\n      } else {\n        this.texData.get(tempDenseInputHandle.dataId).usage =\n            TextureUsage.UPLOAD;\n      }\n      this.gpgpu.uploadDenseMatrixToTexture(\n          this.getTexture(tempDenseInputHandle.dataId), width, height,\n          values as TypedArray);\n\n      const encodedOutputTarget =\n          this.makeTensorHandle(\n              program.outputShape, tempDenseInputHandle.dtype) as TensorHandle &\n          {size: number};\n      encodedOutputTarget.size = sizeFromShape(program.outputShape);\n      this.texData.get(encodedOutputTarget.dataId).isPacked = isPacked;\n      this.compileAndRun(program, [tempDenseInputHandle], encodedOutputTarget);\n\n      // Have the original texture assume the identity of the encoded output.\n      const outputTexData = this.texData.get(encodedOutputTarget.dataId);\n      texData.texture = outputTexData.texture;\n      texData.texShape = outputTexData.texShape;\n      texData.isPacked = outputTexData.isPacked;\n      texData.usage = outputTexData.usage;\n\n      this.disposeData(tempDenseInputHandle.dataId);\n      this.texData.delete(encodedOutputTarget.dataId);\n\n      // Once uploaded, don't store the values on cpu.\n      texData.values = null;\n      if (shouldTimeProgram) {\n        this.uploadWaitMs += performance.now() - start;\n      }\n    } else {\n      const newTexture = this.acquireTexture(texShape, usage, dtype, isPacked);\n      texData.texture = newTexture;\n    }\n  }\n\n  private convertAndCacheOnCPU(dataId: DataId, float32Values?: Float32Array):\n      TypedArray {\n    const texData = this.texData.get(dataId);\n    const {dtype} = texData;\n\n    this.releaseGPUData(dataId);\n\n    if (float32Values != null) {\n      texData.values = float32ToTypedArray(float32Values, dtype as 'float32');\n    }\n    return texData.values as TypedArray;\n  }\n\n  private acquireTexture(\n      texShape: [number, number], texType: TextureUsage, dtype: DataType,\n      isPacked: boolean): WebGLTexture {\n    this.numBytesInGPU += this.computeBytes(texShape, dtype);\n    if (!this.warnedAboutMemory &&\n        this.numBytesInGPU > this.numMBBeforeWarning * 1024 * 1024) {\n      const mb = (this.numBytesInGPU / 1024 / 1024).toFixed(2);\n      this.warnedAboutMemory = true;\n      console.warn(\n          `High memory usage in GPU: ${mb} MB, ` +\n          `most likely due to a memory leak`);\n    }\n    return this.textureManager.acquireTexture(texShape, texType, isPacked);\n  }\n\n  private computeBytes(shape: [number, number], dtype: DataType) {\n    return shape[0] * shape[1] * util.bytesPerElement(dtype);\n  }\n}\n\nif (device_util.isBrowser()) {\n  ENGINE.registerBackend(\n      'webgl', () => new MathBackendWebGL(), 2 /* priority */);\n}\n\nfunction float32ToTypedArray<D extends NumericDataType>(\n    a: Float32Array, dtype: D): DataTypeMap[D] {\n  if (dtype === 'float32' || dtype === 'complex64') {\n    return a as DataTypeMap[D];\n  } else if (dtype === 'int32' || dtype === 'bool') {\n    const result = (dtype === 'int32') ? new Int32Array(a.length) :\n                                         new Uint8Array(a.length);\n    for (let i = 0; i < result.length; ++i) {\n      result[i] = Math.round(a[i]);\n    }\n    return result as DataTypeMap[D];\n  } else {\n    throw new Error(`Unknown dtype ${dtype}`);\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {nearestDivisor} from '../util';\n\nimport {PARALLELIZE_THRESHOLD} from './reduce_util';\n\nexport interface SegOpInfo {\n  windowSize: number;\n  batchSize: number;\n  inSize: number;\n  numSegments: number;\n}\n\nexport function segOpComputeOptimalWindowSize(\n    inSize: number, numSegments: number): number {\n  let done = false;\n  let res;\n\n  if (inSize <= PARALLELIZE_THRESHOLD) {\n    res = inSize;\n    done = true;\n  } else {\n    res = nearestDivisor(inSize, Math.floor(Math.sqrt(inSize)));\n  }\n\n  while (!done) {\n    if (res > numSegments || res === inSize) {\n      done = true;\n    } else {\n      res = nearestDivisor(inSize, res + 1);\n    }\n  }\n  return res;\n}\n\nexport function computeOutShape(\n    aShape: number[], axis: number, numSegments: number): number[] {\n  const outShape = [];\n  const rank = aShape.length;\n  for (let dim = 0; dim < rank; dim++) {\n    if (dim !== axis) {\n      outShape.push(aShape[dim]);\n    } else {\n      outShape.push(numSegments);\n    }\n  }\n  return outShape;\n}\n\nexport interface GatherOpShapeInfo {\n  batchSize: number;\n  sliceSize: number;\n  dimSize: number;\n  outputShape: number[];\n}\nexport function collectGatherOpShapeInfo(\n    x: Tensor, indices: Tensor, axis: number): GatherOpShapeInfo {\n  const dimSize = x.shape[axis];\n\n  const outputShape: number[] = [];\n  let batchSize = 1;\n  let sliceSize = 1;\n  for (let i = 0; i < axis; i++) {\n    outputShape.push(x.shape[i]);\n    batchSize *= x.shape[i];\n  }\n\n  for (let i = 0; i < indices.rank; i++) {\n    outputShape.push(indices.shape[i]);\n  }\n\n  for (let i = axis + 1; i < x.rank; i++) {\n    outputShape.push(x.shape[i]);\n    sliceSize *= x.shape[i];\n  }\n\n  return {batchSize, sliceSize, dimSize, outputShape};\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\nimport {op} from './operation';\nimport {scalar, zerosLike} from './tensor_ops';\n\n/**\n * Computes `-1 * x` element-wise.\n *\n * ```js\n * const x = tf.tensor2d([1, 2, -2, 0], [2, 2]);\n *\n * x.neg().print();  // or tf.neg(x)\n * ```\n *\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction neg_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'neg');\n\n  const grad = (dy: T) => {\n    return {$x: () => dy.neg()};\n  };\n  return ENGINE.runKernel(backend => backend.neg($x), {$x}, grad);\n}\n\n/**\n * Computes ceiling of input `tf.Tensor` element-wise: `ceil(x)`\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.ceil().print();  // or tf.ceil(x)\n * ```\n * @param x The input Tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction ceil_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'ceil');\n\n  // TODO(manrajgrover): Return null for gradients when backprop supports it.\n  const grad = (dy: T) => {\n    return {$x: () => zerosLike(dy)};\n  };\n  return ENGINE.runKernel(backend => backend.ceil($x), {$x}, grad);\n}\n\n/**\n * Computes floor of input `tf.Tensor` element-wise: `floor(x)`.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.floor().print();  // or tf.floor(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction floor_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'floor');\n\n  // TODO(nsthorat): Let gradients be null for cases where we want to stop\n  // backpropgation.\n  const grad = (dy: T) => {\n    return {$x: () => zerosLike(dy)};\n  };\n  return ENGINE.runKernel(backend => backend.floor($x), {$x}, grad);\n}\n\n/**\n * Returns an element-wise indication of the sign of a number.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3, NaN, 0]);\n *\n * x.sign().print();  // or tf.sign(x)\n * ```\n * @param x The input Tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction sign_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'sign');\n\n  const grad = (dy: T) => {\n    return {$x: () => zerosLike(dy)};\n  };\n  return ENGINE.runKernel(backend => backend.sign($x), {$x}, grad);\n}\n\n/**\n * RReturns which elements of x are NaN.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isNaN().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction isNaN_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'isNaN');\n\n  // TODO(nsthorat): Let gradients be null for cases where we want to stop\n  // backpropgation.\n  const grad = (dy: T) => {\n    return {$x: () => zerosLike(dy)};\n  };\n  return ENGINE.runKernel(backend => backend.isNaN($x), {$x}, grad);\n}\n\n/**\n * Returns which elements of x are Infinity or -Infinity.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isInf().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction isInf_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'isInf');\n\n  // TODO(nsthorat): Let gradients be null for cases where we want to stop\n  // backpropgation.\n  const grad = (dy: T) => {\n    return {$x: () => zerosLike(dy)};\n  };\n  return ENGINE.runKernel(backend => backend.isInf($x), {$x}, grad);\n}\n\n/**\n * Returns which elements of x are finite.\n *\n * ```js\n * const x = tf.tensor1d([NaN, Infinity, -Infinity, 0, 1]);\n *\n * x.isFinite().print();  // or tf.isNaN(x)\n * ```\n * @param x The input Tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction isFinite_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'isFinite');\n\n  // TODO(nsthorat): Let gradients be null for cases where we want to stop\n  // backpropgation.\n  const grad = (dy: T) => {\n    return {$x: () => zerosLike(dy)};\n  };\n  return ENGINE.runKernel(backend => backend.isFinite($x), {$x}, grad);\n}\n\n/**\n * Computes round of input `tf.Tensor` element-wise: `round(x)`.\n * It implements banker's rounding.\n *\n * ```js\n * const x = tf.tensor1d([.6, 1.1, -3.3]);\n *\n * x.round().print();  // or tf.round(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction round_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'round');\n\n  // TODO(nsthorat): Let gradients be null for cases where we want to stop\n  // backpropgation.\n  const grad = (dy: T) => {\n    return {$x: () => zerosLike(dy)};\n  };\n  return ENGINE.runKernel(backend => backend.round($x), {$x}, grad);\n}\n\n/**\n * Computes exponential of the input `tf.Tensor` element-wise. `e ^ x`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, -3]);\n *\n * x.exp().print();  // or tf.exp(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction exp_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'exp');\n\n  const bck = (dy: T, saved: Tensor[]) => {\n    return {$x: () => dy.mulStrict(saved[0] as T)};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const y = backend.exp($x);\n    save([y]);\n    return y;\n  }, {$x}, bck);\n}\n\n/**\n * Computes exponential of the input `tf.Tensor` minus one element-wise.\n * `e ^ x - 1`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, -3]);\n *\n * x.expm1().print();  // or tf.expm1(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction expm1_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'expm1');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => dy.mul($x.exp()) as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.expm1($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes natural logarithm of the input `tf.Tensor` element-wise: `ln(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.E]);\n *\n * x.log().print();  // or tf.log(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction log_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'log');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => dy.div($x.toFloat()) as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.log($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes natural logarithm of the input `tf.Tensor` plus one\n * element-wise: `ln(1 + x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.E - 1]);\n *\n * x.log1p().print();  // or tf.log1p(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction log1p_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'log1p');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => dy.div($x.add(1)) as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.log1p($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes square root of the input `tf.Tensor` element-wise: `y = sqrt(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 4, -1]);\n *\n * x.sqrt().print();  // or tf.sqrt(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction sqrt_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'sqrt');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => dy.div($x.toFloat().sqrt().mul(2)) as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.sqrt($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes reciprocal of square root of the input `tf.Tensor` element-wise:\n * `y = 1 / sqrt(x)`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 4, -1]);\n *\n * x.rsqrt().print();  // or tf.rsqrt(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction rsqrt_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'rsqrt');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => dy.div($x.pow(1.5).mul(2)).neg() as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.rsqrt($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes square of `x` element-wise: `x ^ 2`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, Math.sqrt(2), -1]);\n *\n * x.square().print();  // or tf.square(x)\n * ```\n * @param x The input Tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction square_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'square');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => dy.mul($x.toFloat().mul(2)) as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    save([$x]);\n    return backend.square($x);\n  }, {$x}, grad);\n}\n\n/**\n * Computes reciprocal of x element-wise: `1 / x`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, 2]);\n *\n * x.reciprocal().print();  // or tf.reciprocal(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction reciprocal_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'reciprocal');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => dy.div($x.square().neg()) as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.reciprocal($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes absolute value element-wise: `abs(x)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.abs().print();  // or tf.abs(x)\n * ```\n * @param x The input `tf.Tensor`.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction abs_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'abs');\n\n  if ($x.dtype === 'complex64') {\n    return ENGINE.runKernel(backend => backend.complexAbs($x), {$x});\n  }\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => dy.mul($x.toFloat().step(-1)) as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.abs($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Clips values element-wise. `max(min(x, clipValueMax), clipValueMin)`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.clipByValue(-2, 3).print();  // or tf.clipByValue(x, -2, 3)\n * ```\n * @param x The input tensor.\n * @param clipValueMin Lower-bound of range to be clipped to.\n * @param clipValueMax Upper-bound of range to be clipped to.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction clipByValue_<T extends Tensor>(\n    x: T|TensorLike, clipValueMin: number, clipValueMax: number): T {\n  const $x = convertToTensor(x, 'x', 'clipByValue');\n  util.assert(\n      (clipValueMin <= clipValueMax),\n      () => `Error in clip: min (${clipValueMin}) must be ` +\n          `less than or equal to max (${clipValueMax}).`);\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {\n      $x: () => dy.where(\n                    $x.greaterEqual(clipValueMin)\n                        .logicalAnd($x.lessEqual(clipValueMax)),\n                    zerosLike(dy)) as T,\n    };\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.clip($x, clipValueMin, clipValueMax);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes sigmoid element-wise, `1 / (1 + exp(-x))`\n *\n * ```js\n * const x = tf.tensor1d([0, -1, 2, -3]);\n *\n * x.sigmoid().print();  // or tf.sigmoid(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction sigmoid_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'sigmoid');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [y] = saved;\n    return {$x: () => dy.mul(y.mul(scalar(1).sub(y))) as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const y = backend.sigmoid($x);\n    save([y]);\n    return y;\n  }, {$x}, grad);\n}\n\n/**\n * Computes log sigmoid of the input `tf.Tensor` element-wise:\n * `logSigmoid(x)`. For numerical stability, we use `-tf.softplus(-x)`.\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.logSigmoid().print();  // or tf.logSigmoid(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction logSigmoid_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'logSigmoid');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => dy.mul($x.neg().sigmoid()) as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.softplus($x.neg()).neg();\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes softplus of the input `tf.Tensor` element-wise: `log(exp(x) + 1)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.softplus().print();  // or tf.softplus(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction softplus_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'softplus');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => dy.mul($x.sigmoid()) as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.softplus($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes sin of the input Tensor element-wise: `sin(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.sin().print();  // or tf.sin(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction sin_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'sin');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => $x.toFloat().cos().mul(dy) as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.sin($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes cos of the input `tf.Tensor` element-wise: `cos(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.cos().print();  // or tf.cos(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction cos_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'cos');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => $x.toFloat().sin().neg().mul(dy) as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.cos($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes tan of the input `tf.Tensor` element-wise, `tan(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, Math.PI / 2, Math.PI * 3 / 4]);\n *\n * x.tan().print();  // or tf.tan(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction tan_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'tan');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => dy.div($x.cos().square()) as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.tan($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes asin of the input `tf.Tensor` element-wise: `asin(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.asin().print();  // or tf.asin(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction asin_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'asin');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {\n      $x: () => dy.divStrict(scalar(1).sub($x.toFloat().square()).sqrt() as T)\n    };\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.asin($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes acos of the input `tf.Tensor` element-wise: `acos(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.acos().print();  // or tf.acos(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction acos_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'acos');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {\n      $x: () =>\n          dy.divStrict(scalar(1).sub($x.toFloat().square()).sqrt() as T).neg()\n    };\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.acos($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes atan of the input `tf.Tensor` element-wise: `atan(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.atan().print();  // or tf.atan(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction atan_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'atan');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => dy.div($x.toFloat().square().add(1)) as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.atan($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes hyperbolic sin of the input `tf.Tensor` element-wise: `sinh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.sinh().print();  // or tf.sinh(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction sinh_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'sinh');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => $x.toFloat().cosh().mulStrict(dy) as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.sinh($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes hyperbolic cos of the input `tf.Tensor` element-wise: `cosh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.cosh().print();  // or tf.cosh(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction cosh_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'cosh');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => $x.toFloat().sinh().mulStrict(dy) as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.cosh($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes hyperbolic tangent of the input `tf.Tensor` element-wise: `tanh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, 70]);\n *\n * x.tanh().print();  // or tf.tanh(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction tanh_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'tanh');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [y] = saved;\n    return {$x: () => scalar(1).sub(y.square()).mulStrict(dy) as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const y = backend.tanh($x);\n    save([y]);\n    return y;\n  }, {$x}, grad);\n}\n\n/**\n * Computes inverse hyperbolic sin of the input `tf.Tensor` element-wise:\n * `asinh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, 1, -1, .7]);\n *\n * x.asinh().print();  // or tf.asinh(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction asinh_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'asinh');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {\n      $x: () => dy.divStrict(scalar(1).add($x.toFloat().square()).sqrt() as T)\n    };\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.asinh($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes the inverse hyperbolic cos of the input `tf.Tensor` element-wise:\n * `acosh(x)`\n *\n * ```js\n * const x = tf.tensor1d([10, 1, 3, 5.7]);\n *\n * x.acosh().print();  // or tf.acosh(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction acosh_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'acosh');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => dy.divStrict($x.toFloat().square().sub(1).sqrt() as T)};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.acosh($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes inverse hyperbolic tan of the input `tf.Tensor` element-wise:\n * `atanh(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, .1, -.1, .7]);\n *\n * x.atanh().print();  // or tf.atanh(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction atanh_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'atanh');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => dy.div(scalar(1).sub($x.toFloat().square())) as T};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.atanh($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes gause error function of the input `tf.Tensor` element-wise:\n * `erf(x)`\n *\n * ```js\n * const x = tf.tensor1d([0, .1, -.1, .7]);\n *\n * x.erf().print(); // or tf.erf(x);\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction erf_<T extends Tensor>(x: T|TensorLike): T {\n  let $x = convertToTensor(x, 'x', 'erf');\n  util.assert(\n      $x.dtype === 'int32' || $x.dtype === 'float32',\n      () => 'Input dtype must be `int32` or `float32`.');\n\n  if ($x.dtype === 'int32') {\n    $x = $x.toFloat();\n  }\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {\n      $x: () => dy.mul($x.square().neg().exp().mul(2 / Math.sqrt(Math.PI))) as T\n    };\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.erf($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes step of the input `tf.Tensor` element-wise: `x > 0 ? 1 : alpha * x`\n *\n * ```js\n * const x = tf.tensor1d([0, 2, -1, -3]);\n *\n * x.step(.5).print();  // or tf.step(x, .5)\n * ```\n * @param x The input tensor.\n * @param alpha The gradient when input is negative.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction step_<T extends Tensor>(x: T|TensorLike, alpha = 0.0): T {\n  const $x = convertToTensor(x, 'x', 'step');\n\n  // TODO(manrajgrover): Return null for gradients when backprop supports\n  // it.\n  const grad = (dy: T) => {\n    return {$x: () => zerosLike(dy)};\n  };\n  return ENGINE.runKernel(backend => backend.step($x, alpha), {$x}, grad);\n}\n\nexport const abs = op({abs_});\nexport const acos = op({acos_});\nexport const acosh = op({acosh_});\nexport const asin = op({asin_});\nexport const asinh = op({asinh_});\nexport const atan = op({atan_});\nexport const atanh = op({atanh_});\nexport const ceil = op({ceil_});\nexport const clipByValue = op({clipByValue_});\nexport const cos = op({cos_});\nexport const cosh = op({cosh_});\nexport const erf = op({erf_});\nexport const exp = op({exp_});\nexport const expm1 = op({expm1_});\nexport const floor = op({floor_});\nexport const log = op({log_});\nexport const log1p = op({log1p_});\nexport const logSigmoid = op({logSigmoid_});\nexport const neg = op({neg_});\nexport const reciprocal = op({reciprocal_});\nexport const round = op({round_});\nexport const rsqrt = op({rsqrt_});\nexport const sigmoid = op({sigmoid_});\nexport const sign = op({sign_});\nexport const isNaN = op({isNaN_});\nexport const isInf = op({isInf_});\nexport const isFinite = op({isFinite_});\nexport const sin = op({sin_});\nexport const sinh = op({sinh_});\nexport const softplus = op({softplus_});\nexport const sqrt = op({sqrt_});\nexport const square = op({square_});\nexport const step = op({step_});\nexport const tan = op({tan_});\nexport const tanh = op({tanh_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {deprecationWarn} from '../globals';\nimport {Tensor, Tensor1D, Tensor2D, Tensor3D, Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {Rank, ShapeMap, TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {tile} from './array_ops';\nimport {getReductionAxes} from './broadcast_util';\nimport {op} from './operation';\nimport {scalar} from './tensor_ops';\nimport {rsqrt} from './unary_ops';\n\n/**\n * Batch normalization, strictly for 2D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm2d_(\n    x: Tensor2D|TensorLike, mean: Tensor2D|Tensor1D|TensorLike,\n    variance: Tensor2D|Tensor1D|TensorLike,\n    offset?: Tensor2D|Tensor1D|TensorLike, scale?: Tensor2D|Tensor1D|TensorLike,\n    varianceEpsilon?: number): Tensor2D {\n  const $x = convertToTensor(x, 'x', 'batchNorm');\n  const $mean = convertToTensor(mean, 'mean', 'batchNorm');\n  const $variance = convertToTensor(variance, 'variance', 'batchNorm');\n  let $scale: Tensor2D|Tensor1D;\n  if (scale != null) {\n    $scale = convertToTensor(scale, 'scale', 'batchNorm');\n  }\n  let $offset: Tensor2D|Tensor1D;\n  if (offset != null) {\n    $offset = convertToTensor(offset, 'offset', 'batchNorm');\n  }\n  util.assert(\n      $x.rank === 2,\n      () => `Error in batchNorm3D: x must be rank 3 but got rank ` +\n          `${$x.rank}.`);\n  util.assert(\n      $mean.rank === 2 || $mean.rank === 1,\n      () => `Error in batchNorm2D: mean must be rank 2 or rank 1 but ` +\n          `got rank ${$mean.rank}.`);\n  util.assert(\n      $variance.rank === 2 || $variance.rank === 1,\n      () => `Error in batchNorm2D: variance must be rank 2 or rank 1 ` +\n          `but got rank ${$variance.rank}.`);\n  if ($scale != null) {\n    util.assert(\n        $scale.rank === 2 || $scale.rank === 1,\n        () => `Error in batchNorm2D: scale must be rank 2 or rank 1 ` +\n            `but got rank ${$scale.rank}.`);\n  }\n  if ($offset != null) {\n    util.assert(\n        $offset.rank === 2 || $offset.rank === 1,\n        () => `Error in batchNorm2D: offset must be rank 2 or rank 1 ` +\n            `but got rank ${$offset.rank}.`);\n  }\n\n  return batchNorm_($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\n\n/**\n * Batch normalization, strictly for 3D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm3d_(\n    x: Tensor3D|TensorLike, mean: Tensor3D|Tensor1D|TensorLike,\n    variance: Tensor3D|Tensor1D|TensorLike,\n    offset?: Tensor3D|Tensor1D|TensorLike, scale?: Tensor3D|Tensor1D|TensorLike,\n    varianceEpsilon?: number): Tensor3D {\n  const $x = convertToTensor(x, 'x', 'batchNorm');\n  const $mean = convertToTensor(mean, 'mean', 'batchNorm');\n  const $variance = convertToTensor(variance, 'variance', 'batchNorm');\n  let $scale: Tensor3D|Tensor1D;\n  if (scale != null) {\n    $scale = convertToTensor(scale, 'scale', 'batchNorm');\n  }\n  let $offset: Tensor3D|Tensor1D;\n  if (offset != null) {\n    $offset = convertToTensor(offset, 'offset', 'batchNorm');\n  }\n  util.assert(\n      $x.rank === 3,\n      () => `Error in batchNorm3D: x must be rank 3 but got rank ` +\n          `${$x.rank}.`);\n  util.assert(\n      $mean.rank === 3 || $mean.rank === 1,\n      () => `Error in batchNorm3D: mean must be rank 3 or rank 1 but ` +\n          `got rank ${$mean.rank}.`);\n  util.assert(\n      $variance.rank === 3 || $variance.rank === 1,\n      () => `Error in batchNorm3D: variance must be rank 3 or rank 1 ` +\n          `but got rank ${$variance.rank}.`);\n  if ($scale != null) {\n    util.assert(\n        $scale.rank === 3 || $scale.rank === 1,\n        () => `Error in batchNorm3D: scale must be rank 3 or rank 1 ` +\n            `but got rank ${$scale.rank}.`);\n  }\n  if ($offset != null) {\n    util.assert(\n        $offset.rank === 3 || $offset.rank === 1,\n        () => `Error in batchNorm3D: offset must be rank 3 or rank 1 ` +\n            `but got rank ${$offset.rank}.`);\n  }\n\n  return batchNorm_($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\n\n/**\n * Batch normalization, strictly for 4D. For the more relaxed version, see\n * `tf.batchNorm`.\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\nfunction batchNorm4d_(\n    x: Tensor4D|TensorLike, mean: Tensor4D|Tensor1D|TensorLike,\n    variance: Tensor4D|Tensor1D|TensorLike,\n    offset?: Tensor4D|Tensor1D|TensorLike, scale?: Tensor4D|Tensor1D|TensorLike,\n    varianceEpsilon?: number): Tensor4D {\n  const $x = convertToTensor(x, 'x', 'batchNorm');\n  const $mean = convertToTensor(mean, 'mean', 'batchNorm');\n  const $variance = convertToTensor(variance, 'variance', 'batchNorm');\n  let $scale: Tensor4D|Tensor1D;\n  if (scale != null) {\n    $scale = convertToTensor(scale, 'scale', 'batchNorm');\n  }\n  let $offset: Tensor4D|Tensor1D;\n  if (offset != null) {\n    $offset = convertToTensor(offset, 'offset', 'batchNorm');\n  }\n  util.assert(\n      $x.rank === 4,\n      () => `Error in batchNorm4D: x must be rank 4 but got rank ` +\n          `${$x.rank}.`);\n  util.assert(\n      $mean.rank === 4 || $mean.rank === 1,\n      () => `Error in batchNorm4D: mean must be rank 4 or rank 1 but ` +\n          `got rank ${$mean.rank}.`);\n  util.assert(\n      $variance.rank === 4 || $variance.rank === 1,\n      () => `Error in batchNorm4D: variance must be rank 4 or rank 1 ` +\n          `but got rank ${$variance.rank}.`);\n  if ($scale != null) {\n    util.assert(\n        $scale.rank === 4 || $scale.rank === 1,\n        () => `Error in batchNorm4D: scale must be rank 4 or rank 1 ` +\n            `but got rank ${$scale.rank}.`);\n  }\n  if ($offset != null) {\n    util.assert(\n        $offset.rank === 4 || $offset.rank === 1,\n        () => `Error in batchNorm4D: offset must be rank 4 or rank 1 ` +\n            `but got rank ${$offset.rank}.`);\n  }\n  return batchNorm_($x, $mean, $variance, $offset, $scale, varianceEpsilon);\n}\n\n/**\n * @deprecated Please use `tf.batchNorm` instead and note the positional\n *     argument change of scale, offset, and varianceEpsilon.\n */\nfunction batchNormalization_<R extends Rank>(\n    x: Tensor<R>|TensorLike, mean: Tensor<R>|Tensor1D|TensorLike,\n    variance: Tensor<R>|Tensor1D|TensorLike, varianceEpsilon = .001,\n    scale?: Tensor<R>|Tensor1D|TensorLike,\n    offset?: Tensor<R>|Tensor1D|TensorLike): Tensor<R> {\n  warnDeprecation();\n  return batchNorm_(x, mean, variance, offset, scale, varianceEpsilon);\n}\n\n/**\n * Batch normalization.\n *\n * As described in\n * [http://arxiv.org/abs/1502.03167](http://arxiv.org/abs/1502.03167).\n *\n * Mean, variance, scale, and offset can be of two shapes:\n *   - The same shape as the input.\n *   - In the common case, the depth dimension is the last dimension of x, so\n *     the values would be an `tf.Tensor1D` of shape [depth].\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that parameters passed are of given rank\n *   - `tf.batchNorm2d`\n *   - `tf.batchNorm3d`\n *   - `tf.batchNorm4d`\n *\n * @param x The input Tensor.\n * @param mean A mean Tensor.\n * @param variance A variance Tensor.\n * @param offset An offset Tensor.\n * @param scale A scale Tensor.\n * @param varianceEpsilon A small float number to avoid dividing by 0.\n */\n/** @doc {heading: 'Operations', subheading: 'Normalization'} */\nfunction batchNorm_<R extends Rank>(\n    x: Tensor<R>|TensorLike, mean: Tensor<R>|Tensor1D|TensorLike,\n    variance: Tensor<R>|Tensor1D|TensorLike,\n    offset?: Tensor<R>|Tensor1D|TensorLike,\n    scale?: Tensor<R>|Tensor1D|TensorLike,\n    varianceEpsilon?: number): Tensor<R> {\n  if (varianceEpsilon == null) {\n    varianceEpsilon = 0.001;\n  }\n  const $x = convertToTensor(x, 'x', 'batchNorm');\n  const $mean = convertToTensor(mean, 'mean', 'batchNorm');\n  const $variance = convertToTensor(variance, 'variance', 'batchNorm');\n  let $scale: Tensor<R>|Tensor1D;\n  if (scale != null) {\n    $scale = convertToTensor(scale, 'scale', 'batchNorm');\n  }\n  let $offset: Tensor<R>|Tensor1D;\n  if (offset != null) {\n    $offset = convertToTensor(offset, 'offset', 'batchNorm');\n  }\n\n  util.assert(\n      $mean.rank === $variance.rank,\n      () => 'Batch normalization gradient requires mean and variance to have ' +\n          'equal ranks.');\n  util.assert(\n      $offset == null || $mean.rank === $offset.rank,\n      () => 'Batch normalization gradient requires mean and offset to have ' +\n          'equal ranks.');\n  util.assert(\n      $scale == null || $mean.rank === $scale.rank,\n      () => 'Batch normalization gradient requires mean and scale to have ' +\n          'equal ranks.');\n\n  let x4D: Tensor4D;\n  if ($x.rank === 0 || $x.rank === 1) {\n    x4D = $x.as4D(1, 1, 1, $x.size);\n  } else if ($x.rank === 2) {\n    x4D = $x.as4D(1, 1, $x.shape[0], $x.shape[1]);\n  } else if ($x.rank === 3) {\n    x4D = $x.as4D(1, $x.shape[0], $x.shape[1], $x.shape[2]) as Tensor4D;\n  } else {\n    x4D = $x as Tensor4D;\n  }\n\n  const der = (dy: Tensor, saved: Tensor[]) => {\n    type Saved = [\n      Tensor<R>, Tensor<R>| Tensor1D, Tensor<R>| Tensor1D, Tensor<R>| Tensor1D\n    ];\n    const [$x, $mean, $variance, $scale] = saved as Saved;\n    const scaleValue = $scale == null ? scalar(1) : $scale;\n    const reductionAxes = getReductionAxes($mean.shape, x4D.shape);\n    const tileShape: number[] = [];\n    if ($mean.rank === 1) {\n      for (let i = 0; i < x4D.shape.length - 1; ++i) {\n        tileShape.push(x4D.shape[i]);\n      }\n      tileShape.push(1);\n    }\n\n    const xMinusMean = $x.sub($mean);\n    const dyTimesScaleValue = dy.mul(scaleValue);\n    const oneOverSqrtVariance = rsqrt($variance.add(scalar(varianceEpsilon)));\n    const minusHalfRCube = oneOverSqrtVariance.mul(oneOverSqrtVariance)\n                               .mul(oneOverSqrtVariance)\n                               .mul(scalar(-0.5));\n\n    const derX = () => {\n      if ($mean.rank === 1) {\n        return dy\n            .mul(tile(\n                oneOverSqrtVariance.as4D(1, 1, 1, $mean.shape[0]), tileShape))\n            .mul(scaleValue)\n            .reshape($x.shape);\n      } else {\n        return dy.mul(oneOverSqrtVariance).mul(scaleValue).reshape($x.shape);\n      }\n    };\n    const derMean = () => {\n      let meanDer = oneOverSqrtVariance.mul(scalar(-1)).mul(dyTimesScaleValue);\n      if ($mean.rank === 1) {\n        meanDer = meanDer.sum(reductionAxes);\n      }\n      return meanDer.reshape($mean.shape as ShapeMap[R]);\n    };\n    const derVariance = () => {\n      let varianceDer = minusHalfRCube.mul(xMinusMean).mul(dyTimesScaleValue);\n      if ($mean.rank === 1) {\n        varianceDer = varianceDer.sum(reductionAxes);\n      }\n      return varianceDer.reshape($mean.shape as ShapeMap[R]);\n    };\n    const derScale = () => {\n      const xMinusMean2TimesRsqrt = xMinusMean.mul(oneOverSqrtVariance);\n      let scaleDer = dy.mul(xMinusMean2TimesRsqrt);\n      if ($mean.rank === 1) {\n        scaleDer = scaleDer.sum(reductionAxes);\n      }\n      return scaleDer.reshape($mean.shape as ShapeMap[R]);\n    };\n    const derOffset = () => {\n      let offsetDer = dy;\n      if ($mean.rank === 1) {\n        offsetDer = offsetDer.sum(reductionAxes);\n      }\n      return offsetDer.reshape($mean.shape as ShapeMap[R]);\n    };\n    return {\n      $x: derX,\n      $mean: derMean,\n      $variance: derVariance,\n      $scale: derScale,\n      $offset: derOffset\n    };\n  };\n\n  const res = ENGINE.runKernel((backend, save) => {\n    const res = backend.batchNormalization(\n        x4D, batchnormReshape4D($mean), batchnormReshape4D($variance),\n        varianceEpsilon, batchnormReshape4D($scale),\n        batchnormReshape4D($offset));\n    save([$x, $mean, $variance, $scale]);\n    return res;\n  }, {$x, $mean, $variance, $scale, $offset}, der);\n  return res.reshape($x.shape);\n}\n\nfunction batchnormReshape4D(x: Tensor): Tensor4D|Tensor1D {\n  if (x == null) {\n    return null;\n  }\n  if (x.rank === 0) {\n    return x.as1D();\n  } else if (x.rank === 1) {\n    return x as Tensor1D;\n  } else if (x.rank === 2) {\n    return x.as4D(1, 1, x.shape[0], x.shape[1]);\n  } else if (x.rank === 3) {\n    return x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n  }\n  return x as Tensor4D;\n}\n\n/**\n * @deprecated Please use `tf.batchNorm2d` instead and note the positional\n *     argument change of scale, offset, and varianceEpsilon.\n */\nfunction batchNormalization2d_(\n    x: Tensor2D|TensorLike, mean: Tensor2D|Tensor1D|TensorLike,\n    variance: Tensor2D|Tensor1D|TensorLike, varianceEpsilon = .001,\n    scale?: Tensor2D|Tensor1D|TensorLike,\n    offset?: Tensor2D|Tensor1D|TensorLike): Tensor2D {\n  warnDeprecation();\n  return batchNorm2d_(x, mean, variance, offset, scale, varianceEpsilon);\n}\n\n/**\n * @deprecated Please use `tf.batchNorm3d` instead and note the positional\n *     argument change of scale, offset, and varianceEpsilon.\n */\nfunction batchNormalization3d_(\n    x: Tensor3D|TensorLike, mean: Tensor3D|Tensor1D|TensorLike,\n    variance: Tensor3D|Tensor1D|TensorLike, varianceEpsilon = .001,\n    scale?: Tensor3D|Tensor1D|TensorLike,\n    offset?: Tensor3D|Tensor1D|TensorLike): Tensor3D {\n  warnDeprecation();\n  return batchNorm3d_(x, mean, variance, offset, scale, varianceEpsilon);\n}\n\n/**\n * @deprecated Please use `tf.batchNorm4d` instead and note the positional\n *     argument change of scale, offset, and varianceEpsilon.\n */\nfunction batchNormalization4d_(\n    x: Tensor4D|TensorLike, mean: Tensor4D|Tensor1D|TensorLike,\n    variance: Tensor4D|Tensor1D|TensorLike, varianceEpsilon = .001,\n    scale?: Tensor4D|Tensor1D|TensorLike,\n    offset?: Tensor4D|Tensor1D|TensorLike): Tensor4D {\n  warnDeprecation();\n  return batchNorm4d_(x, mean, variance, offset, scale, varianceEpsilon);\n}\n\nfunction warnDeprecation() {\n  deprecationWarn(\n      'tf.batchNormalization() is going away. ' +\n      'Use tf.batchNorm() instead, and note the positional argument change ' +\n      'of scale, offset, and varianceEpsilon');\n}\n\nexport const batchNormalization2d = op({batchNormalization2d_});\nexport const batchNormalization3d = op({batchNormalization3d_});\nexport const batchNormalization4d = op({batchNormalization4d_});\nexport const batchNormalization = op({batchNormalization_});\n\nexport const batchNorm = op({batchNorm_});\nexport const batchNorm2d = op({batchNorm2d_});\nexport const batchNorm3d = op({batchNorm3d_});\nexport const batchNorm4d = op({batchNorm4d_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor, Tensor2D, Tensor3D, Tensor4D, Tensor5D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\nimport * as conv_util from './conv_util';\nimport {op} from './operation';\n\n/**\n * Computes a 1D convolution over the input x.\n *\n * @param x The input tensor, of rank 3 or rank 2, of shape\n *     `[batch, width, inChannels]`. If rank 2, batch of 1 is assumed.\n * @param filter The filter, rank 3, of shape\n *     `[filterWidth, inDepth, outDepth]`.\n * @param stride The number of entries by which the filter is moved right at\n *     each step.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat An optional string from \"NWC\", \"NCW\". Defaults to \"NWC\",\n *     the data is stored in the order of [batch, in_width, in_channels]. Only\n *     \"NWC\" is currently supported.\n * @param dilation The dilation rate in which we sample input values in\n *     atrous convolution. Defaults to `1`. If it is greater than 1, then\n *     stride must be `1`.\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction conv1d_<T extends Tensor2D|Tensor3D>(\n    x: T|TensorLike, filter: Tensor3D|TensorLike, stride: number,\n    pad: 'valid'|'same'|number, dataFormat: 'NWC'|'NCW' = 'NWC', dilation = 1,\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'conv1d');\n  const $filter = convertToTensor(filter, 'filter', 'conv1d');\n\n  let x3D = $x as Tensor3D;\n  let reshapedTo3D = false;\n  if ($x.rank === 2) {\n    reshapedTo3D = true;\n    x3D = $x.as3D(1, $x.shape[0], $x.shape[1]);\n  }\n\n  util.assert(\n      x3D.rank === 3,\n      () => `Error in conv1d: input must be rank 3, but got rank ${x3D.rank}.`);\n  util.assert(\n      $filter.rank === 3,\n      () => `Error in conv1d: filter must be rank 3, but got rank ` +\n          `${$filter.rank}.`);\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in conv1d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n\n  util.assert(\n      x3D.shape[2] === $filter.shape[1],\n      () => `Error in conv1d: depth of input (${x3D.shape[2]}) must match ` +\n          `input depth for filter ${$filter.shape[1]}.`);\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(stride, dilation),\n      () => 'Error in conv1D: Either stride or dilation must be 1. ' +\n          `Got stride ${stride} and dilation '${dilation}'`);\n  util.assert(\n      dataFormat === 'NWC',\n      () => `Error in conv1d: got dataFormat of ${\n          dataFormat} but only NWC is currently supported.`);\n\n  const filter4D =\n      $filter.as4D(1, $filter.shape[0], $filter.shape[1], $filter.shape[2]);\n  const input4D = x3D.as4D(x3D.shape[0], 1, x3D.shape[1], x3D.shape[2]);\n  const strides: [number, number] = [1, stride];\n  const dilations: [number, number] = [1, dilation];\n\n  const conv2dDataFormat = 'NHWC';\n\n  const res = conv2d(\n      input4D, filter4D, strides, pad, conv2dDataFormat, dilations,\n      dimRoundingMode);\n\n  if (reshapedTo3D) {\n    return res.as2D(res.shape[2], res.shape[3]) as T;\n  }\n  return res.as3D(res.shape[0], res.shape[2], res.shape[3]) as T;\n}\n\n/**\n * Computes a 2D convolution over the input x.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction conv2d_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filter: Tensor4D|TensorLike,\n    strides: [number, number]|number, pad: 'valid'|'same'|number,\n    dataFormat: 'NHWC'|'NCHW' = 'NHWC',\n    dilations: [number, number]|number = [1, 1],\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'conv2d');\n  const $filter = convertToTensor(filter, 'filter', 'conv2d');\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = $x.as4D(1, $x.shape[0], $x.shape[1], $x.shape[2]);\n  }\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in conv2d: input must be rank 4, but got rank ${x4D.rank}.`);\n  util.assert(\n      $filter.rank === 4,\n      () => `Error in conv2d: filter must be rank 4, but got rank ` +\n          `${$filter.rank}.`);\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in conv2d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n\n  util.assert(\n      x4D.shape[3] === $filter.shape[2],\n      () => `Error in conv2d: depth of input (${x4D.shape[3]}) must match ` +\n          `input depth for filter ${$filter.shape[2]}.`);\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in conv2D: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n  util.assert(\n      dataFormat === 'NHWC',\n      () => `Error in conv2d: got dataFormat of ${\n          dataFormat} but only NHWC is currently supported.`);\n\n  const convInfo = conv_util.computeConv2DInfo(\n      x4D.shape, $filter.shape, strides, dilations, pad, dimRoundingMode);\n\n  const grad = (dy: Tensor4D, saved: Tensor[]) => {\n    const [$filter, x4D] = saved as [Tensor4D, Tensor4D];\n    util.assert(\n        conv_util.tupleValuesAreOne(dilations),\n        () => 'Error in gradient of conv2D: dilation rates greater than 1 ' +\n            `are not yet supported in gradients. Got dilations '${dilations}'`);\n\n    return {\n      x: () => conv2dDerInput_(x4D.shape, dy, $filter, strides, pad),\n      $filter: () => conv2dDerFilter_(x4D, dy, $filter.shape, strides, pad)\n    };\n  };\n\n  const res = ENGINE.runKernel((backend, save) => {\n    const res = backend.conv2d(x4D, $filter, convInfo);\n    save([$filter, x4D]);\n\n    return res;\n  }, {x: x4D, $filter}, grad);\n\n  if (reshapedTo4D) {\n    return res.as3D(res.shape[1], res.shape[2], res.shape[3]) as T;\n  }\n  return res as T;\n}\n\n/**\n * Computes the derivative of the input of a 2D convolution.\n *\n * @param xShape The shape of the input: [batch, height, width, inDepth].\n * If length of 3, batch of 1 is assumed.\n * @param dy The derivative of the output, of rank 4 or rank 3 of shape\n *   `[batch, outHeight, outWidth, outDepth]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm used:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n */\nfunction conv2dDerInput_<T extends Tensor3D|Tensor4D>(\n    xShape: [number, number, number, number]|[number, number, number], dy: T,\n    filter: Tensor4D, strides: [number, number]|number,\n    pad: 'valid'|'same'|number, dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  util.assert(\n      xShape.length === dy.rank,\n      () => `Length of inShape ` +\n          `(${xShape.length}) and rank of dy (${dy.rank}) must match`);\n\n  let xShape4D = xShape as [number, number, number, number];\n  let dy4D = dy as Tensor4D;\n  let reshapedTo4D = false;\n  if (dy.rank === 3) {\n    reshapedTo4D = true;\n    dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n    xShape4D = [1, xShape[0], xShape[1], xShape[2]];\n  }\n\n  const inDepth = xShape4D[3];\n  const outDepth = dy4D.shape[3];\n  util.assert(\n      xShape4D.length === 4,\n      () =>\n          `Error in conv2dDerInput: inShape must be length 4, but got length ` +\n          `${xShape4D.length}.`);\n  util.assert(\n      dy4D.rank === 4,\n      () => `Error in conv2dDerInput: dy must be rank 4, but got ` +\n          `rank ${dy4D.rank}`);\n  util.assert(\n      filter.rank === 4,\n      () => `Error in conv2dDerInput: filter must be rank 4, but got ` +\n          `rank ${filter.rank}`);\n  util.assert(\n      inDepth === filter.shape[2],\n      () => `Error in conv2dDerInput: depth of input (${inDepth}) must ` +\n          `match input depth for filter ${filter.shape[2]}.`);\n  util.assert(\n      outDepth === filter.shape[3],\n      () => `Error in conv2dDerInput: depth of output (${outDepth}) must ` +\n          `match output depth for filter ${filter.shape[3]}.`);\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in conv2dDerInput: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n\n  const dilations = 1;\n\n  const grad = (ddx: Tensor4D, saved: Tensor[]) => {\n    const dataFormat = 'NHWC';\n    const [filter, dy4D] = saved;\n    return {\n      dy4D: () => conv2d(\n          ddx, filter as Tensor4D, strides, pad, dataFormat, dilations,\n          dimRoundingMode),\n      filter: () => conv2dDerFilter(\n          ddx, dy4D as Tensor4D, (filter as Tensor4D).shape, strides, pad,\n          dimRoundingMode)\n    };\n  };\n\n  const convInfo = conv_util.computeConv2DInfo(\n      xShape4D, filter.shape, strides, dilations, pad, dimRoundingMode);\n  const res = ENGINE.runKernel((backend, save) => {\n    const res = backend.conv2dDerInput(dy4D, filter, convInfo);\n    save([filter, dy4D]);\n    return res;\n  }, {dy4D, filter}, grad);\n  if (reshapedTo4D) {\n    return res.as3D(res.shape[1], res.shape[2], res.shape[3]) as T;\n  }\n  return res as T;\n}\n\n/**\n * Computes the derivative of the filter of a 2D convolution.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     [batch, height, width, inChannels]. If rank 3, batch of 1 is assumed.\n * @param dy The dy image, of rank 4 or rank 3, of shape\n *     [batch, height, width, outDepth]. If rank 3, batch of 1 is assumed.\n * @param filterShape The shape of the filter, length 4,\n *     [filterHeight, filterWidth, inDepth, outDepth].\n * @param strides The strides of the convolution: [strideHeight,\n * strideWidth].\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. The\n *     rounding mode used when computing output dimensions if pad is a\n *     number. If none is provided, it will not round and error if the output\n *     is of fractional size.\n */\nfunction conv2dDerFilter_<T extends Tensor3D|Tensor4D>(\n    x: T, dy: T, filterShape: [number, number, number, number],\n    strides: [number, number]|number, pad: 'valid'|'same'|number,\n    dimRoundingMode?: 'floor'|'round'|'ceil'): Tensor4D {\n  let x4D = x as Tensor4D;\n  if (x.rank === 3) {\n    x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n  }\n  let dy4D = dy as Tensor4D;\n  if (dy4D.rank === 3) {\n    dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n  }\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in conv2dDerFilter: input must be rank 4, but got shape ` +\n          `${x4D.shape}.`);\n  util.assert(\n      dy4D.rank === 4,\n      () => `Error in conv2dDerFilter: dy must be rank 4, but got shape ` +\n          `${dy4D.shape}.`);\n  util.assert(\n      filterShape.length === 4,\n      () => `Error in conv2dDerFilter: filterShape must be length 4, but got ` +\n          `${filterShape}.`);\n  util.assert(\n      x4D.shape[3] === filterShape[2],\n      () => `Error in conv2dDerFilter: depth of input ${x4D.shape[3]}) must ` +\n          `match input depth in filter (${filterShape[2]}.`);\n  util.assert(\n      dy4D.shape[3] === filterShape[3],\n      () => `Error in conv2dDerFilter: depth of dy (${dy4D.shape[3]}) must ` +\n          `match output depth for filter (${filterShape[3]}).`);\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in conv2dDerFilter: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n\n  const dilations = 1;\n\n  const convInfo = conv_util.computeConv2DInfo(\n      x4D.shape, filterShape, strides, dilations, pad, dimRoundingMode);\n  return ENGINE.runKernel(\n      backend => backend.conv2dDerFilter(x4D, dy4D, convInfo), {x4D, dy4D});\n}\n\n/**\n * Computes the transposed 2D convolution of an image, also known as a\n * deconvolution.\n *\n * @param x The input image, of rank 4 or rank 3, of shape\n *   `[batch, height, width, inDepth]`. If rank 3, batch of 1 is assumed.\n * @param filter The filter, rank 4, of shape\n *     `[filterHeight, filterWidth, outDepth, inDepth]`.\n *     `inDepth` must match `inDepth` in `x`.\n * @param outputShape Output shape, of rank 4 or rank 3:\n *     `[batch, height, width, outDepth]`. If rank 3, batch of 1 is assumed.\n * @param strides The strides of the original convolution:\n *     `[strideHeight, strideWidth]`.\n * @param pad  The type of padding algorithm used in the non-transpose version\n *    of the op.\n * @param dimRoundingMode The rounding mode used when computing output\n *    dimensions if pad is a number. If none is provided, it will not round\n *    and error if the output is of fractional size.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction conv2dTranspose_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filter: Tensor4D|TensorLike,\n    outputShape: [number, number, number, number]|[number, number, number],\n    strides: [number, number]|number, pad: 'valid'|'same'|number,\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'conv2dTranspose');\n  const $filter = convertToTensor(filter, 'filter', 'conv2dTranspose');\n\n  return conv2dDerInput_(\n      outputShape, $x, $filter, strides, pad, dimRoundingMode);\n}\n\n/**\n * Depthwise 2D convolution.\n *\n * Given a 4D `input` array and a `filter` array of shape\n * `[filterHeight, filterWidth, inChannels, channelMultiplier]` containing\n * `inChannels` convolutional filters of depth 1, this op applies a\n * different filter to each input channel (expanding from 1 channel to\n * `channelMultiplier` channels for each), then concatenates the results\n * together. The output has `inChannels * channelMultiplier` channels.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/depthwise_conv2d)\n * for more details.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param filter The filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction depthwiseConv2d_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filter: Tensor4D|TensorLike,\n    strides: [number, number]|number, pad: 'valid'|'same'|number,\n    dataFormat: 'NHWC'|'NCHW' = 'NHWC',\n    dilations: [number, number]|number = [1, 1],\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'depthwiseConv2d');\n  const $filter = convertToTensor(filter, 'filter', 'depthwiseConv2d');\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = $x.as4D(1, $x.shape[0], $x.shape[1], $x.shape[2]);\n  }\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in depthwiseConv2d: input must be rank 4, but got ` +\n          `rank ${x4D.rank}.`);\n  util.assert(\n      $filter.rank === 4,\n      () => `Error in depthwiseConv2d: filter must be rank 4, but got rank ` +\n          `${$filter.rank}.`);\n  util.assert(\n      x4D.shape[3] === $filter.shape[2],\n      () => `Error in depthwiseConv2d: number of input channels ` +\n          `(${x4D.shape[3]}) must match the inChannels dimension in ` +\n          `filter ${$filter.shape[2]}.`);\n  if (dilations == null) {\n    dilations = [1, 1];\n  }\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () =>\n          'Error in depthwiseConv2d: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in depthwiseConv2d: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n\n  const convInfo = conv_util.computeConv2DInfo(\n      x4D.shape, $filter.shape, strides, dilations, pad, dimRoundingMode,\n      true /* depthwise */);\n\n  const grad = (dy: Tensor4D, saved: Tensor[]) => {\n    util.assert(\n        conv_util.tupleValuesAreOne(dilations),\n        () => 'Error in gradient of depthwiseConv2d: dilation rates ' +\n            `greater than 1 are not yet supported. Got dilations ` +\n            `'${dilations}'`);\n    const [x4D, $filter] = saved;\n    return {\n      x: () => depthwiseConv2dDerInput(\n          (x4D as Tensor4D).shape, dy, $filter as Tensor4D, convInfo),\n      $filter: () => depthwiseConv2dDerFilter(\n          x4D as Tensor4D, dy, ($filter as Tensor4D).shape, convInfo),\n    };\n  };\n\n  const res = ENGINE.runKernel((backend, save) => {\n    const res = backend.depthwiseConv2D(x4D, $filter, convInfo);\n    save([x4D, $filter]);\n    return res;\n  }, {x: x4D, $filter}, grad);\n  if (reshapedTo4D) {\n    return res.as3D(res.shape[1], res.shape[2], res.shape[3]) as T;\n  }\n  return res as T;\n}\n\n/**\n * 2-D convolution with separable filters.\n *\n * Performs a depthwise convolution that acts separately on channels followed\n * by a pointwise convolution that mixes channels. Note that this is\n * separability between dimensions [1, 2] and 3, not spatial separability\n * between dimensions 1 and 2.\n *\n * See\n * [https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d](\n *     https://www.tensorflow.org/api_docs/python/tf/nn/separable_conv2d)\n * for more details.\n *\n * @param x The input tensor, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is\n * assumed.\n * @param depthwiseFilter The depthwise filter tensor, rank 4, of shape\n *     `[filterHeight, filterWidth, inChannels, channelMultiplier]`. This is\n *     the filter used in the first step.\n * @param pointwiseFilter The pointwise filter tensor, rank 4, of shape\n *     `[1, 1, inChannels * channelMultiplier, outChannels]`. This is\n *     the filter used in the second step.\n * @param strides The strides of the convolution: `[strideHeight,\n * strideWidth]`. If strides is a single number, then `strideHeight ==\n * strideWidth`.\n * @param pad The type of padding algorithm.\n *   - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *   - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in atrous convolution. Defaults to `[1, 1]`. If `rate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param dataFormat: An optional string from: \"NHWC\", \"NCHW\". Defaults to\n *     \"NHWC\". Specify the data format of the input and output data. With the\n *     default format \"NHWC\", the data is stored in the order of: [batch,\n *     height, width, channels]. Only \"NHWC\" is currently supported.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction separableConv2d_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, depthwiseFilter: Tensor4D|TensorLike,\n    pointwiseFilter: Tensor4D|TensorLike, strides: [number, number]|number,\n    pad: 'valid'|'same', dilation: [number, number]|number = [1, 1],\n    dataFormat: 'NHWC'|'NCHW' = 'NHWC'): T {\n  const $x = convertToTensor(x, 'x', 'separableConv2d');\n  const $depthwiseFilter =\n      convertToTensor(depthwiseFilter, 'depthwiseFilter', 'separableConv2d');\n  const $pointwiseFilter =\n      convertToTensor(pointwiseFilter, 'pointwiseFilter', 'separableConv2d');\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = $x.as4D(1, $x.shape[0], $x.shape[1], $x.shape[2]);\n  }\n\n  if (dataFormat === 'NCHW') {\n    throw new Error(\n        'separableConv2d currently does not support dataFormat NCHW; only ' +\n        'NHWC is supported');\n  }\n\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in separableConv2d: input must be rank 4, but got ` +\n          `rank ${x4D.rank}.`);\n  util.assert(\n      $depthwiseFilter.rank === 4,\n      () => `Error in separableConv2d: depthwise filter must be rank 4, but ` +\n          `got rank ${$depthwiseFilter.rank}.`);\n  util.assert(\n      $pointwiseFilter.rank === 4,\n      () => `Error in separableConv2d: pointwise filter must be rank 4, but ` +\n          `got rank ${$depthwiseFilter.rank}.`);\n  util.assert(\n      $pointwiseFilter.shape[0] === 1,\n      () =>\n          `Error in separableConv2d: the first dimension of pointwise filter ` +\n          ` must be 1, but got ${$pointwiseFilter.shape[0]}.`);\n  util.assert(\n      $pointwiseFilter.shape[1] === 1,\n      () => `Error in separableConv2d: the second dimension of pointwise ` +\n          `filter must be 1, but got ${$pointwiseFilter.shape[1]}.`);\n\n  const inChannels = $depthwiseFilter.shape[2];\n  const channelMultiplier = $depthwiseFilter.shape[3];\n  util.assert(\n      $pointwiseFilter.shape[2] === inChannels * channelMultiplier,\n      () =>\n          `Error in separableConv2d: the third dimension of pointwise filter ` +\n          `must be ${inChannels * channelMultiplier}, ` +\n          `but got ${$pointwiseFilter.shape[2]}.`);\n\n  const depthwise = depthwiseConv2d(\n      x4D, $depthwiseFilter, strides, pad, dataFormat, dilation);\n  const pointwiseStride = 1;\n  const res =\n      conv2d(depthwise, $pointwiseFilter, pointwiseStride, 'valid', dataFormat);\n  if (reshapedTo4D) {\n    return res.as3D(res.shape[1], res.shape[2], res.shape[3]) as T;\n  }\n  return res as T;\n}\n\nfunction parseTupleParam(\n    param: number|[number, number]|[number, number, number]):\n    [number, number, number] {\n  if (typeof param === 'number') {\n    return [param, param, param];\n  }\n  if (param.length === 2) {\n    return [param[0], param[1], 1];\n  }\n  return param;\n}\n\nfunction tupleValuesAreOne(\n    param: number|[number, number]|[number, number, number]): boolean {\n  const [dimA, dimB, dimC] = parseTupleParam(param);\n  return dimA === 1 && dimB === 1 && dimC === 1;\n}\n\nfunction eitherStridesOrDilationsAreOne(\n    strides: number|[number, number]|[number, number, number],\n    dilations: number|[number, number]|[number, number, number]): boolean {\n  return tupleValuesAreOne(strides) || tupleValuesAreOne(dilations);\n}\n\nfunction depthwiseConv2dDerInput<T extends Tensor3D|Tensor4D>(\n    xShape: [number, number, number, number]|[number, number, number], dy: T,\n    filter: Tensor4D, convInfo: conv_util.Conv2DInfo): T {\n  let dy4D = dy as Tensor4D;\n  let reshapedTo4D = false;\n  if (dy.rank === 3) {\n    reshapedTo4D = true;\n    dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n  }\n  const res = ENGINE.runKernel(\n      backend => backend.depthwiseConv2DDerInput(dy4D, filter, convInfo),\n      {dy4D});\n  if (reshapedTo4D) {\n    return res.as3D(res.shape[1], res.shape[2], res.shape[3]) as T;\n  }\n  return res as T;\n}\n\nfunction depthwiseConv2dDerFilter<T extends Tensor3D|Tensor4D>(\n    x: T, dy: T, filterShape: [number, number, number, number],\n    convInfo: conv_util.Conv2DInfo): Tensor4D {\n  let x4D = x as Tensor4D;\n  if (x.rank === 3) {\n    x4D = x.as4D(1, x.shape[0], x.shape[1], x.shape[2]);\n  }\n  let dy4D = dy as Tensor4D;\n  if (dy4D.rank === 3) {\n    dy4D = dy.as4D(1, dy.shape[0], dy.shape[1], dy.shape[2]);\n  }\n  return ENGINE.runKernel(\n      backend => backend.depthwiseConv2DDerFilter(x4D, dy4D, convInfo),\n      {x4D, dy4D});\n}\n\n/**\n * Computes a 3D convolution over the input x.\n *\n * @param x The input tensor, of rank 5 or rank 4, of shape\n *     `[batch, depth, height, width, channels]`. If rank 4,\n * batch of 1 is assumed.\n * @param filter The filter, rank 5, of shape\n *     `[filterDepth, filterHeight, filterWidth, inChannels, outChannels]`.\n *      inChannels must match between input and filter.\n * @param strides The strides of the convolution: `[strideDepth, strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *   - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dataFormat: An optional string from: \"NDHWC\", \"NCDHW\". Defaults to\n *     \"NDHWC\". Specify the data format of the input and output data. With the\n *     default format \"NDHWC\", the data is stored in the order of: [batch,\n *     depth, height, width, channels]. Only \"NDHWC\" is currently supported.\n * @param dilations The dilation rates: `[dilationDepth, dilationHeight,\n *     dilationWidth]` in which we sample input values across the height\n *     and width dimensions in atrous convolution. Defaults to `[1, 1, 1]`.\n *     If `dilations` is a single number, then\n *     `dilationDepth == dilationHeight == dilationWidth`. If it is greater\n *     than 1, then all values of `strides` must be 1.\n */\n\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction conv3d_<T extends Tensor4D|Tensor5D>(\n    x: T|TensorLike, filter: Tensor5D|TensorLike,\n    strides: [number, number, number]|number, pad: 'valid'|'same',\n    dataFormat: 'NDHWC'|'NCDHW' = 'NDHWC',\n    dilations: [number, number, number]|number = [1, 1, 1]): T {\n  const $x = convertToTensor(x, 'x', 'conv3d');\n  const $filter = convertToTensor(filter, 'filter', 'conv3d');\n\n  let x5D = $x as Tensor5D;\n  let reshapedTo5D = false;\n\n  if ($x.rank === 4) {\n    reshapedTo5D = true;\n    x5D = $x.as5D(1, $x.shape[0], $x.shape[1], $x.shape[2], $x.shape[3]);\n  }\n  util.assert(\n      x5D.rank === 5,\n      () => `Error in conv3d: input must be rank 5, but got rank ${x5D.rank}.`);\n  util.assert(\n      $filter.rank === 5,\n      () => `Error in conv3d: filter must be rank 5, but got rank ` +\n          `${$filter.rank}.`);\n  util.assert(\n      x5D.shape[4] === $filter.shape[3],\n      () => `Error in conv3d: depth of input (${x5D.shape[4]}) must match ` +\n          `input depth for filter ${$filter.shape[3]}.`);\n  util.assert(\n      eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in conv3D: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n  util.assert(\n      dataFormat === 'NDHWC',\n      () => `Error in conv3d: got dataFormat of ${\n          dataFormat} but only NDHWC is currently supported.`);\n\n  const convInfo = conv_util.computeConv3DInfo(\n      x5D.shape, $filter.shape, strides, dilations, pad);\n\n  const grad = (dy: Tensor5D, saved: Tensor[]) => {\n    util.assert(\n        tupleValuesAreOne(dilations),\n        () =>\n            'Error in gradient of conv3D: dilation rates greater than 1 are ' +\n            `not yet supported in gradients. Got dilations '${dilations}'`);\n    const [x5D, $filter] = saved;\n    return {\n      x: () => conv3dDerInput_(\n          (x5D as Tensor5D).shape, dy, $filter as Tensor5D, strides, pad),\n      $filter: () => conv3dDerFilter_(\n          x5D as Tensor5D, dy, ($filter as Tensor5D).shape, strides, pad)\n    };\n  };\n\n  const res = ENGINE.runKernel((backend, save) => {\n    const res = backend.conv3d(x5D, $filter, convInfo);\n    save([x5D, $filter]);\n    return res;\n  }, {x: x5D, $filter}, grad);\n  if (reshapedTo5D) {\n    return res.as4D(res.shape[1], res.shape[2], res.shape[3], res.shape[4]) as\n        T;\n  }\n  return res as T;\n}\n\n/**\n * Computes the derivative of the input of a 3D convolution.\n *\n * @param xShape The shape of the input: [batch, depth, height, width,\n * in_channels]. If length of 4, batch of 1 is assumed.\n * @param dy The derivative of the output, of rank 5 or rank 4 of shape\n *   `[batch, outDepth, outHeight, outWidth, in_channels]`.\n * If rank 4, batch of 1 is assumed.\n * @param filter The filter, rank 5, of shape\n *     `[filterDepth, filterHeight, filterWidth, inDepth, outDepth]`.\n * @param strides The strides of the convolution: `[strideDepth, strideHeight,\n * strideWidth]`.\n * @param pad The type of padding algorithm used:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n */\nfunction conv3dDerInput_<T extends Tensor4D|Tensor5D>(\n    xShape:\n        [number, number, number, number,\n         number]|[number, number, number, number],\n    dy: T, filter: Tensor5D, strides: [number, number, number]|number,\n    pad: 'valid'|'same'): T {\n  util.assert(\n      xShape.length === dy.rank,\n      () => `Length of inShape ` +\n          `(${xShape.length}) and rank of dy (${dy.rank}) must match`);\n\n  let xShape5D = xShape as [number, number, number, number, number];\n  let dy5D = dy as Tensor5D;\n  let reshapedTo5D = false;\n  if (dy.rank === 4) {\n    reshapedTo5D = true;\n    dy5D = dy.as5D(1, dy.shape[0], dy.shape[1], dy.shape[2], dy.shape[3]);\n    xShape5D = [1, xShape[0], xShape[1], xShape[2], xShape[3]];\n  }\n\n  const inDepth = xShape5D[4];\n  const outDepth = dy5D.shape[4];\n  util.assert(\n      xShape5D.length === 5,\n      () =>\n          `Error in conv3dDerInput: inShape must be length 5, but got length ` +\n          `${xShape5D.length}.`);\n  util.assert(\n      dy5D.rank === 5,\n      () => `Error in conv3dDerInput: dy must be rank 5, but got ` +\n          `rank ${dy5D.rank}`);\n  util.assert(\n      filter.rank === 5,\n      () => `Error in conv3dDerInput: filter must be rank 5, but got ` +\n          `rank ${filter.rank}`);\n  util.assert(\n      inDepth === filter.shape[3],\n      () => `Error in conv3dDerInput: depth of input (${inDepth}) must ` +\n          `match input depth for filter ${filter.shape[3]}.`);\n  util.assert(\n      outDepth === filter.shape[4],\n      () => `Error in conv3dDerInput: depth of output (${outDepth}) must ` +\n          `match output depth for filter ${filter.shape[4]}.`);\n\n  const dilations = 1;\n\n  const convInfo = conv_util.computeConv3DInfo(\n      xShape5D, filter.shape, strides, dilations, pad);\n  const res = ENGINE.runKernel(\n      backend => backend.conv3dDerInput(dy5D, filter, convInfo), {dy5D});\n  if (reshapedTo5D) {\n    return res.as4D(res.shape[1], res.shape[2], res.shape[3], res.shape[4]) as\n        T;\n  }\n  return res as T;\n}\n\n/**\n * Computes the derivative of the filter of a 3D convolution.\n *\n * @param x The input tensor, of rank 5 or rank 4 of shape\n *     [batch, depth, height, width, inChannels]. If rank 4, batch of 1 is\n *     assumed.\n * @param dy The dy image, of rank 5 or rank 4, of shape\n *     [batch, depth, height, width, outDepth]. If rank 4, batch of 1 is\n *     assumed.\n * @param filterShape The shape of the filter, length 5,\n *     [filterDepth, filterHeight, filterWidth, inDepth, outDepth].\n * @param strides The strides of the convolution: [strideDepth, strideHeight,\n * strideWidth].\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n */\nfunction conv3dDerFilter_<T extends Tensor4D|Tensor5D>(\n    x: T, dy: T, filterShape: [number, number, number, number, number],\n    strides: [number, number, number]|number, pad: 'valid'|'same'): Tensor5D {\n  let x5D = x as Tensor5D;\n  if (x.rank === 4) {\n    x5D = x.as5D(1, x.shape[0], x.shape[1], x.shape[2], x.shape[3]);\n  }\n  let dy5D = dy as Tensor5D;\n  if (dy5D.rank === 4) {\n    dy5D = dy.as5D(1, dy.shape[0], dy.shape[1], dy.shape[2], dy.shape[3]);\n  }\n  util.assert(\n      x5D.rank === 5,\n      () => `Error in conv3dDerFilter: input must be rank 5, but got shape ` +\n          `${x5D.shape}.`);\n  util.assert(\n      dy5D.rank === 5,\n      () => `Error in conv3dDerFilter: dy must be rank 5, but got shape ` +\n          `${dy5D.shape}.`);\n  util.assert(\n      filterShape.length === 5,\n      () => `Error in conv3dDerFilter: filterShape must be length 5, but got ` +\n          `${filterShape}.`);\n  util.assert(\n      x5D.shape[4] === filterShape[3],\n      () => `Error in conv3dDerFilter: depth of input ${x5D.shape[4]}) must ` +\n          `match input depth in filter (${filterShape[3]}.`);\n  util.assert(\n      dy5D.shape[4] === filterShape[4],\n      () => `Error in conv3dDerFilter: depth of dy (${dy5D.shape[4]}) must ` +\n          `match output depth for filter (${filterShape[4]}).`);\n\n  const dilations = 1;\n\n  const convInfo = conv_util.computeConv3DInfo(\n      x5D.shape, filterShape, strides, dilations, pad);\n  return ENGINE.runKernel(\n      backend => backend.conv3dDerFilter(x5D, dy5D, convInfo), {x5D, dy5D});\n}\n\nexport const conv1d = op({conv1d_});\nexport const conv2d = op({conv2d_});\nexport const conv3d = op({conv3d_});\nexport const conv2dDerFilter = op({conv2dDerFilter_});\nexport const depthwiseConv2d = op({depthwiseConv2d_});\nexport const separableConv2d = op({separableConv2d_});\nexport const conv2dTranspose = op({conv2dTranspose_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor, Tensor1D, Tensor2D, Tensor3D} from '../tensor';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\nimport {op} from './operation';\n\n/**\n * Computes the dot product of two matrices, A * B. These must be matrices.\n *\n * ```js\n * const a = tf.tensor2d([1, 2], [1, 2]);\n * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * a.matMul(b).print();  // or tf.matMul(a, b)\n * ```\n * @param a First matrix in dot product operation.\n * @param b Second matrix in dot product operation.\n * @param transposeA If true, `a` is transposed before multiplication.\n * @param transposeB If true, `b` is transposed before multiplication.\n */\n/** @doc {heading: 'Operations', subheading: 'Matrices'} */\nfunction matMul_<T extends Tensor>(\n    a: T|TensorLike, b: T|TensorLike, transposeA = false,\n    transposeB = false): T {\n  let $a = convertToTensor(a, 'a', 'matMul');\n  let $b = convertToTensor(b, 'b', 'matMul');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const innerShapeA =\n      transposeA ? $a.shape[$a.rank - 2] : $a.shape[$a.rank - 1];\n  const innerShapeB =\n      transposeB ? $b.shape[$b.rank - 1] : $b.shape[$b.rank - 2];\n\n  const outerShapeA =\n      transposeA ? $a.shape[$a.rank - 1] : $a.shape[$a.rank - 2];\n  const outerShapeB =\n      transposeB ? $b.shape[$b.rank - 2] : $b.shape[$b.rank - 1];\n\n  const outerDimsA = $a.shape.slice(0, -2);\n  const outerDimsB = $b.shape.slice(0, -2);\n  const batchDimA = util.sizeFromShape(outerDimsA);\n  const batchDimB = util.sizeFromShape(outerDimsB);\n\n  util.assert(\n      $a.rank >= 2 && $b.rank >= 2 && $a.rank === $b.rank,\n      () => `Error in matMul: inputs must have the same rank of at least 2, ` +\n          `got ranks ${$a.rank} and ${$b.rank}.`);\n\n  util.assert(\n      util.arraysEqual(outerDimsA, outerDimsB),\n      () => `Error in matMul: outer dimensions (${outerDimsA}) and (` +\n          `${outerDimsB}) of Tensors with shapes ${$a.shape} and ` +\n          `${$b.shape} must match.`);\n\n  util.assert(\n      innerShapeA === innerShapeB,\n      () => `Error in matMul: inner shapes (${innerShapeA}) and (` +\n          `${innerShapeB}) of Tensors with shapes ${$a.shape} and ` +\n          `${$b.shape} and transposeA=${transposeA}` +\n          ` and transposeB=${transposeB} must match.`);\n\n  const outShape = $a.shape.slice(0, -2).concat([outerShapeA, outerShapeB]);\n\n  const a3D = transposeA ? $a.as3D(batchDimA, innerShapeA, outerShapeA) :\n                           $a.as3D(batchDimA, outerShapeA, innerShapeA);\n  const b3D = transposeB ? $b.as3D(batchDimB, outerShapeB, innerShapeB) :\n                           $b.as3D(batchDimB, innerShapeB, outerShapeB);\n\n  const grad = (dy: Tensor3D, saved: Tensor[]) => {\n    const [a3D, b3D] = saved as Tensor3D[];\n    if (!transposeA && !transposeB) {\n      return {\n        $a: () => dy.matMul(b3D, false, true),\n        $b: () => a3D.matMul(dy, true, false)\n      };\n    } else if (!transposeA && transposeB) {\n      return {\n        $a: () => dy.matMul(b3D, false, false),\n        $b: () => dy.matMul(a3D, true, false)\n      };\n    } else if (transposeA && !transposeB) {\n      return {\n        $a: () => b3D.matMul(dy, false, true),\n        $b: () => a3D.matMul(dy, false, false)\n      };\n    } else {\n      return {\n        $a: () => b3D.matMul(dy, true, true),\n        $b: () => dy.matMul(a3D, true, true)\n      };\n    }\n  };\n\n  const res = ENGINE.runKernel((backend, save) => {\n    const res = backend.batchMatMul(a3D, b3D, transposeA, transposeB);\n    save([a3D, b3D]);\n    return res;\n  }, {$a: a3D, $b: b3D}, grad);\n  return res.reshape(outShape) as T;\n}\n\n/**\n * Computes the outer product of two vectors, `v1` and `v2`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([3, 4, 5]);\n *\n * tf.outerProduct(a, b).print();\n * ```\n * @param v1 The first vector in the outer product operation.\n * @param v2 The second vector in the outer product operation.\n */\n/** @doc {heading: 'Operations', subheading: 'Matrices'} */\nfunction outerProduct_(\n    v1: Tensor1D|TensorLike, v2: Tensor1D|TensorLike): Tensor2D {\n  const $v1 = convertToTensor(v1, 'v1', 'outerProduct');\n  const $v2 = convertToTensor(v2, 'v2', 'outerProduct');\n\n  util.assert(\n      $v1.rank === 1 && $v2.rank === 1,\n      () => `Error in outerProduct: inputs must be rank 1, but got ranks ` +\n          `${$v1.rank} and ${$v2.rank}.`);\n\n  return $v1.as2D(-1, 1).matMul($v2.as2D(1, -1));\n}\n\n/**\n * Computes the dot product of two matrices and/or vectors, `t1` and `t2`.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor2d([[1, 2], [3, 4]]);\n * const c = tf.tensor2d([[1, 2, 3], [4, 5, 6]]);\n *\n * a.dot(b).print();  // or tf.dot(a, b)\n * b.dot(a).print();\n * b.dot(c).print();\n * ```\n * @param t1 The first tensor in the dot operation.\n * @param t2 The second tensor in the dot operation.\n */\n/** @doc {heading: 'Operations', subheading: 'Matrices'} */\nfunction dot_(t1: Tensor|TensorLike, t2: Tensor|TensorLike): Tensor {\n  const $t1 = convertToTensor(t1, 't1', 'dot');\n  const $t2 = convertToTensor(t2, 't2', 'dot');\n  util.assert(\n      ($t1.rank === 1 || $t1.rank === 2) && ($t2.rank === 1 || $t2.rank === 2),\n      () => `Error in dot: inputs must all be rank 1 or 2, but got ranks ` +\n          `${$t1.rank} and ${$t2.rank}.`);\n\n  const t1Inner = ($t1.rank === 1 ? $t1.size : $t1.shape[1]);\n  const t2Inner = ($t2.rank === 1 ? $t2.size : $t2.shape[0]);\n\n  util.assert(\n      t1Inner === t2Inner,\n      () => `Error in dot: inner dimensions of inputs must match, but got ` +\n          `${t1Inner} and ${t2Inner}.`);\n\n  if ($t1.rank === 1 && $t2.rank === 1) {\n    return $t1.as2D(1, -1).matMul($t2.as2D(-1, 1)).asScalar();\n  } else if ($t1.rank === 1 && $t2.rank === 2) {\n    return $t1.as2D(1, -1).matMul($t2.as2D($t2.shape[0], $t2.shape[1])).as1D();\n  } else if ($t1.rank === 2 && $t2.rank === 1) {\n    return $t1.matMul($t2.as2D(-1, 1)).as1D();\n  } else {\n    return $t1.matMul($t2.as2D($t2.shape[0], $t2.shape[1]));\n  }\n}\n\nexport const matMul = op({matMul_});\nexport const dot = op({dot_});\nexport const outerProduct = op({outerProduct_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor, Tensor1D, Tensor2D, Tensor3D, Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\nimport {op} from './operation';\n\n/**\n * Reverses a `tf.Tensor1D`.\n *\n * @param x The input tensor.\n */\nfunction reverse1d_(x: Tensor1D|TensorLike): Tensor1D {\n  const $x = convertToTensor(x, 'x', 'reverse');\n  util.assert(\n      $x.rank === 1,\n      () => `Error in reverse1D: x must be rank 1 but got rank ${$x.rank}.`);\n  return reverse($x, 0);\n}\n\n/**\n * Reverses a `tf.Tensor2D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\nfunction reverse2d_(x: Tensor2D|TensorLike, axis?: number|number[]): Tensor2D {\n  const $x = convertToTensor(x, 'x', 'reverse');\n  util.assert(\n      $x.rank === 2,\n      () => `Error in reverse2D: x must be rank 2 but got rank ${$x.rank}.`);\n  return reverse($x, axis);\n}\n\n/**\n * Reverses a `tf.Tensor3D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\nfunction reverse3d_(x: Tensor3D|TensorLike, axis?: number|number[]): Tensor3D {\n  const $x = convertToTensor(x, 'x', 'reverse');\n  util.assert(\n      $x.rank === 3,\n      () => `Error in reverse3D: x must be rank 3 but got rank ${$x.rank}.`);\n  return reverse($x, axis);\n}\n\n/**\n * Reverses a `tf.Tensor4D` along a specified axis.\n *\n * @param x The input tensor.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\nfunction reverse4d_(x: Tensor4D|TensorLike, axis?: number|number[]): Tensor4D {\n  const $x = convertToTensor(x, 'x', 'reverse');\n  util.assert(\n      $x.rank === 4,\n      () => `Error in reverse4D: x must be rank 4 but got rank ${$x.rank}.`);\n  return reverse($x, axis);\n}\n\n/**\n * Reverses a `tf.Tensor` along a specified axis.\n *\n * Also available are stricter rank-specific methods that assert that `x` is\n * of the given rank:\n *   - `tf.reverse1d`\n *   - `tf.reverse2d`\n *   - `tf.reverse3d`\n *   - `tf.reverse4d`\n *\n * Except `tf.reverse1d` (which does not have axis param), all methods have\n * same signature as this method.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.reverse().print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.reverse(axis).print();\n * ```\n * @param x The input tensor to be reversed.\n * @param axis The set of dimensions to reverse. Must be in the\n *     range [-rank(x), rank(x)). Defaults to all axes.\n */\n/** @doc {heading: 'Tensors', subheading: 'Slicing and Joining'} */\nfunction reverse_<T extends Tensor>(\n    x: T|TensorLike, axis?: number|number[]): T {\n  const $x = convertToTensor(x, 'x', 'reverse');\n\n  if ($x.rank === 0) {\n    return $x.clone();\n  }\n  const axes = util.parseAxisParam(axis, $x.shape);\n  const grad = (dy: T) => {\n    return {$x: () => dy.reverse(axes)};\n  };\n  const res =\n      ENGINE.runKernel(backend => backend.reverse($x, axes), {$x}, grad);\n  return res.reshapeAs($x);\n}\n\nexport const reverse = op({reverse_});\nexport const reverse1d = op({reverse1d_});\nexport const reverse2d = op({reverse2d_});\nexport const reverse3d = op({reverse3d_});\nexport const reverse4d = op({reverse4d_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor, Tensor3D, Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\nimport {batchToSpaceND, spaceToBatchND} from './array_ops';\nimport * as conv_util from './conv_util';\nimport {op} from './operation';\n\n/**\n * Computes the 2D max pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in dilated pooling. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n */\nfunction maxPoolImpl_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filterSize: [number, number]|number,\n    strides: [number, number]|number, dilations: [number, number]|number,\n    pad: 'valid'|'same'|number, dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'maxPool');\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = $x.as4D(1, $x.shape[0], $x.shape[1], $x.shape[2]);\n  }\n  if (dilations == null) {\n    dilations = [1, 1];\n  }\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in maxPool: input must be rank 4 but got rank ${x4D.rank}.`);\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in maxPool: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in maxPool: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n  const convInfo = conv_util.computePool2DInfo(\n      x4D.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n\n  const grad = (dy: Tensor4D, saved: Tensor[]) => {\n    const [x4D, y] = saved;\n    return {\n      x: () => maxPoolBackprop(\n          dy, x4D as Tensor4D, y as Tensor4D, filterSize, strides, dilations,\n          pad)\n    };\n  };\n\n  const res = ENGINE.runKernel((backend, save) => {\n    const y = backend.maxPool(x4D, convInfo);\n    save([x4D, y]);\n    return y;\n  }, {x: x4D}, grad);\n  if (reshapedTo4D) {\n    return res.as3D(res.shape[1], res.shape[2], res.shape[3]) as T;\n  }\n  return res as T;\n}\n\n/**\n * Computes the 2D max pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm.\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *          https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction maxPool_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filterSize: [number, number]|number,\n    strides: [number, number]|number, pad: 'valid'|'same'|number,\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  return maxPoolImpl_(x, filterSize, strides, 1, pad, dimRoundingMode);\n}\n\n/**\n * Computes the 2D average pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in dilated pooling. Defaults to `[1, 1]`. If `dilations` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param pad The type of padding algorithm:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *         https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n */\nfunction avgPoolImpl_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filterSize: [number, number]|number,\n    strides: [number, number]|number, dilations: [number, number]|number,\n    pad: 'valid'|'same'|number, dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  const $x = convertToTensor(x, 'x', 'avgPool', 'float32');\n  if (dilations == null) {\n    dilations = [1, 1];\n  }\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in avgPool: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = $x.as4D(1, $x.shape[0], $x.shape[1], $x.shape[2]);\n  }\n  util.assert(\n      x4D.rank === 4,\n      () => `Error in avgPool: x must be rank 4 but got rank ${x4D.rank}.`);\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in avgPool: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n\n  const convInfo = conv_util.computePool2DInfo(\n      x4D.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n\n  const grad = (dy: Tensor4D) => {\n    return {\n      x: () => avgPoolBackprop(dy, x4D, filterSize, strides, dilations, pad)\n    };\n  };\n  let res = ENGINE.runKernel(\n      backend => backend.avgPool(x4D, convInfo), {x: x4D}, grad);\n  res = res.cast($x.dtype);\n  if (reshapedTo4D) {\n    return res.as3D(res.shape[1], res.shape[2], res.shape[3]) as T;\n  }\n  return res as T;\n}\n\n/**\n * Computes the 2D average pooling of an image.\n *\n * @param x The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad The type of padding algorithm:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *         https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dimRoundingMode The rounding mode used when computing output\n *     dimensions if pad is a number. If none is provided, it will not round\n *     and error if the output is of fractional size.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction avgPool_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, filterSize: [number, number]|number,\n    strides: [number, number]|number, pad: 'valid'|'same'|number,\n    dimRoundingMode?: 'floor'|'round'|'ceil'): T {\n  return avgPoolImpl_(x, filterSize, strides, 1, pad, dimRoundingMode);\n}\n\n/**\n * Performs an N-D pooling operation\n *\n * @param input The input tensor, of rank 4 or rank 3 of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param windowShape The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param poolingType The type of pooling, either 'max' or 'avg'.\n * @param pad The type of padding algorithm:\n *    - `same` and stride 1: output will be of same size as input,\n *       regardless of filter size.\n *    - `valid`: output will be smaller than input if filter is larger\n *       than 1x1.\n *    - For more info, see this guide:\n *     [https://www.tensorflow.org/api_guides/python/nn#Convolution](\n *         https://www.tensorflow.org/api_guides/python/nn#Convolution)\n * @param dilations The dilation rates: `[dilationHeight, dilationWidth]`\n *     in which we sample input values across the height and width dimensions\n *     in dilated pooling. Defaults to `[1, 1]`. If `dilationRate` is a single\n *     number, then `dilationHeight == dilationWidth`. If it is greater than\n *     1, then all values of `strides` must be 1.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n */\n/** @doc {heading: 'Operations', subheading: 'Convolution'} */\nfunction pool_<T extends Tensor3D|Tensor4D>(\n    input: T|TensorLike, windowShape: [number, number]|number,\n    poolingType: 'avg'|'max', pad: 'valid'|'same'|number,\n    dilations?: [number, number]|number, strides?: [number, number]|number) {\n  if (dilations == null) {\n    dilations = [1, 1];\n  }\n  if (strides == null) {\n    strides = 1;\n  }\n  if (pad === 0) {\n    pad = 'valid';\n  }\n  const $x = convertToTensor(input, 'x', 'maxPool');\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = $x.as4D(1, $x.shape[0], $x.shape[1], $x.shape[2]);\n  }\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () => 'Error in pool: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n  const convInfo = conv_util.computePool2DInfo(\n      x4D.shape, windowShape, strides, dilations, pad);\n  const dilation: [number, number] =\n      [convInfo.dilationHeight, convInfo.dilationWidth];\n\n  // The following implementation does batchToSpace(pool(spaceToBatch(x)))\n  // whenever dilation > 1 since the TF kernels do not support dilation > 1.\n  // tslint:disable-next-line:max-line-length\n  // https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/nn_ops.py#L1037\n\n  let basePadding: number[][];\n  if (pad === 'same') {\n    basePadding = withSpaceToBatchBasePaddings(\n        [convInfo.filterHeight, convInfo.filterWidth], dilation);\n  } else {\n    basePadding = [[0, 0], [0, 0]];\n  }\n  const isDilationOne = dilation[0] === 1 && dilation[1] === 1;\n  const [adjustedPadding, adjustedCrops] = requiredSpaceToBatchPaddings(\n      [convInfo.inHeight, convInfo.inWidth], dilation, basePadding);\n  const convertedPad = isDilationOne ? pad : 'valid';\n  const convertedX =\n      isDilationOne ? x4D : spaceToBatchND(x4D, dilation, adjustedPadding);\n  const forwardOp = poolingType === 'avg' ?\n      () => avgPoolImpl_(\n          convertedX, windowShape, strides, 1 /* dilation */, convertedPad) :\n      () => maxPoolImpl_(\n          convertedX, windowShape, strides, 1 /* dilation */, convertedPad);\n  const y = forwardOp();\n  const res = isDilationOne ? y : batchToSpaceND(y, dilation, adjustedCrops);\n  if (reshapedTo4D) {\n    return res.as3D(res.shape[1], res.shape[2], res.shape[3]) as T;\n  }\n  return res as T;\n}\n\n/**\n * Computes the backprop of a max pool.\n *\n * @param dy The dy error, of rank 4 or rank 3 of shape\n *     [batchSize, height, width, channels]. If rank 3, batch of 1 is\n * assumed.\n * @param input The original input image, of rank 4, of shape\n *     [batchSize, height, width, channels].\n * @param output The original output image, of rank 4, of shape\n *     [batchSize, outHeight, outWidth, channels].\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n * @param dimRoundingMode A string from: 'ceil', 'round', 'floor'. The\n *     rounding mode used when computing output dimensions if pad is a\n *     number. If none is provided, it will not round and error if the output\n *     is of fractional size.\n */\nfunction maxPoolBackprop(\n    dy: Tensor4D|TensorLike, input: Tensor4D|TensorLike,\n    output: Tensor4D|TensorLike, filterSize: [number, number]|number,\n    strides: [number, number]|number, dilations: [number, number]|number,\n    pad: 'valid'|'same'|number,\n    dimRoundingMode?: 'floor'|'round'|'ceil'): Tensor4D {\n  const $dy = convertToTensor(dy, 'dy', 'maxPoolBackprop');\n  const $input = convertToTensor(input, 'input', 'maxPoolBackprop');\n  const $output = convertToTensor(output, 'output', 'maxPoolBackprop');\n  util.assert(\n      $input.rank === $dy.rank,\n      () => `Rank of input (${$input.rank}) does not match rank of dy ` +\n          `(${$dy.rank})`);\n  if (dilations == null) {\n    dilations = [1, 1];\n  }\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () =>\n          'Error in maxPoolBackProp: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n\n  util.assert(\n      $dy.rank === 4,\n      () => `Error in maxPoolBackprop: dy must be rank 4 but got rank ` +\n          `${$dy.rank}.`);\n  util.assert(\n      $input.rank === 4,\n      () => `Error in maxPoolBackprop: input must be rank 4 but got rank ` +\n          `${$input.rank}.`);\n  if (dimRoundingMode != null) {\n    util.assert(\n        util.isInt(pad as number),\n        () => `Error in maxPoolBackprop: pad must be an integer when using, ` +\n            `dimRoundingMode ${dimRoundingMode} but got pad ${pad}.`);\n  }\n\n  const convInfo = conv_util.computePool2DInfo(\n      $input.shape, filterSize, strides, dilations, pad, dimRoundingMode);\n  const res = ENGINE.runKernel(\n      backend => backend.maxPoolBackprop($dy, $input, $output, convInfo),\n      {$dy, $input});\n  return res;\n}\n\n/**\n * Computes the backprop of an avg pool.\n *\n * @param dy The dy error, of rank 4 or rank 3 of shape\n *     [batchSize, height, width, channels]. If rank 3, batch of 1 is\n * assumed.\n * @param input The input image, of rank 4 or rank 3 of shape\n *     [batchSize, height, width, channels]. If rank 3, batch of 1 is\n * assumed.\n * @param filterSize The filter size: `[filterHeight, filterWidth]`. If\n *     `filterSize` is a single number, then `filterHeight == filterWidth`.\n * @param strides The strides of the pooling: `[strideHeight, strideWidth]`. If\n *     `strides` is a single number, then `strideHeight == strideWidth`.\n * @param pad A string from: 'same', 'valid'. The type of padding algorithm\n *     used in the forward prop of the op.\n */\nfunction avgPoolBackprop<T extends Tensor3D|Tensor4D>(\n    dy: T|TensorLike, input: T|TensorLike, filterSize: [number, number]|number,\n    strides: [number, number]|number, dilations: [number, number]|number,\n    pad: 'valid'|'same'|number): T {\n  const $dy = convertToTensor(dy, 'dy', 'avgPoolBackprop');\n  const $input = convertToTensor(input, 'input', 'avgPoolBackprop');\n  util.assert(\n      $input.rank === $dy.rank,\n      () => `Rank of input (${$input.rank}) does not match rank of dy (${\n          $dy.rank})`);\n  if (dilations == null) {\n    dilations = [1, 1];\n  }\n  util.assert(\n      conv_util.eitherStridesOrDilationsAreOne(strides, dilations),\n      () =>\n          'Error in avgPoolBackprop: Either strides or dilations must be 1. ' +\n          `Got strides ${strides} and dilations '${dilations}'`);\n\n  let input4D = $input as Tensor4D;\n  let dy4D = $dy as Tensor4D;\n  let reshapedTo4D = false;\n  if ($input.rank === 3) {\n    reshapedTo4D = true;\n    input4D = $input.as4D(1, $input.shape[0], $input.shape[1], $input.shape[2]);\n    dy4D = $dy.as4D(1, $dy.shape[0], $dy.shape[1], $dy.shape[2]);\n  }\n\n  util.assert(\n      dy4D.rank === 4,\n      () => `Error in avgPoolBackprop: dy must be rank 4 but got rank ` +\n          `${dy4D.rank}.`);\n  util.assert(\n      input4D.rank === 4,\n      () => `Error in avgPoolBackprop: input must be rank 4 but got rank ` +\n          `${input4D.rank}.`);\n\n  const convInfo = conv_util.computePool2DInfo(\n      input4D.shape, filterSize, strides, dilations, pad);\n  const res = ENGINE.runKernel(\n      backend => backend.avgPoolBackprop(dy4D, input4D, convInfo),\n      {dy4D, input4D});\n  if (reshapedTo4D) {\n    return res.as3D(res.shape[1], res.shape[2], res.shape[3]) as T;\n  }\n  return res as T;\n}\n\n// Helper function to compute crops and paddings for pool with dilation > 1.\n// tslint:disable-next-line:max-line-length\n// https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/array_ops.py#L2184\nfunction requiredSpaceToBatchPaddings(\n    inputShape: [number, number], blockShape: [number, number],\n    basePadding: number[][]) {\n  const padStart = basePadding.map(b => b[0]);\n  const origPadEnd = basePadding.map(b => b[1]);\n  const fullInputShape = inputShape.concat(padStart, origPadEnd);\n  const padEndExtra = blockShape.map((b, i) => (b - fullInputShape[i] % b) % b);\n  const padEnd = origPadEnd.map((s, i) => s + padEndExtra[i]);\n  const paddings = blockShape.map((_, i) => [padStart[i], padEnd[i]]);\n  const crops = blockShape.map((_, i) => [0, padEndExtra[i]]);\n  return [paddings, crops];\n}\n\n// Helper function to compute base paddings for pool with dilation > 1.\n// tslint:disable-next-line:max-line-length\n// https://github.com/tensorflow/tensorflow/blob/50f6bb67dc98c9b74630b6047aae7a4f8a40fd02/tensorflow/python/ops/nn_ops.py#L524\nfunction withSpaceToBatchBasePaddings(\n    filterShape: [number, number], dilation: [number, number]) {\n  // Spatial dimensions of the filters and the upsampled filters in which we\n  // introduce (rate - 1) zeros between consecutive filter values.\n  const dilatedFilterShape = filterShape.map((s, i) => {\n    return s + (s - 1) * (dilation[i] - 1);\n  });\n  const padExtraShape = dilatedFilterShape.map(s => s - 1);\n\n  // When padding is odd, we pad more at end, following the same\n  // convention as conv2d.\n  const padExtraStart = padExtraShape.map(s => Math.floor(s / 2));\n  const padExtraEnd = padExtraShape.map((s, i) => s - padExtraStart[i]);\n  return padExtraShape.map((_, i) => {\n    return [padExtraStart[i], padExtraEnd[i]];\n  });\n}\n\nexport const maxPool = op({maxPool_});\nexport const avgPool = op({avgPool_});\nexport const pool = op({pool_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor, Tensor1D, Tensor2D, Tensor3D, Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {Rank, TensorLike} from '../types';\nimport * as util from '../util';\nimport {op} from './operation';\nimport * as slice_util from './slice_util';\n\n/**\n * Extracts a 1D slice from 1D array starting at coordinates `begin` and is\n * of length `size`. See `slice` for details.\n */\nfunction slice1d_(\n    x: Tensor1D|TensorLike, begin: number, size: number): Tensor1D {\n  const $x = convertToTensor(x, 'x', 'slice1d');\n  util.assert(\n      $x.rank === 1,\n      () =>\n          `slice1d expects a rank-1 tensor, but got a rank-${$x.rank} tensor`);\n  return slice($x, [begin], [size]);\n}\n\n/**\n * Extracts a 2D slice from a 2D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice2d_(\n    x: Tensor2D|TensorLike, begin: [number, number],\n    size: [number, number]): Tensor2D {\n  const $x = convertToTensor(x, 'x', 'slice2d');\n  util.assert(\n      $x.rank === 2,\n      () =>\n          `slice2d expects a rank-2 tensor, but got a rank-${$x.rank} tensor`);\n  return slice($x, begin, size);\n}\n\n/**\n * Extracts a 3D slice from a 3D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice3d_(\n    x: Tensor3D|TensorLike, begin: [number, number, number],\n    size: [number, number, number]): Tensor3D {\n  const $x = convertToTensor(x, 'x', 'slice3d');\n  util.assert(\n      $x.rank === 3,\n      () =>\n          `slice3d expects a rank-3 tensor, but got a rank-${$x.rank} tensor`);\n  return slice($x, begin, size);\n}\n\n/**\n * Extracts a 4D slice from a 4D array starting at coordinates `begin` and\n * is of size `size`. See `slice` for details.\n */\nfunction slice4d_(\n    x: Tensor4D|TensorLike, begin: [number, number, number, number],\n    size: [number, number, number, number]): Tensor4D {\n  const $x = convertToTensor(x, 'x', 'slice4d');\n  util.assert(\n      $x.rank === 4,\n      () =>\n          `slice4d expects a rank-4 tensor, but got a rank-${$x.rank} tensor`);\n  return slice($x, begin, size);\n}\n\n/**\n * Extracts a slice from a `tf.Tensor` starting at coordinates `begin`\n * and is of size `size`.\n *\n * Also available are stricter rank-specific methods with the same signature\n * as this method that assert that `x` is of the given rank:\n *   - `tf.slice1d`\n *   - `tf.slice2d`\n *   - `tf.slice3d`\n *   - `tf.slice4d`\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.slice([1], [2]).print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * x.slice([1, 0], [1, 2]).print();\n * ```\n * @param x The input `tf.Tensor` to slice from.\n * @param begin The coordinates to start the slice from. The length can be\n *     less than the rank of x - the rest of the axes will have implicit 0 as\n *     start. Can also be a single number, in which case it specifies the\n *     first axis.\n * @param size The size of the slice. The length can be less than the rank of\n *     x - the rest of the axes will have implicit -1. A value of -1 requests\n *     the rest of the dimensions in the axis. Can also be a single number,\n *     in which case it specifies the size of the first axis.\n */\n/** @doc {heading: 'Tensors', subheading: 'Slicing and Joining'} */\nfunction slice_<R extends Rank, T extends Tensor<R>>(\n    x: T|TensorLike, begin: number|number[], size?: number|number[]): T {\n  const $x = convertToTensor(x, 'x', 'slice');\n\n  if ($x.rank === 0) {\n    throw new Error('Slicing scalar is not possible');\n  }\n  // The following logic allows for more ergonomic calls.\n  let begin_: number[];\n  if (typeof begin === 'number') {\n    begin_ = [begin, ...new Array($x.rank - 1).fill(0)];\n  } else if (begin.length < $x.rank) {\n    begin_ = begin.concat(new Array($x.rank - begin.length).fill(0));\n  } else {\n    begin_ = begin.slice();\n  }\n  let size_: number[];\n  if (size == null) {\n    size_ = new Array($x.rank).fill(-1);\n  } else if (typeof size === 'number') {\n    size_ = [size, ...new Array($x.rank - 1).fill(-1)];\n  } else if (size.length < $x.rank) {\n    size_ = size.concat(new Array($x.rank - size.length).fill(-1));\n  } else {\n    size_ = size;\n  }\n  size_ = size_.map((d, i) => {\n    if (d >= 0) {\n      return d;\n    } else {\n      util.assert(d === -1, () => 'Bad value in size');\n      return $x.shape[i] - begin_[i];\n    }\n  });\n  slice_util.assertParamsValid($x, begin_, size_);\n  const inputShape = $x.shape;\n  const grad = (dy: T) => {\n    // Create an Nx2 padding where the first column represents how many\n    // zeros are prepended (at start) for each dimension, and the second\n    // column indicates how many zeros are appended (at end).\n\n    // The number of zeros to append is the shape of the input\n    // elementwise-subtracted by both the begin vector and sizes vector.\n    const paddings: Array<[number, number]> = [];\n    for (let i = 0; i < dy.rank; i++) {\n      paddings.push([begin_[i], inputShape[i] - begin_[i] - size_[i]]);\n    }\n    return {$x: () => dy.pad(paddings)};\n  };\n  return ENGINE.runKernel(\n             backend => backend.slice($x, begin_, size_), {$x}, grad) as T;\n}\n\nexport const slice = op({slice_});\nexport const slice1d = op({slice1d_});\nexport const slice2d = op({slice2d_});\nexport const slice3d = op({slice3d_});\nexport const slice4d = op({slice4d_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {customGrad} from '../gradients';\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\nimport * as axis_util from './axis_util';\nimport {op} from './operation';\nimport {ones, scalar, zerosLike} from './tensor_ops';\n\n/**\n * Computes the log(sum(exp(elements across the reduction dimensions)).\n *\n * Reduces the input along the dimensions given in `axis`. Unless `keepDims`\n * is true, the rank of the array is reduced by 1 for each entry in `axis`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axis` has no entries, all dimensions are reduced, and an array with a\n * single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.logSumExp().print();  // or tf.logSumExp(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.logSumExp(axis).print();  // or tf.logSumExp(a, axis)\n * ```\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. If null (the default),\n *     reduces all dimensions.\n * @param keepDims If true, retains reduced dimensions with length\n *     of 1. Defaults to false.\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction logSumExp_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  const $x = convertToTensor(x, 'x', 'logSumExp');\n\n  const axes = util.parseAxisParam(axis, $x.shape);\n  const xMax = $x.max(axes, true /* keepDims */);\n  const a = $x.sub(xMax);\n  const b = a.exp();\n  const c = b.sum(axes);\n  const d = c.log();\n  const res = xMax.reshape(d.shape).add(d);\n\n  if (keepDims) {\n    const newShape = axis_util.expandShapeToKeepDim(res.shape, axes);\n    return res.reshape(newShape) as T;\n  }\n  return res as T;\n}\n\n/**\n * Computes the sum of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If axes has no entries, all dimensions are reduced, and a\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.sum().print();  // or tf.sum(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.sum(axis).print();  // or tf.sum(x, axis)\n * ```\n *\n * @param x The input tensor to compute the sum over. If the dtype is `bool`\n *   it will be converted to `int32` and the output dtype will be `int32`.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction sum_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  let $x = convertToTensor(x, 'x', 'sum');\n\n  if ($x.dtype === 'bool') {\n    $x = $x.toInt();\n  }\n  const axes = util.parseAxisParam(axis, $x.shape);\n\n  // Use a custom gradient to bypass 2 gradient backprops since sum is used\n  // extremely often.\n  const customOp = customGrad((x: Tensor) => {\n    const permutation = axis_util.getAxesPermutation(axes, x.rank);\n    let reductionAxes = axes;\n    let permutedX = x;\n    if (permutation != null) {\n      permutedX = x.transpose(permutation);\n      reductionAxes = axis_util.getInnerMostAxes(reductionAxes.length, x.rank);\n    }\n    let value = ENGINE.runKernel(\n        backend => backend.sum(permutedX, reductionAxes), {permutedX});\n    if (keepDims) {\n      const newShape = axis_util.expandShapeToKeepDim(value.shape, axes);\n      value = value.reshape(newShape);\n    }\n\n    const gradFunc = (dy: Tensor) => {\n      const expandedDyShape = x.shape.slice();\n      axes.forEach(axis => {\n        expandedDyShape[axis] = 1;\n      });\n      const expandedDy = dy.reshape(expandedDyShape);\n      const derX = expandedDy.mul(ones(x.shape, 'float32'));\n      return derX;\n    };\n    return {value, gradFunc};\n  });\n\n  return customOp($x) as T;\n}\n\n/**\n * Computes the product of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and a\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.prod().print();  // or tf.prod(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.prod(axis).print();  // or tf.prod(x, axis)\n * ```\n *\n * @param x The input tensor to compute the product over. If the dtype is `bool`\n *   it will be converted to `int32` and the output dtype will be `int32`.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction prod_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  let $x = convertToTensor(x, 'x', 'prod');\n\n  if ($x.dtype === 'bool') {\n    $x = $x.toInt();\n  }\n  const axes = util.parseAxisParam(axis, $x.shape);\n\n  const permutation = axis_util.getAxesPermutation(axes, $x.rank);\n  let reductionAxes = axes;\n  let permutedX = $x;\n  if (permutation != null) {\n    permutedX = $x.transpose(permutation);\n    reductionAxes = axis_util.getInnerMostAxes(reductionAxes.length, $x.rank);\n  }\n  let value = ENGINE.runKernel(\n      backend => backend.prod(permutedX, reductionAxes), {permutedX});\n  if (keepDims) {\n    const newShape = axis_util.expandShapeToKeepDim(value.shape, axes);\n    value = value.reshape(newShape);\n  }\n\n  return value as T;\n}\n/**\n * Computes the mean of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces `x` along the dimensions given in `axis`. Unless `keepDims` is\n * true, the rank of the `tf.Tensor` is reduced by 1 for each entry in `axis`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axis` has no entries, all dimensions are reduced, and a `tf.Tensor` with\n * a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.mean().print();  // or tf.mean(a)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.mean(axis).print();  // or tf.mean(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction mean_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  const $x = convertToTensor(x, 'x', 'mean');\n\n  const axes = util.parseAxisParam(axis, $x.shape);\n  const shapes = axis_util.computeOutAndReduceShapes($x.shape, axes);\n  const reduceShape = shapes[1];\n  const reduceSize = util.sizeFromShape(reduceShape);\n\n  // Use a custom gradient to bypass 2 gradient backprops since mean is used\n  // extremely often.\n  const customOp = customGrad((x: Tensor) => {\n    const reduceSizeScalar = scalar(reduceSize);\n    // Cast if needed.\n    const xReduce =\n        reduceSizeScalar.dtype === x.dtype ? x : x.cast(reduceSizeScalar.dtype);\n    const res = xReduce.div(reduceSizeScalar);\n    const value = res.sum(axis, keepDims);\n\n    const gradFunc = (dy: Tensor) => {\n      const expandedDyShape = x.shape.slice();\n      axes.forEach(axis => {\n        expandedDyShape[axis] = 1;\n      });\n      const expandedDy = dy.reshape(expandedDyShape);\n      const derX = expandedDy.mul(ones(x.shape, 'float32')).div(reduceSize);\n      return derX;\n    };\n    return {value, gradFunc};\n  });\n\n  return customOp($x) as T;\n}\n\n/**\n * Gradient helper function for the min and max operations.\n */\nfunction gradForMinAndMax<T extends Tensor>(\n    dy: T, y: T, xOrig: Tensor, origAxes: number[], permutedAxes: number[]) {\n  if (y.rank < xOrig.rank) {\n    y = y.reshape(axis_util.expandShapeToKeepDim(y.shape, origAxes)) as T;\n  }\n  if (dy.rank < xOrig.rank) {\n    dy = dy.reshape(axis_util.expandShapeToKeepDim(dy.shape, origAxes)) as T;\n  }\n  return {\n    $x: () => {\n      const dx = dy.mul(xOrig.equal(y).cast(dy.dtype));\n      return permutedAxes == null ? dx : dx.transpose(permutedAxes);\n    }\n  };\n}\n\n/**\n * Computes the minimum value from the input.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the array is reduced by 1 for each entry in `axes`.\n * If `keepDims` is true, the reduced dimensions are retained with length 1.\n * If `axes` has no entries, all dimensions are reduced, and an array with a\n * single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.min().print();  // or tf.min(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.min(axis).print();  // or tf.min(x, axis)\n * ```\n *\n * @param x The input Tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction min_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  let $x = convertToTensor(x, 'x', 'min');\n  const xOrig = $x;\n\n  const origAxes = util.parseAxisParam(axis, $x.shape);\n  let axes = origAxes;\n  const permutedAxes = axis_util.getAxesPermutation(axes, $x.rank);\n  if (permutedAxes != null) {\n    $x = $x.transpose(permutedAxes);\n    axes = axis_util.getInnerMostAxes(axes.length, $x.rank);\n  }\n\n  const grad = (dy: T, saved: Tensor[]) =>\n      gradForMinAndMax(dy, saved[1], saved[0], origAxes, permutedAxes);\n  let res = ENGINE.runKernel((backend, save) => {\n    const y = backend.min($x, axes);\n    save([xOrig, y]);\n    return y as T;\n  }, {$x}, grad);\n  if (keepDims) {\n    const newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n    res = res.reshape(newShape) as T;\n  }\n  return res as T;\n}\n\n/**\n * Computes the maximum of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.max().print();  // or tf.max(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n *\n * const axis = 1;\n * x.max(axis).print();  // or tf.max(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction max_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  let $x = convertToTensor(x, 'x', 'max');\n  const xOrig = $x;\n\n  const origAxes = util.parseAxisParam(axis, $x.shape);\n  let axes = origAxes;\n  const permutedAxes = axis_util.getAxesPermutation(axes, $x.rank);\n  if (permutedAxes != null) {\n    $x = $x.transpose(permutedAxes);\n    axes = axis_util.getInnerMostAxes(axes.length, $x.rank);\n  }\n\n  const grad = (dy: T, saved: Tensor[]) =>\n      gradForMinAndMax(dy, saved[1], saved[0], origAxes, permutedAxes);\n  let res = ENGINE.runKernel((backend, save) => {\n    const y = backend.max($x, axes);\n    save([xOrig, y]);\n    return y;\n  }, {$x}, grad);\n  if (keepDims) {\n    const newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n    res = res.reshape(newShape) as T;\n  }\n  return res as T;\n}\n\n/**\n * Returns the indices of the minimum values along an `axis`.\n *\n * The result has the same shape as `input` with the dimension along `axis`\n * removed.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.argMin().print();  // or tf.argMin(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 4, 3], [2, 2]);\n *\n * const axis = 1;\n * x.argMin(axis).print();  // or tf.argMin(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension to reduce. Defaults to 0 (outer-most dimension).\n *\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction argMin_<T extends Tensor>(x: Tensor|TensorLike, axis = 0): T {\n  let $x = convertToTensor(x, 'x', 'argMin');\n\n  if (axis == null) {\n    axis = 0;\n  }\n  let axes = util.parseAxisParam(axis, $x.shape);\n  const permutedAxes = axis_util.getAxesPermutation(axes, $x.rank);\n  if (permutedAxes != null) {\n    $x = $x.transpose(permutedAxes);\n    axes = axis_util.getInnerMostAxes(axes.length, $x.rank);\n  }\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => zerosLike($x)};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.argMin($x, axes[0]);\n    save([$x]);\n    return res;\n  }, {$x}, grad) as T;\n}\n\n/**\n * Returns the indices of the maximum values along an `axis`.\n *\n * The result has the same shape as `input` with the dimension along `axis`\n * removed.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3]);\n *\n * x.argMax().print();  // or tf.argMax(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 4, 3], [2, 2]);\n *\n * const axis = 1;\n * x.argMax(axis).print();  // or tf.argMax(x, axis)\n * ```\n *\n * @param x The input tensor.\n * @param axis The dimension to reduce. Defaults to 0 (outer-most dimension).\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction argMax_<T extends Tensor>(x: Tensor|TensorLike, axis = 0): T {\n  let $x = convertToTensor(x, 'x', 'argMax');\n\n  if (axis == null) {\n    axis = 0;\n  }\n  let axes = util.parseAxisParam(axis, $x.shape);\n  const permutedAxes = axis_util.getAxesPermutation(axes, $x.rank);\n  if (permutedAxes != null) {\n    $x = $x.transpose(permutedAxes);\n    axes = axis_util.getInnerMostAxes(axes.length, $x.rank);\n  }\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => zerosLike($x)};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.argMax($x, axes[0]);\n    save([$x]);\n    return res;\n  }, {$x}, grad) as T;\n}\n\n/**\n * Computes the logical and of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 1, 1], 'bool');\n *\n * x.all().print();  // or tf.all(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 1, 0, 0], [2, 2], 'bool');\n *\n * const axis = 1;\n * x.all(axis).print();  // or tf.all(x, axis)\n * ```\n *\n * @param x The input tensor. Must be of dtype bool.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction all_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  let $x = convertToTensor(x, 'x', 'all', 'bool');\n\n  const origAxes = util.parseAxisParam(axis, $x.shape);\n  let axes = origAxes;\n  const permutedAxes = axis_util.getAxesPermutation(axes, $x.rank);\n  if (permutedAxes != null) {\n    $x = $x.transpose(permutedAxes);\n    axes = axis_util.getInnerMostAxes(axes.length, $x.rank);\n  }\n  const res = ENGINE.runKernel(backend => backend.all($x, axes), {$x});\n  if (keepDims) {\n    const newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n    return res.reshape(newShape) as T;\n  }\n  return res as T;\n}\n\n/**\n * Computes the logical or of elements across dimensions of a `tf.Tensor`.\n *\n * Reduces the input along the dimensions given in `axes`. Unless `keepDims`\n * is true, the rank of the `tf.Tensor` is reduced by 1 for each entry in\n * `axes`. If `keepDims` is true, the reduced dimensions are retained with\n * length 1. If `axes` has no entries, all dimensions are reduced, and an\n * `tf.Tensor` with a single element is returned.\n *\n * ```js\n * const x = tf.tensor1d([1, 1, 1], 'bool');\n *\n * x.any().print();  // or tf.any(x)\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 1, 0, 0], [2, 2], 'bool');\n *\n * const axis = 1;\n * x.any(axis).print();  // or tf.any(x, axis)\n * ```\n *\n * @param x The input tensor. Must be of dtype bool.\n * @param axis The dimension(s) to reduce. By default it reduces\n *     all dimensions.\n * @param keepDims If true, retains reduced dimensions with size 1.\n */\n/** @doc {heading: 'Operations', subheading: 'Reduction'} */\nfunction any_<T extends Tensor>(\n    x: Tensor|TensorLike, axis: number|number[] = null, keepDims = false): T {\n  let $x = convertToTensor(x, 'x', 'any', 'bool');\n\n  const origAxes = util.parseAxisParam(axis, $x.shape);\n  let axes = origAxes;\n  const permutedAxes = axis_util.getAxesPermutation(axes, $x.rank);\n  if (permutedAxes != null) {\n    $x = $x.transpose(permutedAxes);\n    axes = axis_util.getInnerMostAxes(axes.length, $x.rank);\n  }\n  const res = ENGINE.runKernel(backend => backend.any($x, axes), {$x});\n  if (keepDims) {\n    const newShape = axis_util.expandShapeToKeepDim(res.shape, origAxes);\n    return res.reshape(newShape) as T;\n  }\n  return res as T;\n}\n\n/**\n * Calculates the mean and variance of `x`. The mean and variance are\n * calculated by aggregating the contents of `x` across `axes`. If `x` is\n * 1-D and `axes = [0]` this is just the mean and variance of a vector.\n *\n * @param x The input tensor.\n * @param axis The dimension(s) along with to compute mean and\n *     variance. By default it reduces all dimensions.\n * @param keepDims If true, the moments have the same dimensionality as the\n *     input.\n * @return An object with two keys: `mean` and `variance`.\n */\n/** @doc {heading: 'Operations', subheading: 'Normalization'} */\nfunction moments_(\n    x: Tensor|TensorLike, axis: number|number[] = null,\n    keepDims = false): {mean: Tensor, variance: Tensor} {\n  x = convertToTensor(x, 'x', 'moments');\n  const axes = util.parseAxisParam(axis, x.shape);\n  const mean = x.mean(axes, keepDims);\n  let keepDimsShape = mean.shape;\n  if (!keepDims) {\n    keepDimsShape = axis_util.expandShapeToKeepDim(mean.shape, axes);\n  }\n  const devSquared = x.toFloat().sub(mean.reshape(keepDimsShape)).square();\n  const variance = devSquared.mean(axes, keepDims);\n  return {mean, variance};\n}\n\nexport const all = op({all_});\n// tslint:disable-next-line:variable-name\nexport const any = op({any_});\nexport const argMax = op({argMax_});\nexport const argMin = op({argMin_});\nexport const logSumExp = op({logSumExp_});\nexport const max = op({max_});\nexport const mean = op({mean_});\nexport const min = op({min_});\nexport const moments = op({moments_});\nexport const sum = op({sum_});\nexport const prod = op({prod_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {assertShapesMatch} from '../util';\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\nimport {zerosLike} from './tensor_ops';\n\n/**\n * Returns the truth value of (a != b) element-wise. Supports broadcasting.\n *\n * We also expose `tf.notEqualStrict` which has the same signature as this op\n * and asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([0, 2, 3]);\n *\n * a.notEqual(b).print();\n * ```\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction notEqual_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'notEqual');\n  let $b = convertToTensor(b, 'b', 'notEqual');\n  [$a, $b] = makeTypesMatch($a, $b);\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n  return ENGINE.runKernel(backend => backend.notEqual($a, $b), {$a, $b}) as T;\n}\n\n/**\n * Strict version of `tf.notEqual` that forces `a` and `b` to be of the same\n * shape.\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same shape and dtype as\n *     `a`.\n */\nfunction notEqualStrict_<T extends Tensor>(\n    a: T|TensorLike, b: T|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'notEqualStrict');\n  const $b = convertToTensor(b, 'b', 'notEqualStrict');\n  assertShapesMatch($a.shape, $b.shape, 'Error in notEqualStrict: ');\n  return $a.notEqual($b);\n}\n\n/**\n * Returns the truth value of (a < b) element-wise. Supports broadcasting.\n *\n * We also expose `tf.lessStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.less(b).print();\n * ```\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction less_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'less');\n  let $b = convertToTensor(b, 'b', 'less');\n  [$a, $b] = makeTypesMatch($a, $b);\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  return ENGINE.runKernel(backend => backend.less($a, $b), {$a, $b}) as T;\n}\n\n/**\n * Strict version of `tf.less` that forces `a` and `b` to be of the same\n * shape.\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same shape and dtype as\n *     `a`.\n */\nfunction lessStrict_<T extends Tensor>(a: T|TensorLike, b: T|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'lessStrict');\n  const $b = convertToTensor(b, 'b', 'lessStrict');\n  assertShapesMatch($a.shape, $b.shape, 'Error in lessStrict: ');\n  return $a.less($b);\n}\n\n/**\n * Returns the truth value of (a == b) element-wise. Supports broadcasting.\n *\n * We also expose `tf.equalStrict` which has the same signature as this op\n * and asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.equal(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction equal_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'equal');\n  let $b = convertToTensor(b, 'b', 'equal');\n  [$a, $b] = makeTypesMatch($a, $b);\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  return ENGINE.runKernel(backend => backend.equal($a, $b), {$a, $b}) as T;\n}\n\nfunction equalStrict_<T extends Tensor>(a: T|TensorLike, b: T|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'equalStrict');\n  const $b = convertToTensor(b, 'b', 'equalStrict');\n  assertShapesMatch($a.shape, $b.shape, 'Error in equalStrict: ');\n  return $a.equal($b);\n}\n\n/**\n * Returns the truth value of (a <= b) element-wise. Supports broadcasting.\n *\n * We also expose `tf.lessEqualStrict` which has the same signature as this op\n * and asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.lessEqual(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction lessEqual_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'lessEqual');\n  let $b = convertToTensor(b, 'b', 'lessEqual');\n  [$a, $b] = makeTypesMatch($a, $b);\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  return ENGINE.runKernel(backend => backend.lessEqual($a, $b), {$a, $b}) as T;\n}\n\nfunction lessEqualStrict_<T extends Tensor>(\n    a: T|TensorLike, b: T|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'lessEqualStrict');\n  const $b = convertToTensor(b, 'b', 'lessEqualStrict');\n  assertShapesMatch($a.shape, $b.shape, 'Error in lessEqualStrict: ');\n  return $a.lessEqual($b);\n}\n\n/**\n * Returns the truth value of (a > b) element-wise. Supports broadcasting.\n *\n * We also expose `tf.greaterStrict` which has the same signature as this\n * op and asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.greater(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction greater_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'greater');\n  let $b = convertToTensor(b, 'b', 'greater');\n  [$a, $b] = makeTypesMatch($a, $b);\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  return ENGINE.runKernel(backend => backend.greater($a, $b), {$a, $b}) as T;\n}\n\nfunction greaterStrict_<T extends Tensor>(a: T|TensorLike, b: T|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'greaterStrict');\n  const $b = convertToTensor(b, 'b', 'greaterStrict');\n  assertShapesMatch($a.shape, $b.shape, 'Error in greaterStrict: ');\n  return $a.greater($b);\n}\n\n/**\n * Returns the truth value of (a >= b) element-wise. Supports broadcasting.\n *\n * We also expose `tf.greaterEqualStrict` which has the same signature as this\n * op and asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3]);\n * const b = tf.tensor1d([2, 2, 2]);\n *\n * a.greaterEqual(b).print();\n * ```\n *\n * @param a The first input tensor.\n * @param b The second input tensor. Must have the same dtype as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction greaterEqual_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'greaterEqual');\n  let $b = convertToTensor(b, 'b', 'greaterEqual');\n  [$a, $b] = makeTypesMatch($a, $b);\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$a, $b] = saved;\n    return {$a: () => zerosLike($a), $b: () => zerosLike($b)};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.greaterEqual($a, $b);\n    save([$a, $b]);\n    return res;\n  }, {$a, $b}, grad) as T;\n}\n\nfunction greaterEqualStrict_<T extends Tensor>(\n    a: T|TensorLike, b: T|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'greaterEqualStrict');\n  const $b = convertToTensor(b, 'b', 'greaterEqualStrict');\n  assertShapesMatch($a.shape, $b.shape, 'Error in greaterEqualStrict: ');\n  return $a.greaterEqual($b);\n}\n\nexport const equal = op({equal_});\nexport const equalStrict = op({equalStrict_});\nexport const greater = op({greater_});\nexport const greaterEqual = op({greaterEqual_});\nexport const greaterEqualStrict = op({greaterEqualStrict_});\nexport const greaterStrict = op({greaterStrict_});\nexport const less = op({less_});\nexport const lessEqual = op({lessEqual_});\nexport const lessEqualStrict = op({lessEqualStrict_});\nexport const lessStrict = op({lessStrict_});\nexport const notEqual = op({notEqual_});\nexport const notEqualStrict = op({notEqualStrict_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {NamedTensorMap} from '../tensor_types';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike, upcastType} from '../types';\nimport * as util from '../util';\nimport * as broadcast_util from './broadcast_util';\nimport {op} from './operation';\nimport {scalar, zerosLike} from './tensor_ops';\nimport {neg} from './unary_ops';\n\n/**\n * Adds two `tf.Tensor`s element-wise, A + B. Supports broadcasting.\n *\n * We also expose `tf.addStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.tensor1d([10, 20, 30, 40]);\n *\n * a.add(b).print();  // or tf.add(a, b)\n * ```\n *\n * ```js\n * // Broadcast add a with b.\n * const a = tf.scalar(5);\n * const b = tf.tensor1d([10, 20, 30, 40]);\n *\n * a.add(b).print();  // or tf.add(a, b)\n * ```\n * @param a The first `tf.Tensor` to add.\n * @param b The second `tf.Tensor` to add. Must have the same type as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction add_<T extends Tensor>(a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'add');\n  let $b = convertToTensor(b, 'b', 'add');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const outShape =\n      broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const der = (dy: Tensor) => {\n    const derA = () => {\n      let res = dy;\n      const reduceAxes = broadcast_util.getReductionAxes($a.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = res.sum(reduceAxes);\n      }\n      return res.reshape($a.shape);\n    };\n    const derB = () => {\n      let res = dy;\n      const reduceAxes = broadcast_util.getReductionAxes($b.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = res.sum(reduceAxes);\n      }\n      return res.reshape($b.shape);\n    };\n    return {$a: derA, $b: derB};\n  };\n  return ENGINE.runKernel(backend => backend.add($a, $b), {$a, $b}, der) as T;\n}\n\n/**\n * Adds a list of `tf.Tensor`s element-wise, each with the same shape and dtype.\n *\n * ```js\n * const a = tf.tensor1d([1, 2]);\n * const b = tf.tensor1d([3, 4]);\n * const c = tf.tensor1d([5, 6]);\n *\n * tf.addN([a, b, c]).print();\n * ```\n * @param tensors A list of tensors with the same shape and dtype.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction addN_<T extends Tensor>(tensors: Array<T|TensorLike>): T {\n  util.assert(\n      Array.isArray(tensors),\n      () => 'The argument passed to tf.addN() must be a list of tensors');\n  util.assert(\n      tensors.length >= 1,\n      () => `Must pass at least one tensor to tf.addN(), but got ` +\n          `${tensors.length}`);\n  const $tensors =\n      tensors.map((t, i) => convertToTensor(t, `tensors${i}`, 'addN'));\n  const firstTensor = $tensors[0];\n  $tensors.forEach(t => {\n    if (t.dtype !== firstTensor.dtype) {\n      throw new Error(\n          'All tensors passed to tf.addN() must have the same dtype');\n    }\n  });\n  $tensors.forEach(t => {\n    if (!util.arraysEqual(t.shape, firstTensor.shape)) {\n      throw new Error(\n          'All tensors passed to tf.addN() must have the same shape');\n    }\n  });\n\n  const der = (dy: T) => {\n    const ders: {[key: string]: () => Tensor} = {};\n    $tensors.forEach((t, i) => {\n      ders[i] = () => dy.clone();\n    });\n    return ders;\n  };\n  const inputs: NamedTensorMap = $tensors as {} as NamedTensorMap;\n  return ENGINE.runKernel(backend => backend.addN($tensors), inputs, der);\n}\n\n/**\n * Adds two `tf.Tensor`s element-wise, A + B.\n *\n * Inputs must be the same shape. For broadcasting support, use add() instead.\n *\n * @param a The first Tensor to add element-wise.\n * @param b The second Tensor to add element-wise.\n */\nfunction addStrict_<T extends Tensor>(a: T|TensorLike, b: T|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'addStrict');\n  const $b = convertToTensor(b, 'b', 'addStrict');\n  util.assertShapesMatch($a.shape, $b.shape, 'Error in addStrict: ');\n  return $a.add($b);\n}\n\n/**\n * Subtracts two `tf.Tensor`s element-wise, A - B. Supports broadcasting.\n *\n * We also expose `tf.subStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([10, 20, 30, 40]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.sub(b).print();  // or tf.sub(a, b)\n * ```\n *\n * ```js\n * // Broadcast subtract a with b.\n * const a = tf.tensor1d([10, 20, 30, 40]);\n * const b = tf.scalar(5);\n *\n * a.sub(b).print();  // or tf.sub(a, b)\n * ```\n * @param a The first `tf.Tensor` to subtract from.\n * @param b The second `tf.Tensor` to be subtracted. Must have the same dtype as\n * `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction sub_<T extends Tensor>(a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'sub');\n  let $b = convertToTensor(b, 'b', 'sub');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const outShape =\n      broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const der = (dy: Tensor) => {\n    const derA = () => {\n      let res = dy;\n      const reduceAxes = broadcast_util.getReductionAxes($a.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = res.sum(reduceAxes);\n      }\n      return res.reshape($a.shape);\n    };\n    const derB = () => {\n      let res = dy;\n      const reduceAxes = broadcast_util.getReductionAxes($b.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = res.sum(reduceAxes);\n      }\n      return res.neg().reshape($b.shape);\n    };\n    return {$a: derA, $b: derB};\n  };\n  return ENGINE.runKernel(backend => backend.subtract($a, $b), {$a, $b}, der) as\n      T;\n}\n\n/**\n * Subtracts two `tf.Tensor`s element-wise, A - B. Inputs must\n * be the same shape.\n *\n * For broadcasting support, use `tf.sub` instead.\n *\n * @param a The first Tensor to subtract element-wise.\n * @param b The second Tensor to subtract element-wise.\n */\nfunction subStrict_<T extends Tensor>(a: T|TensorLike, b: T|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'subStrict');\n  const $b = convertToTensor(b, 'b', 'subStrict');\n  util.assertShapesMatch($a.shape, $b.shape, 'Error in subStrict: ');\n  return $a.sub($b);\n}\n\n/**\n * Computes the power of one `tf.Tensor` to another. Supports broadcasting.\n *\n * Given a `tf.Tensor` x and a `tf.Tensor` y, this operation computes x^y for\n * corresponding elements in x and y. The result's dtype will be the upcasted\n * type of the `base` and `exp` dtypes.\n *\n * ```js\n * const a = tf.tensor([[2, 3], [4, 5]])\n * const b = tf.tensor([[1, 2], [3, 0]]).toInt();\n *\n * a.pow(b).print();  // or tf.pow(a, b)\n * ```\n *\n * ```js\n * const a = tf.tensor([[1, 2], [3, 4]])\n * const b = tf.tensor(2).toInt();\n *\n * a.pow(b).print();  // or tf.pow(a, b)\n * ```\n * We also expose `powStrict` which has the same signature as this op and\n * asserts that `base` and `exp` are the same shape (does not broadcast).\n *\n * @param base The base `tf.Tensor` to pow element-wise.\n * @param exp The exponent `tf.Tensor` to pow element-wise.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction pow_<T extends Tensor>(base: T|TensorLike, exp: Tensor|TensorLike): T {\n  const $base = convertToTensor(base, 'base', 'pow');\n  const $exp = convertToTensor(exp, 'exp', 'pow');\n\n  const outShape =\n      broadcast_util.assertAndGetBroadcastShape($base.shape, $exp.shape);\n  base = $base.cast(upcastType($base.dtype, $exp.dtype));\n  exp = $exp.cast(upcastType($base.dtype, $exp.dtype));\n  const grad = (dy: Tensor, saved: Tensor[]) => {\n    const [$base, $exp, y] = saved;\n    const derBase = () => {\n      const expFloat = $exp.toFloat();\n      let res = dy.mul(expFloat.mul($base.pow(expFloat.sub(scalar(1)))));\n      const reduceAxes = broadcast_util.getReductionAxes($base.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = res.sum(reduceAxes);\n      }\n      return res.reshape($base.shape) as T;\n    };\n    const derExp = () => {\n      const condition = $base.greater(0);\n      const logBase = $base.log().where(condition, zerosLike($base));\n      let res = dy.mul(y.mul(logBase));\n      const reduceAxes = broadcast_util.getReductionAxes($exp.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = res.sum(reduceAxes);\n      }\n      return res.reshape($exp.shape);\n    };\n    return {$base: derBase, $exp: derExp};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const y = backend.pow($base, $exp);\n    save([$base, $exp, y]);\n    return y;\n  }, {$base, $exp}, grad) as T;\n}\n\n/**\n * Computes the power of one `tf.Tensor` to another. Inputs must\n * be the same shape.\n *\n * For broadcasting support, use `tf.pow` instead.\n *\n * @param base The base tensor to pow element-wise.\n * @param exp The exponent tensor to pow element-wise.\n */\nfunction powStrict_<T extends Tensor>(base: T, exp: Tensor): T {\n  util.assertShapesMatch(base.shape, exp.shape, 'Error in powStrict: ');\n  return base.pow(exp);\n}\n\n/**\n * Multiplies two `tf.Tensor`s element-wise, A * B. Supports broadcasting.\n *\n * We also expose `tf.mulStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.tensor1d([2, 3, 4, 5]);\n *\n * a.mul(b).print();  // or tf.mul(a, b)\n * ```\n *\n * ```js\n * // Broadcast mul a with b.\n * const a = tf.tensor1d([1, 2, 3, 4]);\n * const b = tf.scalar(5);\n *\n * a.mul(b).print();  // or tf.mul(a, b)\n * ```\n * @param a The first tensor to multiply.\n * @param b The second tensor to multiply. Must have the same dtype as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction mul_<T extends Tensor>(a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'mul');\n  let $b = convertToTensor(b, 'b', 'mul');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const outShape =\n      broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const der = (dy: Tensor, saved: Tensor[]) => {\n    const [$a, $b] = saved;\n    const derA = () => {\n      const res = dy.mul($b.toFloat());\n      const reduceAxes = broadcast_util.getReductionAxes($a.shape, outShape);\n      if (reduceAxes.length > 0) {\n        return res.sum(reduceAxes).reshape($a.shape);\n      }\n      return res;\n    };\n    const derB = () => {\n      const res = dy.mul($a.toFloat());\n      const reduceAxes = broadcast_util.getReductionAxes($b.shape, outShape);\n      if (reduceAxes.length > 0) {\n        return res.sum(reduceAxes).reshape($b.shape);\n      }\n      return res;\n    };\n    return {$a: derA, $b: derB};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.multiply($a, $b);\n    save([$a, $b]);\n    return res;\n  }, {$a, $b}, der) as T;\n}\n\n/**\n * Multiplies two `tf.Tensor`s element-wise, A * B.\n *\n * Inputs must be the same shape. For broadcasting support, use `tf.mul`.\n *\n * @param a The first tensor to multiply.\n * @param b The first tensor to multiply. Must have the same\n *    dtype as `a`.\n */\nfunction mulStrict_<T extends Tensor>(a: T|TensorLike, b: T|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'mul');\n  const $b = convertToTensor(b, 'b', 'mul');\n  util.assertShapesMatch($a.shape, $b.shape, 'Error in multiplyStrict: ');\n  return $a.mul($b) as T;\n}\n\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.\n *\n * We also expose `tf.divStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.div(b).print();  // or tf.div(a, b)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n *\n * a.div(b).print();  // or tf.div(a, b)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction div_<T extends Tensor>(a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'div');\n  let $b = convertToTensor(b, 'b', 'div');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  if ($a.dtype === 'int32' && $b.dtype === 'int32') {\n    return floorDiv($a, $b);\n  }\n\n  const outShape =\n      broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n  const der = (dy: Tensor, saved: Tensor[]) => {\n    const [$a, $b] = saved;\n    const derA = () => {\n      const res = dy.div($b.toFloat());\n      const reduceAxes = broadcast_util.getReductionAxes($a.shape, outShape);\n      if (reduceAxes.length > 0) {\n        return res.sum(reduceAxes).reshape($a.shape);\n      }\n      return res;\n    };\n    const derB = () => {\n      let res = dy.mul($a.toFloat());\n      const reduceAxes = broadcast_util.getReductionAxes($b.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = res.sum(reduceAxes).reshape($b.shape);\n      }\n      const tmp = $b.square() as Tensor;\n      return res.div(tmp.toFloat()).neg() as Tensor;\n    };\n    return {$a: derA, $b: derB};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.realDivide($a, $b);\n    save([$a, $b]);\n    return res;\n  }, {$a, $b}, der) as T;\n}\n\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Supports broadcasting.\n * The result is rounded with floor function.\n *\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 9, 16]);\n * const b = tf.tensor1d([1, 2, 3, 4]);\n *\n * a.floorDiv(b).print();  // or tf.div(a, b)\n * ```\n *\n * ```js\n * // Broadcast div a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(2);\n *\n * a.floorDiv(b).print();  // or tf.floorDiv(a, b)\n * ```\n *\n * @param a The first tensor as the numerator.\n * @param b The second tensor as the denominator. Must have the same dtype as\n * `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction floorDiv_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'floorDiv');\n  let $b = convertToTensor(b, 'b', 'floorDiv');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const outShape =\n      broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n  const der = (dy: Tensor, saved: Tensor[]) => {\n    const [$a, $b] = saved;\n    const derA = () => {\n      const res = dy.div($b.toFloat());\n      const reduceAxes = broadcast_util.getReductionAxes($a.shape, outShape);\n      if (reduceAxes.length > 0) {\n        return res.sum(reduceAxes).reshape($a.shape);\n      }\n      return res;\n    };\n    const derB = () => {\n      let res = dy.mul($a.toFloat());\n      const reduceAxes = broadcast_util.getReductionAxes($b.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = res.sum(reduceAxes).reshape($b.shape);\n      }\n      const tmp = $b.square() as Tensor;\n      return res.div(tmp.toFloat()).neg() as Tensor;\n    };\n    return {$a: derA, $b: derB};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.floorDiv($a, $b);\n    save([$a, $b]);\n    return res;\n  }, {$a, $b}, der) as T;\n}\n\n/**\n * Divides two `tf.Tensor`s element-wise, A / B. Inputs must\n * be the same shape.\n *\n * @param a The first tensor as the numerator for element-wise division.\n * @param b The second tensor as the denominator for element-wise division.\n */\nfunction divStrict_<T extends Tensor>(a: T|TensorLike, b: T|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'div');\n  const $b = convertToTensor(b, 'b', 'div');\n  util.assertShapesMatch($a.shape, $b.shape, 'Error in divideStrict: ');\n  return $a.div($b) as T;\n}\n\n/**\n * Returns the mod of a and b element-wise.\n * `floor(x / y) * y + mod(x, y) = x`\n * Supports broadcasting.\n *\n * We also expose `tf.modStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.mod(b).print();  // or tf.mod(a, b)\n * ```\n *\n * ```js\n * // Broadcast a mod b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.mod(b).print();  // or tf.mod(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction mod_<T extends Tensor>(a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'mod');\n  let $b = convertToTensor(b, 'b', 'mod');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const outShape =\n      broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n  const der = (dy: Tensor, saved: Tensor[]) => {\n    const [$a, $b] = saved;\n    const derA = () => {\n      const reduceAxes = broadcast_util.getReductionAxes($a.shape, outShape);\n      if (reduceAxes.length > 0) {\n        return dy.sum(reduceAxes).reshape($a.shape);\n      }\n      return dy;\n    };\n    const derB = () => {\n      const res = dy.mul($a.div($b).floor().neg());\n      const reduceAxes = broadcast_util.getReductionAxes($b.shape, outShape);\n      if (reduceAxes.length > 0) {\n        return res.sum(reduceAxes).reshape($b.shape);\n      }\n      return res;\n    };\n    return {$a: derA, $b: derB};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.mod($a, $b);\n    save([$a, $b]);\n    return res;\n  }, {$a, $b}, der) as T;\n}\n\n/**\n * Returns the mod of a and b (`a < b ? a : b`) element-wise. Inputs must\n * be the same shape. For broadcasting support, use mod().\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same dtype as `a`.\n */\nfunction modStrict_<T extends Tensor>(a: T|TensorLike, b: T|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'modStrict');\n  const $b = convertToTensor(b, 'b', 'modStrict');\n  util.assertShapesMatch($a.shape, $b.shape, 'Error in modStrict: ');\n  return $a.mod($b);\n}\n\n/**\n * Returns the min of a and b (`a < b ? a : b`) element-wise.\n * Supports broadcasting.\n *\n * We also expose `minimumStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.minimum(b).print();  // or tf.minimum(a, b)\n * ```\n *\n * ```js\n * // Broadcast minimum a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.minimum(b).print();  // or tf.minimum(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction minimum_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'minimum');\n  let $b = convertToTensor(b, 'b', 'minimum');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  if ($a.dtype === 'bool') {\n    $a = $a.toInt();\n    $b = $b.toInt();\n  }\n\n  broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n  const der = (dy: Tensor, saved: Tensor[]) => {\n    const [$a, $b] = saved;\n    const derA = () => dy.mul($a.lessEqual($b).toFloat());\n    const derB = () => dy.mul($a.greater($b).toFloat());\n    return {$a: derA, $b: derB};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.minimum($a, $b);\n    save([$a, $b]);\n    return res;\n  }, {$a, $b}, der) as T;\n}\n\n/**\n * Returns the min of a and b (`a < b ? a : b`) element-wise. Inputs must\n * be the same shape. For broadcasting support, use minimum().\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same dtype as `a`.\n */\nfunction minimumStrict_<T extends Tensor>(a: T|TensorLike, b: T|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'minimumStrict');\n  const $b = convertToTensor(b, 'b', 'minimumStrict');\n  util.assertShapesMatch($a.shape, $b.shape, 'Error in minimumStrict: ');\n  return $a.minimum($b);\n}\n\n/**\n * Returns the max of a and b (`a > b ? a : b`) element-wise.\n * Supports broadcasting.\n *\n * We also expose `tf.maximumStrict` which has the same signature as this op and\n * asserts that `a` and `b` are the same shape (does not broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.maximum(b).print();  // or tf.maximum(a, b)\n * ```\n *\n * ```js\n * // Broadcast maximum a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.maximum(b).print();  // or tf.maximum(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction maximum_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'maximum');\n  let $b = convertToTensor(b, 'b', 'maximum');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  if ($a.dtype === 'bool') {\n    $a = $a.toInt();\n    $b = $b.toInt();\n  }\n\n  broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n  const der = (dy: Tensor, saved: Tensor[]) => {\n    const [$a, $b] = saved;\n    const derA = () => dy.mul($a.greaterEqual($b).toFloat());\n    const derB = () => dy.mul($a.less($b).toFloat());\n    return {$a: derA, $b: derB};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.maximum($a, $b);\n    save([$a, $b]);\n    return res;\n  }, {$a, $b}, der) as T;\n}\n\n/**\n * Returns the max of a and b (`a > b ? a : b`) element-wise. Inputs must\n * be the same shape. For broadcasting support, use maximum().\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same dtype as `a`.\n */\nfunction maximumStrict_<T extends Tensor>(a: T|TensorLike, b: T|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'maximumStrict');\n  const $b = convertToTensor(b, 'b', 'maximumStrict');\n  util.assertShapesMatch($a.shape, $b.shape, 'Error in maximumStrict: ');\n  return $a.maximum($b);\n}\n\n/**\n * Returns (a - b) * (a - b) element-wise.\n * Supports broadcasting.\n *\n * We also expose `tf.squaredDifferenceStrict` which has the same signature as\n * this op and asserts that `a` and `b` are the same shape (does not\n * broadcast).\n *\n * ```js\n * const a = tf.tensor1d([1, 4, 3, 16]);\n * const b = tf.tensor1d([1, 2, 9, 4]);\n *\n * a.squaredDifference(b).print();  // or tf.squaredDifference(a, b)\n * ```\n *\n * ```js\n * // Broadcast squared difference  a with b.\n * const a = tf.tensor1d([2, 4, 6, 8]);\n * const b = tf.scalar(5);\n *\n * a.squaredDifference(b).print();  // or tf.squaredDifference(a, b)\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Arithmetic'} */\nfunction squaredDifference_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'squaredDifference');\n  let $b = convertToTensor(b, 'b', 'squaredDifference');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n  const der = (dy: Tensor, saved: Tensor[]) => {\n    const [$a, $b] = saved;\n    const two = scalar(2);\n    const derA = () => dy.mul($a.sub($b).mul(two));\n    const derB = () => dy.mul($b.sub($a).mul(two));\n    return {$a: derA, $b: derB};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.squaredDifference($a, $b);\n    save([$a, $b]);\n    return res;\n  }, {$a, $b}, der) as T;\n}\n\n/**\n * Returns (a - b) * (a - b) element-wise.\n *\n * Inputs must be the same shape. For broadcasting support, use\n * `tf.squaredDifference` instead.\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same type as `a`.\n */\nfunction squaredDifferenceStrict_<T extends Tensor>(\n    a: T|TensorLike, b: T|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'squaredDifferenceStrict');\n  const $b = convertToTensor(b, 'b', 'squaredDifferenceStrict');\n  util.assertShapesMatch(\n      $a.shape, $b.shape, 'Error in squaredDifferenceStrict: ');\n  return $a.squaredDifference($b);\n}\n\n/**\n * Computes arctangent of `tf.Tensor`s a / b element-wise: `atan2(a, b)`.\n * Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([1.0, 1.0, -1.0, .7]);\n * const b = tf.tensor1d([2.0, 13.0, 3.5, .21]);\n *\n * tf.atan2(a, b).print()\n * ```\n *\n * @param a The first tensor.\n * @param b The second tensor. Must have the same dtype as `a`.\n *\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction atan2_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  let $a = convertToTensor(a, 'a', 'atan2');\n  let $b = convertToTensor(b, 'b', 'atan2');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const outShape =\n      broadcast_util.assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  const der = (dy: Tensor, saved: Tensor[]) => {\n    const [$a, $b] = saved;\n    const derA = () => {\n      const d = add($a.square(), $b.square());\n      let res = dy.mul($b.div(d));\n      const reduceAxes = broadcast_util.getReductionAxes($a.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = res.sum(reduceAxes);\n      }\n      return res.reshape($a.shape);\n    };\n    const derB = () => {\n      const d = add($a.square(), $b.square()) as T;\n      let res = neg(dy.mul($a.div(d)));\n      const reduceAxes = broadcast_util.getReductionAxes($b.shape, outShape);\n      if (reduceAxes.length > 0) {\n        res = res.sum(reduceAxes);\n      }\n      return res.reshape($b.shape);\n    };\n    return {$a: derA, $b: derB};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.atan2($a, $b);\n    save([$a, $b]);\n    return res;\n  }, {$a, $b}, der) as T;\n}\n\nexport const add = op({add_});\nexport const addN = op({addN_});\nexport const addStrict = op({addStrict_});\nexport const atan2 = op({atan2_});\nexport const div = op({div_});\nexport const divStrict = op({divStrict_});\nexport const floorDiv = op({floorDiv_});\nexport const maximum = op({maximum_});\nexport const maximumStrict = op({maximumStrict_});\nexport const minimum = op({minimum_});\nexport const minimumStrict = op({minimumStrict_});\nexport const mod = op({mod_});\nexport const modStrict = op({modStrict_});\nexport const mul = op({mul_});\nexport const mulStrict = op({mulStrict_});\nexport const pow = op({pow_});\nexport const powStrict = op({powStrict_});\nexport const squaredDifference = op({squaredDifference_});\nexport const squaredDifferenceStrict = op({squaredDifferenceStrict_});\nexport const sub = op({sub_});\nexport const subStrict = op({subStrict_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {whereImpl} from '../backends/where_impl';\nimport {ENGINE} from '../engine';\nimport {Tensor, Tensor2D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {assert, assertShapesMatch} from '../util';\nimport {assertAndGetBroadcastShape} from './broadcast_util';\nimport {op} from './operation';\nimport {zerosLike} from './tensor_ops';\n\n/**\n * Returns the truth value of `NOT x` element-wise.\n *\n * ```js\n * const a = tf.tensor1d([false, true], 'bool');\n *\n * a.logicalNot().print();\n * ```\n *\n * @param x The input tensor. Must be of dtype 'bool'.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction logicalNot_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'logicalNot', 'bool');\n  return ENGINE.runKernel(backend => backend.logicalNot($x), {$x});\n}\n\n/**\n * Returns the truth value of `a AND b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalAnd(b).print();\n * ```\n *\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction logicalAnd_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'logicalAnd', 'bool');\n  const $b = convertToTensor(b, 'b', 'logicalAnd', 'bool');\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  return ENGINE.runKernel(backend => backend.logicalAnd($a, $b), {$a, $b}) as T;\n}\n\n/**\n * Returns the truth value of `a OR b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalOr(b).print();\n * ```\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction logicalOr_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'logicalOr', 'bool');\n  const $b = convertToTensor(b, 'b', 'logicalOr', 'bool');\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  return ENGINE.runKernel(backend => backend.logicalOr($a, $b), {$a, $b}) as T;\n}\n\n/**\n * Returns the truth value of `a XOR b` element-wise. Supports broadcasting.\n *\n * ```js\n * const a = tf.tensor1d([false, false, true, true], 'bool');\n * const b = tf.tensor1d([false, true, false, true], 'bool');\n *\n * a.logicalXor(b).print();\n * ```\n *\n * @param a The first input tensor. Must be of dtype bool.\n * @param b The second input tensor. Must be of dtype bool.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction logicalXor_<T extends Tensor>(\n    a: Tensor|TensorLike, b: Tensor|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'logicalXor', 'bool');\n  const $b = convertToTensor(b, 'b', 'logicalXor', 'bool');\n  assertAndGetBroadcastShape($a.shape, $b.shape);\n\n  // x ^ y = (x | y) & ~(x & y)\n  return logicalOr(a, b).logicalAnd(logicalAnd(a, b).logicalNot()) as T;\n}\n\n/**\n * Returns the elements, either `a` or `b` depending on the `condition`.\n *\n * If the condition is true, select from `a`, otherwise select from `b`.\n *\n * ```js\n * const cond = tf.tensor1d([false, false, true], 'bool');\n * const a = tf.tensor1d([1 , 2, 3]);\n * const b = tf.tensor1d([-1, -2, -3]);\n *\n * a.where(cond, b).print();\n * ```\n *\n * @param condition The input condition. Must be of dtype bool.\n * @param a If `condition` is rank 1, `a` may have a higher rank but\n *     its first dimension must match the size of `condition`.\n * @param b A tensor with the same shape and type as `a`.\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nfunction where_<T extends Tensor>(\n    condition: Tensor|TensorLike, a: T|TensorLike, b: T|TensorLike): T {\n  const $a = convertToTensor(a, 'a', 'where');\n  const $b = convertToTensor(b, 'b', 'where');\n  const $condition = convertToTensor(condition, 'condition', 'where', 'bool');\n\n  assertShapesMatch($a.shape, $b.shape, 'Error in where: ');\n\n  if ($condition.rank === 1) {\n    // If condition rank is 1, then the first dimension must match the size of\n    // condition.\n    assert(\n        $condition.shape[0] === $a.shape[0],\n        () => 'The first dimension of `a` must match the size of `condition`.');\n  } else {\n    // A must have the same shape as condition.\n    assertShapesMatch($condition.shape, $b.shape, 'Error in where: ');\n  }\n\n  // TODO(julianoks): Return null for condition gradient\n  // when backprop supports it.\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$condition] = saved;\n    return {\n      $condition: () => zerosLike($condition).toFloat(),\n      $a: () => dy.mul($condition.cast(dy.dtype)) as T,\n      $b: () => dy.mul($condition.logicalNot().cast(dy.dtype)) as T\n    };\n  };\n\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.select($condition, $a, $b);\n    save([$condition]);\n    return res;\n  }, {$condition, $a, $b}, grad) as T;\n}\n\n/**\n * Returns the coordinates of true elements of condition.\n *\n * The coordinates are returned in a 2-D tensor where the first dimension (rows)\n * represents the number of true elements, and the second dimension (columns)\n * represents the coordinates of the true elements. Keep in mind, the shape of\n * the output tensor can vary depending on how many true values there are in\n * input. Indices are output in row-major order. The resulting tensor has the\n * shape `[numTrueElems, condition.rank]`.\n *\n * This is analogous to calling the python `tf.where(cond)` without an x or y.\n *\n * ```js\n * const cond = tf.tensor1d([false, false, true], 'bool');\n * const result = await tf.whereAsync(cond);\n * result.print();\n * ```\n */\n/** @doc {heading: 'Operations', subheading: 'Logical'} */\nasync function whereAsync_(condition: Tensor|TensorLike): Promise<Tensor2D> {\n  const $condition =\n      convertToTensor(condition, 'condition', 'whereAsync', 'bool');\n  const vals = await $condition.data();\n  const res = whereImpl($condition.shape, vals);\n  if (condition !== $condition) {\n    $condition.dispose();\n  }\n  return res;\n}\n\nexport const logicalAnd = op({logicalAnd_});\nexport const logicalNot = op({logicalNot_});\nexport const logicalOr = op({logicalOr_});\nexport const logicalXor = op({logicalXor_});\nexport const where = op({where_});\nexport const whereAsync = whereAsync_;\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {maximum} from './binary_ops';\nimport {getReductionAxes} from './broadcast_util';\nimport {where} from './logical_ops';\nimport {op} from './operation';\nimport {SELU_SCALE, SELU_SCALEALPHA} from './selu_util';\nimport {scalar, zerosLike} from './tensor_ops';\n\n/**\n * Computes rectified linear element-wise: `max(x, 0)`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.relu().print();  // or tf.relu(x)\n * ```\n * @param x The input tensor. If the dtype is `bool`, the output dtype will be\n *     `int32'.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction relu_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'relu');\n\n  if ($x.dtype === 'bool') {\n    return $x.toInt();\n  }\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {$x: () => dy.mulStrict($x.step().toFloat() as T)};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.relu($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes exponential linear element-wise: `x > 0 ? e ^ x - 1 : 0`.\n *\n * ```js\n * const x = tf.tensor1d([-1, 1, -3, 2]);\n *\n * x.elu().print();  // or tf.elu(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction elu_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'elu');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [y] = saved;\n    return {\n      $x: () => ENGINE.runKernel(backend => backend.eluDer(dy, y), {dy, y}) as T\n    };\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const y = backend.elu($x);\n    save([y]);\n    return y;\n  }, {$x}, grad);\n}\n\n/**\n * Computes scaled exponential linear element-wise.\n *\n * `x < 0 ? scale * alpha * (exp(x) - 1) : x`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.selu().print();  // or tf.selu(x)\n * ```\n * @param x The input tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction selu_<T extends Tensor>(x: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'selu');\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$x] = saved;\n    return {\n      $x: () => {\n        const mask = $x.greater(scalar(0));\n\n        const scaleAlpha = scalar(SELU_SCALEALPHA);\n        const scale = scalar(SELU_SCALE);\n\n        const greaterThanZeroDer = dy.mul(scale);\n        const lessEqualZeroDer = dy.mul(scaleAlpha).mul($x.toFloat().exp());\n\n        return where(mask, greaterThanZeroDer, lessEqualZeroDer) as T;\n      }\n    };\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.selu($x);\n    save([$x]);\n    return res;\n  }, {$x}, grad);\n}\n\n/**\n * Computes leaky rectified linear element-wise.\n *\n * See\n * [http://web.stanford.edu/~awni/papers/relu_hybrid_icml2013_final.pdf](\n *     http://web.stanford.edu/~awni/papers/relu_hybrid_icml2013_final.pdf)\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n *\n * x.leakyRelu(0.1).print();  // or tf.leakyRelu(x, 0.1)\n * ```\n * @param x The input tensor.\n * @param alpha The scaling factor for negative values, defaults to 0.2.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction leakyRelu_<T extends Tensor>(x: T|TensorLike, alpha = 0.2): T {\n  const $x = convertToTensor(x, 'x', 'leakyRelu');\n  return maximum(scalar(alpha).mul($x), $x);\n}\n\n/**\n * Computes leaky rectified linear element-wise with parametric alphas.\n *\n * `x < 0 ? alpha * x : f(x) = x`\n *\n * ```js\n * const x = tf.tensor1d([-1, 2, -3, 4]);\n * const alpha = tf.scalar(0.1);\n *\n * x.prelu(alpha).print();  // or tf.prelu(x, alpha)\n * ```\n * @param x The input tensor.\n * @param alpha Scaling factor for negative values.\n */\n/** @doc {heading: 'Operations', subheading: 'Basic math'} */\nfunction prelu_<T extends Tensor>(x: T|TensorLike, alpha: T|TensorLike): T {\n  const $x = convertToTensor(x, 'x', 'prelu');\n  const $alpha = convertToTensor(alpha, 'alpha', 'prelu');\n\n  const grad = (dy: Tensor, saved: Tensor[]) => {\n    const [$x, $alpha] = saved;\n    const mask = $x.greater(0);\n\n    return {\n      $x: () => where(mask, dy, dy.mul($alpha)) as T,\n      $alpha: () => {\n        let res = where(mask, zerosLike(dy), dy.mul($x));\n        const reduceAxes = getReductionAxes($alpha.shape, dy.shape);\n        if (reduceAxes.length > 0) {\n          res = res.sum(reduceAxes);\n        }\n        return res.reshape($alpha.shape) as T;\n      }\n    };\n  };\n\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.prelu($x, $alpha);\n    save([$x, $alpha]);\n    return res;\n  }, {$x, $alpha}, grad) as T;\n}\n\nexport const elu = op({elu_});\nexport const leakyRelu = op({leakyRelu_});\nexport const prelu = op({prelu_});\nexport const relu = op({relu_});\nexport const selu = op({selu_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\nimport * as axis_util from './axis_util';\nimport {op} from './operation';\n\n/**\n * Transposes the `tf.Tensor`. Permutes the dimensions according to `perm`.\n *\n * The returned `tf.Tensor`'s dimension `i` will correspond to the input\n * dimension `perm[i]`. If `perm` is not given, it is set to `[n-1...0]`,\n * where `n` is the rank of the input `tf.Tensor`. Hence by default, this\n * operation performs a regular matrix transpose on 2-D input `tf.Tensor`s.\n *\n * ```js\n * const a = tf.tensor2d([1, 2, 3, 4, 5, 6], [2, 3]);\n *\n * a.transpose().print();  // or tf.transpose(a)\n * ```\n *\n * @param x The tensor to transpose.\n * @param perm The permutation of the dimensions of a.\n */\n/** @doc {heading: 'Operations', subheading: 'Matrices'} */\nfunction transpose_<T extends Tensor>(x: T|TensorLike, perm?: number[]): T {\n  const $x = convertToTensor(x, 'x', 'transpose');\n\n  if (perm == null) {\n    perm = $x.shape.map((s, i) => i).reverse();\n  }\n  util.assert(\n      $x.rank === perm.length,\n      () => `Error in transpose: rank of input ${$x.rank} ` +\n          `must match length of perm ${perm}.`);\n  perm.forEach(axis => {\n    util.assert(\n        axis >= 0 && axis < $x.rank,\n        () => `All entries in 'perm' must be between 0 and ${$x.rank - 1}` +\n            ` but got ${perm}`);\n  });\n\n  if ($x.rank <= 1) {\n    return $x.clone();\n  }\n\n  const der = (dy: T) => {\n    const undoPerm = axis_util.getUndoAxesPermutation(perm);\n    return {$x: () => dy.transpose(undoPerm)};\n  };\n  return ENGINE.runKernel(backend => backend.transpose($x, perm), {$x}, der);\n}\n\nexport const transpose = op({transpose_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor, Tensor3D, Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\nimport {op} from './operation';\n\n/**\n * Normalizes the activation of a local neighborhood across or within\n * channels.\n *\n * @param x The input tensor. The 4-D input tensor is treated as a 3-D array\n *     of 1D vectors (along the last dimension), and each vector is\n *     normalized independently.\n * @param depthRadius The number of adjacent channels in the 1D normalization\n *     window.\n * @param bias A constant bias term for the basis.\n * @param alpha A scale factor, usually positive.\n * @param beta An exponent.\n */\n/** @doc {heading: 'Operations', subheading: 'Normalization'} */\nfunction localResponseNormalization_<T extends Tensor3D|Tensor4D>(\n    x: T|TensorLike, depthRadius = 5, bias = 1, alpha = 1, beta = 0.5): T {\n  const $x = convertToTensor(x, 'x', 'localResponseNormalization');\n  util.assert(\n      $x.rank === 4 || $x.rank === 3,\n      () => `Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${$x.rank}.`);\n  util.assert(\n      util.isInt(depthRadius),\n      () => `Error in localResponseNormalization: depthRadius must be an ` +\n          `integer but got depthRadius ${depthRadius}.`);\n\n  let x4D = $x as Tensor4D;\n  let reshapedTo4D = false;\n  if ($x.rank === 3) {\n    reshapedTo4D = true;\n    x4D = $x.as4D(1, $x.shape[0], $x.shape[1], $x.shape[2]);\n  }\n  const backward = (dy: Tensor4D, saved: Tensor[]) => {\n    const [x4D, y] = saved;\n    return {\n      x4D: () => ENGINE.runKernel(\n          backend => backend.LRNGrad(\n              dy, x4D as Tensor4D, y as Tensor4D, depthRadius, bias, alpha,\n              beta),\n          {})\n    };\n  };\n  const res = ENGINE.runKernel((backend, save) => {\n    const y = backend.localResponseNormalization4D(\n        x4D, depthRadius, bias, alpha, beta);\n    save([x4D, y]);\n    return y;\n  }, {x4D}, backward);\n  if (reshapedTo4D) {\n    return res.as3D(res.shape[1], res.shape[2], res.shape[3]) as T;\n  } else {\n    return res as T;\n  }\n}\n\nexport const localResponseNormalization = op({localResponseNormalization_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as axis_util from './axis_util';\nimport {op} from './operation';\nimport {scalar} from './tensor_ops';\nimport {parseAxisParam} from '../util';\n\n/**\n * Computes the norm of scalar, vectors, and matrices.\n * This function can compute several different vector norms (the 1-norm, the\n * Euclidean or 2-norm, the inf-norm, and in general the p-norm for p > 0)\n * and matrix norms (Frobenius, 1-norm, and inf-norm).\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n *\n * x.norm().print();  // or tf.norm(x)\n * ```\n *\n * @param x The input array.\n * @param ord Optional. Order of the norm. Supported norm types are\n * following:\n *\n *  | ord        | norm for matrices         | norm for vectors\n *  |------------|---------------------------|---------------------\n *  |'euclidean' |Frobenius norm             |2-norm\n *  |'fro'       |Frobenius norm\t           |\n *  |Infinity    |max(sum(abs(x), axis=1))   |max(abs(x))\n *  |-Infinity   |min(sum(abs(x), axis=1))   |min(abs(x))\n *  |1           |max(sum(abs(x), axis=0))   |sum(abs(x))\n *  |2           |                           |sum(abs(x)^2)^1/2*\n *\n * @param axis Optional. If axis is null (the default), the input is\n * considered a vector and a single vector norm is computed over the entire\n * set of values in the Tensor, i.e. norm(x, ord) is equivalent\n * to norm(x.reshape([-1]), ord). If axis is a integer, the input\n * is considered a batch of vectors, and axis determines the axis in x\n * over which to compute vector norms. If axis is a 2-tuple of integer it is\n * considered a batch of matrices and axis determines the axes in NDArray\n * over which to compute a matrix norm.\n * @param keepDims Optional. If true, the norm have the same dimensionality\n * as the input.\n */\n/** @doc {heading: 'Operations', subheading: 'Matrices'} */\nfunction norm_(\n    x: Tensor|TensorLike, ord: number|'euclidean'|'fro' = 'euclidean',\n    axis: number|number[] = null, keepDims = false): Tensor {\n  x = convertToTensor(x, 'x', 'norm');\n\n  const norm = normImpl(x, ord, axis);\n  let keepDimsShape = norm.shape;\n  if (keepDims) {\n    const axes = parseAxisParam(axis, x.shape);\n    keepDimsShape = axis_util.expandShapeToKeepDim(norm.shape, axes);\n  }\n  return norm.reshape(keepDimsShape);\n}\n\nfunction normImpl(\n    x: Tensor, p: number|string, axis: number|number[] = null): Tensor {\n  if (x.rank === 0) {\n    return x.abs();\n  }\n\n  // consider vector when no axis is specified\n  if (x.rank !== 1 && axis === null) {\n    return normImpl(x.reshape([-1]), p, axis);\n  }\n\n  // vector\n  if (x.rank === 1 || typeof axis === 'number' ||\n      Array.isArray(axis) && axis.length === 1) {\n    if (p === 1) {\n      return x.abs().sum(axis);\n    }\n    if (p === Infinity) {\n      return x.abs().max(axis);\n    }\n    if (p === -Infinity) {\n      return x.abs().min(axis);\n    }\n    if (p === 'euclidean' || p === 2) {\n      // norm(x, 2) = sum(abs(xi) ^ 2) ^ 1/2\n      return x.abs().pow(scalar(2, 'int32')).sum(axis).sqrt() as Tensor;\n    }\n\n    throw new Error(`Error in norm: invalid ord value: ${p}`);\n  }\n\n  // matrix (assumption axis[0] < axis[1])\n  if (Array.isArray(axis) && axis.length === 2) {\n    if (p === 1) {\n      return x.abs().sum(axis[0]).max(axis[1] - 1);\n    }\n    if (p === Infinity) {\n      return x.abs().sum(axis[1]).max(axis[0]);\n    }\n    if (p === -Infinity) {\n      return x.abs().sum(axis[1]).min(axis[0]);\n    }\n    if (p === 'fro' || p === 'euclidean') {\n      // norm(x) = sqrt(sum(pow(x, 2)))\n      return x.square().sum(axis).sqrt();\n    }\n\n    throw new Error(`Error in norm: invalid ord value: ${p}`);\n  }\n\n  throw new Error(`Error in norm: invalid axis: ${axis}`);\n}\n\nexport const norm = op({norm_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor, Tensor1D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {assert, isInt, parseAxisParam} from '../util';\nimport {expandDims} from './array_ops';\nimport {getUndoAxesPermutation} from './axis_util';\nimport {maximum} from './binary_ops';\nimport {greaterEqual} from './compare';\nimport {logicalAnd, where} from './logical_ops';\nimport {op} from './operation';\nimport {collectGatherOpShapeInfo} from './segment_util';\nimport {ones, scalar, zerosLike} from './tensor_ops';\n\n/**\n * Computes the sum along segments of a `tf.Tensor`.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const segmentIds = tf.tensor1d([1, 2, 0, 1], 'int32');\n * const numSegments = 3;\n *\n * x.unsortedSegmentSum(segmentIds, numSegments).print()\n * //or tf.unsortedSegmentSum(x, segmentIds, numSegments)\n * ```\n * @param x The `tf.Tensor` that will be summed along its segments.\n * @param segmentIds A `tf.Tensor1D` whose rank is equal to the rank of `x`'s\n * dimension along the `axis`.  Maps each element of `x` to a segment.\n * @param numSegments The number of distinct `segmentIds`.\n */\n/** @doc {heading: 'Operations', subheading: 'Segment'} */\nfunction unsortedSegmentSum_<T extends Tensor>(\n    x: T|TensorLike, segmentIds: Tensor1D|TensorLike, numSegments: number): T {\n  const $x = convertToTensor(x, 'x', 'unsortedSegmentSum');\n  const $segmentIds =\n      convertToTensor(segmentIds, 'segmentIds', 'unsortedSegmentSum', 'int32');\n  assert(isInt(numSegments), () => 'numSegments must be of dtype int');\n\n  const gradFunc = (dy: T, saved: Tensor[]) => {\n    const [$segmentIds] = saved;\n    const derX = () => {\n      return gatherDropNegatives(dy, $segmentIds as Tensor1D);\n    };\n    return {$x: derX};\n  };\n  return ENGINE.runKernel((backend, save) => {\n    const res = backend.unsortedSegmentSum($x, $segmentIds, numSegments);\n    save([$segmentIds]);\n    return res;\n  }, {$x}, gradFunc) as T;\n}\n\n/**\n * Gather slices from tensor `x`'s axis `axis` according to `indices`.\n *\n * ```js\n * const x = tf.tensor1d([1, 2, 3, 4]);\n * const indices = tf.tensor1d([1, 3, 3], 'int32');\n *\n * x.gather(indices).print();\n * ```\n *\n * ```js\n * const x = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const indices = tf.tensor1d([1, 1, 0], 'int32');\n *\n * x.gather(indices).print();\n * ```\n * @param x The input tensor whose slices to be gathered.\n * @param indices The indices of the values to extract.\n * @param axis The axis over which to select values. Defaults to 0.\n */\n/** @doc {heading: 'Tensors', subheading: 'Slicing and Joining'} */\nfunction gather_<T extends Tensor>(\n    x: T|TensorLike, indices: Tensor|TensorLike, axis = 0): T {\n  const $x = convertToTensor(x, 'x', 'gather');\n  const $indices = convertToTensor(indices, 'indices', 'gather', 'int32');\n  axis = parseAxisParam(axis, $x.shape)[0];\n  const shapeInfo = collectGatherOpShapeInfo($x, $indices, axis);\n\n  const grad = (dy: T, saved: Tensor[]) => {\n    const [$indices] = saved;\n    const derX = () => {\n      const paramsShape = $x.shape;\n      const indicesSize = $indices.size;\n\n      const outerShape = paramsShape.slice(0, axis);\n      const outerDims = outerShape.length;\n      const innerShape = paramsShape.slice(axis, paramsShape.length).slice(1);\n      const innerDims = innerShape.length;\n\n      const outerAxesIndices = arrayRange(0, outerDims);\n      const innerAxesIndices =\n          arrayRange(outerDims + 1, outerDims + 1 + innerDims);\n\n      const valuesShape = arrayConcat([outerShape, [indicesSize], innerShape]);\n\n      const values = dy.reshape(valuesShape);\n      const reshapedIndices = $indices.reshape([indicesSize]);\n\n      const transposeDims =\n          arrayConcat([[outerDims], outerAxesIndices, innerAxesIndices]);\n      const valuesTranspose = values.transpose(transposeDims);\n      let paramsGrad = unsortedSegmentSum(\n          valuesTranspose, reshapedIndices as Tensor1D, $x.shape[axis]);\n\n      const invertTransposeDims = getUndoAxesPermutation(transposeDims);\n      paramsGrad = paramsGrad.transpose(invertTransposeDims);\n\n      return paramsGrad as T;\n    };\n    return {$x: derX};\n  };\n  return (ENGINE.runKernel((backend, save) => {\n           const res = backend.gather($x, $indices.flatten(), axis);\n           save([$indices]);\n           return res;\n         }, {$x}, grad)).reshape(shapeInfo.outputShape) as T;\n}\n\nfunction arrayRange(start: number, stop: number): number[] {\n  const result = [];\n  for (let i = start; i < stop; ++i) {\n    result.push(i);\n  }\n  return result;\n}\n\nfunction arrayConcat(arrays: number[][]): number[] {\n  const result = [];\n  for (let i = 0; i < arrays.length; ++i) {\n    for (let j = 0; j < arrays[i].length; ++j) {\n      result.push(arrays[i][j]);\n    }\n  }\n  return result;\n}\n\nfunction gatherDropNegatives<T extends Tensor>(x: T, indices: Tensor1D) {\n  // Helper function for unsorted segment ops. Gathers params for\n  // positive segment ids and gathers 0 for inputs with negative segment id.\n  // Mirrors _GatherDropNegatives from tensorflow/python/ops/math_grad.py\n  const zeroClippedIndices = maximum(indices, zerosLike(indices));\n  const gathered = gather(x, zeroClippedIndices as Tensor1D);\n  let isPositive = greaterEqual(indices, scalar(0, 'int32'));\n  const numIters = gathered.rank - isPositive.rank;\n  for (let i = 0; i < numIters; ++i) {\n    isPositive = expandDims(isPositive, i + 1);\n  }\n  isPositive = logicalAnd(isPositive, ones(gathered.shape, 'bool'));\n  const zeroSlice = zerosLike(gathered);\n  return where(isPositive, gathered, zeroSlice);\n}\n\nexport const gather = op({gather_});\nexport const unsortedSegmentSum = op({unsortedSegmentSum_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Scalar, Tensor1D, Tensor2D} from '../tensor';\nimport {convertToTensor, convertToTensorArray} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {op} from './operation';\n\n/**\n * @docalias (data: Tensor2D, c: Tensor2D, h: Tensor2D): [Tensor2D, Tensor2D]\n */\nexport type LSTMCellFunc = {\n  (data: Tensor2D, c: Tensor2D, h: Tensor2D): [Tensor2D, Tensor2D];\n};\n\n/**\n * Computes the next states and outputs of a stack of LSTMCells.\n *\n * Each cell output is used as input to the next cell.\n *\n * Returns `[cellState, cellOutput]`.\n *\n * Derived from tf.contrib.rn.MultiRNNCell.\n *\n * @param lstmCells Array of LSTMCell functions.\n * @param data The input to the cell.\n * @param c Array of previous cell states.\n * @param h Array of previous cell outputs.\n */\n/** @doc {heading: 'Operations', subheading: 'RNN'} */\nfunction multiRNNCell_(\n    lstmCells: LSTMCellFunc[], data: Tensor2D|TensorLike,\n    c: Array<Tensor2D|TensorLike>,\n    h: Array<Tensor2D|TensorLike>): [Tensor2D[], Tensor2D[]] {\n  const $data = convertToTensor(data, 'data', 'multiRNNCell');\n  const $c = convertToTensorArray(c, 'c', 'multiRNNCell');\n  const $h = convertToTensorArray(h, 'h', 'multiRNNCell');\n\n  let input = $data;\n  const newStates = [];\n  for (let i = 0; i < lstmCells.length; i++) {\n    const output = lstmCells[i](input, $c[i], $h[i]);\n    newStates.push(output[0]);\n    newStates.push(output[1]);\n    input = output[1];\n  }\n  const newC: Tensor2D[] = [];\n  const newH: Tensor2D[] = [];\n  for (let i = 0; i < newStates.length; i += 2) {\n    newC.push(newStates[i]);\n    newH.push(newStates[i + 1]);\n  }\n  return [newC, newH];\n}\n\n/**\n * Computes the next state and output of a BasicLSTMCell.\n *\n * Returns `[newC, newH]`.\n *\n * Derived from tf.contrib.rnn.BasicLSTMCell.\n *\n * @param forgetBias Forget bias for the cell.\n * @param lstmKernel The weights for the cell.\n * @param lstmBias The bias for the cell.\n * @param data The input to the cell.\n * @param c Previous cell state.\n * @param h Previous cell output.\n */\n/** @doc {heading: 'Operations', subheading: 'RNN'} */\nfunction basicLSTMCell_(\n    forgetBias: Scalar|TensorLike, lstmKernel: Tensor2D|TensorLike,\n    lstmBias: Tensor1D|TensorLike, data: Tensor2D|TensorLike,\n    c: Tensor2D|TensorLike, h: Tensor2D|TensorLike): [Tensor2D, Tensor2D] {\n  const $forgetBias =\n      convertToTensor(forgetBias, 'forgetBias', 'basicLSTMCell');\n  const $lstmKernel =\n      convertToTensor(lstmKernel, 'lstmKernel', 'basicLSTMCell');\n  const $lstmBias = convertToTensor(lstmBias, 'lstmBias', 'basicLSTMCell');\n  const $data = convertToTensor(data, 'data', 'basicLSTMCell');\n  const $c = convertToTensor(c, 'c', 'basicLSTMCell');\n  const $h = convertToTensor(h, 'h', 'basicLSTMCell');\n\n  const combined = $data.concat($h, 1);\n  const weighted = combined.matMul($lstmKernel);\n  const res = weighted.add($lstmBias) as Tensor2D;\n\n  // i = input_gate, j = new_input, f = forget_gate, o = output_gate\n  const batchSize = res.shape[0];\n  const sliceCols = res.shape[1] / 4;\n  const sliceSize: [number, number] = [batchSize, sliceCols];\n  const i = res.slice([0, 0], sliceSize);\n  const j = res.slice([0, sliceCols], sliceSize);\n  const f = res.slice([0, sliceCols * 2], sliceSize);\n  const o = res.slice([0, sliceCols * 3], sliceSize);\n\n  const newC = i.sigmoid().mulStrict(j.tanh()).addStrict(\n      $c.mulStrict($forgetBias.add(f).sigmoid() as Tensor2D));\n  const newH = newC.tanh().mulStrict(o.sigmoid());\n  return [newC, newH];\n}\n\nexport const basicLSTMCell = op({basicLSTMCell_});\nexport const multiRNNCell = op({multiRNNCell_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Scalar, Tensor} from '../tensor';\nimport {assertTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\nimport {pow} from './binary_ops';\nimport {op} from './operation';\nimport {scalar} from './tensor_ops';\n\n/**\n * Compute the moving average of a variable.\n *\n * Without zeroDebias, the moving average operation is defined by:\n *   `v += delta`\n * where\n *   `delta = (1 - decay) * (x - v)`\n *\n * With zeroDebias (default), the `delta` term is scaled to debias the\n * effect of the (assumed) zero-initialization of `v`.\n *   `delta /= (1 - decay ^ step)`\n *\n * For more details on the zero-debiasing algorithm, see:\n *   https://arxiv.org/abs/1412.6980\n *\n * Note that this function is completely stateless and does not keep track of\n * step count. The step count needs to be maintained by the caller and passed\n * in as `step`.\n *\n * @param v The current moving average value.\n * @param x New input value, must have the same shape and dtype as `v`.\n * @param decay The decay factor. Typical values are 0.95 and 0.99.\n * @param step Step count.\n * @param zeroDebias: Whether zeroDebias is to be performed (default: `true`).\n * @returns The new moving average value.\n */\n/** @doc {heading: 'Operations', subheading: 'Moving Average'} */\nfunction movingAverage_<T extends Tensor>(\n    v: T|TensorLike, x: T|TensorLike, decay: number|Scalar,\n    step?: number|Scalar, zeroDebias = true): T {\n  const $v = convertToTensor(v, 'v', 'movingAverage');\n  const $x = convertToTensor(x, 'x', 'movingAverage');\n  const $decay = convertToTensor(decay, 'decay', 'movingAverage');\n\n  assertTypesMatch($v, $x);\n  util.assert(\n      util.arraysEqual($v.shape, $x.shape), () => 'Shape mismatch in v and x');\n\n  const one = scalar(1);\n  const oneMinusDecay = one.sub($decay);\n\n  let update = $x.sub($v).mul(oneMinusDecay);\n  if (zeroDebias) {\n    util.assert(\n        step != null, () => 'When using zeroDebias: true, step is required.');\n    const $step = convertToTensor(step, 'step', 'movingAverage');\n    update = update.div(one.sub(pow($decay, $step)));\n  }\n  return $v.add(update);\n}\n\nexport const movingAverage = op({movingAverage_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {op} from './operation';\nimport {slice} from './slice';\nimport {getStridedSlicedInfo} from './slice_util';\n\n/**\n * Extracts a strided slice of a tensor.\n *\n * Roughly speaking, this op extracts a slice of size (end-begin)/stride from\n * the given input tensor (x). Starting at the location specified by begin the\n * slice continues by adding stride to the index until all dimensions are not\n * less than end. Note that a stride can be negative, which causes a reverse\n * slice.\n *\n * ```js\n * const t = tf.tensor3d([1, 1, 1 ,2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6],\n *    [3, 2, 3]);\n * t.stridedSlice([1, 0, 0], [2, 1, 3], [1, 1, 1]).print()  // [[[3, 3, 3]]]\n * t.stridedSlice([1, 0, 0], [2, 2, 3], [1, 1, 1]).print()  // [[[3, 3, 3],\n *                                                     // [4, 4, 4]]]\n * t.stridedSlice([1, -1, 0], [2, -3, 3], [1, -1, 1]).print() // [[[4, 4, 4],\n *                                                     // [3, 3, 3]]]\n * ```\n *\n * @param x The tensor to stride slice.\n * @param begin The coordinates to start the slice from.\n * @param end: The coordinates to end the slice at.\n * @param strides: The size of the slice.\n * @param beginMask: If the ith bit of beginMask is set, begin[i] is ignored\n *      and the fullest possible range in that dimension is used instead.\n * @param endMask: If the ith bit of endMask is set, end[i] is ignored\n *      and the fullest possible range in that dimension is used instead.\n * @param shrinkAxisMask: a bitmask where bit i implies that\n * the ith specification should shrink the dimensionality. begin and end must\n * imply a slice of size 1 in the dimension.\n */\n/** @doc {heading: 'Operations', subheading: 'Slicing and Joining'} */\nfunction stridedSlice_(\n    x: Tensor|TensorLike, begin: number[], end: number[], strides: number[],\n    beginMask = 0, endMask = 0, ellipsisMask = 0, newAxisMask = 0,\n    shrinkAxisMask = 0): Tensor {\n  if (ellipsisMask !== 0) {\n    throw new Error('ellipsis mask is not yet supported');\n  }\n  if (newAxisMask !== 0) {\n    throw new Error('new axis mask is not yet supported');\n  }\n  const $x = convertToTensor(x, 'x', 'stridedSlice');\n  const nonStrided = strides.every(v => v === 1);\n  if (nonStrided) {\n    const [beginIndex, size, shrinkAxis] = getStridedSlicedInfo(\n        $x.shape, begin, end, strides, beginMask, endMask, ellipsisMask,\n        newAxisMask, shrinkAxisMask);\n    const outShape =\n        size.filter((_, index) => shrinkAxis.indexOf(index) === -1);\n    return slice($x, beginIndex, size).reshape(outShape);\n  }\n  return ENGINE.runKernel(\n      backend => backend.stridedSlice(\n          $x, begin, end, strides, beginMask, endMask, ellipsisMask,\n          newAxisMask, shrinkAxisMask),\n      {$x});\n}\n\nexport const stridedSlice = op({stridedSlice_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {NumericTensor, Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {op} from './operation';\n\n/**\n * Finds the values and indices of the `k` largest entries along the last\n * dimension.\n *\n * If the input is a vector (rank=1), finds the k largest entries in the vector\n * and outputs their values and indices as vectors. Thus values[j] is the j-th\n * largest entry in input, and its index is indices[j].\n * For higher rank inputs, computes the top k entries along the last dimension.\n *\n * If two elements are equal, the lower-index element appears first.\n *\n * ```js\n * const a = tf.tensor2d([[1, 5], [4, 3]]);\n * const {values, indices} = tf.topk(a);\n * values.print();\n * indices.print();\n * ```\n * @param x 1-D or higher `tf.Tensor` with last dimension being at least `k`.\n * @param k Number of top elements to look for along the last dimension.\n * @param sorted If true, the resulting `k` elements will be sorted by the\n *     values in descending order.\n */\n/** @doc {heading: 'Operations', subheading: 'Evaluation'} */\nfunction topk_<T extends Tensor>(\n    x: T|TensorLike, k = 1, sorted = true): {values: T, indices: T} {\n  const $x = convertToTensor(x, 'x', 'topk');\n  if ($x.rank === 0) {\n    throw new Error('topk() expects the input to be of rank 1 or higher');\n  }\n  const lastDim = $x.shape[$x.shape.length - 1];\n  if (k > lastDim) {\n    throw new Error(\n        `'k' passed to topk() must be <= the last dimension (${lastDim}) ` +\n        `but got ${k}`);\n  }\n\n  const [values, indices] =\n      ENGINE.runKernel(b => b.topk($x as NumericTensor, k, sorted), {$x});\n  return {values, indices} as {values: T, indices: T};\n}\n\nexport const topk = op({topk_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {Rank, ShapeMap, TensorLike} from '../types';\nimport {op} from './operation';\nimport * as scatter_nd_util from './scatter_nd_util';\n\n/**\n * Creates a new tensor by applying sparse updates to individual\n * values or slices within a zero tensor of the given shape tensor according to\n * indices. This operator is the inverse of the `tf.gatherND` operator which\n * extracts values or slices from a given tensor.\n *\n * ```js\n * const indices = tf.tensor2d([4, 3, 1, 7], [4, 1], 'int32');\n * const updates = tf.tensor1d([9, 10, 11, 12]);\n * const shape = [8];\n * tf.scatterND(indices, updates, shape).print() //[0, 11, 0, 10, 9, 0, 0, 12]\n * ```\n *\n * @param indices The tensor contains the indices into the output tensor.\n * @param updates The tensor contains the value for the indices.\n * @param shape: The shape of the output tensor.\n */\n/** @doc {heading: 'Operations', subheading: 'Slicing and Joining'} */\nfunction scatterND_<R extends Rank>(\n    indices: Tensor|TensorLike, updates: Tensor|TensorLike,\n    shape: ShapeMap[R]): Tensor<R> {\n  const $indices = convertToTensor(indices, 'indices', 'scatterND', 'int32');\n  const $updates = convertToTensor(updates, 'updates', 'scatterND');\n  scatter_nd_util.validateInput($updates, $indices, shape);\n\n  return ENGINE.runKernel(\n             backend => backend.scatterND($indices, $updates, shape),\n             {$indices, $updates}) as Tensor<R>;\n}\n\nexport const scatterND = op({scatterND_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {complex, imag, real} from '../ops/complex_ops';\nimport {op} from '../ops/operation';\nimport {Tensor, Tensor2D} from '../tensor';\nimport {assert} from '../util';\nimport {scalar, zeros} from './tensor_ops';\n\n/**\n * Fast Fourier transform.\n *\n * Computes the 1-dimensional discrete Fourier transform over the inner-most\n * dimension of input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([1, 2, 3]);\n * const x = tf.complex(real, imag);\n *\n * x.fft().print();  // tf.spectral.fft(x).print();\n * ```\n * @param input The complex input to compute an fft over.\n */\n/**\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction fft_(input: Tensor): Tensor {\n  assert(\n      input.dtype === 'complex64',\n      () => `The dtype for tf.spectral.fft() must be complex64 ` +\n          `but got ${input.dtype}.`);\n\n  // Collapse all outer dimensions to a single batch dimension.\n  const innerDimensionSize = input.shape[input.shape.length - 1];\n  const batch = input.size / innerDimensionSize;\n  const input2D = input.as2D(batch, innerDimensionSize);\n\n  const ret = ENGINE.runKernel(backend => backend.fft(input2D), {input});\n\n  return ret.reshape(input.shape);\n}\n\n/**\n * Inverse fast Fourier transform.\n *\n * Computes the inverse 1-dimensional discrete Fourier transform over the\n * inner-most dimension of input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([1, 2, 3]);\n * const x = tf.complex(real, imag);\n *\n * x.ifft().print();  // tf.spectral.ifft(x).print();\n * ```\n * @param input The complex input to compute an ifft over.\n */\n/**\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction ifft_(input: Tensor): Tensor {\n  assert(\n      input.dtype === 'complex64',\n      () => `The dtype for tf.spectral.ifft() must be complex64 ` +\n          `but got ${input.dtype}.`);\n\n  // Collapse all outer dimensions to a single batch dimension.\n  const innerDimensionSize = input.shape[input.shape.length - 1];\n  const batch = input.size / innerDimensionSize;\n  const input2D = input.as2D(batch, innerDimensionSize);\n\n  const ret = ENGINE.runKernel(backend => backend.ifft(input2D), {input});\n\n  return ret.reshape(input.shape);\n}\n\n/**\n * Real value input fast Fourier transform.\n *\n * Computes the 1-dimensional discrete Fourier transform over the\n * inner-most dimension of the real input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n *\n * real.rfft().print();\n * ```\n * @param input The real value input to compute an rfft over.\n */\n/**\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction rfft_(input: Tensor, fftLength?: number): Tensor {\n  assert(\n      input.dtype === 'float32',\n      () => `The dtype for rfft() must be real value but got ${input.dtype}`);\n\n  let innerDimensionSize = input.shape[input.shape.length - 1];\n  const batch = input.size / innerDimensionSize;\n\n  let adjustedInput: Tensor;\n  if (fftLength != null && fftLength < innerDimensionSize) {\n    // Need to crop\n    const begin = input.shape.map(v => 0);\n    const size = input.shape.map(v => v);\n    size[input.shape.length - 1] = fftLength;\n    adjustedInput = input.slice(begin, size);\n    innerDimensionSize = fftLength;\n  } else if (fftLength != null && fftLength > innerDimensionSize) {\n    // Need to pad with zeros\n    const zerosShape = input.shape.map(v => v);\n    zerosShape[input.shape.length - 1] = fftLength - innerDimensionSize;\n    adjustedInput = input.concat(zeros(zerosShape), input.shape.length - 1);\n    innerDimensionSize = fftLength;\n  } else {\n    adjustedInput = input;\n  }\n\n  // Complement the input with zero imaginary numbers.\n  const zerosInput = adjustedInput.zerosLike();\n  const complexInput = complex(adjustedInput, zerosInput)\n    .as2D(batch, innerDimensionSize);\n\n  const ret = fft(complexInput);\n\n  // Exclude complex conjugations. These conjugations are put symmetrically.\n  const half = Math.floor(innerDimensionSize / 2) + 1;\n  const realValues = real(ret);\n  const imagValues = imag(ret);\n  const realComplexConjugate = realValues.split(\n      [half, innerDimensionSize - half], realValues.shape.length - 1);\n  const imagComplexConjugate = imagValues.split(\n      [half, innerDimensionSize - half], imagValues.shape.length - 1);\n\n  const outputShape = adjustedInput.shape.slice();\n  outputShape[adjustedInput.shape.length - 1] = half;\n\n  return complex(realComplexConjugate[0], imagComplexConjugate[0])\n      .reshape(outputShape);\n}\n\n/**\n * Inversed real value input fast Fourier transform.\n *\n * Computes the 1-dimensional inversed discrete Fourier transform over the\n * inner-most dimension of the real input.\n *\n * ```js\n * const real = tf.tensor1d([1, 2, 3]);\n * const imag = tf.tensor1d([0, 0, 0]);\n * const x = tf.complex(real, imag);\n *\n * x.irfft().print();\n * ```\n * @param input The real value input to compute an irfft over.\n */\n/**\n * @doc {heading: 'Operations', subheading: 'Spectral', namespace: 'spectral'}\n */\nfunction irfft_(input: Tensor): Tensor {\n  const innerDimensionSize = input.shape[input.shape.length - 1];\n  const batch = input.size / innerDimensionSize;\n\n  if (innerDimensionSize <= 2) {\n    const complexInput = input.as2D(batch, innerDimensionSize);\n    const ret = ifft(complexInput);\n    return real(ret);\n  } else {\n    // The length of unique components of the DFT of a real-valued signal\n    // is 2 * (input_len - 1)\n    const outputShape = [batch, 2 * (innerDimensionSize - 1)];\n    const realInput = real(input).as2D(batch, innerDimensionSize);\n    const imagInput = imag(input).as2D(batch, innerDimensionSize);\n\n    const realConjugate =\n        realInput.slice([0, 1], [batch, innerDimensionSize - 2]).reverse(1);\n    const imagConjugate =\n        imagInput.slice([0, 1], [batch, innerDimensionSize - 2])\n            .reverse(1)\n            .mul(scalar(-1)) as Tensor2D;\n\n    const r = realInput.concat(realConjugate, 1);\n    const i = imagInput.concat(imagConjugate, 1);\n    const complexInput = complex(r, i).as2D(outputShape[0], outputShape[1]);\n    const ret = ifft(complexInput);\n    return real(ret);\n  }\n}\n\nexport const fft = op({fft_});\nexport const ifft = op({ifft_});\nexport const rfft = op({rfft_});\nexport const irfft = op({irfft_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport * as sparse_to_dense from '../ops/sparse_to_dense_util';\nimport {Scalar, Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {Rank, ScalarLike, ShapeMap, TensorLike} from '../types';\nimport {op} from './operation';\n\n/**\n * Converts a sparse representation into a dense tensor.\n *\n * Builds an array dense with shape outputShape such that:\n *\n * // If sparseIndices is scalar\n * dense[i] = (i == sparseIndices ? sparseValues : defaultValue)\n *\n * // If sparseIndices is a vector, then for each i\n * dense[sparseIndices[i]] = sparseValues[i]\n *\n * // If sparseIndices is an n by d matrix, then for each i in [0, n)\n * dense[sparseIndices[i][0], ..., sparseIndices[i][d-1]] = sparseValues[i]\n * All other values in dense are set to defaultValue. If sparseValues is a\n * scalar, all sparse indices are set to this single value.\n *\n * If indices are repeated the final value is summed over all values for those\n * indices.\n *\n * ```js\n * const indices = tf.tensor1d([4, 5, 6, 1, 2, 3], 'int32');\n * const values = tf.tensor1d([10, 11, 12, 13, 14, 15], 'float32');\n * const shape = [8];\n * tf.sparseToDense(indices, values, shape).print();\n * ```\n *\n * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.\n * sparseIndices[i] contains the complete index where sparseValues[i] will be\n * placed.\n * @param sparseValues A 0-D or 1-D Tensor. Values\n * corresponding to each row of sparseIndices, or a scalar value to be used for\n * all sparse indices.\n * @param outputShape Shape of the dense output tensor. the type is inferred.\n * @param defaultValue Scalar. Value to set for indices not specified in\n * sparseIndices. Defaults to zero.\n */\n/** @doc {heading: 'Operations', subheading: 'Normalization'} */\nfunction sparseToDense_<R extends Rank>(\n    sparseIndices: Tensor|TensorLike, sparseValues: Tensor|TensorLike,\n    outputShape: ShapeMap[R], defaultValue: Scalar|ScalarLike = 0): Tensor<R> {\n  const $sparseIndices =\n      convertToTensor(sparseIndices, 'sparseIndices', 'sparseToDense', 'int32');\n  const $sparseValues =\n      convertToTensor(sparseValues, 'sparseValues', 'sparseToDense');\n  const $defaultValue = convertToTensor(\n      defaultValue, 'defaultValue', 'sparseToDense', $sparseValues.dtype);\n\n  sparse_to_dense.validateInput(\n      $sparseIndices, $sparseValues, outputShape, $defaultValue);\n\n  return ENGINE.runKernel(\n      backend => backend.sparseToDense(\n          $sparseIndices, $sparseValues, outputShape, $defaultValue),\n      {$sparseIndices, $sparseValues, $defaultValue});\n}\n\nexport const sparseToDense = op({sparseToDense_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor} from '../tensor';\n\n/**\n * Validate sparseToDense inputs.\n *\n * @param sparseIndices A 0-D, 1-D, or 2-D Tensor of type int32.\n * sparseIndices[i] contains the complete index where sparseValues[i] will be\n * placed.\n * @param sparseValues A 0-D or 1-D Tensor. Values\n * corresponding to each row of sparseIndices, or a scalar value to be used for\n * all sparse indices.\n * @param outputShape number[]. Shape of the dense output tensor.\n * @param validateIndices boolean. indice validation is not supported, error\n * will be thrown if it is set.\n */\nexport function validateInput(\n    sparseIndices: Tensor, sparseValues: Tensor, outputShape: number[],\n    defaultValues: Tensor) {\n  if (sparseIndices.dtype !== 'int32') {\n    throw new Error(\n        'tf.sparseToDense() expects the indices to be int32 type,' +\n        ` but the dtype was ${sparseIndices.dtype}.`);\n  }\n  if (sparseIndices.rank > 2) {\n    throw new Error(\n        'sparseIndices should be a scalar, vector, or matrix,' +\n        ` but got shape ${sparseIndices.shape}.`);\n  }\n\n  const numElems = sparseIndices.rank > 0 ? sparseIndices.shape[0] : 1;\n  const numDims = sparseIndices.rank > 1 ? sparseIndices.shape[1] : 1;\n\n  if (outputShape.length !== numDims) {\n    throw new Error(\n        'outputShape has incorrect number of elements:,' +\n        ` ${outputShape.length}, should be: ${numDims}.`);\n  }\n\n  const numValues = sparseValues.size;\n  if (!(sparseValues.rank === 0 ||\n        sparseValues.rank === 1 && numValues === numElems)) {\n    throw new Error(\n        'sparseValues has incorrect shape ' +\n        `${sparseValues.shape}, should be [] or [${numElems}]`);\n  }\n\n  if (sparseValues.dtype !== defaultValues.dtype) {\n    throw new Error('sparseValues.dtype must match defaultValues.dtype');\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENGINE} from '../engine';\nimport {Tensor} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {op} from './operation';\n\n/**\n * Gather slices from input tensor into a Tensor with shape specified by\n * `indices`.\n *\n * `indices` is an K-dimensional integer tensor, best thought of as a\n * (K-1)-dimensional tensor of indices into input, where each element defines a\n * slice of input:\n * output[\\\\(i_0, ..., i_{K-2}\\\\)] = input[indices[\\\\(i_0, ..., i_{K-2}\\\\)]]\n *\n * Whereas in `tf.gather`, `indices` defines slices into the first dimension of\n * input, in `tf.gatherND`, `indices` defines slices into the first N dimensions\n * of input, where N = indices.shape[-1].\n *\n * The last dimension of indices can be at most the rank of input:\n * indices.shape[-1] <= input.rank\n *\n * The last dimension of `indices` corresponds to elements\n * (if indices.shape[-1] == input.rank) or slices\n * (if indices.shape[-1] < input.rank) along dimension indices.shape[-1] of\n * input.\n * The output tensor has shape\n * indices.shape[:-1] + input.shape[indices.shape[-1]:]\n *\n * Note that on CPU, if an out of bound index is found, an error is returned. On\n * GPU, if an out of bound index is found, a 0 is stored in the corresponding\n * output value.\n *\n * ```js\n * const indices = tf.tensor2d([0, 1, 1, 0], [2,2], 'int32');\n * const input = tf.tensor2d([9, 10, 11, 12], [2, 2]);\n * tf.gatherND(input, indices).print() // [10, 11]\n * ```\n *\n * @param x The tensor from which to gather values.\n * @param indices Index tensor, must be of type int32.\n */\n/** @doc {heading: 'Operations', subheading: 'Slicing and Joining'} */\nfunction gatherND_(x: Tensor|TensorLike, indices: Tensor|TensorLike): Tensor {\n  const $indices = convertToTensor(indices, 'indices', 'gatherND', 'int32');\n  const $x = convertToTensor(x, 'x', 'gatherND');\n  return ENGINE.runKernel(\n             backend => backend.gatherND($x, $indices), {$x, $indices}) as\n      Tensor;\n}\nexport const gatherND = op({gatherND_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Scalar, Tensor} from '../tensor';\nimport {arraysEqual} from '../util';\n\nimport {randomUniform} from './array_ops';\nimport {sub} from './binary_ops';\nimport {op} from './operation';\n\n/**\n * Sets entries in `x` to zero at random, while scaling the entire tensor.\n * ```js\n * const x = tf.range(1, 21).reshape([10, 2]);\n * const rate = 0.5;\n * const seed = 23;\n * const noiseShape = null || x.shape;\n * const tensor = tf.dropout(x, rate, noiseShape, seed);\n * ```\n * @param x input tensor.\n * @param level fraction of the entries in the tensor that will be set to 0.\n * @param noiseShape shape of randomly generated keep/drop flags, must be\n *   broadcastable to the shape of `x`.\n * @param seed random seed to ensure determinism.\n * @returns Result of the dropout operation.\n */\nfunction dropout_(\n    x: Tensor, rate: Scalar|number, noiseShape?: number[],\n    seed?: number): Tensor {\n  if (noiseShape != null && !arraysEqual(x.shape, noiseShape)) {\n    // TODO(VariableVasasMT): implement non default noise shape\n    throw new Error(\n        'Non-default noise shape is not implemented yet: ' +\n        JSON.stringify(noiseShape));\n  }\n\n  let multiplier = randomUniform(x.shape, 0, 1, 'float32', seed).greater(rate);\n  // Scale the kept elements, so the expected sum is unchanged.\n  multiplier = multiplier.div(sub(1, rate) as Scalar);\n  return x.mul(multiplier);\n}\n\nexport const dropout = op({dropout_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {op} from '../ops/operation';\nimport {Tensor, Tensor1D} from '../tensor';\n\nimport {concat} from './concat_split';\nimport {slice} from './slice';\nimport {fill, tensor1d, tensor2d} from './tensor_ops';\n\n/**\n * Generate a Hann window.\n *\n * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows\n *\n * ```js\n * tf.signal.hannWindow(10).print();\n * ```\n * @param The length of window\n */\n/**\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction hannWindow_(windowLength: number): Tensor1D {\n  return cosineWindow(windowLength, 0.5, 0.5);\n}\n\n/**\n * Generate a hamming window.\n *\n * See: https://en.wikipedia.org/wiki/Window_function#Hann_and_Hamming_windows\n *\n * ```js\n * tf.signal.hammingWindow(10).print();\n * ```\n * @param The length of window\n */\n/**\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction hammingWindow_(windowLength: number): Tensor1D {\n  return cosineWindow(windowLength, 0.54, 0.46);\n}\n\n/**\n * Expands input into frames of frameLength.\n * Slides a window size with frameStep.\n *\n * ```js\n * tf.signal.frame([1, 2, 3], 2, 1).print();\n * ```\n * @param signal The input tensor to be expanded\n * @param frameLength Length of each frame\n * @param frameStep The frame hop size in samples.\n */\n/**\n * @doc {heading: 'Operations', subheading: 'Signal', namespace: 'signal'}\n */\nfunction frame_(\n    signal: Tensor1D, frameLength: number, frameStep: number, padEnd = false,\n    padValue = 0): Tensor {\n  let start = 0;\n  const output: Tensor[] = [];\n  while (start + frameLength <= signal.size) {\n    output.push(slice(signal, start, frameLength));\n    start += frameStep;\n  }\n\n  if (padEnd) {\n    const padLen = (start + frameLength) - signal.size;\n    const pad = concat(\n        [slice(signal, start, frameLength - padLen), fill([padLen], padValue)]);\n    output.push(pad);\n  }\n\n  if (output.length === 0) {\n    return tensor2d([], [0, frameLength]);\n  }\n\n  return concat(output).as2D(output.length, frameLength);\n}\n\nfunction cosineWindow(windowLength: number, a: number, b: number): Tensor1D {\n  const even = 1 - windowLength % 2;\n  const newValues = new Float32Array(windowLength);\n  for (let i = 0; i < windowLength; ++i) {\n    const cosArg = (2.0 * Math.PI * i) / (windowLength + even - 1);\n    newValues[i] = a - b * Math.cos(cosArg);\n  }\n  return tensor1d(newValues, 'float32');\n}\n\nexport const hannWindow = op({hannWindow_});\nexport const hammingWindow = op({hammingWindow_});\nexport const frame = op({frame_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {customGrad} from '../gradients';\nimport {Tensor} from '../tensor';\nimport {GradSaveFunc} from '../tensor_types';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport {assertShapesMatch} from '../util';\nimport {expandShapeToKeepDim} from './axis_util';\nimport {minimum} from './binary_ops';\nimport {op} from './operation';\nimport {ones, scalar} from './tensor_ops';\n\nexport enum Reduction {\n  NONE,\n  MEAN,\n  SUM,\n  SUM_BY_NONZERO_WEIGHTS\n}\n\n/**\n * Computes the weighted loss between two tensors.\n *\n * @param losses Tensor of shape `[batch_size, d1, ... dN]`.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `losses`, and must be broadcastable to `losses` (i.e., all\n *    dimensions must be either `1`, or the same as the corresponding\n *    `losses` dimension).\n */\n/** @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'} */\nfunction computeWeightedLoss_<T extends Tensor, O extends Tensor>(\n    losses: T|TensorLike, weights?: Tensor|TensorLike,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  const $losses = convertToTensor(losses, 'losses', 'computeWeightedLoss');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'computeWeightedLoss');\n  }\n\n  const weightedLoss = ($weights == null) ? $losses : $losses.mul($weights);\n\n  if (reduction === Reduction.NONE) {\n    return weightedLoss as O;\n  }\n  if (reduction === Reduction.SUM) {\n    return weightedLoss.sum();\n  }\n  if (reduction === Reduction.MEAN) {\n    if ($weights == null) {\n      return weightedLoss.mean();\n    } else {\n      const broadcastFactor = $losses.size / $weights.size;\n      const result = weightedLoss.sum().div($weights.sum());\n      return broadcastFactor > 1 ? result.div(scalar(broadcastFactor)) :\n                                   result as O;\n    }\n  }\n  if (reduction === Reduction.SUM_BY_NONZERO_WEIGHTS) {\n    if ($weights == null) {\n      return weightedLoss.sum().div(scalar($losses.size));\n    } else {\n      const broadcastedWeights = $weights.mul(ones($losses.shape));\n\n      const numNonZeros =\n          broadcastedWeights.notEqual(scalar(0)).sum().toFloat();\n      return weightedLoss.sum().div(numNonZeros);\n    }\n  }\n\n  throw Error(`Unknown reduction: ${reduction}`);\n}\n\n/**\n * Computes the absolute difference loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n */\n/** @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'} */\nfunction absoluteDifference_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, predictions: T|TensorLike,\n    weights?: Tensor|TensorLike,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  const $labels = convertToTensor(labels, 'labels', 'absoluteDifference');\n  const $predictions =\n      convertToTensor(predictions, 'predictions', 'absoluteDifference');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'absoluteDifference');\n  }\n  assertShapesMatch(\n      $labels.shape, $predictions.shape, 'Error in absoluteDifference: ');\n\n  const losses = $labels.sub($predictions).abs();\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\n/**\n * Computes the mean squared error between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n */\n/** @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'} */\nfunction meanSquaredError_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, predictions: T|TensorLike,\n    weights?: Tensor|TensorLike,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  const $labels = convertToTensor(labels, 'labels', 'meanSquaredError');\n  const $predictions =\n      convertToTensor(predictions, 'predictions', 'meanSquaredError');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'meanSquaredError');\n  }\n  assertShapesMatch(\n      $labels.shape, $predictions.shape, 'Error in meanSquaredError: ');\n\n  const losses = $labels.squaredDifference($predictions);\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\n/**\n * Computes the cosine distance loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param axis The dimension along which the cosine distance is computed.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n */\n/** @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'} */\nfunction cosineDistance_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, predictions: T|TensorLike, axis: number,\n    weights?: Tensor|TensorLike,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  const $labels = convertToTensor(labels, 'labels', 'cosineDistance');\n  const $predictions =\n      convertToTensor(predictions, 'predictions', 'cosineDistance');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'cosineDistance');\n  }\n  assertShapesMatch(\n      $labels.shape, $predictions.shape, 'Error in cosineDistance: ');\n\n  const one = scalar(1);\n  const losses = one.sub($labels.mul($predictions).sum(axis, true));\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\n/**\n * Computes the Hinge loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n */\n/** @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'} */\nfunction hingeLoss_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, predictions: T|TensorLike,\n    weights?: Tensor|TensorLike,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  let $labels = convertToTensor(labels, 'labels', 'hingeLoss');\n  const $predictions = convertToTensor(predictions, 'predictions', 'hingeLoss');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'hingeLoss');\n  }\n  assertShapesMatch($labels.shape, $predictions.shape, 'Error in hingeLoss: ');\n\n  const one = scalar(1);\n  // Convert binary labels to (-1, 1)\n  $labels = scalar(2).mul($labels).sub(one);\n  const losses = one.sub($labels.mul($predictions)).relu();\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\n/**\n * Computes the log loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param epsilon A small increment to avoid taking log of zero\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n */\n/** @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'} */\nfunction logLoss_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, predictions: T|TensorLike,\n    weights?: Tensor|TensorLike, epsilon = 1e-7,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  const $labels = convertToTensor(labels, 'labels', 'logLoss');\n  const $predictions = convertToTensor(predictions, 'predictions', 'logLoss');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'logLoss');\n  }\n  assertShapesMatch($labels.shape, $predictions.shape, 'Error in logLoss: ');\n\n  const one = scalar(1);\n  const epsilonScalar = scalar(epsilon);\n  const losses = $labels.mul($predictions.add(epsilonScalar).log())\n                     .neg()\n                     .sub(one.sub($labels).mul(\n                         one.sub($predictions).add(epsilonScalar).log()));\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\nfunction sigmoidCrossEntropyWithLogits_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, logits: T|TensorLike): O {\n  const $labels =\n      convertToTensor(labels, 'labels', 'sigmoidCrossEntropyWithLogits');\n  const $logits =\n      convertToTensor(logits, 'logits', 'sigmoidCrossEntropyWithLogits');\n  assertShapesMatch(\n      $labels.shape, $logits.shape, 'Error in sigmoidCrossEntropyWithLogits: ');\n\n  /**\n   * Implementation Details:\n   *\n   * For brevity, let `x = logits`, `z = labels`.  The logistic loss is\n   *     z * -log(sigmoid(x)) + (1 - z) * -log(1 - sigmoid(x))\n   *   = z * -log(1 / (1 + exp(-x))) + (1 - z) * -log(exp(-x) / (1 + exp(-x)))\n   *   = z * log(1 + exp(-x)) + (1 - z) * (-log(exp(-x)) + log(1 + exp(-x)))\n   *   = z * log(1 + exp(-x)) + (1 - z) * (x + log(1 + exp(-x))\n   *   = (1 - z) * x + log(1 + exp(-x))\n   *   = x - x * z + log(1 + exp(-x))\n   *\n   *   For x < 0, to avoid overflow in exp(-x), we reformulate the above\n   *     x - x * z + log(1 + exp(-x))\n   *   = log(exp(x)) - x * z + log(1 + exp(-x))\n   *   = - x * z + log(1 + exp(x))\n   *\n   * Hence, to ensure stability and avoid overflow, the implementation uses\n   * this equivalent formulation:\n   *     max(x, 0) - x * z + log(1 + exp(-abs(x)))\n   */\n  const maxOutput = $logits.relu();\n  const outputXTarget = $logits.mul($labels);\n  const sigmoidOutput = $logits.abs().neg().exp().log1p();\n\n  return maxOutput.sub(outputXTarget).add(sigmoidOutput);\n}\n\n/**\n * Computes the sigmoid cross entropy loss between two tensors.\n *\n * If labelSmoothing is nonzero, smooth the labels towards 1/2:\n *\n *   newMulticlassLabels = multiclassLabels * (1 - labelSmoothing)\n *                         + 0.5 * labelSmoothing\n *\n * @param multiClassLabels The ground truth output tensor of shape\n * [batch_size, num_classes], same dimensions as 'predictions'.\n * @param logits The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param labelSmoothing If greater than 0, then smooth the labels.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n */\n/** @doc { heading: 'Training', subheading: 'Losses', namespace: 'losses' } */\nfunction sigmoidCrossEntropy_<T extends Tensor, O extends Tensor>(\n    multiClassLabels: T|TensorLike, logits: T|TensorLike,\n    weights?: Tensor|TensorLike, labelSmoothing = 0,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  let $multiClassLabels = convertToTensor(\n      multiClassLabels, 'multiClassLabels', 'sigmoidCrossEntropy');\n  const $logits = convertToTensor(logits, 'logits', 'sigmoidCrossEntropy');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'sigmoidCrossEntropy');\n  }\n  assertShapesMatch(\n      $multiClassLabels.shape, $logits.shape, 'Error in sigmoidCrossEntropy: ');\n\n  if (labelSmoothing > 0) {\n    const labelSmoothingScalar = scalar(labelSmoothing);\n    const one = scalar(1);\n    const half = scalar(0.5);\n\n    $multiClassLabels = $multiClassLabels.mul(one.sub(labelSmoothingScalar))\n                            .add(half.mul(labelSmoothingScalar));\n  }\n  const losses = sigmoidCrossEntropyWithLogits_($multiClassLabels, $logits);\n\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\n/**\n * Computes the huber loss between two tensors.\n *\n * @param labels The ground truth output tensor, same dimensions as\n *    'predictions'.\n * @param predictions The predicted outputs.\n * @param weights Tensor whose rank is either 0, or the same rank as\n *    `labels`, and must be broadcastable to `labels` (i.e., all dimensions\n *    must be either `1`, or the same as the corresponding `losses`\n *    dimension).\n * @param delta Point where huber loss changes from quadratic to linear.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`.\n */\n/** @doc {heading: 'Training', subheading: 'Losses', namespace: 'losses'} */\nfunction huberLoss_<T extends Tensor, O extends Tensor>(\n    labels: T|TensorLike, predictions: T|TensorLike,\n    weights?: Tensor|TensorLike, delta = 1.0,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  const $labels = convertToTensor(labels, 'labels', 'huberLoss');\n  const $predictions = convertToTensor(predictions, 'predictions', 'huberLoss');\n  let $weights: Tensor = null;\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'huberLoss');\n  }\n  assertShapesMatch($labels.shape, $predictions.shape, 'Error in huberLoss: ');\n\n  const deltaScalar = scalar(delta);\n  const error = $predictions.sub($labels).abs();\n  const quadratic = minimum(error, deltaScalar);\n  const linear = error.sub(quadratic);\n\n  const losses =\n      scalar(0.5).mul(quadratic.square()).add(deltaScalar.mul(linear));\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\n/**\n * Computes softmax cross entropy between logits and labels.\n *\n * Measures the probability error in discrete classification tasks in which\n * the classes are mutually exclusive (each entry is in exactly one class).\n * For example, each CIFAR-10 image is labeled with one and only one label: an\n * image can be a dog or a truck, but not both.\n *\n * `NOTE`: While the classes are mutually exclusive, their probabilities need\n * not be. All that is required is that each row of labels is a valid\n * probability distribution. If they are not, the computation of the gradient\n * will be incorrect.\n *\n * `WARNING`: This op expects unscaled logits, since it performs a softmax on\n * logits internally for efficiency. Do not call this op with the output of\n * softmax, as it will produce incorrect results.\n *\n * logits and labels must have the same shape, e.g. [batch_size, num_classes]\n * and the same dtype.\n * @param labels The labels array.\n * @param logits The logits array.\n * @param dim The dimension softmax would be performed on. Defaults to `-1`\n *     which indicates the last dimension.\n */\nfunction softmaxCrossEntropyWithLogits_<T extends Tensor, O extends Tensor>(\n    labels: T, logits: T, dim = -1): O {\n  if (dim === -1) {\n    dim = logits.rank - 1;\n  }\n\n  if (dim !== logits.rank - 1) {\n    throw Error(\n        `Softmax cross entropy along a non-last dimension is not yet ` +\n        `supported. Labels / logits was rank ${logits.rank} ` +\n        `and dim was ${dim}`);\n  }\n  // Use a custom gradient for numerical stability.\n  const customOp =\n      customGrad((labels: Tensor, logits: Tensor, save: GradSaveFunc) => {\n        // Reference:\n        //   1. http://cs231n.github.io/linear-classify/#softmax\n        //   2. https://blog.feedly.com/tricks-of-the-trade-logsumexp/\n        const keepDims = true;\n        const lse = logits.logSumExp([dim], keepDims);\n        const logResult = logits.toFloat().sub(lse);\n        save([labels, logResult]);\n\n        const costVector = logResult.mul(labels).neg();\n        const value = costVector.sum([dim]) as O;\n\n        const gradFunc = (dy: O, saved: Tensor[]) => {\n          const [labels, logResult] = saved;\n          const dyShape = expandShapeToKeepDim(dy.shape, [dim]);\n          return [\n            dy.reshape(dyShape).mul(labels.toFloat().sub(logResult.exp())),\n            dy.reshape(dyShape).mul(logResult.exp().sub(labels.toFloat())),\n          ];\n        };\n        return {value, gradFunc};\n      });\n\n  return customOp(labels, logits);\n}\n\n/**\n * Computes the softmax cross entropy loss between two tensors.\n *\n * If labelSmoothing is nonzero, smooth the labels towards 1/2:\n *\n *   newOnehotLabels = onehotLabels * (1 - labelSmoothing)\n *                         + labelSmoothing / numClasses\n *\n * @param onehotLabels One hot encoded labels\n *    [batch_size, num_classes], same dimensions as 'predictions'.\n * @param logits The predicted outputs.\n * @param weights Tensor whose rank is either 0, or 1, and must be\n *    broadcastable to `loss`  of shape [batch_size]\n * @param labelSmoothing If greater than 0, then smooth the labels.\n * @param reduction Type of reduction to apply to loss. Should be of type\n *    `Reduction`\n */\n/** @doc { heading: 'Training', subheading: 'Losses', namespace: 'losses' } */\nfunction softmaxCrossEntropy_<T extends Tensor, O extends Tensor>(\n    onehotLabels: T|TensorLike, logits: T|TensorLike,\n    weights?: Tensor|TensorLike, labelSmoothing = 0,\n    reduction = Reduction.SUM_BY_NONZERO_WEIGHTS): O {\n  let $onehotLabels =\n      convertToTensor(onehotLabels, 'onehotLabels', 'softmaxCrossEntropy');\n  const $logits = convertToTensor(logits, 'logits', 'softmaxCrossEntropy');\n  let $weights: Tensor = null;\n\n  if (weights != null) {\n    $weights = convertToTensor(weights, 'weights', 'softmaxCrossEntropy');\n  }\n\n  assertShapesMatch(\n      $onehotLabels.shape, $logits.shape, 'Error in softmaxCrossEntropy: ');\n\n  if (labelSmoothing > 0) {\n    const labelSmoothingScalar = scalar(labelSmoothing);\n    const one = scalar(1);\n    const numClasses = scalar($onehotLabels.shape[1]);\n\n    $onehotLabels = $onehotLabels.mul(one.sub(labelSmoothingScalar))\n                        .add(labelSmoothingScalar.div(numClasses));\n  }\n\n  const losses = softmaxCrossEntropyWithLogits_($onehotLabels, $logits);\n\n  return computeWeightedLoss(losses, $weights, reduction);\n}\n\nexport const absoluteDifference = op({absoluteDifference_});\nexport const computeWeightedLoss = op({computeWeightedLoss_});\nexport const cosineDistance = op({cosineDistance_});\nexport const hingeLoss = op({hingeLoss_});\nexport const huberLoss = op({huberLoss_});\nexport const logLoss = op({logLoss_});\nexport const meanSquaredError = op({meanSquaredError_});\nexport const sigmoidCrossEntropy = op({sigmoidCrossEntropy_});\nexport const softmaxCrossEntropy = op({softmaxCrossEntropy_});\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Linear algebra ops.\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose} from '../globals';\nimport {Tensor, Tensor1D, Tensor2D} from '../tensor';\nimport {assert} from '../util';\nimport {eye, squeeze, stack, unstack} from './array_ops';\nimport {split} from './concat_split';\nimport {norm} from './norm';\nimport {op} from './operation';\nimport {sum} from './reduction_ops';\nimport {tensor2d} from './tensor_ops';\n\n/**\n * Gram-Schmidt orthogonalization.\n *\n * ```js\n * const x = tf.tensor2d([[1, 2], [3, 4]]);\n * let y = tf.linalg.gramSchmidt(x);\n * y.print();\n * console.log('Othogonalized:');\n * y.dot(y.transpose()).print();  // should be nearly the identity matrix.\n * console.log('First row direction maintained:');\n * const data = await y.array();\n * console.log(data[0][1] / data[0][0]);  // should be nearly 2.\n * ```\n *\n * @param xs The vectors to be orthogonalized, in one of the two following\n *   formats:\n *   - An Array of `tf.Tensor1D`.\n *   - A `tf.Tensor2D`, i.e., a matrix, in which case the vectors are the rows\n *     of `xs`.\n *   In each case, all the vectors must have the same length and the length\n *   must be greater than or equal to the number of vectors.\n * @returns The orthogonalized and normalized vectors or matrix.\n *   Orthogonalization means that the vectors or the rows of the matrix\n *   are orthogonal (zero inner products). Normalization means that each\n *   vector or each row of the matrix has an L2 norm that equals `1`.\n */\n/**\n * @doc {heading:'Operations',\n *       subheading:'Linear Algebra',\n *       namespace:'linalg'}\n */\nfunction gramSchmidt_(xs: Tensor1D[]|Tensor2D): Tensor1D[]|Tensor2D {\n  let inputIsTensor2D: boolean;\n  if (Array.isArray(xs)) {\n    inputIsTensor2D = false;\n    assert(\n        xs != null && xs.length > 0,\n        () => 'Gram-Schmidt process: input must not be null, undefined, or ' +\n            'empty');\n    const dim = xs[0].shape[0];\n    for (let i = 1; i < xs.length; ++i) {\n      assert(\n          xs[i].shape[0] === dim,\n          () =>\n              'Gram-Schmidt: Non-unique lengths found in the input vectors: ' +\n              `(${(xs as Tensor1D[])[i].shape[0]} vs. ${dim})`);\n    }\n  } else {\n    inputIsTensor2D = true;\n    xs = split(xs, xs.shape[0], 0).map(x => squeeze(x, [0]));\n  }\n\n  assert(\n      xs.length <= xs[0].shape[0],\n      () => `Gram-Schmidt: Number of vectors (${\n                (xs as Tensor1D[]).length}) exceeds ` +\n          `number of dimensions (${(xs as Tensor1D[])[0].shape[0]}).`);\n\n  const ys: Tensor1D[] = [];\n  const xs1d = xs as Tensor1D[];\n  for (let i = 0; i < xs.length; ++i) {\n    ys.push(ENGINE.tidy(() => {\n      let x = xs1d[i];\n      if (i > 0) {\n        for (let j = 0; j < i; ++j) {\n          const proj = sum(ys[j].mulStrict(x)).mul(ys[j]);\n          x = x.sub(proj);\n        }\n      }\n      return x.div(norm(x, 'euclidean'));\n    }));\n  }\n\n  if (inputIsTensor2D) {\n    return stack(ys, 0) as Tensor2D;\n  } else {\n    return ys;\n  }\n}\n\n/**\n * Compute QR decomposition of m-by-n matrix using Householder transformation.\n *\n * Implementation based on\n *   [http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf]\n * (http://www.cs.cornell.edu/~bindel/class/cs6210-f09/lec18.pdf)\n *\n * ```js\n * const a = tf.tensor2d([[1, 2], [3, 4]]);\n * let [q, r] = tf.linalg.qr(a);\n * console.log('Q');\n * q.print();\n * console.log('R');\n * r.print();\n * console.log('Orthogonalized');\n * q.dot(q.transpose()).print()  // should be nearly the identity matrix.\n * console.log('Reconstructed');\n * q.dot(r).print(); // should be nearly [[1, 2], [3, 4]];\n * ```\n *\n * @param x The `tf.Tensor` to be QR-decomposed. Must have rank >= 2. Suppose\n *   it has the shape `[..., M, N]`.\n * @param fullMatrices An optional boolean parameter. Defaults to `false`.\n *   If `true`, compute full-sized `Q`. If `false` (the default),\n *   compute only the leading N columns of `Q` and `R`.\n * @returns An `Array` of two `tf.Tensor`s: `[Q, R]`. `Q` is a unitary matrix,\n *   i.e., its columns all have unit norm and are mutually orthogonal.\n *   If `M >= N`,\n *     If `fullMatrices` is `false` (default),\n *       - `Q` has a shape of `[..., M, N]`,\n *       - `R` has a shape of `[..., N, N]`.\n *     If `fullMatrices` is `true` (default),\n *       - `Q` has a shape of `[..., M, M]`,\n *       - `R` has a shape of `[..., M, N]`.\n *   If `M < N`,\n *     - `Q` has a shape of `[..., M, M]`,\n *     - `R` has a shape of `[..., M, N]`.\n * @throws If the rank of `x` is less than 2.\n */\n/**\n * @doc {heading:'Operations',\n *       subheading:'Linear Algebra',\n *       namespace:'linalg'}\n */\nfunction qr_(x: Tensor, fullMatrices = false): [Tensor, Tensor] {\n  if (x.rank < 2) {\n    throw new Error(\n        `qr() requires input tensor to have a rank >= 2, but got rank ${\n            x.rank}`);\n  } else if (x.rank === 2) {\n    return qr2d(x as Tensor2D, fullMatrices);\n  } else {\n    // Rank > 2.\n    // TODO(cais): Below we split the input into individual 2D tensors,\n    //   perform QR decomposition on them and then stack the results back\n    //   together. We should explore whether this can be parallelized.\n    const outerDimsProd = x.shape.slice(0, x.shape.length - 2)\n                              .reduce((value, prev) => value * prev);\n    const x2ds = unstack(\n        x.reshape([\n          outerDimsProd, x.shape[x.shape.length - 2],\n          x.shape[x.shape.length - 1]\n        ]),\n        0);\n    const q2ds: Tensor2D[] = [];\n    const r2ds: Tensor2D[] = [];\n    x2ds.forEach(x2d => {\n      const [q2d, r2d] = qr2d(x2d as Tensor2D, fullMatrices);\n      q2ds.push(q2d);\n      r2ds.push(r2d);\n    });\n    const q = stack(q2ds, 0).reshape(x.shape);\n    const r = stack(r2ds, 0).reshape(x.shape);\n    return [q, r];\n  }\n}\n\nfunction qr2d(x: Tensor2D, fullMatrices = false): [Tensor2D, Tensor2D] {\n  return ENGINE.tidy(() => {\n    if (x.shape.length !== 2) {\n      throw new Error(\n          `qr2d() requires a 2D Tensor, but got a ${x.shape.length}D Tensor.`);\n    }\n\n    const m = x.shape[0];\n    const n = x.shape[1];\n\n    let q = eye(m) as Tensor2D;  // Orthogonal transform so far.\n    let r = x.clone();           // Transformed matrix so far.\n\n    const one2D = tensor2d([[1]], [1, 1]);\n    let w: Tensor2D = one2D.clone();\n\n    const iters = m >= n ? n : m;\n    for (let j = 0; j < iters; ++j) {\n      // This tidy within the for-loop ensures we clean up temporary\n      // tensors as soon as they are no longer needed.\n      const rTemp = r;\n      const wTemp = w;\n      const qTemp = q;\n      [w, r, q] = ENGINE.tidy((): [Tensor2D, Tensor2D, Tensor2D] => {\n        // Find H = I - tau * w * w', to put zeros below R(j, j).\n        const rjEnd1 = r.slice([j, j], [m - j, 1]);\n        const normX = rjEnd1.norm();\n        const rjj = r.slice([j, j], [1, 1]);\n        const s = rjj.sign().neg() as Tensor2D;\n        const u1 = rjj.sub(s.mul(normX)) as Tensor2D;\n        const wPre = rjEnd1.div(u1);\n        if (wPre.shape[0] === 1) {\n          w = one2D.clone();\n        } else {\n          w = one2D.concat(\n              wPre.slice([1, 0], [wPre.shape[0] - 1, wPre.shape[1]]) as\n                  Tensor2D,\n              0);\n        }\n        const tau = s.matMul(u1).div(normX).neg() as Tensor2D;\n\n        // -- R := HR, Q := QH.\n        const rjEndAll = r.slice([j, 0], [m - j, n]);\n        const tauTimesW = tau.mul(w) as Tensor2D;\n        if (j === 0) {\n          r = rjEndAll.sub(tauTimesW.matMul(w.transpose().matMul(rjEndAll)));\n        } else {\n          r = r.slice([0, 0], [j, n])\n                  .concat(\n                      rjEndAll.sub(tauTimesW.matMul(\n                          w.transpose().matMul(rjEndAll))) as Tensor2D,\n                      0) as Tensor2D;\n        }\n        const qAllJEnd = q.slice([0, j], [m, q.shape[1] - j]);\n        if (j === 0) {\n          q = qAllJEnd.sub(qAllJEnd.matMul(w).matMul(tauTimesW.transpose()));\n        } else {\n          q = q.slice([0, 0], [m, j])\n                  .concat(\n                      qAllJEnd.sub(qAllJEnd.matMul(w).matMul(\n                          tauTimesW.transpose())) as Tensor2D,\n                      1) as Tensor2D;\n        }\n        return [w, r, q];\n      });\n      dispose([rTemp, wTemp, qTemp]);\n    }\n\n    if (!fullMatrices && m > n) {\n      q = q.slice([0, 0], [m, n]);\n      r = r.slice([0, 0], [n, n]);\n    }\n\n    return [q, r];\n  }) as [Tensor2D, Tensor2D];\n}\n\nexport const gramSchmidt = op({gramSchmidt_});\nexport const qr = op({qr_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {nonMaxSuppressionImpl} from '../backends/non_max_suppression_impl';\nimport {ENGINE, ForwardFunc} from '../engine';\nimport {Tensor, Tensor1D, Tensor2D, Tensor3D, Tensor4D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {op} from './operation';\n\n/**\n * Bilinear resize a batch of 3D images to a new shape.\n *\n * @param images The images, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param size The new shape `[newHeight, newWidth]` to resize the\n *     images to. Each channel is resized individually.\n * @param alignCorners Defaults to False. If true, rescale\n *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4\n *     corners of images and resized images. If false, rescale by\n *     `new_height / height`. Treat similarly the width dimension.\n */\n/** @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'} */\nfunction resizeBilinear_<T extends Tensor3D|Tensor4D>(\n    images: T|TensorLike, size: [number, number], alignCorners = false): T {\n  const $images = convertToTensor(images, 'images', 'resizeBilinear');\n  util.assert(\n      $images.rank === 3 || $images.rank === 4,\n      () => `Error in resizeBilinear: x must be rank 3 or 4, but got ` +\n          `rank ${$images.rank}.`);\n  util.assert(\n      size.length === 2,\n      () => `Error in resizeBilinear: new shape must 2D, but got shape ` +\n          `${size}.`);\n\n  let batchImages = $images as Tensor4D;\n  let reshapedTo4D = false;\n  if ($images.rank === 3) {\n    reshapedTo4D = true;\n    batchImages =\n        $images.as4D(1, $images.shape[0], $images.shape[1], $images.shape[2]);\n  }\n\n  const [newHeight, newWidth] = size;\n  const forward: ForwardFunc<Tensor4D> = (backend, save) => {\n    save([batchImages]);\n    return backend.resizeBilinear(\n        batchImages, newHeight, newWidth, alignCorners);\n  };\n\n  const backward = (dy: Tensor4D, saved: Tensor[]) => {\n    return {\n      batchImages: () => ENGINE.runKernel(\n          backend => backend.resizeBilinearBackprop(\n              dy, saved[0] as Tensor4D, alignCorners),\n          {})\n    };\n  };\n\n  const res = ENGINE.runKernel(forward, {batchImages}, backward);\n  if (reshapedTo4D) {\n    return res.as3D(res.shape[1], res.shape[2], res.shape[3]) as T;\n  }\n  return res as T;\n}\n\n/**\n * NearestNeighbor resize a batch of 3D images to a new shape.\n *\n * @param images The images, of rank 4 or rank 3, of shape\n *     `[batch, height, width, inChannels]`. If rank 3, batch of 1 is assumed.\n * @param size The new shape `[newHeight, newWidth]` to resize the\n *     images to. Each channel is resized individually.\n * @param alignCorners Defaults to False. If true, rescale\n *     input by `(new_height - 1) / (height - 1)`, which exactly aligns the 4\n *     corners of images and resized images. If false, rescale by\n *     `new_height / height`. Treat similarly the width dimension.\n */\n/** @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'} */\nfunction resizeNearestNeighbor_<T extends Tensor3D|Tensor4D>(\n    images: T|TensorLike, size: [number, number], alignCorners = false): T {\n  const $images = convertToTensor(images, 'images', 'resizeNearestNeighbor');\n  util.assert(\n      $images.rank === 3 || $images.rank === 4,\n      () => `Error in resizeNearestNeighbor: x must be rank 3 or 4, but got ` +\n          `rank ${$images.rank}.`);\n  util.assert(\n      size.length === 2,\n      () =>\n          `Error in resizeNearestNeighbor: new shape must 2D, but got shape ` +\n          `${size}.`);\n  util.assert(\n      $images.dtype === 'float32' || $images.dtype === 'int32',\n      () => '`images` must have `int32` or `float32` as dtype');\n\n  let batchImages = $images as Tensor4D;\n  let reshapedTo4D = false;\n  if ($images.rank === 3) {\n    reshapedTo4D = true;\n    batchImages =\n        $images.as4D(1, $images.shape[0], $images.shape[1], $images.shape[2]);\n  }\n  const [newHeight, newWidth] = size;\n\n  const forward: ForwardFunc<Tensor4D> = (backend, save) => {\n    save([batchImages]);\n    return backend.resizeNearestNeighbor(\n        batchImages, newHeight, newWidth, alignCorners);\n  };\n\n  const backward = (dy: Tensor4D, saved: Tensor[]) => {\n    return {\n      batchImages: () => ENGINE.runKernel(\n          backend => backend.resizeNearestNeighborBackprop(\n              dy, saved[0] as Tensor4D, alignCorners),\n          {})\n    };\n  };\n\n  const res = ENGINE.runKernel(forward, {batchImages}, backward);\n\n  if (reshapedTo4D) {\n    return res.as3D(res.shape[1], res.shape[2], res.shape[3]) as T;\n  }\n  return res as T;\n}\n\n/**\n * Performs non maximum suppression of bounding boxes based on\n * iou (intersection over union)\n *\n * @param boxes a 2d tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the corners of\n *     the bounding box.\n * @param scores a 1d tensor providing the box scores of shape `[numBoxes]`.\n * @param maxOutputSize The maximum number of boxes to be selected.\n * @param iouThreshold A float representing the threshold for deciding whether\n *     boxes overlap too much with respect to IOU. Must be between [0, 1].\n *     Defaults to 0.5 (50% box overlap).\n * @param scoreThreshold A threshold for deciding when to remove boxes based\n *     on score. Defaults to -inf, which means any score is accepted.\n * @return A 1D tensor with the selected box indices.\n */\n/** @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'} */\nfunction nonMaxSuppression_(\n    boxes: Tensor2D|TensorLike, scores: Tensor1D|TensorLike,\n    maxOutputSize: number, iouThreshold = 0.5,\n    scoreThreshold = Number.NEGATIVE_INFINITY): Tensor1D {\n  const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppression');\n  const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppression');\n\n  const inputs = nonMaxSuppSanityCheck(\n      $boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n  maxOutputSize = inputs.maxOutputSize;\n  iouThreshold = inputs.iouThreshold;\n  scoreThreshold = inputs.scoreThreshold;\n\n  return ENGINE.runKernel(\n      b => b.nonMaxSuppression(\n          $boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold),\n      {$boxes});\n}\n\n/** This is the async version of `nonMaxSuppression` */\nasync function nonMaxSuppressionAsync_(\n    boxes: Tensor2D|TensorLike, scores: Tensor1D|TensorLike,\n    maxOutputSize: number, iouThreshold = 0.5,\n    scoreThreshold = Number.NEGATIVE_INFINITY): Promise<Tensor1D> {\n  const $boxes = convertToTensor(boxes, 'boxes', 'nonMaxSuppressionAsync');\n  const $scores = convertToTensor(scores, 'scores', 'nonMaxSuppressionAsync');\n\n  const inputs = nonMaxSuppSanityCheck(\n      $boxes, $scores, maxOutputSize, iouThreshold, scoreThreshold);\n  maxOutputSize = inputs.maxOutputSize;\n  iouThreshold = inputs.iouThreshold;\n  scoreThreshold = inputs.scoreThreshold;\n\n  const boxesVals = await $boxes.data();\n  const scoresVals = await $scores.data();\n  const res = nonMaxSuppressionImpl(\n      boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n  if ($boxes !== boxes) {\n    $boxes.dispose();\n  }\n  if ($scores !== scores) {\n    $scores.dispose();\n  }\n  return res;\n}\n\nfunction nonMaxSuppSanityCheck(\n    boxes: Tensor2D, scores: Tensor1D, maxOutputSize: number,\n    iouThreshold: number, scoreThreshold: number):\n    {maxOutputSize: number, iouThreshold: number, scoreThreshold: number} {\n  if (iouThreshold == null) {\n    iouThreshold = 0.5;\n  }\n  if (scoreThreshold == null) {\n    scoreThreshold = Number.NEGATIVE_INFINITY;\n  }\n  const numBoxes = boxes.shape[0];\n  maxOutputSize = Math.min(maxOutputSize, numBoxes);\n\n  util.assert(\n      0 <= iouThreshold && iouThreshold <= 1,\n      () => `iouThreshold must be in [0, 1], but was '${iouThreshold}'`);\n  util.assert(\n      boxes.rank === 2,\n      () => `boxes must be a 2D tensor, but was of rank '${boxes.rank}'`);\n  util.assert(\n      boxes.shape[1] === 4,\n      () =>\n          `boxes must have 4 columns, but 2nd dimension was ${boxes.shape[1]}`);\n  util.assert(scores.rank === 1, () => 'scores must be a 1D tensor');\n  util.assert(\n      scores.shape[0] === numBoxes,\n      () => `scores has incompatible shape with boxes. Expected ${numBoxes}, ` +\n          `but was ${scores.shape[0]}`);\n  return {maxOutputSize, iouThreshold, scoreThreshold};\n}\n\n/**\n * Extracts crops from the input image tensor and resizes them using bilinear\n * sampling or nearest neighbor sampling (possibly with aspect ratio change)\n * to a common output size specified by crop_size.\n *\n * @param image 4d tensor of shape `[batch,imageHeight,imageWidth, depth]`,\n *     where imageHeight and imageWidth must be positive, specifying the\n *     batch of images from which to take crops\n * @param boxes 2d float32 tensor of shape `[numBoxes, 4]`. Each entry is\n *     `[y1, x1, y2, x2]`, where `(y1, x1)` and `(y2, x2)` are the normalized\n *     coordinates of the box in the boxInd[i]'th image in the batch\n * @param boxInd 1d int32 tensor of shape `[numBoxes]` with values in range\n *     `[0, batch)` that specifies the image that the `i`-th box refers to.\n * @param cropSize 1d int32 tensor of 2 elements `[cropHeigh, cropWidth]`\n *     specifying the size to which all crops are resized to.\n * @param method Optional string from `'bilinear' | 'nearest'`,\n *     defaults to bilinear, which specifies the sampling method for resizing\n * @param extrapolationValue A threshold for deciding when to remove boxes based\n *     on score. Defaults to 0.\n * @return A 4D tensor of the shape `[numBoxes,cropHeight,cropWidth,depth]`\n */\n/** @doc {heading: 'Operations', subheading: 'Images', namespace: 'image'} */\nfunction cropAndResize_(\n    image: Tensor4D|TensorLike,\n    boxes: Tensor2D|TensorLike,\n    boxInd: Tensor1D|TensorLike,\n    cropSize: [number, number],\n    method?: 'bilinear'|'nearest',\n    extrapolationValue?: number,\n    ): Tensor4D {\n  const $image = convertToTensor(image, 'image', 'cropAndResize', 'float32');\n  const $boxes = convertToTensor(boxes, 'boxes', 'cropAndResize', 'float32');\n  const $boxInd = convertToTensor(boxInd, 'boxInd', 'cropAndResize', 'int32');\n  method = method || 'bilinear';\n  extrapolationValue = extrapolationValue || 0;\n\n  const numBoxes = $boxes.shape[0];\n\n  util.assert(\n      $image.rank === 4,\n      () => 'Error in cropAndResize: image must be rank 4,' +\n          `but got rank ${$image.rank}.`);\n  util.assert(\n      $boxes.rank === 2 && $boxes.shape[1] === 4,\n      () => `Error in cropAndResize: boxes must be have size [${numBoxes},4] ` +\n          `but had shape ${$boxes.shape}.`);\n  util.assert(\n      $boxInd.rank === 1 && $boxInd.shape[0] === numBoxes,\n      () => `Error in cropAndResize: boxInd must be have size [${numBoxes}] ` +\n          `but had shape ${$boxes.shape}.`);\n  util.assert(\n      cropSize.length === 2,\n      () => `Error in cropAndResize: cropSize must be of length 2, but got ` +\n          `length ${cropSize.length}.`);\n  util.assert(\n      cropSize[0] >= 1 && cropSize[1] >= 1,\n      () => `cropSize must be atleast [1,1], but was ${cropSize}`);\n  util.assert(\n      method === 'bilinear' || method === 'nearest',\n      () => `method must be bilinear or nearest, but was ${method}`);\n\n  const forward: ForwardFunc<Tensor4D> = (backend, save) =>\n      backend.cropAndResize(\n          $image, $boxes, $boxInd, cropSize, method, extrapolationValue);\n\n  const res = ENGINE.runKernel(forward, {$image, $boxes});\n  return res as Tensor4D;\n}\n\nexport const resizeBilinear = op({resizeBilinear_});\nexport const resizeNearestNeighbor = op({resizeNearestNeighbor_});\nexport const nonMaxSuppression = op({nonMaxSuppression_});\nexport const nonMaxSuppressionAsync = nonMaxSuppressionAsync_;\nexport const cropAndResize = op({cropAndResize_});\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {op} from '../ops/operation';\nimport {Tensor, Tensor3D} from '../tensor';\nimport {makeTypesMatch} from '../tensor_util';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\nimport * as broadcast_util from './broadcast_util';\nimport {Activation} from './fused_util';\n\n/**\n * Computes the dot product of two matrices with optional activation and bias.\n *\n * ```js\n * const a = tf.tensor2d([-1, -2], [1, 2]);\n * const b = tf.tensor2d([1, 2, 3, 4], [2, 2]);\n * const bias = tf.tensor2d([1, 2], [1, 2]);\n *\n * tf.fused.matMul(a, b, false, false, bias, 'relu').print();\n * ```\n *\n * @param a First matrix in dot product operation.\n * @param b Second matrix in dot product operation.\n * @param transposeA If true, `a` is transposed before multiplication.\n * @param transposeB If true, `b` is transposed before multiplication.\n * @param bias Matrix to be added to the result.\n * @param activation Name of activation kernel (defaults to `linear`).\n */\n/** @doc {heading: 'Operations', subheading: 'Matrices', namespace: 'fused'} */\nfunction matMul_<T extends Tensor>(\n    a: T|TensorLike, b: T|TensorLike, transposeA = false, transposeB = false,\n    bias?: Tensor|TensorLike, activation: Activation = 'linear'): T {\n  let $a = convertToTensor(a, 'a', 'fused matMul');\n  let $b = convertToTensor(b, 'b', 'fused matMul');\n  [$a, $b] = makeTypesMatch($a, $b);\n\n  const innerShapeA =\n      transposeA ? $a.shape[$a.rank - 2] : $a.shape[$a.rank - 1];\n  const innerShapeB =\n      transposeB ? $b.shape[$b.rank - 1] : $b.shape[$b.rank - 2];\n\n  const outerShapeA =\n      transposeA ? $a.shape[$a.rank - 1] : $a.shape[$a.rank - 2];\n  const outerShapeB =\n      transposeB ? $b.shape[$b.rank - 2] : $b.shape[$b.rank - 1];\n\n  const outerDimsA = $a.shape.slice(0, -2);\n  const outerDimsB = $b.shape.slice(0, -2);\n  const batchDimA = util.sizeFromShape(outerDimsA);\n  const batchDimB = util.sizeFromShape(outerDimsB);\n\n  util.assert(\n      $a.rank >= 2 && $b.rank >= 2 && $a.rank === $b.rank,\n      () =>\n          `Error in fused matMul: inputs must have the same rank of at least ` +\n          `2, got ranks ${$a.rank} and ${$b.rank}.`);\n\n  util.assert(\n      util.arraysEqual(outerDimsA, outerDimsB),\n      () => `Error in fused matMul: outer dimensions (${outerDimsA}) and (` +\n          `${outerDimsB}) of Tensors with shapes ${$a.shape} and ` +\n          `${$b.shape} must match.`);\n\n  util.assert(\n      innerShapeA === innerShapeB,\n      () => `Error in fused matMul: inner shapes (${innerShapeA}) and (` +\n          `${innerShapeB}) of Tensors with shapes ${$a.shape} and ` +\n          `${$b.shape} and transposeA=${transposeA}` +\n          ` and transposeB=${transposeB} must match.`);\n\n  const outShape = $a.shape.slice(0, -2).concat([outerShapeA, outerShapeB]);\n\n  const a3D = transposeA ? $a.as3D(batchDimA, innerShapeA, outerShapeA) :\n                           $a.as3D(batchDimA, outerShapeA, innerShapeA);\n  const b3D = transposeB ? $b.as3D(batchDimB, outerShapeB, innerShapeB) :\n                           $b.as3D(batchDimB, innerShapeB, outerShapeB);\n\n  let $bias: Tensor;\n  if (bias != null) {\n    $bias = convertToTensor(bias, 'bias', 'fused matMul');\n    [$bias] = makeTypesMatch($bias, $a);\n\n    broadcast_util.assertAndGetBroadcastShape(outShape, $bias.shape);\n  }\n\n  const grad = (dy: Tensor3D, saved: Tensor[]) => {\n    const [a3D, b3D, y] = saved;\n\n    let dyActivation: Tensor3D;\n    if (activation == null || activation === 'linear') {\n      dyActivation = dy;\n    } else if (activation === 'relu') {\n      dyActivation = dy.mul(y.step()) as Tensor3D;\n    } else {\n      throw new Error(\n          `Gradient for activation ${activation} has not been ` +\n          `implemented yet.`);\n    }\n\n    let biasGradient = {};\n    if (bias != null) {\n      biasGradient = {\n        $bias: () => {\n          let res = dyActivation;\n          // Using dyActivation as reference shape because outputShape does not\n          // account for the fact that we temporarily reshape inputs to 3D as\n          // part of batched matMul.\n          const reduceAxes =\n              broadcast_util.getReductionAxes($bias.shape, dyActivation.shape);\n          if (reduceAxes.length > 0) {\n            res = res.sum(reduceAxes);\n          }\n          return res.reshape($bias.shape);\n        }\n      };\n    }\n\n    if (!transposeA && !transposeB) {\n      return Object.assign(\n          {\n            $a: () => dyActivation.matMul(b3D as Tensor3D, false, true),\n            $b: () => a3D.matMul(dyActivation, true, false)\n          },\n          biasGradient);\n    } else if (!transposeA && transposeB) {\n      return Object.assign(\n          {\n            $a: () => dyActivation.matMul(b3D as Tensor3D, false, false),\n            $b: () => dyActivation.matMul(a3D as Tensor3D, true, false)\n          },\n          biasGradient);\n    } else if (transposeA && !transposeB) {\n      return Object.assign(\n          {\n            $a: () => b3D.matMul(dyActivation, false, true),\n            $b: () => a3D.matMul(dyActivation, false, false)\n          },\n          biasGradient);\n    } else {\n      return Object.assign(\n          {\n            $a: () => b3D.matMul(dyActivation, true, true),\n            $b: () => dyActivation.matMul(a3D as Tensor3D, true, true)\n          },\n          biasGradient);\n    }\n  };\n\n  const inputs: {$a: Tensor, $b: Tensor, $bias?: Tensor} = {$a: a3D, $b: b3D};\n  if (bias != null) {\n    inputs.$bias = $bias;\n  }\n\n  const res = ENGINE.runKernel((backend, save) => {\n    const y = backend.fusedBatchMatMul(\n        a3D, b3D, transposeA, transposeB, $bias, activation);\n    save([a3D, b3D, y]);\n    return y;\n  }, inputs, grad);\n  return res.reshape(outShape) as T;\n}\n\nexport const matMul = op({matMul_});\n\nexport {Activation};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as seedrandom from 'seedrandom';\n\nimport {ENGINE} from '../../engine';\nimport {ENV} from '../../environment';\nimport {warn} from '../../log';\nimport * as array_ops_util from '../../ops/array_ops_util';\nimport * as axis_util from '../../ops/axis_util';\nimport * as broadcast_util from '../../ops/broadcast_util';\nimport * as concat_util from '../../ops/concat_util';\nimport {Conv2DInfo, Conv3DInfo} from '../../ops/conv_util';\nimport * as erf_util from '../../ops/erf_util';\nimport {Activation} from '../../ops/fused_util';\nimport * as gather_nd_util from '../../ops/gather_nd_util';\nimport * as ops from '../../ops/ops';\nimport {buffer, scalar, tensor, tensor3d, tensor4d} from '../../ops/ops';\nimport * as scatter_nd_util from '../../ops/scatter_nd_util';\nimport * as selu_util from '../../ops/selu_util';\nimport {computeFlatOffset, getStridedSlicedInfo, isSliceContinous} from '../../ops/slice_util';\nimport {DataId, Scalar, Tensor, Tensor1D, Tensor2D, Tensor3D, Tensor4D, Tensor5D, TensorBuffer} from '../../tensor';\nimport {DataType, DataTypeMap, DataValues, NumericDataType, PixelData, Rank, ShapeMap, TypedArray, upcastType} from '../../types';\nimport * as util from '../../util';\nimport {getArrayFromDType, inferDtype, now, sizeFromShape} from '../../util';\nimport {BackendTimingInfo, DataStorage, EPSILON_FLOAT32, KernelBackend} from '../backend';\nimport * as backend_util from '../backend_util';\nimport * as complex_util from '../complex_util';\nimport {nonMaxSuppressionImpl} from '../non_max_suppression_impl';\nimport {split} from '../split_shared';\nimport {tile} from '../tile_impl';\nimport {topkImpl} from '../topk_impl';\nimport {whereImpl} from '../where_impl';\n\nfunction mapActivation(\n    backend: MathBackendCPU, activation: Activation, x: Tensor): Tensor {\n  if (activation === 'linear') {\n    return backend.linear(x);\n  } else if (activation === 'relu') {\n    return backend.relu(x);\n  }\n  throw new Error(\n      `Activation ${activation} has not been implemented for the CPU backend.`);\n}\n\ninterface TensorData<D extends DataType> {\n  values?: DataTypeMap[D];\n  dtype: D;\n  // For complex numbers, the real and imaginary parts are stored as their own\n  // individual tensors, with a parent joining the two with the\n  // complexTensors field. When this is defined, texture will be null.\n  complexTensors?: {real: Tensor, imag: Tensor};\n}\n\nfunction createCanvas() {\n  if (typeof OffscreenCanvas !== 'undefined') {\n    return new OffscreenCanvas(300, 150);\n  } else if (typeof document !== 'undefined') {\n    return document.createElement('canvas');\n  } else {\n    throw new Error('Cannot create a canvas in this context');\n  }\n}\n\nexport class MathBackendCPU implements KernelBackend {\n  public blockSize = 48;\n\n  private data: DataStorage<TensorData<DataType>>;\n  private fromPixels2DContext: CanvasRenderingContext2D|\n      OffscreenCanvasRenderingContext2D;\n  private firstUse = true;\n\n  constructor() {\n    if (ENV.get('IS_BROWSER')) {\n      const canvas = createCanvas();\n      this.fromPixels2DContext =\n          canvas.getContext('2d') as CanvasRenderingContext2D |\n          OffscreenCanvasRenderingContext2D;\n    }\n    this.data = new DataStorage(this, ENGINE);\n  }\n\n  register(dataId: DataId, shape: number[], dtype: DataType): void {\n    if (this.firstUse) {\n      this.firstUse = false;\n      if (ENV.get('IS_NODE')) {\n        warn(\n            '\\n============================\\n' +\n            'Hi there 👋. Looks like you are running TensorFlow.js in ' +\n            'Node.js. To speed things up dramatically, install our node ' +\n            'backend, which binds to TensorFlow C++, by running ' +\n            'npm i @tensorflow/tfjs-node, ' +\n            'or npm i @tensorflow/tfjs-node-gpu if you have CUDA. ' +\n            'Then call require(\\'@tensorflow/tfjs-node\\'); (-gpu ' +\n            'suffix for CUDA) at the start of your program. ' +\n            'Visit https://github.com/tensorflow/tfjs-node for more details.' +\n            '\\n============================\\n');\n      }\n    }\n    if (this.data.has(dataId)) {\n      throw new Error(`Data buffer is already registered`);\n    }\n    this.data.set(dataId, {dtype});\n  }\n  write(dataId: DataId, values: DataValues): void {\n    if (values == null) {\n      throw new Error('MathBackendCPU.write(): values can not be null');\n    }\n    this.data.get(dataId).values = values;\n  }\n  fromPixels(\n      pixels: PixelData|ImageData|HTMLImageElement|HTMLCanvasElement|\n      HTMLVideoElement,\n      numChannels: number): Tensor3D {\n    if (pixels == null) {\n      throw new Error(\n          'pixels passed to tf.browser.fromPixels() can not be null');\n    }\n    let vals: Uint8ClampedArray|Uint8Array;\n    // tslint:disable-next-line:no-any\n    if (ENV.get('IS_NODE') && (pixels as any).getContext == null) {\n      throw new Error(\n          'When running in node, pixels must be an HTMLCanvasElement ' +\n          'like the one returned by the `canvas` npm package');\n    }\n    // tslint:disable-next-line:no-any\n    if ((pixels as any).getContext != null) {\n      // tslint:disable-next-line:no-any\n      vals = (pixels as any)\n                 .getContext('2d')\n                 .getImageData(0, 0, pixels.width, pixels.height)\n                 .data;\n    } else if (\n        pixels instanceof ImageData ||\n        (pixels as PixelData).data instanceof Uint8Array) {\n      vals = (pixels as PixelData | ImageData).data;\n    } else if (\n        pixels instanceof HTMLImageElement ||\n        pixels instanceof HTMLVideoElement) {\n      if (this.fromPixels2DContext == null) {\n        throw new Error(\n            'Can\\'t read pixels from HTMLImageElement outside ' +\n            'the browser.');\n      }\n      this.fromPixels2DContext.canvas.width = pixels.width;\n      this.fromPixels2DContext.canvas.height = pixels.height;\n      this.fromPixels2DContext.drawImage(\n          pixels, 0, 0, pixels.width, pixels.height);\n      vals = this.fromPixels2DContext\n                 .getImageData(0, 0, pixels.width, pixels.height)\n                 .data;\n    } else {\n      throw new Error(\n          'pixels passed to tf.browser.fromPixels() must be either an ' +\n          `HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData ` +\n          `or {data: Uint32Array, width: number, height: number}, ` +\n          `but was ${(pixels as {}).constructor.name}`);\n    }\n    let values: Int32Array;\n    if (numChannels === 4) {\n      values = new Int32Array(vals);\n    } else {\n      const numPixels = pixels.width * pixels.height;\n      values = new Int32Array(numPixels * numChannels);\n      for (let i = 0; i < numPixels; i++) {\n        for (let channel = 0; channel < numChannels; ++channel) {\n          values[i * numChannels + channel] = vals[i * 4 + channel];\n        }\n      }\n    }\n    const outShape: [number, number, number] =\n        [pixels.height, pixels.width, numChannels];\n    return tensor3d(values, outShape, 'int32');\n  }\n  async read(dataId: DataId): Promise<DataValues> {\n    return this.readSync(dataId);\n  }\n  readSync(dataId: DataId): DataValues {\n    const {dtype, complexTensors} = this.data.get(dataId);\n    if (dtype === 'complex64') {\n      const realValues =\n          this.readSync(complexTensors.real.dataId) as Float32Array;\n      const imagValues =\n          this.readSync(complexTensors.imag.dataId) as Float32Array;\n      return complex_util.mergeRealAndImagArrays(realValues, imagValues);\n    }\n    return this.data.get(dataId).values;\n  }\n\n  private bufferSync<R extends Rank>(t: Tensor<R>): TensorBuffer<R> {\n    return buffer(t.shape, t.dtype, this.readSync(t.dataId)) as TensorBuffer<R>;\n  }\n\n  disposeData(dataId: DataId): void {\n    if (this.data.has(dataId)) {\n      const {complexTensors} = this.data.get(dataId);\n      if (complexTensors != null) {\n        complexTensors.real.dispose();\n        complexTensors.imag.dispose();\n      }\n      this.data.delete(dataId);\n    }\n  }\n\n  async time(f: () => void): Promise<BackendTimingInfo> {\n    const start = now();\n    f();\n    const kernelMs = now() - start;\n    return {kernelMs};\n  }\n\n  memory() {\n    return {\n      // Unreliable due to automatic gc. The numbers above are cumulative.\n      unreliable: true,\n      reasons:\n          ['The reported memory is an upper bound. Due to automatic garbage ' +\n           'collection, the true allocated memory may be less.']\n    };\n  }\n\n  complex<T extends Tensor>(real: T, imag: T): T {\n    const result = Tensor.make(real.shape, {}, 'complex64') as T;\n\n    const resultData = this.data.get(result.dataId);\n    // The backend owns the reference to the underlying real and imaginary\n    // clones. These will explicitly get disposed when the complex tensor is\n    // disposed.\n    resultData.complexTensors = {\n      real: ENGINE.keep(real.clone()),\n      imag: ENGINE.keep(imag.clone())\n    };\n\n    return result;\n  }\n  real<T extends Tensor>(input: T): T {\n    const resultData = this.data.get(input.dataId);\n    return resultData.complexTensors.real.clone() as T;\n  }\n  imag<T extends Tensor>(input: T): T {\n    const resultData = this.data.get(input.dataId);\n    return resultData.complexTensors.imag.clone() as T;\n  }\n\n  private assertNotComplex(tensor: Tensor|Tensor[], opName: string) {\n    if (!Array.isArray(tensor)) {\n      tensor = [tensor];\n    }\n    tensor.forEach(t => {\n      if (t != null) {\n        util.assert(\n            t.dtype !== 'complex64',\n            () => `${opName} does not support complex64 tensors.`);\n      }\n    });\n  }\n\n  slice<T extends Tensor>(x: T, begin: number[], size: number[]): T {\n    this.assertNotComplex(x, 'slice');\n\n    const isContinous = isSliceContinous(x.shape, begin, size);\n    if (isContinous) {\n      const flatOffset = computeFlatOffset(begin, x.strides);\n      const length = util.sizeFromShape(size);\n      const vals = this.readSync(x.dataId) as TypedArray;\n      return tensor(\n                 vals.subarray(flatOffset, flatOffset + length), size,\n                 x.dtype) as T;\n    }\n\n    const buffer = ops.buffer(size, x.dtype);\n    const xBuf = this.bufferSync(x);\n    for (let i = 0; i < buffer.size; ++i) {\n      const loc = buffer.indexToLoc(i);\n      const xLoc = loc.map((idx, j) => idx + begin[j]);\n      buffer.values[i] = xBuf.get(...xLoc);\n    }\n    return buffer.toTensor() as T;\n  }\n\n  stridedSlice<T extends Tensor>(\n      x: T, begin: number[], end: number[], strides: number[],\n      beginMask: number, endMask: number, ellipsisMask: number,\n      newAxisMask: number, shrinkAxisMask: number): T {\n    this.assertNotComplex(x, 'stridedSlice');\n\n    const [beginIndex, size, shrinkAxis] = getStridedSlicedInfo(\n        x.shape, begin, end, strides, beginMask, endMask, ellipsisMask,\n        newAxisMask, shrinkAxisMask);\n\n    const shape = size.filter((v, index) => shrinkAxis.indexOf(index) === -1);\n\n    if (shape.some(axis => axis === 0)) {\n      return ops.tensor([], shape) as T;\n    }\n\n    const buffer = ops.buffer(size, x.dtype);\n    const xBuf = this.bufferSync(x);\n    for (let i = 0; i < buffer.size; i++) {\n      const loc = buffer.indexToLoc(i);\n\n      const newLoc: number[] = new Array(loc.length);\n      for (let j = 0; j < newLoc.length; j++) {\n        newLoc[j] = loc[j] * strides[j] + beginIndex[j];\n      }\n      buffer.set(xBuf.get(...newLoc), ...loc);\n    }\n\n    return buffer.toTensor().reshape(shape) as T;\n  }\n\n  unstack(x: Tensor, axis: number): Tensor[] {\n    const num = x.shape[axis];\n    const outShape: number[] = new Array(x.rank - 1);\n    let outIndex = 0;\n    for (let i = 0; i < x.rank; i++) {\n      if (i !== axis) {\n        outShape[outIndex++] = x.shape[i];\n      }\n    }\n\n    const begin = new Array(x.rank).fill(0);\n    const size = x.shape.slice();\n    size[axis] = 1;\n    const res = new Array(num);\n    for (let i = 0; i < res.length; i++) {\n      begin[axis] = i;\n      res[i] = this.slice(x, begin, size).reshape(outShape);\n    }\n    return res;\n  }\n\n  reverse<T extends Tensor>(x: T, axis: number[]): T {\n    this.assertNotComplex(x, 'reverse');\n\n    const buffer = ops.buffer(x.shape, x.dtype);\n    const xBuf = this.bufferSync(x);\n\n    for (let i = 0; i < buffer.size; i++) {\n      const outLoc = buffer.indexToLoc(i);\n      const inLoc = outLoc.slice();\n      axis.forEach(ax => inLoc[ax] = x.shape[ax] - 1 - inLoc[ax]);\n      buffer.set(xBuf.get(...inLoc), ...outLoc);\n    }\n\n    return buffer.toTensor() as T;\n  }\n\n  concat(tensors: Tensor[], axis: number): Tensor {\n    this.assertNotComplex(tensors, 'concat');\n    const tensors2D = tensors.map(t => {\n      const innerSize = util.sizeFromShape(t.shape.slice(axis));\n      return t.as2D(-1, innerSize);\n    });\n    const outShape =\n        concat_util.computeOutShape(tensors2D.map(t => t.shape), 1 /* axis */);\n    const values =\n        ops.buffer(outShape as [number, number], tensors[0].dtype as 'float32')\n            .values;\n    if (tensors2D[0].shape[0] === 1) {\n      // Use built-in TypedArray.set() method for speed.\n      let offset = 0;\n      tensors2D.forEach(t => {\n        values.set(this.readSync(t.dataId) as TypedArray, offset);\n        offset += t.size;\n      });\n    } else {\n      let colOffset = 0;\n      tensors2D.forEach(t => {\n        const tVals = this.readSync(t.dataId) as TypedArray;\n        let tIdx = 0;\n        for (let row = 0; row < t.shape[0]; ++row) {\n          const resIdx = row * outShape[1] + colOffset;\n          for (let col = 0; col < t.shape[1]; ++col) {\n            values[resIdx + col] = tVals[tIdx++];\n          }\n        }\n        colOffset += t.shape[1];\n      });\n    }\n    const finalOutShape =\n        concat_util.computeOutShape(tensors.map(t => t.shape), axis);\n    return tensor(values, finalOutShape, tensors[0].dtype);\n  }\n\n  neg<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'neg');\n\n    return this.multiply(ops.scalar(-1), x) as T;\n  }\n\n  add(a: Tensor, b: Tensor): Tensor {\n    if (a.dtype === 'complex64' || b.dtype === 'complex64') {\n      return this.broadcastedBinaryComplexOp(\n                 a.cast('complex64'), b.cast('complex64'),\n                 (aReal, aImag, bReal, bImag) => {\n                   return {real: aReal + bReal, imag: aImag + bImag};\n                 }) as Tensor;\n    }\n\n    return this.broadcastedBinaryOp(\n               a, b, upcastType(a.dtype, b.dtype),\n               (aValue, bValue) => aValue + bValue) as Tensor;\n  }\n\n  addN<T extends Tensor>(tensors: T[]): T {\n    this.assertNotComplex(tensors, 'addN');\n\n    const vals = tensors.map(t => this.readSync(t.dataId) as TypedArray);\n    const result = ops.buffer(tensors[0].shape, tensors[0].dtype as 'float32');\n    const resultVals = result.values;\n    for (let i = 0; i < tensors.length; i++) {\n      const currVals = vals[i];\n      for (let j = 0; j < resultVals.length; j++) {\n        resultVals[j] += currVals[j];\n      }\n    }\n    return result.toTensor() as T;\n  }\n\n  subtract(a: Tensor, b: Tensor): Tensor {\n    if (a.dtype === 'complex64' || b.dtype === 'complex64') {\n      return this.broadcastedBinaryComplexOp(\n                 a.cast('complex64'), b.cast('complex64'),\n                 (aReal, aImag, bReal, bImag) => {\n                   return {real: aReal - bReal, imag: aImag - bImag};\n                 }) as Tensor;\n    }\n\n    return this.broadcastedBinaryOp(\n               a, b, upcastType(a.dtype, b.dtype),\n               (aValue, bValue) => aValue - bValue) as Tensor;\n  }\n\n  pow<T extends Tensor>(a: T, b: Tensor): T {\n    this.assertNotComplex([a, b], 'pow');\n\n    return this.broadcastedBinaryOp(\n               a, b, a.dtype, (aValue, bValue) => Math.pow(aValue, bValue)) as\n        T;\n  }\n\n  batchMatMul(\n      a: Tensor3D, b: Tensor3D, transposeA: boolean,\n      transposeB: boolean): Tensor3D {\n    this.assertNotComplex([a, b], 'matMul');\n\n    const sharedDim = transposeA ? a.shape[1] : a.shape[2];\n    const leftDim = transposeA ? a.shape[2] : a.shape[1];\n    const rightDim = transposeB ? b.shape[1] : b.shape[2];\n    const batchDim = a.shape[0];\n\n    const aValues = this.readSync(a.dataId) as TypedArray;\n    const bValues = this.readSync(b.dataId) as TypedArray;\n    const [aBatch, aOuterStep, aInnerStep] = transposeA ?\n        [a.strides[0], 1, a.strides[1]] :\n        [a.strides[0], a.strides[1], 1];\n    const [bInnerStep, bOuterStep, bBatch] = transposeB ?\n        [1, b.strides[1], b.strides[0]] :\n        [b.strides[1], 1, b.strides[0]];\n\n    const size = leftDim * rightDim;\n    const result = buffer([batchDim, leftDim, rightDim], a.dtype);\n    const resVals = result.values as TypedArray;\n    const blockSize = this.blockSize;\n\n    for (let b = 0; b < batchDim; b++) {\n      for (let i0 = 0; i0 < leftDim; i0 += blockSize) {\n        for (let j0 = 0; j0 < rightDim; j0 += blockSize) {\n          for (let k0 = 0; k0 < sharedDim; k0 += blockSize) {\n            // for when blockSize doesn't evenly divide the input\n            const iBlock = Math.min(i0 + blockSize, leftDim);\n            const jBlock = Math.min(j0 + blockSize, rightDim);\n            const kBlock = Math.min(k0 + blockSize, sharedDim);\n\n            for (let i = i0; i < iBlock; i++) {\n              for (let j = j0; j < jBlock; j++) {\n                let sum = 0.0;\n\n                for (let k = k0; k < kBlock; k++) {\n                  sum += aValues[b * aBatch + i * aOuterStep + k * aInnerStep] *\n                      bValues[k * bInnerStep + j * bOuterStep + b * bBatch];\n                }\n                resVals[b * size + (i * rightDim + j)] += sum;\n              }\n            }\n          }\n        }\n      }\n    }\n    return result.toTensor() as Tensor3D;\n  }\n\n  fusedBatchMatMul(\n      a: Tensor3D, b: Tensor3D, transposeA: boolean, transposeB: boolean,\n      bias?: Tensor, activation?: Activation): Tensor3D {\n    let result = this.batchMatMul(a, b, transposeA, transposeB);\n    if (bias) {\n      result = this.add(result, bias) as Tensor3D;\n    }\n    if (activation) {\n      result = mapActivation(this, activation, result) as Tensor3D;\n    }\n    return result;\n  }\n\n  multiply(a: Tensor, b: Tensor): Tensor {\n    if (a.dtype === 'complex64' || b.dtype === 'complex64') {\n      return this.broadcastedBinaryComplexOp(\n                 a.cast('complex64'), b.cast('complex64'),\n                 (aReal, aImag, bReal, bImag) => {\n                   return {\n                     real: aReal * bReal - aImag * bImag,\n                     imag: aReal * bImag + aImag * bReal\n                   };\n                 }) as Tensor;\n    }\n\n    return this.broadcastedBinaryOp(\n               a, b, upcastType(a.dtype, b.dtype),\n               (aValue, bValue) => aValue * bValue) as Tensor;\n  }\n\n  realDivide(a: Tensor, b: Tensor): Tensor {\n    this.assertNotComplex([a, b], 'realDivide');\n\n    const op = (a: number, b: number) => a / b;\n    const outputDtype = 'float32';\n    return this.broadcastedBinaryOp(a, b, outputDtype, op) as Tensor;\n  }\n\n  floorDiv(a: Tensor, b: Tensor): Tensor {\n    this.assertNotComplex([a, b], 'floorDiv');\n\n    const op = (a: number, b: number) => Math.floor(a / b);\n    const outputDtype = 'int32';\n    return this.broadcastedBinaryOp(a, b, outputDtype, op) as Tensor;\n  }\n\n  sum(x: Tensor, axes: number[]): Tensor {\n    this.assertNotComplex(x, 'sum');\n\n    axis_util.assertAxesAreInnerMostDims('sum', axes, x.rank);\n    const [outShape, reduceShape] =\n        axis_util.computeOutAndReduceShapes(x.shape, axes);\n    const resultDtype = upcastType(x.dtype, 'int32');\n    const result = ops.zeros(outShape, resultDtype);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const vals = this.readSync(result.dataId) as TypedArray;\n\n    const aVals = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < vals.length; ++i) {\n      const offset = i * reduceSize;\n      let sum = 0;\n      for (let j = 0; j < reduceSize; ++j) {\n        sum += aVals[offset + j];\n      }\n      vals[i] = sum;\n    }\n    return result;\n  }\n\n  prod(x: Tensor, axes: number[]): Tensor {\n    this.assertNotComplex(x, 'sum');\n\n    const [outShape, reduceShape] =\n        axis_util.computeOutAndReduceShapes(x.shape, axes);\n    const resultDtype = upcastType(x.dtype, 'int32');\n    const result = ops.zeros(outShape, resultDtype);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const vals = this.readSync(result.dataId) as TypedArray;\n\n    const aVals = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < vals.length; ++i) {\n      const offset = i * reduceSize;\n      let prod = 1;\n      for (let j = 0; j < reduceSize; ++j) {\n        prod *= aVals[offset + j];\n      }\n      vals[i] = prod;\n    }\n    return result;\n  }\n\n  unsortedSegmentSum<T extends Tensor>(\n      x: T, segmentIds: Tensor1D, numSegments: number): Tensor {\n    this.assertNotComplex(x, 'unsortedSegmentSum');\n\n    const res = [];\n\n    // Reshape the segment id's so that they can be broadcast with\n    // x. The new shape should be [segmentIds.shape, 1, ..., 1]\n    const numIters = x.rank - segmentIds.rank;\n    for (let i = 0; i < numIters; ++i) {\n      segmentIds = segmentIds.expandDims(i + 1);\n    }\n\n    for (let i = 0; i < numSegments; ++i) {\n      const segmentId = ops.scalar(i, 'int32');\n      const mask = ops.equal(segmentId, segmentIds).asType('float32');\n      const sum = mask.mul(x).sum(0);\n      res.push(sum);\n    }\n\n    return ops.stack(res);\n  }\n\n  argMin(x: Tensor, axis: number): Tensor {\n    this.assertNotComplex(x, 'argMin');\n\n    const axes = [axis];\n    axis_util.assertAxesAreInnerMostDims('argMin', axes, x.rank);\n    const [outShape, reduceShape] =\n        axis_util.computeOutAndReduceShapes(x.shape, axes);\n    const result = ops.zeros(outShape, 'int32');\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const vals = this.readSync(result.dataId) as TypedArray;\n\n    const aVals = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < vals.length; ++i) {\n      const offset = i * reduceSize;\n      let min = aVals[offset];\n      let minIndex = 0;\n      for (let j = 0; j < reduceSize; ++j) {\n        const value = aVals[offset + j];\n        if (value < min) {\n          min = value;\n          minIndex = j;\n        }\n      }\n      vals[i] = minIndex;\n    }\n    return result;\n  }\n\n  argMax(x: Tensor, axis: number): Tensor {\n    this.assertNotComplex(x, 'argMax');\n\n    const axes = [axis];\n    axis_util.assertAxesAreInnerMostDims('argMax', axes, x.rank);\n    const [outShape, reduceShape] =\n        axis_util.computeOutAndReduceShapes(x.shape, axes);\n    const result = ops.zeros(outShape, 'int32');\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const vals = this.readSync(result.dataId) as TypedArray;\n\n    const aVals = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < vals.length; ++i) {\n      const offset = i * reduceSize;\n      let max = aVals[offset];\n      let maxIndex = 0;\n      for (let j = 0; j < reduceSize; ++j) {\n        const value = aVals[offset + j];\n        if (value > max) {\n          max = value;\n          maxIndex = j;\n        }\n      }\n      vals[i] = maxIndex;\n    }\n    return result;\n  }\n\n  cumsum(x: Tensor, axis: number, exclusive: boolean, reverse: boolean):\n      Tensor {\n    this.assertNotComplex(x, 'cumsum');\n\n    if (axis !== x.rank - 1) {\n      throw new Error(\n          `backend.cumsum in CPU expects an inner-most axis=${x.rank - 1} ` +\n          `but got axis=${axis}`);\n    }\n    const resultDtype = upcastType(x.dtype, 'int32');\n    const result = ops.zeros(x.shape, resultDtype);\n    const vals = this.readSync(result.dataId) as TypedArray;\n\n    const aVals = this.readSync(x.dataId) as TypedArray;\n    const finalDim = x.shape[x.rank - 1];\n    const indexAdjuster = reverse ?\n        (i: number, j: number) => i + finalDim - j - 1 :\n        (i: number, j: number) => i + j;\n    for (let i = 0; i < aVals.length; i += finalDim) {\n      for (let j = 0; j < finalDim; j++) {\n        const idx = indexAdjuster(i, j);\n        if (j === 0) {\n          vals[idx] = exclusive ? 0 : aVals[idx];\n        } else {\n          const prevIdx = indexAdjuster(i, j - 1);\n          vals[idx] = exclusive ? aVals[prevIdx] + vals[prevIdx] :\n                                  aVals[idx] + vals[prevIdx];\n        }\n      }\n    }\n    return result;\n  }\n\n  equal(a: Tensor, b: Tensor): Tensor {\n    this.assertNotComplex([a, b], 'equal');\n\n    return this.broadcastedBinaryOp(a, b, 'bool', (aVal, bVal) => {\n      return (aVal === bVal) ? 1 : 0;\n    });\n  }\n\n  notEqual(a: Tensor, b: Tensor): Tensor {\n    this.assertNotComplex([a, b], 'notEqual');\n\n    return this.broadcastedBinaryOp(a, b, 'bool', (aVal, bVal) => {\n      return (aVal !== bVal) ? 1 : 0;\n    });\n  }\n\n  less(a: Tensor, b: Tensor): Tensor {\n    this.assertNotComplex([a, b], 'less');\n\n    return this.broadcastedBinaryOp(a, b, 'bool', (aVal, bVal) => {\n      return (aVal < bVal) ? 1 : 0;\n    });\n  }\n\n  lessEqual(a: Tensor, b: Tensor): Tensor {\n    this.assertNotComplex([a, b], 'lessEqual');\n\n    return this.broadcastedBinaryOp(a, b, 'bool', (aVal, bVal) => {\n      return (aVal <= bVal) ? 1 : 0;\n    });\n  }\n\n  greater(a: Tensor, b: Tensor): Tensor {\n    this.assertNotComplex([a, b], 'greater');\n\n    return this.broadcastedBinaryOp(a, b, 'bool', (aVal, bVal) => {\n      return (aVal > bVal) ? 1 : 0;\n    });\n  }\n\n  greaterEqual(a: Tensor, b: Tensor): Tensor {\n    this.assertNotComplex([a, b], 'greaterEqual');\n\n    return this.broadcastedBinaryOp(a, b, 'bool', (aVal, bVal) => {\n      return (aVal >= bVal) ? 1 : 0;\n    });\n  }\n\n  logicalNot<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'logicalNot');\n\n    const values = this.readSync(x.dataId) as TypedArray;\n    const newValues = new Uint8Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      newValues[i] = values[i] ? 0 : 1;\n    }\n    return Tensor.make(x.shape, {values: newValues}, 'bool') as T;\n  }\n\n  logicalAnd(a: Tensor, b: Tensor): Tensor {\n    this.assertNotComplex([a, b], 'logicalAnd');\n\n    return this.broadcastedBinaryOp(a, b, 'bool', (aVal, bVal) => {\n      return aVal && bVal;\n    });\n  }\n\n  logicalOr(a: Tensor, b: Tensor): Tensor {\n    this.assertNotComplex([a, b], 'logicalOr');\n\n    return this.broadcastedBinaryOp(a, b, 'bool', (aVal, bVal) => {\n      return aVal || bVal;\n    });\n  }\n\n  select(condition: Tensor, a: Tensor, b: Tensor): Tensor {\n    this.assertNotComplex([condition, a, b], 'select');\n\n    const values = this.readSync(condition.dataId) as TypedArray;\n    const aValues = this.readSync(a.dataId) as TypedArray;\n    const bValues = this.readSync(b.dataId) as TypedArray;\n    const result = ops.zeros(a.shape, upcastType(a.dtype, b.dtype));\n    const newValues = this.readSync(result.dataId) as TypedArray;\n    let index = 0;\n    const offset = condition.rank === 0 || condition.rank > 1 || a.rank === 1 ?\n        1 :\n        a.shape[1];\n\n    for (let i = 0; i < values.length; i++) {\n      for (let j = 0; j < offset; j++) {\n        if (values[i] === 1) {\n          newValues[index++] = aValues[i];\n        } else {\n          newValues[index++] = bValues[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  where(condition: Tensor): Tensor2D {\n    this.assertNotComplex([condition], 'where');\n\n    const condVals = this.readSync(condition.dataId) as TypedArray;\n    return whereImpl(condition.shape, condVals);\n  }\n\n  topk<T extends Tensor>(x: T, k: number, sorted: boolean): [T, T] {\n    this.assertNotComplex(x, 'topk');\n\n    const xVals = this.readSync(x.dataId) as TypedArray;\n    return topkImpl(xVals, x.shape, x.dtype as NumericDataType, k, sorted);\n  }\n\n  min(x: Tensor, axes: number[]): Tensor {\n    this.assertNotComplex(x, 'min');\n\n    axis_util.assertAxesAreInnerMostDims('min', axes, x.rank);\n    const [outShape, reduceShape] =\n        axis_util.computeOutAndReduceShapes(x.shape, axes);\n    const result = ops.zeros(outShape, x.dtype);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const vals = this.readSync(result.dataId) as TypedArray;\n\n    const aVals = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < vals.length; ++i) {\n      const offset = i * reduceSize;\n      let min = aVals[offset];\n      for (let j = 0; j < reduceSize; ++j) {\n        const value = aVals[offset + j];\n        if (value < min) {\n          min = value;\n        }\n      }\n      vals[i] = min;\n    }\n    return result;\n  }\n\n  minimum(a: Tensor, b: Tensor): Tensor {\n    this.assertNotComplex([a, b], 'minimum');\n\n    return this.broadcastedBinaryOp(\n        a, b, a.dtype, (aVal, bVal) => Math.min(aVal, bVal));\n  }\n\n  mod(a: Tensor, b: Tensor): Tensor {\n    this.assertNotComplex([a, b], 'mod');\n\n    return this.broadcastedBinaryOp(a, b, a.dtype, (aVal, bVal) => {\n      const rem = aVal % bVal;\n      if ((aVal < 0 && bVal < 0) || (aVal >= 0 && bVal >= 0)) {\n        return rem;\n      } else {\n        return (rem + bVal) % bVal;\n      }\n    });\n  }\n\n  max(x: Tensor, axes: number[]): Tensor {\n    this.assertNotComplex(x, 'max');\n\n    axis_util.assertAxesAreInnerMostDims('max', axes, x.rank);\n    const [outShape, reduceShape] =\n        axis_util.computeOutAndReduceShapes(x.shape, axes);\n    const result = ops.zeros(outShape, x.dtype);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const vals = this.readSync(result.dataId) as TypedArray;\n\n    const aVals = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < vals.length; ++i) {\n      const offset = i * reduceSize;\n      let max = aVals[offset];\n      for (let j = 0; j < reduceSize; ++j) {\n        const value = aVals[offset + j];\n        if (value > max) {\n          max = value;\n        }\n      }\n      vals[i] = max;\n    }\n    return result;\n  }\n\n  maximum(a: Tensor, b: Tensor): Tensor {\n    this.assertNotComplex([a, b], 'maximum');\n\n    return this.broadcastedBinaryOp(\n        a, b, a.dtype, (aVal, bVal) => Math.max(aVal, bVal));\n  }\n\n  all(x: Tensor, axes: number[]): Tensor {\n    this.assertNotComplex(x, 'all');\n\n    axis_util.assertAxesAreInnerMostDims('all', axes, x.rank);\n    const [outShape, reduceShape] =\n        axis_util.computeOutAndReduceShapes(x.shape, axes);\n    const result = ops.zeros(outShape, x.dtype);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const vals = this.readSync(result.dataId) as TypedArray;\n\n    const aVals = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < vals.length; ++i) {\n      const offset = i * reduceSize;\n      let all = aVals[offset];\n      for (let j = 0; j < reduceSize; ++j) {\n        const value = aVals[offset + j];\n        all = all && value;\n      }\n      vals[i] = all;\n    }\n    return result;\n  }\n\n  any(x: Tensor, axes: number[]): Tensor {\n    this.assertNotComplex(x, 'any');\n\n    axis_util.assertAxesAreInnerMostDims('any', axes, x.rank);\n    const [outShape, reduceShape] =\n        axis_util.computeOutAndReduceShapes(x.shape, axes);\n    const result = ops.zeros(outShape, x.dtype);\n    const reduceSize = util.sizeFromShape(reduceShape);\n    const vals = this.readSync(result.dataId) as TypedArray;\n\n    const aVals = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < vals.length; ++i) {\n      const offset = i * reduceSize;\n      let anyVal = aVals[offset];\n      for (let j = 0; j < reduceSize; ++j) {\n        const value = aVals[offset + j];\n        anyVal = anyVal || value;\n      }\n      vals[i] = anyVal;\n    }\n    return result;\n  }\n\n  squaredDifference(a: Tensor, b: Tensor): Tensor {\n    this.assertNotComplex([a, b], 'squaredDifference');\n\n    return this.broadcastedBinaryOp(a, b, a.dtype, (aVal, bVal) => {\n      const diff = aVal - bVal;\n      return diff * diff;\n    });\n  }\n\n  ceil<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'ceil');\n\n    const values = this.readSync(x.dataId) as TypedArray;\n    const newValues = new Float32Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      newValues[i] = Math.ceil(values[i]);\n    }\n    return Tensor.make(x.shape, {values: newValues}) as T;\n  }\n\n  floor<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'floor');\n\n    const values = this.readSync(x.dataId) as TypedArray;\n    const newValues = new Float32Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      newValues[i] = Math.floor(values[i]);\n    }\n    return Tensor.make(x.shape, {values: newValues}) as T;\n  }\n\n  sign<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'x');\n\n    const values = this.readSync(x.dataId) as TypedArray;\n    const newValues = new Float32Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      if (values[i] < 0) {\n        newValues[i] = -1;\n      } else if (values[i] > 0) {\n        newValues[i] = 1;\n      } else {\n        newValues[i] = 0;\n      }\n    }\n    return Tensor.make(x.shape, {values: newValues}) as T;\n  }\n\n  isNaN<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'x');\n\n    const values = this.readSync(x.dataId) as TypedArray;\n    const newValues = new Uint8Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      if (Number.isNaN(values[i])) {\n        newValues[i] = 1;\n      }\n    }\n    return Tensor.make(x.shape, {values: newValues}, 'bool') as T;\n  }\n\n  isInf<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'x');\n\n    const values = this.readSync(x.dataId) as TypedArray;\n    const newValues = new Uint8Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      if (Math.abs(values[i]) === Infinity) {\n        newValues[i] = 1;\n      }\n    }\n    return Tensor.make(x.shape, {values: newValues}, 'bool') as T;\n  }\n\n  isFinite<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'x');\n\n    const values = this.readSync(x.dataId) as TypedArray;\n    const newValues = new Uint8Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      if (Number.isFinite(values[i])) {\n        newValues[i] = 1;\n      }\n    }\n    return Tensor.make(x.shape, {values: newValues}, 'bool') as T;\n  }\n\n  round<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'round');\n\n    const values = this.readSync(x.dataId) as TypedArray;\n    const newValues = new Float32Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      // The algorithm is based on banker's rounding.\n      const base = Math.floor(values[i]);\n      if (values[i] - base < 0.5) {\n        newValues[i] = Math.floor(values[i]);\n      } else if (values[i] - base > 0.5) {\n        newValues[i] = Math.ceil(values[i]);\n      } else {\n        if (base % 2.0 === 0.0) {\n          newValues[i] = base;\n        } else {\n          newValues[i] = base + 1.0;\n        }\n      }\n    }\n    return Tensor.make(x.shape, {values: newValues}) as T;\n  }\n\n  exp<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'exp');\n\n    const values = this.readSync(x.dataId) as TypedArray;\n    const newValues = new Float32Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      newValues[i] = Math.exp(values[i]);\n    }\n    return Tensor.make(x.shape, {values: newValues}) as T;\n  }\n\n  expm1<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'expm1');\n\n    const values = this.readSync(x.dataId) as TypedArray;\n    const newValues = new Float32Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      newValues[i] = Math.expm1(values[i]);\n    }\n    return Tensor.make(x.shape, {values: newValues}) as T;\n  }\n\n  log<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'log');\n\n    const values = this.readSync(x.dataId) as TypedArray;\n    const newValues = new Float32Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      const value = values[i];\n      newValues[i] = Math.log(value);\n    }\n    return Tensor.make(x.shape, {values: newValues}) as T;\n  }\n\n  log1p<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'log1p');\n\n    const values = this.readSync(x.dataId) as TypedArray;\n    const newValues = new Float32Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      const value = values[i];\n      newValues[i] = Math.log1p(value);\n    }\n    return Tensor.make(x.shape, {values: newValues}) as T;\n  }\n\n  sqrt<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'sqrt');\n\n    const values = this.readSync(x.dataId) as TypedArray;\n    const newValues = new Float32Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      const value = values[i];\n      newValues[i] = Math.sqrt(value);\n    }\n    return Tensor.make(x.shape, {values: newValues}) as T;\n  }\n\n  rsqrt<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'rsqrt');\n\n    const values = this.readSync(x.dataId) as TypedArray;\n    const newValues = new Float32Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      const value = values[i];\n      newValues[i] = 1 / Math.sqrt(value);\n    }\n    return Tensor.make(x.shape, {values: newValues}) as T;\n  }\n\n  square<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'square');\n\n    const values = this.readSync(x.dataId) as TypedArray;\n    const newValues = new Float32Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      const value = values[i];\n      newValues[i] = value * value;\n    }\n    return Tensor.make(x.shape, {values: newValues}) as T;\n  }\n\n  reciprocal<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'reciprocal');\n\n    const values = this.readSync(x.dataId) as TypedArray;\n    const newValues = new Float32Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      newValues[i] = 1 / values[i];\n    }\n    return Tensor.make(x.shape, {values: newValues}) as T;\n  }\n\n  linear<T extends Tensor>(x: T): T {\n    return x;\n  }\n\n  relu<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'relu');\n\n    const res = ops.zeros(x.shape, x.dtype);\n    const resVals = this.readSync(res.dataId) as TypedArray;\n    const inVals = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < inVals.length; ++i) {\n      resVals[i] = Math.max(0, inVals[i]);\n    }\n    return res as T;\n  }\n\n  prelu<T extends Tensor>(x: T, a: T): T {\n    this.assertNotComplex([x, a], 'prelu');\n\n    return this.broadcastedBinaryOp(\n               x, a, x.dtype,\n               (xValue, aValue) => xValue < 0 ? aValue * xValue : xValue) as T;\n  }\n\n  elu<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'elu');\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      const v = values[i];\n      if (v >= 0) {\n        resultValues[i] = v;\n      } else {\n        resultValues[i] = (Math.exp(v) - 1);\n      }\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  eluDer<T extends Tensor>(dy: T, y: T): T {\n    this.assertNotComplex([dy, y], 'eluDer');\n\n    const resultValues = new Float32Array(y.size);\n    const values = this.readSync(y.dataId) as TypedArray;\n    const dyValues = this.readSync(dy.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      const v = values[i];\n      if (v >= 1) {\n        resultValues[i] = dyValues[i];\n      } else {\n        resultValues[i] = dyValues[i] * (v + 1);\n      }\n    }\n    return Tensor.make(y.shape, {values: resultValues}) as T;\n  }\n\n  selu<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'selu');\n\n    // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n    // see: https://arxiv.org/abs/1706.02515\n    const scaleAlpha = selu_util.SELU_SCALEALPHA;\n    const scale = selu_util.SELU_SCALE;\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      const v = values[i];\n      if (v >= 0) {\n        resultValues[i] = scale * v;\n      } else {\n        resultValues[i] = scaleAlpha * (Math.exp(v) - 1);\n      }\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  clip<T extends Tensor>(x: T, min: number, max: number): T {\n    this.assertNotComplex(x, 'clip');\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      const v = values[i];\n      resultValues[i] = v > max ? max : (v < min ? min : v);\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  abs<T extends Tensor>(x: T): T {\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      resultValues[i] = Math.abs(values[i]);\n    }\n\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  complexAbs<T extends Tensor>(x: T): T {\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n\n    for (let i = 0; i < x.size; ++i) {\n      const real = values[i * 2];\n      const imag = values[i * 2 + 1];\n      resultValues[i] = Math.hypot(real, imag);\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  int<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'int');\n\n    const resultValues = new Int32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      resultValues[i] = values[i];\n    }\n    return Tensor.make(x.shape, {values: resultValues}, 'int32');\n  }\n\n  sigmoid<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'sigmoid');\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      resultValues[i] = 1 / (1 + Math.exp(-values[i]));\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  softplus<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'softplus');\n\n    // mirrors the implementation of tf.nn.softplus: https://goo.gl/vkcvwX\n\n    // epsilon is the difference between 1.0 and the next representable float.\n    // For a single precision 32 bit float this should be 2^-23, see:\n    // https://math.byu.edu/~schow/work/IEEEFloatingPoint.htm\n    const epsilon = 1.1920928955078125e-7;\n    const threshold = Math.log(epsilon) + 2.0;\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n\n    for (let i = 0; i < values.length; ++i) {\n      // Value above which exp(x) may overflow, but softplus(x) == x\n      // is within machine epsilon.\n      const tooLarge = values[i] > -threshold;\n\n      // Value below which exp(x) may underflow, but softplus(x) == exp(x)\n      // is within machine epsilon.\n      const tooSmall = values[i] < threshold;\n\n      const expX = Math.exp(values[i]);\n      let result;\n\n      if (tooSmall) {\n        result = expX;\n      } else if (tooLarge) {\n        result = values[i];\n      } else {\n        result = Math.log(1.0 + expX);\n      }\n      resultValues[i] = result;\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  sin<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'sin');\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      resultValues[i] = Math.sin(values[i]);\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  cos<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'cos');\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      resultValues[i] = Math.cos(values[i]);\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  tan<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'tan');\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      resultValues[i] = Math.tan(values[i]);\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  asin<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'asin');\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      resultValues[i] = Math.asin(values[i]);\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  acos<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'acos');\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      resultValues[i] = Math.acos(values[i]);\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  atan<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'atan');\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      resultValues[i] = Math.atan(values[i]);\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  atan2<T extends Tensor>(a: T, b: T): T {\n    this.assertNotComplex([a, b], 'atan2');\n\n    return this.broadcastedBinaryOp(\n               a, b, a.dtype, (aValue, bValue) => Math.atan2(aValue, bValue)) as\n        T;\n  }\n\n  sinh<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'sinh');\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      resultValues[i] = Math.sinh(values[i]);\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  cosh<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'cosh');\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      resultValues[i] = Math.cosh(values[i]);\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  tanh<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'tanh');\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      resultValues[i] = util.tanh(values[i]);\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  asinh<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'asinh');\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      resultValues[i] = Math.asinh(values[i]);\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  acosh<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'acosh');\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      resultValues[i] = Math.acosh(values[i]);\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  atanh<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'atanh');\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      resultValues[i] = Math.atanh(values[i]);\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  erf<T extends Tensor>(x: T): T {\n    this.assertNotComplex(x, 'erf');\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    const p = erf_util.ERF_P;\n    const a1 = erf_util.ERF_A1;\n    const a2 = erf_util.ERF_A2;\n    const a3 = erf_util.ERF_A3;\n    const a4 = erf_util.ERF_A4;\n    const a5 = erf_util.ERF_A5;\n    for (let i = 0; i < values.length; ++i) {\n      const v = values[i];\n      const t = 1.0 / (1.0 + p * v);\n      resultValues[i] = 1.0 -\n          (((((a5 * t + a4) * t) + a3) * t + a2) * t + a1) * t *\n              Math.exp(-v * v);\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  step<T extends Tensor>(x: T, alpha = 0): T {\n    this.assertNotComplex(x, 'step');\n\n    const resultValues = new Float32Array(x.size);\n    const values = this.readSync(x.dataId) as TypedArray;\n    for (let i = 0; i < values.length; ++i) {\n      const value = values[i];\n      if (isNaN(value)) {\n        resultValues[i] = NaN;\n      } else {\n        resultValues[i] = value > 0 ? 1 : alpha;\n      }\n    }\n    return Tensor.make(x.shape, {values: resultValues}) as T;\n  }\n\n  conv2d(x: Tensor4D, filter: Tensor4D, convInfo: Conv2DInfo): Tensor4D {\n    this.assertNotComplex([x, filter], 'conv2d');\n\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const padLeft = convInfo.padInfo.left;\n    const padTop = convInfo.padInfo.top;\n    const y = ops.buffer(convInfo.outShape, x.dtype as 'float32');\n\n    const xVals = this.readSync(x.dataId) as TypedArray;\n    const wVals = this.readSync(filter.dataId) as TypedArray;\n    const yVals = y.values;\n\n    for (let b = 0; b < convInfo.batchSize; ++b) {\n      const xOffset1 = b * x.strides[0];\n      const yOffset1 = b * y.strides[0];\n      for (let yR = 0; yR < convInfo.outHeight; ++yR) {\n        const yOffset2 = yOffset1 + yR * y.strides[1];\n        const xRCorner = yR * convInfo.strideHeight - padTop;\n        for (let wR = 0; wR < filterHeight; wR++) {\n          const xR = xRCorner + wR * dilationHeight;\n          if (xR < 0 || xR >= convInfo.inHeight) {\n            continue;\n          }\n          const wOffset1 = wR * filter.strides[0];\n          const xOffset2 = xOffset1 + xR * x.strides[1];\n          for (let yC = 0; yC < convInfo.outWidth; ++yC) {\n            const yOffset3 = yOffset2 + yC * convInfo.outChannels;\n            const xCCorner = yC * convInfo.strideWidth - padLeft;\n            for (let wC = 0; wC < filterWidth; wC++) {\n              const xC = xCCorner + wC * dilationWidth;\n              if (xC < 0 || xC >= convInfo.inWidth) {\n                continue;\n              }\n              const wOffset2 = wOffset1 + wC * filter.strides[1];\n              const xOffset3 = xOffset2 + xC * convInfo.inChannels;\n              let wOffset3 = wOffset2;\n              for (let d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                const xVal = xVals[xOffset3 + d1];\n                for (let d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                  yVals[yOffset3 + d2] += xVal * wVals[wOffset3 + d2];\n                }\n                wOffset3 += convInfo.outChannels;\n              }\n            }\n          }\n        }\n      }\n    }\n    return y.toTensor() as Tensor4D;\n  }\n\n  conv3d(x: Tensor5D, filter: Tensor5D, convInfo: Conv3DInfo): Tensor5D {\n    const filterDepth = convInfo.filterDepth;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const dilationDepth = convInfo.dilationDepth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const padFront = convInfo.padInfo.front;\n    const padLeft = convInfo.padInfo.left;\n    const padTop = convInfo.padInfo.top;\n    const y = ops.buffer<Rank.R5>(convInfo.outShape, x.dtype as 'float32');\n\n    const xVals = this.readSync(x.dataId) as TypedArray;\n    const wVals = this.readSync(filter.dataId) as TypedArray;\n    const yVals = y.values;\n\n    for (let b = 0; b < convInfo.batchSize; ++b) {\n      const xOffset1 = b * x.strides[0];\n      const yOffset1 = b * y.strides[0];\n      for (let yF = 0; yF < convInfo.outDepth; ++yF) {\n        const yOffset2 = yOffset1 + yF * y.strides[1];\n        const xFCorner = yF * convInfo.strideDepth - padFront;\n        for (let wF = 0; wF < filterDepth; wF++) {\n          const xF = xFCorner + wF * dilationDepth;\n          if (xF < 0 || xF >= convInfo.inDepth) {\n            continue;\n          }\n          const wOffset1 = wF * filter.strides[0];\n          const xOffset2 = xOffset1 + xF * x.strides[1];\n\n          for (let yR = 0; yR < convInfo.outHeight; ++yR) {\n            const yOffset3 = yOffset2 + yR * y.strides[2];\n            const xRCorner = yR * convInfo.strideHeight - padTop;\n            for (let wR = 0; wR < filterHeight; wR++) {\n              const xR = xRCorner + wR * dilationHeight;\n              if (xR < 0 || xR >= convInfo.inHeight) {\n                continue;\n              }\n              const wOffset2 = wOffset1 + wR * filter.strides[1];\n              const xOffset3 = xOffset2 + xR * x.strides[2];\n              for (let yC = 0; yC < convInfo.outWidth; ++yC) {\n                const yOffset4 = yOffset3 + yC * convInfo.outChannels;\n                const xCCorner = yC * convInfo.strideWidth - padLeft;\n                for (let wC = 0; wC < filterWidth; wC++) {\n                  const xC = xCCorner + wC * dilationWidth;\n                  if (xC < 0 || xC >= convInfo.inWidth) {\n                    continue;\n                  }\n                  const wOffset3 = wOffset2 + wC * filter.strides[2];\n                  const xOffset4 = xOffset3 + xC * convInfo.inChannels;\n                  let wOffset4 = wOffset3;\n                  for (let d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                    const xVal = xVals[xOffset4 + d1];\n                    for (let d2 = 0; d2 < convInfo.outChannels; ++d2) {\n                      yVals[yOffset4 + d2] += xVal * wVals[wOffset4 + d2];\n                    }\n                    wOffset4 += convInfo.outChannels;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return y.toTensor();\n  }\n\n  conv2dDerInput(dy: Tensor4D, filter: Tensor4D, convInfo: Conv2DInfo):\n      Tensor4D {\n    this.assertNotComplex([dy, filter], 'conv2dDerInput');\n\n    const dx = ops.buffer<Rank.R4>(convInfo.inShape, 'float32');\n    const dxValues = dx.values;\n    const [dxS0, dxS1, dxS2] = dx.strides;\n    const dyValues = this.readSync(dy.dataId) as TypedArray;\n    const [dyS0, dyS1, dyS2] = dy.strides;\n    const fltValues = this.readSync(filter.dataId) as TypedArray;\n    const [fltS0, fltS1, fltS2] = filter.strides;\n    const {\n      batchSize,\n      filterHeight,\n      filterWidth,\n      inChannels,\n      inHeight,\n      inWidth,\n      outChannels,\n      outHeight,\n      outWidth,\n      strideHeight,\n      strideWidth\n    } = convInfo;\n    const topPad = filterHeight - 1 - convInfo.padInfo.top;\n    const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n\n    for (let b = 0; b < batchSize; ++b) {\n      for (let d1 = 0; d1 < inChannels; ++d1) {\n        for (let xR = 0; xR < inHeight; ++xR) {\n          const xRCorner = xR - topPad;\n          const xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n          const yRMax =\n              Math.min(outHeight, (filterHeight + xRCorner) / strideHeight);\n\n          for (let xC = 0; xC < inWidth; ++xC) {\n            const xCCorner = xC - leftPad;\n            const xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n            const yCMax =\n                Math.min(outWidth, (filterWidth + xCCorner) / strideWidth);\n\n            let dotProd = 0;\n            for (let yR = xRMin; yR < yRMax; ++yR) {\n              const wR = yR * strideHeight - xRCorner;\n\n              for (let yC = xCMin; yC < yCMax; ++yC) {\n                const wC = yC * strideWidth - xCCorner;\n                const dyOffset = dyS0 * b + dyS1 * yR + dyS2 * yC;\n                const fltOffset = fltS0 * (filterHeight - 1 - wR) +\n                    fltS1 * (filterWidth - 1 - wC) + fltS2 * d1;\n\n                for (let d2 = 0; d2 < outChannels; ++d2) {\n                  const pixel = dyValues[dyOffset + d2];\n                  const weight = fltValues[fltOffset + d2];\n                  dotProd += pixel * weight;\n                }\n              }\n            }\n            dxValues[dxS0 * b + dxS1 * xR + dxS2 * xC + d1] = dotProd;\n          }\n        }\n      }\n    }\n    return dx.toTensor();\n  }\n\n  conv3dDerInput(dy: Tensor5D, filter: Tensor5D, convInfo: Conv3DInfo):\n      Tensor5D {\n    const dx = ops.buffer<Rank.R5>(convInfo.inShape, 'float32');\n    const dxValues = dx.values;\n    const [dxS0, dxS1, dxS2, dxS3] = dx.strides;\n    const dyValues = this.readSync(dy.dataId) as TypedArray;\n    const [dyS0, dyS1, dyS2, dyS3] = dy.strides;\n    const fltValues = this.readSync(filter.dataId) as TypedArray;\n    const [fltS0, fltS1, fltS2, fltS3] = filter.strides;\n    const {\n      batchSize,\n      filterDepth,\n      filterHeight,\n      filterWidth,\n      inChannels,\n      inDepth,\n      inHeight,\n      inWidth,\n      outChannels,\n      outDepth,\n      outHeight,\n      outWidth,\n      strideDepth,\n      strideHeight,\n      strideWidth\n    } = convInfo;\n    const frontPad = filterDepth - 1 - convInfo.padInfo.front;\n    const topPad = filterHeight - 1 - convInfo.padInfo.top;\n    const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n\n    for (let b = 0; b < batchSize; ++b) {\n      for (let d1 = 0; d1 < inChannels; ++d1) {\n        // Frames of depth\n        for (let xF = 0; xF < inDepth; ++xF) {\n          const xFCorner = xF - frontPad;\n          const xFMin = Math.max(0, Math.ceil(xFCorner / strideDepth));\n          const yFMax =\n              Math.min(outDepth, (filterDepth + xFCorner) / strideDepth);\n\n          // Rows as per standard 2d matrix notation\n          for (let xR = 0; xR < inHeight; ++xR) {\n            const xRCorner = xR - topPad;\n            const xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n            const yRMax =\n                Math.min(outHeight, (filterHeight + xRCorner) / strideHeight);\n            // Columns as per standard 2d matrix notation\n            for (let xC = 0; xC < inWidth; ++xC) {\n              const xCCorner = xC - leftPad;\n              const xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n              const yCMax =\n                  Math.min(outWidth, (filterWidth + xCCorner) / strideWidth);\n\n              let dotProd = 0;\n              for (let yF = xFMin; yF < yFMax; ++yF) {\n                const wF = yF * strideDepth - xFCorner;\n\n                for (let yR = xRMin; yR < yRMax; ++yR) {\n                  const wR = yR * strideHeight - xRCorner;\n\n                  for (let yC = xCMin; yC < yCMax; ++yC) {\n                    const wC = yC * strideWidth - xCCorner;\n                    const dyOffset =\n                        dyS0 * b + dyS1 * yF + dyS2 * yR + dyS3 * yC;\n                    const fltOffset = fltS0 * (filterDepth - 1 - wF) +\n                        fltS1 * (filterHeight - 1 - wR) +\n                        fltS2 * (filterWidth - 1 - wC) + fltS3 * d1;\n\n                    for (let d2 = 0; d2 < outChannels; ++d2) {\n                      const pixel = dyValues[dyOffset + d2];\n                      const weight = fltValues[fltOffset + d2];\n                      dotProd += pixel * weight;\n                    }\n                  }\n                }\n              }\n              dxValues[dxS0 * b + dxS1 * xF + dxS2 * xR + dxS3 * xC + d1] =\n                  dotProd;\n            }\n          }\n        }\n      }\n    }\n    return dx.toTensor();\n  }\n\n  conv2dDerFilter(x: Tensor4D, dy: Tensor4D, convInfo: Conv2DInfo): Tensor4D {\n    this.assertNotComplex([x, dy], 'conv2dDerFilter');\n\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const dW = ops.buffer<Rank.R4>(convInfo.filterShape, 'float32');\n\n    const leftPad = convInfo.padInfo.left;\n    const topPad = convInfo.padInfo.top;\n    const xBuf = this.bufferSync(x);\n    const dyBuf = this.bufferSync(dy);\n    for (let wR = 0; wR < filterHeight; ++wR) {\n      const yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n      const yRMax = Math.min(\n          convInfo.outHeight, (convInfo.inHeight + topPad - wR) / strideHeight);\n\n      for (let wC = 0; wC < filterWidth; ++wC) {\n        const yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n        const yCMax = Math.min(\n            convInfo.outWidth, (convInfo.inWidth + leftPad - wC) / strideWidth);\n\n        for (let d1 = 0; d1 < convInfo.inChannels; ++d1) {\n          for (let d2 = 0; d2 < convInfo.outChannels; ++d2) {\n            // Need to convolve.\n            let dotProd = 0;\n            for (let b = 0; b < convInfo.batchSize; ++b) {\n              for (let yR = yRMin; yR < yRMax; ++yR) {\n                const xR = wR + yR * strideHeight - topPad;\n                for (let yC = yCMin; yC < yCMax; ++yC) {\n                  const xC = wC + yC * strideWidth - leftPad;\n                  dotProd += xBuf.get(b, xR, xC, d1) * dyBuf.get(b, yR, yC, d2);\n                }\n              }\n            }\n            dW.set(dotProd, wR, wC, d1, d2);\n          }\n        }\n      }\n    }\n    return dW.toTensor();\n  }\n\n  conv3dDerFilter(x: Tensor5D, dy: Tensor5D, convInfo: Conv3DInfo): Tensor5D {\n    const strideDepth = convInfo.strideDepth;\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const filterDepth = convInfo.filterDepth;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n\n    const dw = ops.buffer<Rank.R5>(convInfo.filterShape, 'float32');\n    const dwValues = dw.values;\n    const [dwS0, dwS1, dwS2, dwS3] = dw.strides;\n    const dyValues = this.readSync(dy.dataId) as TypedArray;\n    const [dyS0, dyS1, dyS2, dyS3] = dy.strides;\n    const xValues = this.readSync(x.dataId) as TypedArray;\n    const [xS0, xS1, xS2, xS3] = x.strides;\n\n    const frontPad = convInfo.padInfo.front;\n    const leftPad = convInfo.padInfo.left;\n    const topPad = convInfo.padInfo.top;\n\n    for (let wF = 0; wF < filterDepth; ++wF) {\n      const yFMin = Math.max(0, Math.ceil((frontPad - wF) / strideDepth));\n      const yFMax = Math.min(\n          convInfo.outDepth, (convInfo.inDepth + frontPad - wF) / strideDepth);\n      const wOffset1 = wF * dwS0;\n\n      for (let wR = 0; wR < filterHeight; ++wR) {\n        const yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n        const yRMax = Math.min(\n            convInfo.outHeight,\n            (convInfo.inHeight + topPad - wR) / strideHeight);\n        const wOffset2 = wR * dwS1 + wOffset1;\n\n        for (let wC = 0; wC < filterWidth; ++wC) {\n          const yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n          const yCMax = Math.min(\n              convInfo.outWidth,\n              (convInfo.inWidth + leftPad - wC) / strideWidth);\n          const wOffset3 = wC * dwS2 + wOffset2;\n\n          for (let d1 = 0; d1 < convInfo.inChannels; ++d1) {\n            const wOffset4 = d1 * dwS3 + wOffset3;\n\n            for (let d2 = 0; d2 < convInfo.outChannels; ++d2) {\n              let dotProd = 0;\n              for (let b = 0; b < convInfo.batchSize; ++b) {\n                const xOffset1 = b * xS0;\n                const yOffset1 = b * dyS0;\n\n                for (let yF = yFMin; yF < yFMax; ++yF) {\n                  const xF = wF + yF * strideDepth - frontPad;\n                  const xOffset2 = xF * xS1 + xOffset1;\n                  const yOffset2 = yF * dyS1 + yOffset1;\n\n                  for (let yR = yRMin; yR < yRMax; ++yR) {\n                    const xR = wR + yR * strideHeight - topPad;\n                    const xOffset3 = xR * xS2 + xOffset2;\n                    const yOffset3 = yR * dyS2 + yOffset2;\n\n                    for (let yC = yCMin; yC < yCMax; ++yC) {\n                      const xC = wC + yC * strideWidth - leftPad;\n                      const xOffset4 = xC * xS3 + xOffset3;\n                      const yOffset4 = yC * dyS3 + yOffset3;\n\n                      dotProd +=\n                          xValues[xOffset4 + d1] * dyValues[yOffset4 + d2];\n                    }\n                  }\n                }\n              }\n              dwValues[wOffset4 + d2] = dotProd;\n            }\n          }\n        }\n      }\n    }\n    return dw.toTensor();\n  }\n\n  depthwiseConv2D(x: Tensor4D, filter: Tensor4D, convInfo: Conv2DInfo):\n      Tensor4D {\n    this.assertNotComplex([x, filter], 'depthwiseConv2D');\n\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const padLeft = convInfo.padInfo.left;\n    const padTop = convInfo.padInfo.top;\n    const chMul = convInfo.outChannels / convInfo.inChannels;\n    const y = ops.buffer(convInfo.outShape, x.dtype as 'float32');\n    const xVals = this.readSync(x.dataId) as TypedArray;\n    const wVals = this.readSync(filter.dataId) as TypedArray;\n    const yVals = y.values;\n\n    for (let b = 0; b < convInfo.batchSize; ++b) {\n      const xOffset1 = b * x.strides[0];\n      const yOffset1 = b * y.strides[0];\n      for (let yR = 0; yR < convInfo.outHeight; ++yR) {\n        const yOffset2 = yOffset1 + yR * y.strides[1];\n        const xRCorner = yR * convInfo.strideHeight - padLeft;\n        for (let wR = 0; wR < filterHeight; ++wR) {\n          const xR = xRCorner + wR * dilationHeight;\n          if (xR < 0 || xR >= convInfo.inHeight) {\n            continue;\n          }\n          const wOffset1 = wR * filter.strides[0];\n          const xOffset2 = xOffset1 + xR * x.strides[1];\n          for (let yC = 0; yC < convInfo.outWidth; ++yC) {\n            const yOffset3 = yOffset2 + yC * y.strides[2];\n            const xCCorner = yC * convInfo.strideWidth - padTop;\n            for (let wC = 0; wC < filterWidth; ++wC) {\n              const xC = xCCorner + wC * dilationWidth;\n              if (xC < 0 || xC >= convInfo.inWidth) {\n                continue;\n              }\n              const wOffset2 = wOffset1 + wC * filter.strides[1];\n              const xOffset3 = xOffset2 + xC * convInfo.inChannels;\n              let yOffset4 = yOffset3;\n              let wOffset3 = wOffset2;\n              for (let d1 = 0; d1 < convInfo.inChannels; ++d1) {\n                const xVal = xVals[xOffset3 + d1];\n                for (let q = 0; q < chMul; ++q) {\n                  yVals[yOffset4 + q] += xVal * wVals[wOffset3 + q];\n                }\n                yOffset4 += chMul;\n                wOffset3 += chMul;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return y.toTensor() as Tensor4D;\n  }\n\n  depthwiseConv2DDerInput(dy: Tensor4D, filter: Tensor4D, convInfo: Conv2DInfo):\n      Tensor4D {\n    this.assertNotComplex([dy, filter], 'depthwiseConv2DDerInput');\n\n    const dx = ops.buffer<Rank.R4>(convInfo.inShape, 'float32');\n    const dxValues = dx.values;\n    const [dxS0, dxS1, dxS2] = dx.strides;\n    const dyValues = this.readSync(dy.dataId) as TypedArray;\n    const [dyS0, dyS1, dyS2] = dy.strides;\n    const fltValues = this.readSync(filter.dataId) as TypedArray;\n    const [fltS0, fltS1, fltS2] = filter.strides;\n    const {\n      batchSize,\n      filterHeight,\n      filterWidth,\n      inChannels,\n      inHeight,\n      inWidth,\n      outChannels,\n      outHeight,\n      outWidth,\n      strideHeight,\n      strideWidth\n    } = convInfo;\n    const topPad = filterHeight - 1 - convInfo.padInfo.top;\n    const leftPad = filterWidth - 1 - convInfo.padInfo.left;\n    const chMul = outChannels / inChannels;\n\n    for (let b = 0; b < batchSize; ++b) {\n      for (let d1 = 0; d1 < inChannels; ++d1) {\n        for (let xR = 0; xR < inHeight; ++xR) {\n          const xRCorner = xR - topPad;\n          const xRMin = Math.max(0, Math.ceil(xRCorner / strideHeight));\n          const yRMax =\n              Math.min(outHeight, (filterHeight + xRCorner) / strideHeight);\n\n          for (let xC = 0; xC < inWidth; ++xC) {\n            const xCCorner = xC - leftPad;\n            const xCMin = Math.max(0, Math.ceil(xCCorner / strideWidth));\n            const yCMax =\n                Math.min(outWidth, (filterWidth + xCCorner) / strideWidth);\n\n            let dotProd = 0;\n            for (let yR = xRMin; yR < yRMax; ++yR) {\n              const wR = yR * strideHeight - xRCorner;\n\n              for (let yC = xCMin; yC < yCMax; ++yC) {\n                const wC = yC * strideWidth - xCCorner;\n                const dyOffset = dyS0 * b + dyS1 * yR + dyS2 * yC;\n                const fltOffset = fltS0 * (filterHeight - 1 - wR) +\n                    fltS1 * (filterWidth - 1 - wC) + fltS2 * d1;\n\n                for (let dm = 0; dm < chMul; ++dm) {\n                  const d2 = d1 * chMul + dm;\n                  const pixel = dyValues[dyOffset + d2];\n                  const weight = fltValues[fltOffset + dm];\n                  dotProd += pixel * weight;\n                }\n              }\n            }\n            dxValues[dxS0 * b + dxS1 * xR + dxS2 * xC + d1] = dotProd;\n          }\n        }\n      }\n    }\n    return dx.toTensor();\n  }\n\n  depthwiseConv2DDerFilter(x: Tensor4D, dy: Tensor4D, convInfo: Conv2DInfo):\n      Tensor4D {\n    this.assertNotComplex([x, dy], 'depthwiseConv2DDerFilter');\n\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const dW = ops.buffer<Rank.R4>(convInfo.filterShape, 'float32');\n\n    const leftPad = convInfo.padInfo.left;\n    const topPad = convInfo.padInfo.top;\n    const chMul = convInfo.outChannels / convInfo.inChannels;\n\n    const xBuf = this.bufferSync(x);\n    const dyBuf = this.bufferSync(dy);\n    for (let wR = 0; wR < filterHeight; ++wR) {\n      const yRMin = Math.max(0, Math.ceil((topPad - wR) / strideHeight));\n      const yRMax = Math.min(\n          convInfo.outHeight, (convInfo.inHeight + topPad - wR) / strideHeight);\n\n      for (let wC = 0; wC < filterWidth; ++wC) {\n        const yCMin = Math.max(0, Math.ceil((leftPad - wC) / strideWidth));\n        const yCMax = Math.min(\n            convInfo.outWidth, (convInfo.inWidth + leftPad - wC) / strideWidth);\n\n        for (let d2 = 0; d2 < convInfo.outChannels; ++d2) {\n          const d1 = Math.trunc(d2 / chMul);\n          const dm = d2 % chMul;\n\n          let dotProd = 0;\n          for (let b = 0; b < convInfo.batchSize; ++b) {\n            for (let yR = yRMin; yR < yRMax; ++yR) {\n              const xR = wR + yR * strideHeight - topPad;\n              for (let yC = yCMin; yC < yCMax; ++yC) {\n                const xC = wC + yC * strideWidth - leftPad;\n                dotProd += xBuf.get(b, xR, xC, d1) * dyBuf.get(b, yR, yC, d2);\n              }\n            }\n          }\n          dW.set(dotProd, wR, wC, d1, dm);\n        }\n      }\n    }\n    return dW.toTensor();\n  }\n\n  tile<T extends Tensor>(x: T, reps: number[]): T {\n    this.assertNotComplex(x, 'tile');\n    return tile(this.bufferSync(x), reps) as T;\n  }\n\n  pad<T extends Tensor>(\n      x: T, paddings: Array<[number, number]>, constantValue: number): T {\n    this.assertNotComplex(x, 'pad');\n\n    const outShape = paddings.map(\n        (p, i) => p[0] /* beforePad */ + x.shape[i] + p[1] /* afterPad */);\n    const start = paddings.map(p => p[0]);\n    const xBuffer = this.bufferSync(x);\n    const buffer = ops.buffer(outShape, x.dtype as 'float32');\n    if (constantValue !== 0) {\n      buffer.values.fill(constantValue);\n    }\n\n    for (let i = 0; i < x.size; i++) {\n      const coords = xBuffer.indexToLoc(i);\n      const outCoords = coords.map((c, i) => c + start[i]);\n      buffer.set(xBuffer.get(...coords), ...outCoords);\n    }\n    return buffer.toTensor() as T;\n  }\n\n  transpose<T extends Tensor>(x: T, perm: number[]): T {\n    this.assertNotComplex(x, 'transpose');\n\n    const newShape: number[] = new Array(x.rank);\n    for (let i = 0; i < newShape.length; i++) {\n      newShape[i] = x.shape[perm[i]];\n    }\n    const values = this.readSync(x.dataId) as TypedArray;\n    const result = buffer(newShape, x.dtype);\n\n    const xBuf = this.bufferSync(x);\n    for (let i = 0; i < x.size; ++i) {\n      const loc = xBuf.indexToLoc(i);\n\n      // Permute location.\n      const newLoc: number[] = new Array(loc.length);\n      for (let i = 0; i < newLoc.length; i++) {\n        newLoc[i] = loc[perm[i]];\n      }\n\n      const newIndex = result.locToIndex(newLoc);\n      result.values[newIndex] = values[i];\n    }\n    return result.toTensor() as T;\n  }\n\n  gather<T extends Tensor>(x: T, indices: Tensor1D, axis: number): T {\n    this.assertNotComplex([x, indices], 'gather');\n\n    const newShape: number[] = x.shape.slice();\n    const indicesValues = this.readSync(indices.dataId) as TypedArray;\n    newShape[axis] = indicesValues.length;\n    const result = buffer(newShape, x.dtype);\n    const xBuf = this.bufferSync(x);\n\n    for (let i = 0; i < result.size; ++i) {\n      const newLoc = result.indexToLoc(i);\n\n      const originalLoc: number[] = newLoc.slice();\n      originalLoc[axis] = indicesValues[newLoc[axis]];\n\n      const originalIndex = xBuf.locToIndex(originalLoc);\n      result.values[i] = xBuf.values[originalIndex];\n    }\n    return result.toTensor() as T;\n  }\n\n  batchToSpaceND<T extends Tensor>(\n      x: T, blockShape: number[], crops: number[][]): T {\n    this.assertNotComplex([x], 'batchToSpaceND');\n\n    const prod = blockShape.reduce((a, b) => a * b);\n\n    const reshaped = array_ops_util.getReshaped(x.shape, blockShape, prod);\n    const permuted =\n        array_ops_util.getPermuted(reshaped.length, blockShape.length);\n    const reshapedPermuted =\n        array_ops_util.getReshapedPermuted(x.shape, blockShape, prod);\n    const sliceBeginCoords =\n        array_ops_util.getSliceBeginCoords(crops, blockShape.length);\n    const sliceSize =\n        array_ops_util.getSliceSize(reshapedPermuted, crops, blockShape.length);\n\n    return x.reshape(reshaped)\n               .transpose(permuted)\n               .reshape(reshapedPermuted)\n               .slice(sliceBeginCoords, sliceSize) as T;\n  }\n\n  spaceToBatchND<T extends Tensor>(\n      x: T, blockShape: number[], paddings: Array<[number, number]>): T {\n    this.assertNotComplex([x], 'spaceToBatchND');\n\n    const prod = blockShape.reduce((a, b) => a * b);\n\n    const completePaddings: Array<[number, number]> = [[0, 0]];\n    completePaddings.push(...paddings);\n    for (let i = 1 + blockShape.length; i < x.shape.length; ++i) {\n      completePaddings.push([0, 0]);\n    }\n\n    const paddedX = x.pad(completePaddings);\n\n    const reshapedPaddedShape =\n        array_ops_util.getReshaped(paddedX.shape, blockShape, prod, false);\n    const permutedReshapedPaddedPermutation = array_ops_util.getPermuted(\n        reshapedPaddedShape.length, blockShape.length, false);\n    const flattenShape = array_ops_util.getReshapedPermuted(\n        paddedX.shape, blockShape, prod, false);\n\n    return paddedX.reshape(reshapedPaddedShape)\n               .transpose(permutedReshapedPaddedPermutation)\n               .reshape(flattenShape) as T;\n  }\n\n  private pool(x: Tensor4D, convInfo: Conv2DInfo, poolType: 'max'|'avg'):\n      Tensor4D {\n    this.assertNotComplex(x, 'pool');\n\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n\n    const initialValue =\n        (poolType === 'max' ? Number.NEGATIVE_INFINITY :\n                              Number.POSITIVE_INFINITY);\n\n    const xValues = this.readSync(x.dataId) as TypedArray;\n    const output = ops.buffer(convInfo.outShape, x.dtype);\n    const outputVals = output.values;\n\n    const outputBatchStrides =\n        convInfo.outShape[1] * convInfo.outShape[2] * convInfo.outShape[3];\n    const outputRowStrides = convInfo.outShape[2] * convInfo.outShape[3];\n    const outputColStrides = convInfo.outShape[3];\n\n    for (let b = 0; b < convInfo.batchSize; ++b) {\n      const outputBatchOffset = b * outputBatchStrides;\n      const inputBatchOffset = b * x.strides[0];\n      for (let d = 0; d < convInfo.inChannels; ++d) {\n        for (let yR = 0; yR < convInfo.outHeight; ++yR) {\n          const xRCorner = yR * strideHeight - padTop;\n          const xRMin = Math.max(0, xRCorner);\n          const xRMax =\n              Math.min(convInfo.inHeight, effectiveFilterHeight + xRCorner);\n          const outputRowOffset = outputBatchOffset + yR * outputRowStrides;\n          for (let yC = 0; yC < convInfo.outWidth; ++yC) {\n            const xCCorner = yC * strideWidth - padLeft;\n            const xCMin = Math.max(0, xCCorner);\n            const xCMax =\n                Math.min(convInfo.inWidth, effectiveFilterWidth + xCCorner);\n            let minMaxValue = initialValue;\n            let avgValue = 0;\n            let count = 0;\n            for (let xR = xRMin; xR < xRMax; xR += dilationHeight) {\n              const xROffset = inputBatchOffset + xR * x.strides[1];\n              for (let xC = xCMin; xC < xCMax; xC += dilationWidth) {\n                const xCOffset = xROffset + xC * x.strides[2];\n                const pixel = xValues[xCOffset + d];\n                if ((poolType === 'max' && pixel > minMaxValue)) {\n                  minMaxValue = pixel;\n                } else if (poolType === 'avg') {\n                  avgValue += pixel;\n                  count++;\n                }\n              }\n              if (isNaN(minMaxValue)) {\n                break;\n              }\n            }\n            const outputOffset = outputRowOffset + yC * outputColStrides + d;\n            outputVals[outputOffset] =\n                poolType === 'avg' ? avgValue / count : minMaxValue;\n          }\n        }\n      }\n    }\n    return output.toTensor() as Tensor4D;\n  }\n\n  maxPool(x: Tensor4D, convInfo: Conv2DInfo): Tensor4D {\n    return this.pool(x, convInfo, 'max');\n  }\n\n  private maxPoolPositions(x: Tensor4D, convInfo: Conv2DInfo): Tensor4D {\n    const maxPositions = ops.buffer(convInfo.outShape, 'int32');\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n    const padTop = convInfo.padInfo.top;\n    const padLeft = convInfo.padInfo.left;\n\n    const xBuf = this.bufferSync(x);\n    for (let b = 0; b < convInfo.batchSize; ++b) {\n      for (let d = 0; d < convInfo.inChannels; ++d) {\n        for (let yR = 0; yR < convInfo.outHeight; ++yR) {\n          const xRCorner = yR * strideHeight - padTop;\n          let xRMin = xRCorner;\n          while (xRMin < 0) {\n            xRMin += dilationHeight;\n          }\n          // const xRMin = Math.max(0, xRCorner);\n          const xRMax =\n              Math.min(convInfo.inHeight, effectiveFilterHeight + xRCorner);\n          for (let yC = 0; yC < convInfo.outWidth; ++yC) {\n            const xCCorner = yC * strideWidth - padLeft;\n            let xCMin = xCCorner;\n            while (xCMin < 0) {\n              xCMin += dilationWidth;\n            }\n            const xCMax =\n                Math.min(convInfo.inWidth, effectiveFilterWidth + xCCorner);\n            let maxValue = Number.NEGATIVE_INFINITY;\n            let maxPosition = -1;\n\n            for (let xR = xRMin; xR < xRMax; xR += dilationHeight) {\n              const wR = xR - xRCorner;\n              for (let xC = xCMin; xC < xCMax; xC += dilationWidth) {\n                const wC = xC - xCCorner;\n                const pixel = xBuf.get(b, xR, xC, d);\n                if (pixel > maxValue) {\n                  maxValue = pixel;\n                  maxPosition = wR * effectiveFilterWidth + wC;\n                }\n              }\n            }\n            maxPositions.set(maxPosition, b, yR, yC, d);\n          }\n        }\n      }\n    }\n    return maxPositions.toTensor() as Tensor4D;\n  }\n\n  maxPoolBackprop(dy: Tensor4D, x: Tensor4D, y: Tensor4D, convInfo: Conv2DInfo):\n      Tensor4D {\n    this.assertNotComplex([x, y], 'maxPoolBackprop');\n\n    const maxPositions = this.maxPoolPositions(x, convInfo);\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n    const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n    const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n    const dx = ops.buffer<Rank.R4>(x.shape, 'float32');\n\n    const maxPosBuf = this.bufferSync(maxPositions);\n    const dyBuf = this.bufferSync(dy);\n\n    for (let b = 0; b < convInfo.batchSize; ++b) {\n      for (let d = 0; d < convInfo.inChannels; ++d) {\n        for (let dxR = 0; dxR < convInfo.inHeight; ++dxR) {\n          for (let dxC = 0; dxC < convInfo.inWidth; ++dxC) {\n            // Shader code begins.\n            const dyRCorner = dxR - padTop;\n            const dyCCorner = dxC - padLeft;\n            let dotProd = 0;\n            for (let wR = 0; wR < effectiveFilterHeight; wR += dilationHeight) {\n              const dyR = (dyRCorner + wR) / strideHeight;\n              if (dyR < 0 || dyR >= convInfo.outHeight ||\n                  Math.floor(dyR) !== dyR) {\n                continue;\n              }\n              for (let wC = 0; wC < effectiveFilterWidth; wC += dilationWidth) {\n                const dyC = (dyCCorner + wC) / strideWidth;\n                if (dyC < 0 || dyC >= convInfo.outWidth ||\n                    Math.floor(dyC) !== dyC) {\n                  continue;\n                }\n                const maxPos = effectiveFilterHeight * effectiveFilterWidth -\n                    1 - maxPosBuf.get(b, dyR, dyC, d);\n                const curPos = wR * effectiveFilterWidth + wC;\n\n                const mask = maxPos === curPos ? 1 : 0;\n                if (mask === 0) {\n                  continue;\n                }\n\n                const pixel = dyBuf.get(b, dyR, dyC, d);\n                dotProd += pixel * mask;\n              }\n            }\n            dx.set(dotProd, b, dxR, dxC, d);\n          }\n        }\n      }\n    }\n    return dx.toTensor();\n  }\n\n  avgPoolBackprop(dy: Tensor4D, x: Tensor4D, convInfo: Conv2DInfo): Tensor4D {\n    this.assertNotComplex([dy, x], 'avgPoolBackprop');\n\n    const strideHeight = convInfo.strideHeight;\n    const strideWidth = convInfo.strideWidth;\n    const filterHeight = convInfo.filterHeight;\n    const filterWidth = convInfo.filterWidth;\n    const dilationHeight = convInfo.dilationHeight;\n    const dilationWidth = convInfo.dilationWidth;\n    const effectiveFilterHeight = convInfo.effectiveFilterHeight;\n    const effectiveFilterWidth = convInfo.effectiveFilterWidth;\n    const padLeft = effectiveFilterWidth - 1 - convInfo.padInfo.left;\n    const padTop = effectiveFilterHeight - 1 - convInfo.padInfo.top;\n    const dx = ops.buffer<Rank.R4>(x.shape, 'float32');\n\n    const avgMultiplier = 1 / (filterHeight * filterWidth);\n\n    const dyBuf = this.bufferSync(dy);\n\n    for (let b = 0; b < convInfo.batchSize; ++b) {\n      for (let d = 0; d < convInfo.inChannels; ++d) {\n        for (let dxR = 0; dxR < convInfo.inHeight; ++dxR) {\n          for (let dxC = 0; dxC < convInfo.inWidth; ++dxC) {\n            // Shader code begins.\n            const dyRCorner = dxR - padTop;\n            const dyCCorner = dxC - padLeft;\n            let dotProd = 0;\n            for (let wR = 0; wR < effectiveFilterHeight; wR += dilationHeight) {\n              const dyR = (dyRCorner + wR) / strideHeight;\n              if (dyR < 0 || dyR >= convInfo.outHeight ||\n                  Math.floor(dyR) !== dyR) {\n                continue;\n              }\n              for (let wC = 0; wC < effectiveFilterWidth; wC += dilationWidth) {\n                const dyC = (dyCCorner + wC) / strideWidth;\n                if (dyC < 0 || dyC >= convInfo.outWidth ||\n                    Math.floor(dyC) !== dyC) {\n                  continue;\n                }\n\n                const pixel = dyBuf.get(b, dyR, dyC, d);\n                dotProd += pixel;\n              }\n            }\n            dx.set(dotProd * avgMultiplier, b, dxR, dxC, d);\n          }\n        }\n      }\n    }\n    return dx.toTensor();\n  }\n\n  cast<T extends Tensor>(x: T, dtype: DataType): T {\n    return backend_util.castTensor(x, dtype, this);\n  }\n\n  reshape<R extends Rank>(x: Tensor, shape: ShapeMap[R]): Tensor<R> {\n    return backend_util.reshapeTensor(x, shape);\n  }\n\n  avgPool(x: Tensor4D, convInfo: Conv2DInfo): Tensor4D {\n    this.assertNotComplex(x, 'avgPool');\n\n    return this.pool(x, convInfo, 'avg').toFloat();\n  }\n\n  resizeBilinear(\n      x: Tensor4D, newHeight: number, newWidth: number,\n      alignCorners: boolean): Tensor4D {\n    this.assertNotComplex(x, 'resizeBilinear');\n\n    const [batch, oldHeight, oldWidth, numChannels] = x.shape;\n    const xValues = this.readSync(x.dataId) as TypedArray;\n    const result = new Float32Array(\n        util.sizeFromShape([batch, newHeight, newWidth, numChannels]));\n\n    const effectiveInputSize: [number, number] = [\n      (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n      (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n    ];\n\n    const effectiveOutputSize: [number, number] = [\n      (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n      (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n    ];\n    let outputIdx = 0;\n    const effectiveRowSizeRatio =\n        effectiveInputSize[0] / effectiveOutputSize[0];\n    const effectiveColSizeRatio =\n        effectiveInputSize[1] / effectiveOutputSize[1];\n    for (let b = 0; b < batch; b++) {\n      for (let r = 0; r < newHeight; r++) {\n        const sourceFracRow = effectiveRowSizeRatio * r;\n        const sourceRowFloor = Math.floor(sourceFracRow);\n        const rowFrac = sourceFracRow - sourceRowFloor;\n        const sourceRowCeil = Math.min(oldHeight - 1, Math.ceil(sourceFracRow));\n        const topRowOffset = b * x.strides[0] + sourceRowFloor * x.strides[1];\n        const botRowOffset = b * x.strides[0] + sourceRowCeil * x.strides[1];\n        for (let c = 0; c < newWidth; c++) {\n          const sourceFracCol = effectiveColSizeRatio * c;\n          const sourceColFloor = Math.floor(sourceFracCol);\n          const colFrac = sourceFracCol - sourceColFloor;\n          const sourceColCeil =\n              Math.min(oldWidth - 1, Math.ceil(sourceFracCol));\n          const topLeftOffest = topRowOffset + sourceColFloor * x.strides[2];\n          const botLeftOffset = botRowOffset + sourceColFloor * x.strides[2];\n          const topRightOffset = topRowOffset + +sourceColCeil * x.strides[2];\n          const botRightOffest = botRowOffset + sourceColCeil * x.strides[2];\n          for (let d = 0; d < numChannels; d++) {\n            // Begin shader.\n\n            // Compute the fractional index of the source.\n            const topLeft = xValues[topLeftOffest + d];\n            const bottomLeft = xValues[botLeftOffset + d];\n            const topRight = xValues[topRightOffset + d];\n            const bottomRight = xValues[botRightOffest + d];\n\n            const top = topLeft + (topRight - topLeft) * colFrac;\n            const bottom = bottomLeft + (bottomRight - bottomLeft) * colFrac;\n            const newValue = top + (bottom - top) * rowFrac;\n\n            result[outputIdx++] = newValue;\n          }\n        }\n      }\n    }\n    return ops.tensor(result, [batch, newHeight, newWidth, numChannels]);\n  }\n\n  resizeBilinearBackprop(dy: Tensor4D, x: Tensor4D, alignCorners: boolean) {\n    this.assertNotComplex([dy, x], 'resizeBilinearBackprop');\n\n    const [batch, xHeight, xWidth, depth] = x.shape;\n    const [, yHeight, yWidth] = dy.shape;\n\n    const output = new Float32Array(batch * xHeight * xWidth * depth);\n\n    // In the backwards pass, we want to find the pixels that were generated\n    // for each pixel in the input image the forward pass and add the\n    // corresponding coefficient from dy to the gradient (with some\n    // interpolation).\n\n    const effectiveXSize: [number, number] = [\n      (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n      (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n    ];\n\n    const effectiveYSize: [number, number] = [\n      (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n      (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n    ];\n\n    const heightScale = effectiveXSize[0] / effectiveYSize[0];\n    const widthScale = effectiveXSize[1] / effectiveYSize[1];\n\n    // Reference implementation\n    // tslint:disable-next-line:max-line-length\n    // https://github.com/tensorflow/tensorflow/blob/3039375c86a5bbc9610c7725dcaa95d635f87ba2/tensorflow/core/kernels/resize_bilinear_op.cc#L275\n\n    const dyValues = this.readSync(dy.dataId) as TypedArray;\n    let offset = 0;\n    for (let b = 0; b < batch; b++) {\n      const bOffset = b * x.strides[0];\n      for (let r = 0; r < yHeight; r++) {\n        const dxR = r * heightScale;\n        const topDxRIndex = Math.floor(dxR);\n        const bottomDxRIndex = Math.min(Math.ceil(dxR), xHeight - 1);\n\n        const topDxROffset = bOffset + topDxRIndex * x.strides[1];\n        const bottomDxROffset = bOffset + bottomDxRIndex * x.strides[1];\n\n        const dxRLerp = dxR - topDxRIndex;\n        const inverseDxRLerp = 1.0 - dxRLerp;\n        for (let c = 0; c < yWidth; c++) {\n          const dxC = c * widthScale;\n          const leftDxCIndex = Math.floor(dxC);\n          const rightDxCIndex = Math.min(Math.ceil(dxC), xWidth - 1);\n          const dxCLerp = dxC - leftDxCIndex;\n          const inverseDxCLerp = 1.0 - dxCLerp;\n\n          const topLeftRCOffset = topDxROffset + leftDxCIndex * x.strides[2];\n          const topRightRCOffset = topDxROffset + rightDxCIndex * x.strides[2];\n          const bottomLeftRCOffset =\n              bottomDxROffset + leftDxCIndex * x.strides[2];\n          const bottomRightRCOffset =\n              bottomDxROffset + rightDxCIndex * x.strides[2];\n\n          const inverseDxRLerpTimesInverseDxCLerp =\n              inverseDxRLerp * inverseDxCLerp;\n          const inverseDxRLerpTimesDxCLerp = inverseDxRLerp * dxCLerp;\n          const dxRLerpTimesInverseDxCLerp = dxRLerp * inverseDxCLerp;\n          const dxRLerpTimesDxCLerp = dxRLerp * dxCLerp;\n          for (let d = 0; d < depth; d++) {\n            const dyVal = dyValues[offset++];\n            output[topLeftRCOffset + d] +=\n                dyVal * inverseDxRLerpTimesInverseDxCLerp;\n            output[topRightRCOffset + d] += dyVal * inverseDxRLerpTimesDxCLerp;\n            output[bottomLeftRCOffset + d] +=\n                dyVal * dxRLerpTimesInverseDxCLerp;\n            output[bottomRightRCOffset + d] += dyVal * dxRLerpTimesDxCLerp;\n          }\n        }\n      }\n    }\n    return ops.tensor4d(output, [batch, xWidth, xHeight, depth], x.dtype);\n  }\n\n  resizeNearestNeighbor(\n      x: Tensor4D, newHeight: number, newWidth: number,\n      alignCorners: boolean): Tensor4D {\n    this.assertNotComplex(x, 'resizeNearestNeighbor');\n\n    const [batch, oldHeight, oldWidth, numChannels] = x.shape;\n    const xValues = this.readSync(x.dataId) as TypedArray;\n    const output = new Float32Array(batch * newHeight * newWidth * numChannels);\n\n    const effectiveInputSize: [number, number] = [\n      (alignCorners && newHeight > 1) ? oldHeight - 1 : oldHeight,\n      (alignCorners && newWidth > 1) ? oldWidth - 1 : oldWidth\n    ];\n\n    const effectiveOutputSize: [number, number] = [\n      (alignCorners && newHeight > 1) ? newHeight - 1 : newHeight,\n      (alignCorners && newWidth > 1) ? newWidth - 1 : newWidth\n    ];\n\n    const effectiveRowSizeRatio =\n        effectiveInputSize[0] / effectiveOutputSize[0];\n    const effectiveColSizeRatio =\n        effectiveInputSize[1] / effectiveOutputSize[1];\n\n    let outputOffset = 0;\n    for (let b = 0; b < batch; b++) {\n      const batchOffset = b * x.strides[0];\n      for (let r = 0; r < newHeight; r++) {\n        const sourceFracRow = effectiveRowSizeRatio * r;\n        const sourceNearestRow = Math.min(\n            oldHeight - 1,\n            alignCorners ? Math.round(sourceFracRow) :\n                           Math.floor(sourceFracRow));\n        const rowOffset = batchOffset + sourceNearestRow * x.strides[1];\n        for (let c = 0; c < newWidth; c++) {\n          const sourceFracCol = effectiveColSizeRatio * c;\n          const sourceNearestCol = Math.min(\n              oldWidth - 1,\n              alignCorners ? Math.round(sourceFracCol) :\n                             Math.floor(sourceFracCol));\n          const colOffset = rowOffset + sourceNearestCol * x.strides[2];\n          for (let d = 0; d < numChannels; d++) {\n            // Begin shader.\n            // Compute the fractional index of the source.\n            const newVal = xValues[colOffset + d];\n            output[outputOffset++] = newVal;\n          }\n        }\n      }\n    }\n    return ops.tensor(\n        output, [batch, newHeight, newWidth, numChannels], x.dtype);\n  }\n\n  resizeNearestNeighborBackprop(\n      dy: Tensor4D, x: Tensor4D, alignCorners: boolean) {\n    this.assertNotComplex([dy, x], 'resizeNearestNeighborBackprop');\n\n    const [batch, xHeight, xWidth, depth] = x.shape;\n    const [, yHeight, yWidth] = dy.shape;\n\n    const output = new Float32Array(batch * xHeight * xWidth * depth);\n    const dyValues = this.readSync(dy.dataId) as TypedArray;\n\n    // In the backwards pass, we want to find the pixels that were generated\n    // for each pixel in the input image the forward pass\n\n    const effectiveXSize: [number, number] = [\n      (alignCorners && yHeight > 1) ? xHeight - 1 : xHeight,\n      (alignCorners && yWidth > 1) ? xWidth - 1 : xWidth\n    ];\n\n    const effectiveYSize: [number, number] = [\n      (alignCorners && yHeight > 1) ? yHeight - 1 : yHeight,\n      (alignCorners && yWidth > 1) ? yWidth - 1 : yWidth\n    ];\n\n    const heightScale = effectiveXSize[0] / effectiveYSize[0];\n    const widthScale = effectiveXSize[1] / effectiveYSize[1];\n\n    const invHeightScale = 1 / heightScale;\n    const invWidthScale = 1 / widthScale;\n\n    // This defines the size of the window of values around a particular\n    // index in dy that we want to search for contributions to dx.\n    const winHeight = (Math.ceil(invHeightScale) * 2) + 2;\n    const winWidth = (Math.ceil(invWidthScale) * 2) + 2;\n\n    // Loop over the output space.\n    for (let b = 0; b < batch; b++) {\n      const batchOffset = b * x.strides[0];\n      for (let r = 0; r < xHeight; r++) {\n        const rowOffset = batchOffset + r * x.strides[1];\n\n        // Compute bounds for where in dy we will look\n        const startRLerp = Math.floor(r * invHeightScale);\n        const startDyR = Math.floor(startRLerp - (winHeight / 2));\n        for (let c = 0; c < xWidth; c++) {\n          const colOffset = rowOffset + c * x.strides[2];\n\n          // Compute bounds for where in dy we will look\n          const startCLerp = Math.floor(c * invWidthScale);\n          const startDyC = Math.floor(startCLerp - (winWidth / 2));\n\n          for (let d = 0; d < depth; d++) {\n            let accum = 0;\n            // loop over dy\n\n            for (let dyRIndex = 0; dyRIndex < winHeight; dyRIndex++) {\n              const dyR = dyRIndex + startDyR;\n              // Guard against the window exceeding the bounds of dy\n              if (dyR < 0 || dyR >= yHeight) {\n                continue;\n              }\n\n              const dyROffset = batchOffset + dyR * dy.strides[1];\n              const sourceFracRow = dyR * heightScale;\n              const sourceNearestRow = Math.min(\n                  xHeight - 1,\n                  alignCorners ? Math.round(sourceFracRow) :\n                                 Math.floor(sourceFracRow));\n              if (r !== sourceNearestRow) {\n                continue;\n              }\n              for (let dyCIndex = 0; dyCIndex < winWidth; dyCIndex++) {\n                const dyC = dyCIndex + startDyC;\n                // Guard against the window exceeding the bounds of dy\n                if (dyC < 0 || dyC >= yWidth) {\n                  continue;\n                }\n\n                const dyCOffset = dyROffset + dyC * dy.strides[2];\n                const sourceFracCol = dyC * widthScale;\n                const sourceNearestCol = Math.min(\n                    xWidth - 1,\n                    alignCorners ? Math.round(sourceFracCol) :\n                                   Math.floor(sourceFracCol));\n\n                if (c === sourceNearestCol) {\n                  accum += dyValues[dyCOffset + d];\n                }\n              }\n            }\n            output[colOffset + d] = accum;\n          }\n        }\n      }\n    }\n    return ops.tensor4d(output, x.shape, x.dtype);\n  }\n\n  batchNormalization(\n      x: Tensor4D, mean: Tensor4D|Tensor1D, variance: Tensor4D|Tensor1D,\n      varianceEpsilon: number, scale?: Tensor4D|Tensor1D,\n      offset?: Tensor4D|Tensor1D): Tensor4D {\n    this.assertNotComplex([x, mean, variance, scale, offset], 'batchNorm');\n\n    const xVals = this.readSync(x.dataId) as TypedArray;\n    const mVals = this.readSync(mean.dataId) as TypedArray;\n    const varVals = this.readSync(variance.dataId) as TypedArray;\n    const sVals = scale ? this.readSync(scale.dataId) as TypedArray :\n                          new Float32Array([1]);\n    const offVals = offset ? this.readSync(offset.dataId) as TypedArray :\n                             new Float32Array([0]);\n    const outVals = new Float32Array(xVals.length);\n\n    const offValsLength = offVals.length;\n    const sValsLength = sVals.length;\n    const varValsLength = varVals.length;\n    const mValsLength = mVals.length;\n\n    let offi = 0;\n    let mi = 0;\n    let si = 0;\n    let vi = 0;\n    for (let i = 0; i < xVals.length; ++i) {\n      outVals[i] = offVals[offi++] +\n          (xVals[i] - mVals[mi++]) * sVals[si++] /\n              Math.sqrt(varVals[vi++] + varianceEpsilon);\n      if (offi >= offValsLength) {\n        offi = 0;\n      }\n      if (mi >= mValsLength) {\n        mi = 0;\n      }\n      if (si >= sValsLength) {\n        si = 0;\n      }\n      if (vi >= varValsLength) {\n        vi = 0;\n      }\n    }\n    return tensor4d(outVals, x.shape);\n  }\n\n  localResponseNormalization4D(\n      x: Tensor4D, depthRadius: number, bias: number, alpha: number,\n      beta: number): Tensor4D {\n    this.assertNotComplex(x, 'localResponseNormalization4D');\n\n    const channels = x.shape[3];\n    const maxD = channels - 1;\n    const xValues = this.readSync(x.dataId) as TypedArray;\n    const size = x.size;\n    const result = new Float32Array(size);\n\n    function sumAcrossChannels(offset: number) {\n      const currentChannel = offset % channels;\n      let beginSumOffset =\n          offset - currentChannel + Math.max(0, currentChannel - depthRadius);\n      const endSumOffset = offset - currentChannel +\n          Math.min(currentChannel + depthRadius, maxD);\n\n      let sum = 0.0;\n      for (; beginSumOffset <= endSumOffset; beginSumOffset++) {\n        const z = xValues[beginSumOffset];\n        sum += z * z;\n      }\n      return sum;\n    }\n\n    for (let offset = 0; offset < size; offset++) {\n      const sum = sumAcrossChannels(offset);\n      const val = xValues[offset] * Math.pow(bias + alpha * sum, -beta);\n      result[offset] = val;\n    }\n\n    return ops.tensor4d(result, x.shape);\n  }\n\n  LRNGrad(\n      dy: Tensor4D, inputImage: Tensor4D, outputImage: Tensor4D,\n      depthRadius: number, bias: number, alpha: number,\n      beta: number): Tensor4D {\n    this.assertNotComplex(dy, 'LRNGrad');\n    const channels = dy.shape[3];\n    const dyValues = this.readSync(dy.dataId) as TypedArray;\n    const inputImageValues = this.readSync(inputImage.dataId) as TypedArray;\n    const outputImageValues = this.readSync(outputImage.dataId) as TypedArray;\n    const result = new Float32Array(dy.size);\n    const size = dy.size;\n\n    for (let offset = 0; offset < size; offset++) {\n      const currentChannel = offset % channels;\n      const depthBegin =\n          (offset - currentChannel) + Math.max(0, currentChannel - depthRadius);\n      const depthEnd = (offset - currentChannel) +\n          Math.min(channels, currentChannel + depthRadius + 1);\n\n      let norm = 0;\n      for (let k = depthBegin; k < depthEnd; k++) {\n        norm += Math.pow(inputImageValues[k], 2);\n      }\n      norm = alpha * norm + bias;\n\n      for (let k = depthBegin; k < depthEnd; k++) {\n        let dyi = -2 * alpha * beta * inputImageValues[k] *\n            outputImageValues[offset] / norm;\n        if (offset === k) {\n          dyi += Math.pow(norm, -beta);\n        }\n        dyi *= dyValues[offset];\n        result[k] += dyi;\n      }\n    }\n    return ops.tensor4d(result, dy.shape);\n  }\n\n  multinomial(\n      logits: Tensor2D, normalized: boolean, numSamples: number,\n      seed: number): Tensor2D {\n    this.assertNotComplex(logits, 'multinomial');\n\n    const probabilities = normalized ? logits : ops.softmax(logits);\n    const batchSize = probabilities.shape[0];\n    const numEvents = probabilities.shape[1];\n    const res = ops.zeros<Rank.R2>([batchSize, numSamples], 'int32');\n    const resVals = this.readSync(res.dataId) as TypedArray;\n    const probVals = this.readSync(probabilities.dataId) as TypedArray;\n\n    for (let b = 0; b < batchSize; ++b) {\n      const offset = b * numEvents;\n      // The cdf won't include the last event. It will be implicit if no other\n      // event happened.\n      const cdf = new Float32Array(numEvents - 1);\n      cdf[0] = probVals[offset];\n      for (let event = 1; event < cdf.length; ++event) {\n        cdf[event] = cdf[event - 1] + probVals[offset + event];\n      }\n\n      const random = seedrandom.alea(seed.toString());\n      const outOffset = b * numSamples;\n      for (let sampleId = 0; sampleId < numSamples; ++sampleId) {\n        const r = random();\n\n        // Assume last event happened by default.\n        resVals[outOffset + sampleId] = cdf.length;\n\n        for (let event = 0; event < cdf.length; event++) {\n          if (r < cdf[event]) {\n            resVals[outOffset + sampleId] = event;\n            break;\n          }\n        }\n      }\n    }\n    return res;\n  }\n\n  oneHot(indices: Tensor1D, depth: number, onValue: number, offValue: number):\n      Tensor2D {\n    this.assertNotComplex(indices, 'oneHot');\n\n    const res = new Float32Array(indices.size * depth);\n    res.fill(offValue);\n    const indicesVal = this.readSync(indices.dataId) as TypedArray;\n\n    for (let event = 0; event < indices.size; ++event) {\n      if (indicesVal[event] >= 0 && indicesVal[event] < depth) {\n        res[event * depth + indicesVal[event]] = onValue;\n      }\n    }\n    return ops.tensor2d(res, [indices.size, depth], 'int32');\n  }\n\n  nonMaxSuppression(\n      boxes: Tensor2D, scores: Tensor1D, maxOutputSize: number,\n      iouThreshold: number, scoreThreshold: number): Tensor1D {\n    this.assertNotComplex(boxes, 'nonMaxSuppression');\n\n    const boxesVals = this.readSync(boxes.dataId) as TypedArray;\n    const scoresVals = this.readSync(scores.dataId) as TypedArray;\n    return nonMaxSuppressionImpl(\n        boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n  }\n\n  fft(x: Tensor2D): Tensor2D {\n    return this.fftBatch(x, false);\n  }\n\n  ifft(x: Tensor2D): Tensor2D {\n    return this.fftBatch(x, true);\n  }\n\n  /**\n   * Calculate FFT of inner most elements of batch tensor.\n   */\n  private fftBatch(x: Tensor2D, inverse: boolean): Tensor2D {\n    const batch = x.shape[0];\n    const innerDim = x.shape[1];\n    // Collects real and imaginary values separately.\n    const realResult = ops.buffer(x.shape, 'float32');\n    const imagResult = ops.buffer(x.shape, 'float32');\n\n    const real = ops.real(x).as2D(batch, innerDim);\n    const imag = ops.imag(x).as2D(batch, innerDim);\n\n    for (let b = 0; b < batch; b++) {\n      // TODO: Support slice ops for complex type.\n      const r = real.slice([b, 0], [1, innerDim]);\n      const i = imag.slice([b, 0], [1, innerDim]);\n      const input = ops.complex(r, i);\n      // Run FFT by batch element.\n      const res =\n          this.readSync(this.fftImpl(input, inverse).dataId) as Float32Array;\n      for (let d = 0; d < innerDim; d++) {\n        const c = complex_util.getComplexWithIndex(res, d);\n        realResult.values[b * innerDim + d] = c.real;\n        imagResult.values[b * innerDim + d] = c.imag;\n      }\n    }\n\n    const t = ops.complex(realResult.toTensor(), imagResult.toTensor());\n    return t.as2D(batch, innerDim);\n  }\n\n  private fftImpl(x: Tensor2D, inverse: boolean): Tensor2D {\n    const x1D = x.as1D();\n\n    const n = x1D.size;\n\n    if (this.isExponentOf2(n)) {\n      let result = this.fftRadix2(x1D, n, inverse).as2D(x.shape[0], x.shape[1]);\n      if (inverse) {\n        result = ops.complex(\n                     ops.real(result).div(scalar(n)),\n                     ops.imag(result).div(scalar(n))) as Tensor2D;\n      }\n      return result;\n    } else {\n      const data = this.readSync(x.dataId) as TypedArray;\n      const rawOutput =\n          this.fourierTransformByMatmul(data, n, inverse) as Float32Array;\n      const output = complex_util.splitRealAndImagArrays(rawOutput);\n      return ops.complex(output.real, output.imag).as2D(x.shape[0], x.shape[1]);\n    }\n  }\n\n  private isExponentOf2(size: number): boolean {\n    return (size & size - 1) === 0;\n  }\n\n  // FFT using Cooley-Tukey algorithm on radix 2 dimensional input.\n  private fftRadix2(input: Tensor1D, size: number, inverse: boolean): Tensor1D {\n    if (size === 1) {\n      return input;\n    }\n    const data = this.readSync(input.dataId) as TypedArray as Float32Array;\n    const half = size / 2;\n    const evenComplex = complex_util.complexWithEvenIndex(data);\n    let evenTensor = ops.complex(evenComplex.real, evenComplex.imag).as1D();\n    const oddComplex = complex_util.complexWithOddIndex(data);\n    let oddTensor = ops.complex(oddComplex.real, oddComplex.imag).as1D();\n\n    // Recursive call for half part of original input.\n    evenTensor = this.fftRadix2(evenTensor, half, inverse);\n    oddTensor = this.fftRadix2(oddTensor, half, inverse);\n\n    const e = complex_util.exponents(size, inverse);\n    const exponent = ops.complex(e.real, e.imag).mul(oddTensor);\n\n    const addPart = evenTensor.add(exponent);\n    const subPart = evenTensor.sub(exponent);\n\n    const realTensor = ops.real(addPart).concat(ops.real(subPart));\n    const imagTensor = ops.imag(addPart).concat(ops.imag(subPart));\n\n    return ops.complex(realTensor, imagTensor).as1D();\n  }\n\n  // Calculate fourier transform by multplying sinusoid matrix.\n  private fourierTransformByMatmul(\n      data: TypedArray, size: number, inverse: boolean): TypedArray {\n    const ret = new Float32Array(size * 2);\n    // TODO: Use matmul instead once it supports complex64 type.\n    for (let r = 0; r < size; r++) {\n      let real = 0.0;\n      let imag = 0.0;\n      for (let c = 0; c < size; c++) {\n        const e = complex_util.exponent(r * c, size, inverse);\n        const term = complex_util.getComplexWithIndex(data as Float32Array, c);\n        real += term.real * e.real - term.imag * e.imag;\n        imag += term.real * e.imag + term.imag * e.real;\n      }\n      if (inverse) {\n        real /= size;\n        imag /= size;\n      }\n      complex_util.assignToTypedArray(ret, real, imag, r);\n    }\n    return ret;\n  }\n\n  depthToSpace(x: Tensor4D, blockSize: number, dataFormat: 'NHWC'|'NCHW'):\n      Tensor4D {\n    util.assert(\n        dataFormat === 'NHWC',\n        () => `Only NHWC dataFormat supported on CPU for depthToSpace. Got ${\n            dataFormat}`);\n    util.assert(\n        blockSize > 1,\n        () =>\n            `blockSize should be > 1 for depthToSpace, but was: ${blockSize}`);\n\n    const batchSize = x.shape[0];\n    const inputHeight = x.shape[1];\n    const inputWidth = x.shape[2];\n    const inputDepth = x.shape[3];\n\n    const outputHeight = inputHeight * blockSize;\n    const outputWidth = inputWidth * blockSize;\n    const outputDepth = inputDepth / (blockSize * blockSize);\n\n    const xValues = this.readSync(x.dataId) as TypedArray;\n    const result =\n        new Float32Array(batchSize * outputHeight * outputWidth * outputDepth);\n\n    let outputIdx = 0;\n    for (let b = 0; b < batchSize; ++b) {\n      for (let h = 0; h < outputHeight; ++h) {\n        const inH = Math.floor(h / blockSize);\n        const offsetH = (h % blockSize);\n        for (let w = 0; w < outputWidth; ++w) {\n          const inW = Math.floor(w / blockSize);\n          const offsetW = (w % blockSize);\n          const offsetD = (offsetH * blockSize + offsetW) * outputDepth;\n          for (let d = 0; d < outputDepth; ++d) {\n            const inD = d + offsetD;\n            const inputIdx =\n                inD + inputDepth * (inW + inputWidth * (inH + inputHeight * b));\n            result[outputIdx++] = xValues[inputIdx];\n          }\n        }\n      }\n    }\n    return ops.tensor4d(\n        result, [batchSize, outputHeight, outputWidth, outputDepth]);\n  }\n\n  private broadcastedBinaryOp(\n      a: Tensor, b: Tensor, dtype: DataType,\n      op: (a: number, b: number) => number): Tensor {\n    const newShape =\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    const result = ops.buffer(newShape, dtype);\n    const aVals = this.readSync(a.dataId) as TypedArray;\n    const bVals = this.readSync(b.dataId) as TypedArray;\n    const aBroadcastDims = broadcast_util.getBroadcastDims(a.shape, newShape);\n    const bBroadcastDims = broadcast_util.getBroadcastDims(b.shape, newShape);\n\n    const resVals = result.values;\n    if (aBroadcastDims.length + bBroadcastDims.length === 0) {\n      for (let i = 0; i < resVals.length; ++i) {\n        resVals[i] = op(aVals[i % aVals.length], bVals[i % bVals.length]);\n      }\n    } else {\n      const aBuf = this.bufferSync(a);\n      const bBuf = this.bufferSync(b);\n      for (let i = 0; i < resVals.length; ++i) {\n        const loc = result.indexToLoc(i);\n\n        const aLoc = loc.slice(-a.rank);\n        aBroadcastDims.forEach(d => aLoc[d] = 0);\n        const aIndex = aBuf.locToIndex(aLoc);\n\n        const bLoc = loc.slice(-b.rank);\n        bBroadcastDims.forEach(d => bLoc[d] = 0);\n        const bIndex = bBuf.locToIndex(bLoc);\n\n        resVals[i] = op(aVals[aIndex], bVals[bIndex]);\n      }\n    }\n    return result.toTensor();\n  }\n\n  private broadcastedBinaryComplexOp(\n      a: Tensor, b: Tensor,\n      op:\n          (aReal: number, aImag: number, bReal: number,\n           bImag: number) => {real: number, imag: number}): Tensor {\n    const newShape =\n        broadcast_util.assertAndGetBroadcastShape(a.shape, b.shape);\n    const realResult = ops.buffer(newShape, 'float32');\n    const imagResult = ops.buffer(newShape, 'float32');\n\n    const aVals = this.readSync(a.dataId) as TypedArray;\n    const bVals = this.readSync(b.dataId) as TypedArray;\n    const aBroadcastDims = broadcast_util.getBroadcastDims(a.shape, newShape);\n    const bBroadcastDims = broadcast_util.getBroadcastDims(b.shape, newShape);\n\n    const realVals = realResult.values;\n    const imagVals = imagResult.values;\n\n    if (aBroadcastDims.length + bBroadcastDims.length === 0) {\n      for (let i = 0; i < realVals.length; i++) {\n        const aIdx = i % aVals.length;\n        const bIdx = i % bVals.length;\n\n        const result =\n            op(aVals[aIdx * 2], aVals[aIdx * 2 + 1], bVals[bIdx * 2],\n               bVals[bIdx * 2 + 1]);\n\n        realVals[i] = result.real;\n        imagVals[i] = result.imag;\n      }\n    } else {\n      const aRealBuf =\n          this.bufferSync(this.data.get(a.dataId).complexTensors.real);\n      const bRealBuf =\n          this.bufferSync(this.data.get(b.dataId).complexTensors.real);\n      for (let i = 0; i < realVals.length; i++) {\n        const loc = realResult.indexToLoc(i);\n\n        const aLoc = loc.slice(-a.rank);\n        aBroadcastDims.forEach(d => aLoc[d] = 0);\n        const aIndex = aRealBuf.locToIndex(aLoc);\n\n        const bLoc = loc.slice(-b.rank);\n        bBroadcastDims.forEach(d => bLoc[d] = 0);\n        const bIndex = bRealBuf.locToIndex(bLoc);\n\n        const opResult =\n            op(aVals[aIndex * 2], aVals[aIndex * 2 + 1], bVals[bIndex * 2],\n               bVals[bIndex * 2 + 1]);\n\n        realVals[i] = opResult.real;\n        imagVals[i] = opResult.imag;\n      }\n    }\n    return this.complex(realResult.toTensor(), imagResult.toTensor());\n  }\n\n  split<T extends Tensor>(x: T, sizeSplits: number[], axis: number): T[] {\n    return split(x, sizeSplits, axis);\n  }\n\n  dispose() {}\n\n  floatPrecision(): 16|32 {\n    return 32;\n  }\n  /** Returns the smallest representable number.  */\n  epsilon(): number {\n    return EPSILON_FLOAT32;\n  }\n\n  cropAndResize(\n      images: Tensor4D,\n      boxes: Tensor2D,\n      boxIndex: Tensor1D,\n      cropSize: [number, number],\n      method: string,\n      extrapolationValue: number,\n  ) {\n    const [batch, imageHeight, imageWidth, numChannels] = images.shape;\n    const numBoxes = boxes.shape[0];\n\n    const [cropHeight, cropWidth] = cropSize;\n    const output = ops.buffer(\n        [numBoxes, cropHeight, cropWidth, numChannels], images.dtype);\n\n    const boxVals = this.readSync(boxes.dataId) as TypedArray;\n    const boxIndVals = this.readSync(boxIndex.dataId) as TypedArray;\n    const imageVals = this.readSync(images.dataId) as TypedArray;\n\n    const inStride = images.strides;   // to calculate flat indexes into image\n    const outStride = output.strides;  // to calculate flat indexes into output\n\n    // Reference implementation\n    // tslint:disable-next-line:max-line-length\n    // https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/crop_and_resize_op.cc\n    for (let b = 0; b < numBoxes; b++) {\n      const startInd = b * 4;\n      const y1 = boxVals[startInd];\n      const x1 = boxVals[startInd + 1];\n      const y2 = boxVals[startInd + 2];\n      const x2 = boxVals[startInd + 3];\n\n      const bInd: number = boxIndVals[b];\n      if (bInd >= batch) {\n        continue;\n      }\n\n      const heightScale = (cropHeight > 1) ?\n          (y2 - y1) * (imageHeight - 1) / (cropHeight - 1) :\n          0;\n      const widthScale =\n          (cropWidth > 1) ? (x2 - x1) * (imageWidth - 1) / (cropWidth - 1) : 0;\n\n      for (let y = 0; y < cropHeight; y++) {\n        const yInd: number = (cropHeight > 1) ?\n            y1 * (imageHeight - 1) + y * (heightScale) :\n            0.5 * (y1 + y2) * (imageHeight - 1);\n\n        if (yInd < 0 || yInd > imageHeight - 1) {\n          for (let x = 0; x < cropWidth; x++) {\n            for (let c = 0; c < numChannels; c++) {\n              const ind =\n                  c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n              output.values[ind] = extrapolationValue;\n            }\n          }\n          continue;\n        }\n\n        if (method === 'bilinear') {\n          const topInd = Math.floor(yInd);\n          const bottomInd = Math.ceil(yInd);\n          const yLerp = yInd - topInd;\n\n          for (let x = 0; x < cropWidth; x++) {\n            const xInd = (cropWidth > 1) ?\n                x1 * (imageWidth - 1) + x * widthScale :\n                0.5 * (x1 + x2) * (imageWidth - 1);\n\n            if (xInd < 0 || xInd > imageWidth - 1) {\n              for (let c = 0; c < numChannels; c++) {\n                const ind =\n                    c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n                output.values[ind] = extrapolationValue;\n              }\n              continue;\n            }\n\n            const leftInd = Math.floor(xInd);\n            const rightInd = Math.ceil(xInd);\n            const xLerp = xInd - leftInd;\n\n            for (let c = 0; c < numChannels; c++) {\n              let ind = c + leftInd * inStride[2] + topInd * inStride[1] +\n                  bInd * inStride[0];\n              const topLeft = imageVals[ind];\n\n              ind = c + rightInd * inStride[2] + topInd * inStride[1] +\n                  bInd * inStride[0];\n              const topRight = imageVals[ind];\n\n              ind = c + leftInd * inStride[2] + bottomInd * inStride[1] +\n                  bInd * inStride[0];\n              const bottomLeft = imageVals[ind];\n\n              ind = c + rightInd * inStride[2] + bottomInd * inStride[1] +\n                  bInd * inStride[0];\n              const bottomRight = imageVals[ind];\n\n              const top = topLeft + (topRight - topLeft) * xLerp;\n              const bottom = bottomLeft + (bottomRight - bottomLeft) * xLerp;\n\n              ind = c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n              output.values[ind] = top + ((bottom - top) * yLerp);\n            }\n          }\n        } else {  // method == \"nearest\"\n          for (let x = 0; x < cropWidth; ++x) {\n            const xInd = (cropWidth > 1) ?\n                x1 * (imageWidth - 1) + x * widthScale :\n                0.5 * (x1 + x2) * (imageWidth - 1);\n\n            if (xInd < 0 || xInd > imageWidth - 1) {\n              for (let c = 0; c < numChannels; c++) {\n                const ind =\n                    c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n                output.values[ind] = extrapolationValue;\n              }\n              continue;\n            }\n\n            const closestX = Math.round(xInd);\n            const closestY = Math.round(yInd);\n            for (let c = 0; c < numChannels; c++) {\n              const inInd = c + closestX * inStride[2] +\n                  closestY * inStride[1] + bInd * inStride[0];\n              const outInd =\n                  c + x * outStride[2] + y * outStride[1] + b * outStride[0];\n              output.values[outInd] = imageVals[inInd];\n            }\n          }\n        }\n      }\n    }\n    return output.toTensor() as Tensor4D;\n  }\n\n  sparseToDense<R extends Rank>(\n      sparseIndices: Tensor, sparseValues: Tensor, outputShape: ShapeMap[R],\n      defaultValue: Scalar): Tensor<R> {\n    const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n        scatter_nd_util.calculateShapes(\n            sparseValues, sparseIndices, outputShape);\n    const sumDupeIndices = false;\n    return this.scatter(\n        sparseIndices, sparseValues, outputShape, outputSize, sliceSize,\n        numUpdates, sliceRank, strides, defaultValue, sumDupeIndices);\n  }\n\n  gatherND(x: Tensor, indices: Tensor): Tensor {\n    const indicesShape = indices.shape;\n    const sliceRank = indicesShape[indicesShape.length - 1];\n\n    const [resultShape, numSlices, sliceSize, strides] =\n        gather_nd_util.prepareAndValidate(x, indices);\n    if (numSlices === 0) {\n      return tensor([], resultShape, x.dtype);\n    }\n\n    const buffer = new TensorBuffer([numSlices, sliceSize], x.dtype);\n    const indicesData = this.readSync(indices.dataId) as TypedArray;\n    const xData = this.readSync(x.dataId) as TypedArray;\n\n    for (let i = 0; i < numSlices; i++) {\n      const index = [];\n      let flattenIndex = 0;\n      for (let j = 0; j < sliceRank; j++) {\n        const dim = indicesData[i * sliceRank + j];\n        flattenIndex += dim * strides[j];\n        index.push(dim);\n      }\n      if (flattenIndex < 0 || flattenIndex >= x.size / sliceSize) {\n        throw new Error(\n            `Invalid indices: ${index} does not index into ${x.shape}`);\n      }\n\n      for (let k = 0; k < sliceSize; k++) {\n        buffer.values[i * sliceSize + k] = xData[flattenIndex * sliceSize + k];\n      }\n    }\n    return buffer.toTensor().reshape(resultShape);\n  }\n\n  scatterND<R extends Rank>(\n      indices: Tensor, updates: Tensor, shape: ShapeMap[R]): Tensor<R> {\n    const {sliceRank, numUpdates, sliceSize, strides, outputSize} =\n        scatter_nd_util.calculateShapes(updates, indices, shape);\n    const defaultValue = scalar(0);\n    const sumDupeIndices = true;\n    return this.scatter(\n        indices, updates, shape, outputSize, sliceSize, numUpdates, sliceRank,\n        strides, defaultValue, sumDupeIndices);\n  }\n\n  fill<R extends Rank>(\n      shape: ShapeMap[R], value: number|string, dtype?: DataType): Tensor<R> {\n    dtype = dtype || inferDtype(value);\n    const values = getArrayFromDType(dtype, sizeFromShape(shape)) as TypedArray;\n    values.fill(value as number);\n    return Tensor.make(shape, {values}, dtype);\n  }\n\n  onesLike<R extends Rank>(x: Tensor<R>): Tensor<R> {\n    if (x.dtype === 'string') {\n      throw new Error('onesLike is not supported for string tensors');\n    } else {\n      return this.fill(x.shape, 1, x.dtype);\n    }\n  }\n\n  zerosLike<R extends Rank>(x: Tensor<R>): Tensor<R> {\n    const values =\n        getArrayFromDType(x.dtype, sizeFromShape(x.shape)) as TypedArray;\n    return Tensor.make(x.shape, {values}, x.dtype);\n  }\n\n  linspace(start: number, stop: number, num: number): Tensor1D {\n    return backend_util.linspaceImpl(start, stop, num);\n  }\n\n  private scatter<R extends Rank>(\n      indices: Tensor, updates: Tensor, shape: ShapeMap[R], outputSize: number,\n      sliceSize: number, numUpdates: number, sliceRank: number,\n      strides: number[], defaultValue: Scalar,\n      sumDupeIndices: boolean): Tensor<R> {\n    const flattenShape = [outputSize / sliceSize, sliceSize];\n\n    const indicesData = this.readSync(indices.dataId) as TypedArray;\n    const updatesData = this.readSync(updates.dataId) as TypedArray;\n\n    if (outputSize === 0) {\n      return tensor([], shape, updates.dtype);\n    }\n\n    const buffer = new TensorBuffer(flattenShape, updates.dtype as 'float32');\n    buffer.values.fill((this.readSync(defaultValue.dataId) as TypedArray)[0]);\n\n    for (let i = 0; i < numUpdates; i++) {\n      const index = [];\n      let flattenIndex = 0;\n      for (let j = 0; j < sliceRank; j++) {\n        const dim = indicesData[i * sliceRank + j];\n        index.push(dim);\n        flattenIndex += dim * strides[j];\n      }\n\n      if (flattenIndex < 0 || flattenIndex >= outputSize / sliceSize) {\n        throw new Error(\n            `Invalid indices: ${index} does not index into ${shape}`);\n      }\n\n      for (let k = 0; k < sliceSize; k++) {\n        if (sumDupeIndices) {\n          buffer.values[flattenIndex * sliceSize + k] +=\n              updatesData[i * sliceSize + k];\n        } else {\n          buffer.values[flattenIndex * sliceSize + k] = updates.rank === 0 ?\n              updatesData[0] :\n              updatesData[i * sliceSize + k];\n        }\n      }\n    }\n    return buffer.toTensor().reshape(shape);\n  }\n}\n\nENGINE.registerBackend('cpu', () => new MathBackendCPU(), 1 /* priority */);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const ERF_P = 0.3275911;\nexport const ERF_A1 = 0.254829592;\nexport const ERF_A2 = -0.284496736;\nexport const ERF_A3 = 1.421413741;\nexport const ERF_A4 = -1.453152027;\nexport const ERF_A5 = 1.061405429;\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENV} from '../environment';\nimport {Platform} from './platform';\n\nexport class PlatformBrowser implements Platform {\n  private textEncoder: TextEncoder;\n  private textDecoder: TextDecoder;\n\n  constructor() {\n    // The built-in encoder and the decoder use UTF-8 encoding.\n    this.textEncoder = new TextEncoder();\n    this.textDecoder = new TextDecoder();\n  }\n\n  encodeUTF8(text: string): Uint8Array {\n    return this.textEncoder.encode(text);\n  }\n  decodeUTF8(bytes: Uint8Array): string {\n    return this.textDecoder.decode(bytes);\n  }\n  fetch(path: string, init?: RequestInit): Promise<Response> {\n    return fetch(path, init);\n  }\n}\n\nif (ENV.get('IS_BROWSER')) {\n  ENV.setPlatform('browser', new PlatformBrowser());\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {ENV} from '../environment';\n\nimport {Platform} from './platform';\n\n// We are wrapping this within an object so it can be stubbed by Jasmine.\nexport const getNodeFetch = {\n  // tslint:disable-next-line:no-require-imports\n  importFetch: () => require('node-fetch')\n};\n\nexport let systemFetch: (url: string, init?: RequestInit) => Promise<Response>;\n\nexport class PlatformNode implements Platform {\n  private textEncoder: TextEncoder;\n  private textDecoder: TextDecoder;\n\n  constructor() {\n    // tslint:disable-next-line: no-require-imports\n    const util = require('util');\n    // The built-in encoder and the decoder use UTF-8 encoding.\n    this.textEncoder = new util.TextEncoder();\n    this.textDecoder = new util.TextDecoder();\n  }\n\n  encodeUTF8(text: string): Uint8Array {\n    return this.textEncoder.encode(text);\n  }\n  decodeUTF8(bytes: Uint8Array): string {\n    if (bytes.length === 0) {\n      return '';\n    }\n    return this.textDecoder.decode(bytes);\n  }\n  fetch(path: string, requestInits?: RequestInit): Promise<Response> {\n    if (ENV.global.fetch != null) {\n      return ENV.global.fetch(path, requestInits);\n    }\n\n    if (systemFetch == null) {\n      systemFetch = getNodeFetch.importFetch();\n    }\n    return systemFetch(path, requestInits);\n  }\n}\n\nif (ENV.get('IS_NODE')) {\n  ENV.setPlatform('node', new PlatformNode());\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/* Type definitions for exporting and importing of models. */\n\n/**\n * A map from Tensor dtype to number of bytes per element of the Tensor.\n */\nexport const DTYPE_VALUE_SIZE_MAP: {[dtype: string]: number} = {\n  'float32': 4,\n  'int32': 4,\n  'uint16': 2,\n  'uint8': 1,\n  'bool': 1,\n};\n\n/**\n * A weight manifest.\n *\n * The weight manifest consists of an ordered list of weight-manifest groups.\n * Each weight-manifest group (\"group\" for short hereafter) consists of a\n * number of weight values stored in a number of paths.\n * See the documentation of `WeightManifestGroupConfig` below for more details.\n */\nexport declare type WeightsManifestConfig = WeightsManifestGroupConfig[];\n\n/**\n * A weight-manifest group.\n *\n * Consists of an ordered list of weight values encoded in binary format,\n * stored in an ordered list of paths.\n */\nexport declare interface WeightsManifestGroupConfig {\n  /**\n   * An ordered list of paths.\n   *\n   * Paths are intentionally abstract in order to be general. For example, they\n   * can be relative URL paths or relative paths on the file system.\n   */\n  paths: string[];\n\n  /**\n   * Specifications of the weights stored in the paths.\n   */\n  weights: WeightsManifestEntry[];\n}\n\n/**\n * Group to which the weight belongs.\n *\n * - 'optimizer': Weight from a stateful optimizer.\n */\nexport type WeightGroup = 'model'|'optimizer';\n\n/**\n * An entry in the weight manifest.\n *\n * The entry contains specification of a weight.\n */\nexport declare interface WeightsManifestEntry {\n  /**\n   * Name of the weight, e.g., 'Dense_1/bias'\n   */\n  name: string;\n\n  /**\n   * Shape of the weight.\n   */\n  shape: number[];\n\n  /**\n   * Data type of the weight.\n   */\n  dtype: 'float32'|'int32'|'bool'|'string';\n\n  /**\n   * Type of the weight.\n   *\n   * Optional.\n   *\n   * The value 'optimizer' indicates the weight belongs to an optimizer\n   * (i.e., used only during model training and not during inference).\n   */\n  group?: WeightGroup;\n\n  /**\n   * Information for dequantization of the weight.\n   */\n  quantization?: {\n    scale: number,           // The scaling constant to multiply by.\n    min: number,             // The (possibly nudged) minimum weight to add.\n    dtype: 'uint16'|'uint8'  // The dtype of the quantized weights.\n  };\n}\n\nexport declare interface StringWeightsManifestEntry extends\n    WeightsManifestEntry {\n  dtype: 'string';\n  /**\n   * Used for delimiting neighboring strings. If the tensor has no strings or\n   * only 1 string, there will be no delimiter. If the tensor has N strings\n   * (N>0), there will be N-1 delimiters.\n   */\n  delimiter: string;\n  /**\n   * Number of bytes used by the whole tensor, including the delimiters (N-1\n   * delimiters for N strings).\n   */\n  byteLength: number;\n}\n\n/**\n * Options for saving a model.\n * @innamespace io\n */\nexport interface SaveConfig {\n  /**\n   * Whether to save only the trainable weights of the model, ignoring the\n   * non-trainable ones.\n   */\n  trainableOnly?: boolean;\n\n  /**\n   * Whether the optimizer will be saved (if exists).\n   *\n   * Default: `false`.\n   */\n  includeOptimizer?: boolean;\n}\n\n/**\n * Result of a saving operation.\n */\nexport interface SaveResult {\n  /**\n   * Information about the model artifacts saved.\n   */\n  modelArtifactsInfo: ModelArtifactsInfo;\n\n  /**\n   * HTTP responses from the server that handled the model-saving request (if\n   * any). This is applicable only to server-based saving routes.\n   */\n  responses?: Response[];\n\n  /**\n   * Error messages and related data (if any).\n   */\n  errors?: Array<{}|string>;\n}\n\nexport declare interface ModelArtifactsInfo {\n  /**\n   * Timestamp for when the model is saved.\n   */\n  dateSaved: Date;\n\n  /**\n   * Type of the model topology\n   *\n   * Possible values:\n   *   - JSON: JSON config (human-readable, e.g., Keras JSON).\n   *   - GraphDef: TensorFlow\n   *     [GraphDef](https://www.tensorflow.org/extend/tool_developers/#graphdef)\n   *     protocol buffer (binary).\n   */\n  modelTopologyType: 'JSON'|'GraphDef';\n\n  /**\n   * Size of model topology (Keras JSON or GraphDef), in bytes.\n   */\n  modelTopologyBytes?: number;\n\n  /**\n   * Size of weight specification or manifest, in bytes.\n   */\n  weightSpecsBytes?: number;\n\n  /**\n   * Size of weight value data, in bytes.\n   */\n  weightDataBytes?: number;\n}\n\n/** Model training configuration. */\nexport declare interface TrainingConfig {\n  // TODO(cais): Tighten the typing once keras spec is available to tfjs-core.\n  // See\n  // tslint:disable-next-line:max-line-length\n  // https://github.com/tensorflow/tfjs-layers/blob/master/src/keras_format/training_config.ts\n  /** Optimizer used for the model training. */\n  optimizer_config: {};\n\n  // TODO(cais): Tighten the typing once keras spec is available to tfjs-core.\n  /** Loss function(s) for the model's output(s). */\n  loss: string|string[]|{[key: string]: string};\n\n  // TODO(cais): Tighten the typing once keras spec is available to tfjs-core.\n  /** Metric function(s) for the model's output(s). */\n  metrics?: string[]|{[key: string]: string};\n\n  // TODO(cais): Tighten the typing once keras spec is available to tfjs-core.\n  weighted_metrics?: string[];\n\n  // TODO(cais): Tighten the typing once keras spec is available to tfjs-core.\n  sample_weight_mode?: string;\n\n  loss_weights?: number[]|{[key: string]: number};\n}\n\n/**\n * The serialized artifacts of a model, including topology and weights.\n *\n * The `modelTopology`, `trainingConfig`, `weightSpecs` and `weightData` fields\n * of this interface are optional, in order to support topology- or weights-only\n * saving and loading.\n *\n * Note this interface is used internally in IOHandlers.  For the file format\n * written to disk as `model.json`, see `ModelJSON`.\n */\nexport declare interface ModelArtifacts {\n  /**\n   * Model topology.\n   *\n   * For Keras-style `tf.Model`s, this is a JSON object.\n   * For TensorFlow-style models (e.g., `SavedModel`), this is the JSON\n   * encoding of the `GraphDef` protocol buffer.\n   */\n  modelTopology?: {}|ArrayBuffer;\n\n  /**\n   * Serialized configuration for the model's training.\n   */\n  trainingConfig?: TrainingConfig;\n\n  /**\n   * Weight specifications.\n   *\n   * This corresponds to the weightsData below.\n   */\n  weightSpecs?: WeightsManifestEntry[];\n\n  /**\n   * Binary buffer for all weight values concatenated in the order specified\n   * by `weightSpecs`.\n   */\n  weightData?: ArrayBuffer;\n\n  /**\n   * Hard-coded format name for models saved from TensorFlow.js or converted\n   * by TensorFlow.js Converter.\n   */\n  format?: string;\n\n  /**\n   * What library is responsible for originally generating this artifact.\n   *\n   * Used for debugging purposes. E.g., 'TensorFlow.js v1.0.0'.\n   */\n  generatedBy?: string;\n\n  /**\n   * What library or tool is responsible for converting the original model\n   * to this format, applicable only if the model is output by a converter.\n   *\n   * Used for debugging purposes.  E.g., 'TensorFlow.js Converter v1.0.0'.\n   *\n   * A value of `null` means the model artifacts are generated without any\n   * conversion process (e.g., saved directly from a TensorFlow.js\n   * `tf.LayersModel` instance.)\n   */\n  convertedBy?: string|null;\n}\n\n/**\n * The on-disk format of the `model.json` file.\n *\n * TF.js 1.0 always populates the optional fields when writing model.json.\n * Prior versions did not provide those fields.\n */\nexport declare interface ModelJSON {\n  /**\n   * Model topology.\n   *\n   * For Keras-style `tf.Model`s, this is a JSON object.\n   * For TensorFlow-style models (e.g., `SavedModel`), this is the JSON\n   * encoding of the `GraphDef` protocol buffer.\n   */\n  modelTopology: {};\n\n  /** Model training configuration. */\n  trainingConfig?: TrainingConfig;\n\n  /**\n   * Weights manifest.\n   *\n   * The weights manifest consists of an ordered list of weight-manifest\n   * groups. Each weight-manifest group consists of a number of weight values\n   * stored in a number of paths. See the documentation of\n   * `WeightsManifestConfig` for more details.\n   */\n  weightsManifest: WeightsManifestConfig;\n\n  /**\n   * Hard-coded format name for models saved from TensorFlow.js or converted\n   * by TensorFlow.js Converter.\n   */\n  format?: string;\n\n  /**\n   * What library is responsible for originally generating this artifact.\n   *\n   * Used for debugging purposes. E.g., 'TensorFlow.js v1.0.0'.\n   */\n  generatedBy?: string;\n\n  /**\n   * What library or tool is responsible for converting the original model\n   * to this format, applicable only if the model is output by a converter.\n   *\n   * Used for debugging purposes.  E.g., 'TensorFlow.js Converter v1.0.0'.\n   *\n   * A value of `null` means the model artifacts are generated without any\n   * conversion process (e.g., saved directly from a TensorFlow.js\n   * `tf.LayersModel` instance.)\n   */\n  convertedBy?: string|null;\n}\n\n/**\n * Type definition for handlers of loading operations.\n */\nexport type LoadHandler = () => Promise<ModelArtifacts>;\n\n/**\n * Type definition for handlers of saving operations.\n */\nexport type SaveHandler = (modelArtifact: ModelArtifacts) =>\n    Promise<SaveResult>;\n\n/**\n * Interface for a model import/export handler.\n *\n * The `save` and `load` handlers are both optional, in order to allow handlers\n * that support only saving or loading.\n */\n// tslint:disable-next-line:interface-name\nexport interface IOHandler {\n  save?: SaveHandler;\n  load?: LoadHandler;\n}\n\n/**\n * An interface for the manager of a model store.\n *\n * A model store is defined as a storage medium on which multiple models can\n * be stored. Each stored model has a unique `path` as its identifier.\n * A `ModelStoreManager` for the store allows actions including\n *\n * - Listing the models stored in the store.\n * - Deleting a model from the store.\n */\nexport interface ModelStoreManager {\n  /**\n   * List all models in the model store.\n   *\n   * @returns A dictionary mapping paths of existing models to their\n   *   model artifacts info. Model artifacts info include type of the model's\n   *   topology, byte sizes of the topology, weights, etc.\n   */\n  listModels(): Promise<{[path: string]: ModelArtifactsInfo}>;\n\n  /**\n   * Remove a model specified by `path`.\n   *\n   * @param path\n   * @returns ModelArtifactsInfo of the deleted model (if and only if deletion\n   *   is successful).\n   * @throws Error if deletion fails, e.g., if no model exists at `path`.\n   */\n  removeModel(path: string): Promise<ModelArtifactsInfo>;\n}\n\n/**\n * Callback for the progress of a long-running action such as an HTTP\n * request for a large binary object.\n *\n * `fraction` should be a number in the [0, 1] interval, indicating how\n * much of the action has completed.\n */\nexport type OnProgressCallback = (fraction: number) => void;\n\n/** @innamespace io */\nexport interface LoadOptions {\n  /**\n   * RequestInit (options) for HTTP requests.\n   *\n   * For detailed information on the supported fields, see\n   * [https://developer.mozilla.org/en-US/docs/Web/API/Request/Request](\n   *     https://developer.mozilla.org/en-US/docs/Web/API/Request/Request)\n   */\n  requestInit?: RequestInit;\n\n  /**\n   * Progress callback.\n   */\n  onProgress?: OnProgressCallback;\n\n  /**\n   * A function used to override the `window.fetch` function.\n   */\n  fetchFunc?: Function;\n\n  /**\n   * Strict loading model: whether extraneous weights or missing\n   * weights should trigger an `Error`.\n   *\n   * If `true`, require that the provided weights exactly match those\n   * required by the layers. `false` means that both extra weights\n   * and missing weights will be silently ignored.\n   *\n   * Default: `true`.\n   */\n  strict?: boolean;\n\n  /**\n   * Path prefix for weight files, by default this is calculated from the\n   * path of the model JSON file.\n   *\n   * For instance, if the path to the model JSON file is\n   * `http://localhost/foo/model.json`, then the default path prefix will be\n   * `http://localhost/foo/`. If a weight file has the path value\n   * `group1-shard1of2` in the weight manifest, then the weight file will be\n   * loaded from `http://localhost/foo/group1-shard1of2` by default. However,\n   * if you provide a `weightPathPrefix` value of\n   * `http://localhost/foo/alt-weights`, then the weight file will be loaded\n   * from the path `http://localhost/foo/alt-weights/group1-shard1of2` instead.\n   */\n  weightPathPrefix?: string;\n\n  /**\n   * Whether the module or model is to be loaded from TF Hub.\n   *\n   * Setting this to `true` allows passing a TF-Hub module URL, omitting the\n   * standard model file name and the query parameters.\n   *\n   * Default: `false`.\n   */\n  fromTFHub?: boolean;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENV} from '../environment';\nimport {tensor} from '../ops/tensor_ops';\nimport {NamedTensor, NamedTensorMap} from '../tensor_types';\nimport {TypedArray} from '../types';\nimport {sizeFromShape} from '../util';\n\nimport {DTYPE_VALUE_SIZE_MAP, ModelArtifacts, ModelArtifactsInfo, StringWeightsManifestEntry, WeightGroup, WeightsManifestEntry} from './types';\n\n/** Used to delimit neighboring strings when encoding string tensors. */\nexport const STRING_DELIMITER = '\\x00';\n\n/**\n * Encode a map from names to weight values as an ArrayBuffer, along with an\n * `Array` of `WeightsManifestEntry` as specification of the encoded weights.\n *\n * This function does not perform sharding.\n *\n * This function is the reverse of `decodeWeights`.\n *\n * @param tensors A map (\"dict\") from names to tensors.\n * @param group Group to which the weights belong (optional).\n * @returns A `Promise` of\n *   - A flat `ArrayBuffer` with all the binary values of the `Tensor`s\n *     concatenated.\n *   - An `Array` of `WeightManifestEntry`s, carrying information including\n *     tensor names, `dtype`s and shapes.\n * @throws Error: on unsupported tensor `dtype`.\n */\nexport async function encodeWeights(\n    tensors: NamedTensorMap|NamedTensor[], group?: WeightGroup):\n    Promise<{data: ArrayBuffer, specs: WeightsManifestEntry[]}> {\n  // TODO(adarob, cais): Support quantization.\n  const specs: WeightsManifestEntry[] = [];\n  const dataPromises: Array<Promise<TypedArray>> = [];\n\n  const names: string[] = Array.isArray(tensors) ?\n      tensors.map(tensor => tensor.name) :\n      Object.keys(tensors);\n\n  for (let i = 0; i < names.length; ++i) {\n    const name = names[i];\n    const t = Array.isArray(tensors) ? tensors[i].tensor : tensors[name];\n    if (t.dtype !== 'float32' && t.dtype !== 'int32' && t.dtype !== 'bool' &&\n        t.dtype !== 'string') {\n      throw new Error(`Unsupported dtype in weight '${name}': ${t.dtype}`);\n    }\n    const spec: WeightsManifestEntry = {name, shape: t.shape, dtype: t.dtype};\n    if (t.dtype === 'string') {\n      const utf8bytes = new Promise<TypedArray>(async resolve => {\n        const stringSpec = spec as StringWeightsManifestEntry;\n        const data = await t.data();\n        const bytes = ENV.platform.encodeUTF8(data.join(STRING_DELIMITER));\n        stringSpec.byteLength = bytes.length;\n        stringSpec.delimiter = STRING_DELIMITER;\n        resolve(bytes);\n      });\n      dataPromises.push(utf8bytes);\n    } else {\n      dataPromises.push(t.data());\n    }\n    if (group != null) {\n      spec.group = group;\n    }\n    specs.push(spec);\n  }\n\n  const tensorValues = await Promise.all(dataPromises);\n  return {data: concatenateTypedArrays(tensorValues), specs};\n}\n\n/**\n * Decode flat ArrayBuffer as weights.\n *\n * This function does not handle sharding.\n *\n * This function is the reverse of `encodeWeights`.\n *\n * @param buffer A flat ArrayBuffer carrying the binary values of the tensors\n *   concatenated in the order specified in `specs`.\n * @param specs Specifications of the names, dtypes and shapes of the tensors\n *   whose value are encoded by `buffer`.\n * @return A map from tensor name to tensor value, with the names corresponding\n *   to names in `specs`.\n * @throws Error, if any of the tensors has unsupported dtype.\n */\nexport function decodeWeights(\n    buffer: ArrayBuffer, specs: WeightsManifestEntry[]): NamedTensorMap {\n  // TODO(adarob, cais): Support quantization.\n  const out: NamedTensorMap = {};\n  let offset = 0;\n  for (const spec of specs) {\n    const name = spec.name;\n    const dtype = spec.dtype;\n    const shape = spec.shape;\n    const size = sizeFromShape(shape);\n    let values: TypedArray|string[];\n\n    if ('quantization' in spec) {\n      const quantization = spec.quantization;\n      if (quantization.dtype !== 'uint8' && quantization.dtype !== 'uint16') {\n        throw new Error(\n            `Weight ${spec.name} has unknown ` +\n            `quantization dtype ${quantization.dtype}. ` +\n            `Supported quantization dtypes are: 'uint8' and 'uint16'.`);\n      }\n      const quantizationSizeFactor = DTYPE_VALUE_SIZE_MAP[quantization.dtype];\n      const byteBuffer =\n          buffer.slice(offset, offset + size * quantizationSizeFactor);\n      const quantizedArray = (quantization.dtype === 'uint8') ?\n          new Uint8Array(byteBuffer) :\n          new Uint16Array(byteBuffer);\n      if (dtype === 'float32') {\n        values = Float32Array.from(\n            quantizedArray, v => v * quantization.scale + quantization.min);\n      } else if (dtype === 'int32') {\n        values = Int32Array.from(\n            quantizedArray,\n            v => Math.round(v * quantization.scale + quantization.min));\n      } else {\n        throw new Error(`Unsupported dtype in weight '${name}': ${dtype}`);\n      }\n      offset += size * quantizationSizeFactor;\n    } else if (dtype === 'string') {\n      const stringSpec = spec as StringWeightsManifestEntry;\n      const bytes =\n          new Uint8Array(buffer.slice(offset, offset + stringSpec.byteLength));\n      values = ENV.platform.decodeUTF8(bytes).split(stringSpec.delimiter);\n      offset += stringSpec.byteLength;\n    } else {\n      const dtypeFactor = DTYPE_VALUE_SIZE_MAP[dtype];\n      const byteBuffer = buffer.slice(offset, offset + size * dtypeFactor);\n\n      if (dtype === 'float32') {\n        values = new Float32Array(byteBuffer);\n      } else if (dtype === 'int32') {\n        values = new Int32Array(byteBuffer);\n      } else if (dtype === 'bool') {\n        values = new Uint8Array(byteBuffer);\n      } else {\n        throw new Error(`Unsupported dtype in weight '${name}': ${dtype}`);\n      }\n      offset += size * dtypeFactor;\n    }\n\n    out[name] = tensor(values, shape, dtype);\n  }\n  return out;\n}\n\n/**\n * Concatenate TypedArrays into an ArrayBuffer.\n */\nexport function concatenateTypedArrays(xs: TypedArray[]): ArrayBuffer {\n  // TODO(adarob, cais): Support quantization.\n  if (xs === null) {\n    throw new Error(`Invalid input value: ${JSON.stringify(xs)}`);\n  }\n\n  let totalByteLength = 0;\n\n  // `normalizedXs` is here for this reason: a `TypedArray`'s `buffer'\n  // can have a different byte length from that of the `TypedArray` itself,\n  // for example, when the `TypedArray` is created from an offset in an\n  // `ArrayBuffer`. `normliazedXs` holds `TypedArray`s whose `buffer`s match\n  // the `TypedArray` in byte length. If an element of `xs` does not show\n  // this property, a new `TypedArray` that satisfy this property will be\n  // constructed and pushed into `normalizedXs`.\n  const normalizedXs: TypedArray[] = [];\n  xs.forEach((x: TypedArray) => {\n    totalByteLength += x.byteLength;\n    // tslint:disable:no-any\n    normalizedXs.push(\n        x.byteLength === x.buffer.byteLength ? x :\n                                               new (x.constructor as any)(x));\n    if (!(x as any instanceof Float32Array || x as any instanceof Int32Array ||\n          x as any instanceof Uint8Array)) {\n      throw new Error(`Unsupported TypedArray subtype: ${x.constructor.name}`);\n    }\n    // tslint:enable:no-any\n  });\n\n  const y = new Uint8Array(totalByteLength);\n  let offset = 0;\n  normalizedXs.forEach((x: TypedArray) => {\n    y.set(new Uint8Array(x.buffer), offset);\n    offset += x.byteLength;\n  });\n\n  return y.buffer;\n}\n\n// Use Buffer on Node.js instead of Blob/atob/btoa\nconst useNodeBuffer = typeof Buffer !== 'undefined' &&\n    (typeof Blob === 'undefined' || typeof atob === 'undefined' ||\n     typeof btoa === 'undefined');\n\n/**\n * Calculate the byte length of a JavaScript string.\n *\n * Note that a JavaScript string can contain wide characters, therefore the\n * length of the string is not necessarily equal to the byte length.\n *\n * @param str Input string.\n * @returns Byte length.\n */\nexport function stringByteLength(str: string): number {\n  if (useNodeBuffer) {\n    return Buffer.byteLength(str);\n  }\n  return new Blob([str]).size;\n}\n\n/**\n * Encode an ArrayBuffer as a base64 encoded string.\n *\n * @param buffer `ArrayBuffer` to be converted.\n * @returns A string that base64-encodes `buffer`.\n */\nexport function arrayBufferToBase64String(buffer: ArrayBuffer): string {\n  if (useNodeBuffer) {\n    return Buffer.from(buffer).toString('base64');\n  }\n  return btoa(String.fromCharCode.apply(null, new Uint8Array(buffer)));\n}\n\n/**\n * Decode a base64 string as an ArrayBuffer.\n *\n * @param str Base64 string.\n * @returns Decoded `ArrayBuffer`.\n */\nexport function base64StringToArrayBuffer(str: string): ArrayBuffer {\n  if (useNodeBuffer) {\n    const buf = Buffer.from(str, 'base64');\n    return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n  }\n  const s = atob(str);\n  const buffer = new Uint8Array(s.length);\n  for (let i = 0; i < s.length; ++i) {\n    buffer.set([s.charCodeAt(i)], i);\n  }\n  return buffer.buffer;\n}\n\n/**\n * Concatenate a number of ArrayBuffers into one.\n *\n * @param buffers A number of array buffers to concatenate.\n * @returns Result of concatenating `buffers` in order.\n */\nexport function concatenateArrayBuffers(buffers: ArrayBuffer[]): ArrayBuffer {\n  let totalByteLength = 0;\n  buffers.forEach((buffer: ArrayBuffer) => {\n    totalByteLength += buffer.byteLength;\n  });\n\n  const temp = new Uint8Array(totalByteLength);\n  let offset = 0;\n  buffers.forEach((buffer: ArrayBuffer) => {\n    temp.set(new Uint8Array(buffer), offset);\n    offset += buffer.byteLength;\n  });\n  return temp.buffer;\n}\n\n/**\n * Get the basename of a path.\n *\n * Behaves in a way analogous to Linux's basename command.\n *\n * @param path\n */\nexport function basename(path: string): string {\n  const SEPARATOR = '/';\n  path = path.trim();\n  while (path.endsWith(SEPARATOR)) {\n    path = path.slice(0, path.length - 1);\n  }\n  const items = path.split(SEPARATOR);\n  return items[items.length - 1];\n}\n\n/**\n * Populate ModelArtifactsInfo fields for a model with JSON topology.\n * @param modelArtifacts\n * @returns A ModelArtifactsInfo object.\n */\nexport function getModelArtifactsInfoForJSON(modelArtifacts: ModelArtifacts):\n    ModelArtifactsInfo {\n  if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n    throw new Error('Expected JSON model topology, received ArrayBuffer.');\n  }\n\n  return {\n    dateSaved: new Date(),\n    modelTopologyType: 'JSON',\n    modelTopologyBytes: modelArtifacts.modelTopology == null ?\n        0 :\n        stringByteLength(JSON.stringify(modelArtifacts.modelTopology)),\n    weightSpecsBytes: modelArtifacts.weightSpecs == null ?\n        0 :\n        stringByteLength(JSON.stringify(modelArtifacts.weightSpecs)),\n    weightDataBytes: modelArtifacts.weightData == null ?\n        0 :\n        modelArtifacts.weightData.byteLength,\n  };\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {IOHandler} from './types';\n\nexport type IORouter = (url: string|string[], onProgress?: Function) =>\n    IOHandler;\n\nexport class IORouterRegistry {\n  // Singleton instance.\n  private static instance: IORouterRegistry;\n\n  private saveRouters: IORouter[];\n  private loadRouters: IORouter[];\n\n  private constructor() {\n    this.saveRouters = [];\n    this.loadRouters = [];\n  }\n\n  private static getInstance(): IORouterRegistry {\n    if (IORouterRegistry.instance == null) {\n      IORouterRegistry.instance = new IORouterRegistry();\n    }\n    return IORouterRegistry.instance;\n  }\n\n  /**\n   * Register a save-handler router.\n   *\n   * @param saveRouter A function that maps a URL-like string onto an instance\n   * of `IOHandler` with the `save` method defined or `null`.\n   */\n  static registerSaveRouter(saveRouter: IORouter) {\n    IORouterRegistry.getInstance().saveRouters.push(saveRouter);\n  }\n\n  /**\n   * Register a load-handler router.\n   *\n   * @param loadRouter A function that maps a URL-like string onto an instance\n   * of `IOHandler` with the `load` method defined or `null`.\n   */\n  static registerLoadRouter(loadRouter: IORouter) {\n    IORouterRegistry.getInstance().loadRouters.push(loadRouter);\n  }\n\n  /**\n   * Look up IOHandler for saving, given a URL-like string.\n   *\n   * @param url\n   * @returns If only one match is found, an instance of IOHandler with the\n   * `save` method defined. If no match is found, `null`.\n   * @throws Error, if more than one match is found.\n   */\n  static getSaveHandlers(url: string|string[]): IOHandler[] {\n    return IORouterRegistry.getHandlers(url, 'save');\n  }\n\n  /**\n   * Look up IOHandler for loading, given a URL-like string.\n   *\n   * @param url\n   * @param onProgress Optional, progress callback function, fired periodically\n   *   before the load is completed.\n   * @returns All valid handlers for `url`, given the currently registered\n   *   handler routers.\n   */\n  static getLoadHandlers(url: string|string[], onProgress?: Function):\n      IOHandler[] {\n    return IORouterRegistry.getHandlers(url, 'load', onProgress);\n  }\n\n  private static getHandlers(\n      url: string|string[], handlerType: 'save'|'load',\n      onProgress?: Function): IOHandler[] {\n    const validHandlers: IOHandler[] = [];\n    const routers = handlerType === 'load' ?\n        IORouterRegistry.getInstance().loadRouters :\n        IORouterRegistry.getInstance().saveRouters;\n    routers.forEach(router => {\n      const handler = router(url, onProgress);\n      if (handler !== null) {\n        validHandlers.push(handler);\n      }\n    });\n    return validHandlers;\n  }\n}\n\nexport const registerSaveRouter = (loudRouter: IORouter) =>\n    IORouterRegistry.registerSaveRouter(loudRouter);\nexport const registerLoadRouter = (loudRouter: IORouter) =>\n    IORouterRegistry.registerLoadRouter(loudRouter);\nexport const getSaveHandlers = (url: string|string[]) =>\n    IORouterRegistry.getSaveHandlers(url);\nexport const getLoadHandlers = (url: string|string[], onProgress?: Function) =>\n    IORouterRegistry.getLoadHandlers(url, onProgress);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Classes and functions for model management across multiple storage mediums.\n *\n * Supported client actions:\n * - Listing models on all registered storage mediums.\n * - Remove model by URL from any registered storage mediums, by using URL\n *   string.\n * - Moving or copying model from one path to another in the same medium or from\n *   one medium to another, by using URL strings.\n */\n\nimport {assert} from '../util';\n\nimport {IORouterRegistry} from './router_registry';\nimport {ModelArtifactsInfo, ModelStoreManager} from './types';\n\nconst URL_SCHEME_SUFFIX = '://';\n\nexport class ModelStoreManagerRegistry {\n  // Singleton instance.\n  private static instance: ModelStoreManagerRegistry;\n\n  private managers: {[scheme: string]: ModelStoreManager};\n\n  private constructor() {\n    this.managers = {};\n  }\n\n  private static getInstance(): ModelStoreManagerRegistry {\n    if (ModelStoreManagerRegistry.instance == null) {\n      ModelStoreManagerRegistry.instance = new ModelStoreManagerRegistry();\n    }\n    return ModelStoreManagerRegistry.instance;\n  }\n\n  /**\n   * Register a save-handler router.\n   *\n   * @param saveRouter A function that maps a URL-like string onto an instance\n   * of `IOHandler` with the `save` method defined or `null`.\n   */\n  static registerManager(scheme: string, manager: ModelStoreManager) {\n    assert(scheme != null, () => 'scheme must not be undefined or null.');\n    if (scheme.endsWith(URL_SCHEME_SUFFIX)) {\n      scheme = scheme.slice(0, scheme.indexOf(URL_SCHEME_SUFFIX));\n    }\n    assert(scheme.length > 0, () => 'scheme must not be an empty string.');\n    const registry = ModelStoreManagerRegistry.getInstance();\n    assert(\n        registry.managers[scheme] == null,\n        () => `A model store manager is already registered for scheme '${\n            scheme}'.`);\n    registry.managers[scheme] = manager;\n  }\n\n  static getManager(scheme: string): ModelStoreManager {\n    const manager = this.getInstance().managers[scheme];\n    if (manager == null) {\n      throw new Error(`Cannot find model manager for scheme '${scheme}'`);\n    }\n    return manager;\n  }\n\n  static getSchemes(): string[] {\n    return Object.keys(this.getInstance().managers);\n  }\n}\n\n/**\n * Helper method for parsing a URL string into a scheme and a path.\n *\n * @param url E.g., 'localstorage://my-model'\n * @returns A dictionary with two fields: scheme and path.\n *   Scheme: e.g., 'localstorage' in the example above.\n *   Path: e.g., 'my-model' in the example above.\n */\nfunction parseURL(url: string): {scheme: string, path: string} {\n  if (url.indexOf(URL_SCHEME_SUFFIX) === -1) {\n    throw new Error(\n        `The url string provided does not contain a scheme. ` +\n        `Supported schemes are: ` +\n        `${ModelStoreManagerRegistry.getSchemes().join(',')}`);\n  }\n  return {\n    scheme: url.split(URL_SCHEME_SUFFIX)[0],\n    path: url.split(URL_SCHEME_SUFFIX)[1],\n  };\n}\n\nasync function cloneModelInternal(\n    sourceURL: string, destURL: string,\n    deleteSource = false): Promise<ModelArtifactsInfo> {\n  assert(\n      sourceURL !== destURL,\n      () => `Old path and new path are the same: '${sourceURL}'`);\n\n  const loadHandlers = IORouterRegistry.getLoadHandlers(sourceURL);\n  assert(\n      loadHandlers.length > 0,\n      () => `Copying failed because no load handler is found for source URL ${\n          sourceURL}.`);\n  assert(\n      loadHandlers.length < 2,\n      () => `Copying failed because more than one (${loadHandlers.length}) ` +\n          `load handlers for source URL ${sourceURL}.`);\n  const loadHandler = loadHandlers[0];\n\n  const saveHandlers = IORouterRegistry.getSaveHandlers(destURL);\n  assert(\n      saveHandlers.length > 0,\n      () => `Copying failed because no save handler is found for destination ` +\n          `URL ${destURL}.`);\n  assert(\n      saveHandlers.length < 2,\n      () => `Copying failed because more than one (${loadHandlers.length}) ` +\n          `save handlers for destination URL ${destURL}.`);\n  const saveHandler = saveHandlers[0];\n\n  const sourceScheme = parseURL(sourceURL).scheme;\n  const sourcePath = parseURL(sourceURL).path;\n  const sameMedium = sourceScheme === parseURL(sourceURL).scheme;\n\n  const modelArtifacts = await loadHandler.load();\n\n  // If moving within the same storage medium, remove the old model as soon as\n  // the loading is done. Without doing this, it is possible that the combined\n  // size of the two models will cause the cloning to fail.\n  if (deleteSource && sameMedium) {\n    await ModelStoreManagerRegistry.getManager(sourceScheme)\n        .removeModel(sourcePath);\n  }\n\n  const saveResult = await saveHandler.save(modelArtifacts);\n\n  // If moving between mediums, the deletion is done after the save succeeds.\n  // This guards against the case in which saving to the destination medium\n  // fails.\n  if (deleteSource && !sameMedium) {\n    await ModelStoreManagerRegistry.getManager(sourceScheme)\n        .removeModel(sourcePath);\n  }\n\n  return saveResult.modelArtifactsInfo;\n}\n\n/**\n * List all models stored in registered storage mediums.\n *\n * For a web browser environment, the registered mediums are Local Storage and\n * IndexedDB.\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Delete the model.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n * ```\n *\n * @returns A `Promise` of a dictionary mapping URLs of existing models to\n * their model artifacts info. URLs include medium-specific schemes, e.g.,\n *   'indexeddb://my/model/1'. Model artifacts info include type of the\n * model's topology, byte sizes of the topology, weights, etc.\n */\n/**\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function listModels(): Promise<{[url: string]: ModelArtifactsInfo}> {\n  const schemes = ModelStoreManagerRegistry.getSchemes();\n  const out: {[url: string]: ModelArtifactsInfo} = {};\n  for (const scheme of schemes) {\n    const schemeOut =\n        await ModelStoreManagerRegistry.getManager(scheme).listModels();\n    for (const path in schemeOut) {\n      const url = scheme + URL_SCHEME_SUFFIX + path;\n      out[url] = schemeOut[path];\n    }\n  }\n  return out;\n}\n\n/**\n * Remove a model specified by URL from a reigstered storage medium.\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Delete the model.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n * ```\n *\n * @param url A URL to a stored model, with a scheme prefix, e.g.,\n *   'localstorage://my-model-1', 'indexeddb://my/model/2'.\n * @returns ModelArtifactsInfo of the deleted model (if and only if deletion\n *   is successful).\n * @throws Error if deletion fails, e.g., if no model exists at `path`.\n */\n/**\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function removeModel(url: string): Promise<ModelArtifactsInfo> {\n  const schemeAndPath = parseURL(url);\n  const manager = ModelStoreManagerRegistry.getManager(schemeAndPath.scheme);\n  return manager.removeModel(schemeAndPath.path);\n}\n\n/**\n * Copy a model from one URL to another.\n *\n * This function supports:\n *\n * 1. Copying within a storage medium, e.g.,\n *    `tf.io.copyModel('localstorage://model-1', 'localstorage://model-2')`\n * 2. Copying between two storage mediums, e.g.,\n *    `tf.io.copyModel('localstorage://model-1', 'indexeddb://model-1')`\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Copy the model, from Local Storage to IndexedDB.\n * await tf.io.copyModel(\n *     'localstorage://demo/management/model1',\n *     'indexeddb://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Remove both models.\n * await tf.io.removeModel('localstorage://demo/management/model1');\n * await tf.io.removeModel('indexeddb://demo/management/model1');\n * ```\n *\n * @param sourceURL Source URL of copying.\n * @param destURL Destination URL of copying.\n * @returns ModelArtifactsInfo of the copied model (if and only if copying\n *   is successful).\n * @throws Error if copying fails, e.g., if no model exists at `sourceURL`, or\n *   if `oldPath` and `newPath` are identical.\n */\n/**\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function copyModel(\n    sourceURL: string, destURL: string): Promise<ModelArtifactsInfo> {\n  const deleteSource = false;\n  return cloneModelInternal(sourceURL, destURL, deleteSource);\n}\n\n/**\n * Move a model from one URL to another.\n *\n * This function supports:\n *\n * 1. Moving within a storage medium, e.g.,\n *    `tf.io.moveModel('localstorage://model-1', 'localstorage://model-2')`\n * 2. Moving between two storage mediums, e.g.,\n *    `tf.io.moveModel('localstorage://model-1', 'indexeddb://model-1')`\n *\n * ```js\n * // First create and save a model.\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * await model.save('localstorage://demo/management/model1');\n *\n * // Then list existing models.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Move the model, from Local Storage to IndexedDB.\n * await tf.io.moveModel(\n *     'localstorage://demo/management/model1',\n *     'indexeddb://demo/management/model1');\n *\n * // List models again.\n * console.log(JSON.stringify(await tf.io.listModels()));\n *\n * // Remove the moved model.\n * await tf.io.removeModel('indexeddb://demo/management/model1');\n * ```\n *\n * @param sourceURL Source URL of moving.\n * @param destURL Destination URL of moving.\n * @returns ModelArtifactsInfo of the copied model (if and only if copying\n *   is successful).\n * @throws Error if moving fails, e.g., if no model exists at `sourceURL`, or\n *   if `oldPath` and `newPath` are identical.\n */\n/**\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Management',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nasync function moveModel(\n    sourceURL: string, destURL: string): Promise<ModelArtifactsInfo> {\n  const deleteSource = true;\n  return cloneModelInternal(sourceURL, destURL, deleteSource);\n}\n\nexport {moveModel, copyModel, removeModel, listModels};\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENV} from '../environment';\nimport {getModelArtifactsInfoForJSON} from './io_utils';\nimport {ModelStoreManagerRegistry} from './model_management';\nimport {IORouter, IORouterRegistry} from './router_registry';\nimport {IOHandler, ModelArtifacts, ModelArtifactsInfo, ModelStoreManager, SaveResult} from './types';\n\nconst DATABASE_NAME = 'tensorflowjs';\nconst DATABASE_VERSION = 1;\n\n// Model data and ModelArtifactsInfo (metadata) are stored in two separate\n// stores for efficient access of the list of stored models and their metadata.\n// 1. The object store for model data: topology, weights and weight manifests.\nconst MODEL_STORE_NAME = 'models_store';\n// 2. The object store for ModelArtifactsInfo, including meta-information such\n//    as the type of topology (JSON vs binary), byte size of the topology, byte\n//    size of the weights, etc.\nconst INFO_STORE_NAME = 'model_info_store';\n\n/**\n * Delete the entire database for tensorflow.js, including the models store.\n */\nexport async function deleteDatabase(): Promise<void> {\n  const idbFactory = getIndexedDBFactory();\n\n  return new Promise<void>((resolve, reject) => {\n    const deleteRequest = idbFactory.deleteDatabase(DATABASE_NAME);\n    deleteRequest.onsuccess = () => resolve();\n    deleteRequest.onerror = error => reject(error);\n  });\n}\n\nfunction getIndexedDBFactory(): IDBFactory {\n  if (!ENV.getBool('IS_BROWSER')) {\n    // TODO(cais): Add more info about what IOHandler subtypes are available.\n    //   Maybe point to a doc page on the web and/or automatically determine\n    //   the available IOHandlers and print them in the error message.\n    throw new Error(\n        'Failed to obtain IndexedDB factory because the current environment' +\n        'is not a web browser.');\n  }\n  // tslint:disable-next-line:no-any\n  const theWindow: any = window;\n  const factory = theWindow.indexedDB || theWindow.mozIndexedDB ||\n      theWindow.webkitIndexedDB || theWindow.msIndexedDB ||\n      theWindow.shimIndexedDB;\n  if (factory == null) {\n    throw new Error(\n        'The current browser does not appear to support IndexedDB.');\n  }\n  return factory;\n}\n\nfunction setUpDatabase(openRequest: IDBRequest) {\n  const db = openRequest.result as IDBDatabase;\n  db.createObjectStore(MODEL_STORE_NAME, {keyPath: 'modelPath'});\n  db.createObjectStore(INFO_STORE_NAME, {keyPath: 'modelPath'});\n}\n\n/**\n * IOHandler subclass: Browser IndexedDB.\n *\n * See the doc string of `browserIndexedDB` for more details.\n */\nexport class BrowserIndexedDB implements IOHandler {\n  protected readonly indexedDB: IDBFactory;\n  protected readonly modelPath: string;\n\n  static readonly URL_SCHEME = 'indexeddb://';\n\n  constructor(modelPath: string) {\n    this.indexedDB = getIndexedDBFactory();\n\n    if (modelPath == null || !modelPath) {\n      throw new Error(\n          'For IndexedDB, modelPath must not be null, undefined or empty.');\n    }\n    this.modelPath = modelPath;\n  }\n\n  async save(modelArtifacts: ModelArtifacts): Promise<SaveResult> {\n    // TODO(cais): Support saving GraphDef models.\n    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n      throw new Error(\n          'BrowserLocalStorage.save() does not support saving model topology ' +\n          'in binary formats yet.');\n    }\n\n    return this.databaseAction(this.modelPath, modelArtifacts) as\n        Promise<SaveResult>;\n  }\n\n  async load(): Promise<ModelArtifacts> {\n    return this.databaseAction(this.modelPath) as Promise<ModelArtifacts>;\n  }\n\n  /**\n   * Perform database action to put model artifacts into or read model artifacts\n   * from IndexedDB object store.\n   *\n   * Whether the action is put or get depends on whether `modelArtifacts` is\n   * specified. If it is specified, the action will be put; otherwise the action\n   * will be get.\n   *\n   * @param modelPath A unique string path for the model.\n   * @param modelArtifacts If specified, it will be the model artifacts to be\n   *   stored in IndexedDB.\n   * @returns A `Promise` of `SaveResult`, if the action is put, or a `Promise`\n   *   of `ModelArtifacts`, if the action is get.\n   */\n  private databaseAction(modelPath: string, modelArtifacts?: ModelArtifacts):\n      Promise<ModelArtifacts|SaveResult> {\n    return new Promise<ModelArtifacts|SaveResult>((resolve, reject) => {\n      const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n      openRequest.onupgradeneeded = () => setUpDatabase(openRequest);\n\n      openRequest.onsuccess = () => {\n        const db = openRequest.result as IDBDatabase;\n\n        if (modelArtifacts == null) {\n          // Read model out from object store.\n          const modelTx = db.transaction(MODEL_STORE_NAME, 'readonly');\n          const modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n          const getRequest = modelStore.get(this.modelPath);\n          getRequest.onsuccess = () => {\n            if (getRequest.result == null) {\n              db.close();\n              return reject(new Error(\n                  `Cannot find model with path '${this.modelPath}' ` +\n                  `in IndexedDB.`));\n            } else {\n              resolve(getRequest.result.modelArtifacts);\n            }\n          };\n          getRequest.onerror = error => {\n            db.close();\n            return reject(getRequest.error);\n          };\n          modelTx.oncomplete = () => db.close();\n        } else {\n          // Put model into object store.\n          const modelArtifactsInfo: ModelArtifactsInfo =\n              getModelArtifactsInfoForJSON(modelArtifacts);\n          // First, put ModelArtifactsInfo into info store.\n          const infoTx = db.transaction(INFO_STORE_NAME, 'readwrite');\n          let infoStore = infoTx.objectStore(INFO_STORE_NAME);\n          const putInfoRequest =\n              infoStore.put({modelPath: this.modelPath, modelArtifactsInfo});\n          let modelTx: IDBTransaction;\n          putInfoRequest.onsuccess = () => {\n            // Second, put model data into model store.\n            modelTx = db.transaction(MODEL_STORE_NAME, 'readwrite');\n            const modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n            const putModelRequest = modelStore.put({\n              modelPath: this.modelPath,\n              modelArtifacts,\n              modelArtifactsInfo\n            });\n            putModelRequest.onsuccess = () => resolve({modelArtifactsInfo});\n            putModelRequest.onerror = error => {\n              // If the put-model request fails, roll back the info entry as\n              // well.\n              infoStore = infoTx.objectStore(INFO_STORE_NAME);\n              const deleteInfoRequest = infoStore.delete(this.modelPath);\n              deleteInfoRequest.onsuccess = () => {\n                db.close();\n                return reject(putModelRequest.error);\n              };\n              deleteInfoRequest.onerror = error => {\n                db.close();\n                return reject(putModelRequest.error);\n              };\n            };\n          };\n          putInfoRequest.onerror = error => {\n            db.close();\n            return reject(putInfoRequest.error);\n          };\n          infoTx.oncomplete = () => {\n            if (modelTx == null) {\n              db.close();\n            } else {\n              modelTx.oncomplete = () => db.close();\n            }\n          };\n        }\n      };\n      openRequest.onerror = error => reject(openRequest.error);\n    });\n  }\n}\n\nexport const indexedDBRouter: IORouter = (url: string|string[]) => {\n  if (!ENV.getBool('IS_BROWSER')) {\n    return null;\n  } else {\n    if (!Array.isArray(url) && url.startsWith(BrowserIndexedDB.URL_SCHEME)) {\n      return browserIndexedDB(url.slice(BrowserIndexedDB.URL_SCHEME.length));\n    } else {\n      return null;\n    }\n  }\n};\nIORouterRegistry.registerSaveRouter(indexedDBRouter);\nIORouterRegistry.registerLoadRouter(indexedDBRouter);\n\n/**\n * Creates a browser IndexedDB IOHandler for saving and loading models.\n *\n * ```js\n * const model = tf.sequential();\n * model.add(\n *     tf.layers.dense({units: 1, inputShape: [100], activation: 'sigmoid'}));\n *\n * const saveResult = await model.save('indexeddb://MyModel'));\n * console.log(saveResult);\n * ```\n *\n * @param modelPath A unique identifier for the model to be saved. Must be a\n *   non-empty string.\n * @returns An instance of `BrowserIndexedDB` (sublcass of `IOHandler`),\n *   which can be used with, e.g., `tf.Model.save`.\n */\nexport function browserIndexedDB(modelPath: string): IOHandler {\n  return new BrowserIndexedDB(modelPath);\n}\n\nfunction maybeStripScheme(key: string) {\n  return key.startsWith(BrowserIndexedDB.URL_SCHEME) ?\n      key.slice(BrowserIndexedDB.URL_SCHEME.length) :\n      key;\n}\n\nexport class BrowserIndexedDBManager implements ModelStoreManager {\n  private indexedDB: IDBFactory;\n\n  constructor() {\n    this.indexedDB = getIndexedDBFactory();\n  }\n\n  async listModels(): Promise<{[path: string]: ModelArtifactsInfo}> {\n    return new Promise<{[path: string]: ModelArtifactsInfo}>(\n        (resolve, reject) => {\n          const openRequest =\n              this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n          openRequest.onupgradeneeded = () => setUpDatabase(openRequest);\n\n          openRequest.onsuccess = () => {\n            const db = openRequest.result as IDBDatabase;\n            const tx = db.transaction(INFO_STORE_NAME, 'readonly');\n            const store = tx.objectStore(INFO_STORE_NAME);\n            // tslint:disable:max-line-length\n            // Need to cast `store` as `any` here because TypeScript's DOM\n            // library does not have the `getAll()` method even though the\n            // method is supported in the latest version of most mainstream\n            // browsers:\n            // https://developer.mozilla.org/en-US/docs/Web/API/IDBObjectStore/getAll\n            // tslint:enable:max-line-length\n            // tslint:disable-next-line:no-any\n            const getAllInfoRequest = (store as any).getAll() as IDBRequest;\n            getAllInfoRequest.onsuccess = () => {\n              const out: {[path: string]: ModelArtifactsInfo} = {};\n              for (const item of getAllInfoRequest.result) {\n                out[item.modelPath] = item.modelArtifactsInfo;\n              }\n              resolve(out);\n            };\n            getAllInfoRequest.onerror = error => {\n              db.close();\n              return reject(getAllInfoRequest.error);\n            };\n            tx.oncomplete = () => db.close();\n          };\n          openRequest.onerror = error => reject(openRequest.error);\n        });\n  }\n\n  async removeModel(path: string): Promise<ModelArtifactsInfo> {\n    path = maybeStripScheme(path);\n    return new Promise<ModelArtifactsInfo>((resolve, reject) => {\n      const openRequest = this.indexedDB.open(DATABASE_NAME, DATABASE_VERSION);\n      openRequest.onupgradeneeded = () => setUpDatabase(openRequest);\n\n      openRequest.onsuccess = () => {\n        const db = openRequest.result as IDBDatabase;\n        const infoTx = db.transaction(INFO_STORE_NAME, 'readwrite');\n        const infoStore = infoTx.objectStore(INFO_STORE_NAME);\n\n        const getInfoRequest = infoStore.get(path);\n        let modelTx: IDBTransaction;\n        getInfoRequest.onsuccess = () => {\n          if (getInfoRequest.result == null) {\n            db.close();\n            return reject(new Error(\n                `Cannot find model with path '${path}' ` +\n                `in IndexedDB.`));\n          } else {\n            // First, delete the entry in the info store.\n            const deleteInfoRequest = infoStore.delete(path);\n            const deleteModelData = () => {\n              // Second, delete the entry in the model store.\n              modelTx = db.transaction(MODEL_STORE_NAME, 'readwrite');\n              const modelStore = modelTx.objectStore(MODEL_STORE_NAME);\n              const deleteModelRequest = modelStore.delete(path);\n              deleteModelRequest.onsuccess = () =>\n                  resolve(getInfoRequest.result.modelArtifactsInfo);\n              deleteModelRequest.onerror = error =>\n                  reject(getInfoRequest.error);\n            };\n            // Proceed with deleting model data regardless of whether deletion\n            // of info data succeeds or not.\n            deleteInfoRequest.onsuccess = deleteModelData;\n            deleteInfoRequest.onerror = error => {\n              deleteModelData();\n              db.close();\n              return reject(getInfoRequest.error);\n            };\n          }\n        };\n        getInfoRequest.onerror = error => {\n          db.close();\n          return reject(getInfoRequest.error);\n        };\n\n        infoTx.oncomplete = () => {\n          if (modelTx == null) {\n            db.close();\n          } else {\n            modelTx.oncomplete = () => db.close();\n          }\n        };\n      };\n      openRequest.onerror = error => reject(openRequest.error);\n    });\n  }\n}\n\nif (ENV.getBool('IS_BROWSER')) {\n  // Wrap the construction and registration, to guard against browsers that\n  // don't support Local Storage.\n  try {\n    ModelStoreManagerRegistry.registerManager(\n        BrowserIndexedDB.URL_SCHEME, new BrowserIndexedDBManager());\n  } catch (err) {\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENV} from '../environment';\nimport {assert} from '../util';\nimport {arrayBufferToBase64String, base64StringToArrayBuffer, getModelArtifactsInfoForJSON} from './io_utils';\nimport {ModelStoreManagerRegistry} from './model_management';\nimport {IORouter, IORouterRegistry} from './router_registry';\nimport {IOHandler, ModelArtifacts, ModelArtifactsInfo, ModelStoreManager, SaveResult} from './types';\n\nconst PATH_SEPARATOR = '/';\nconst PATH_PREFIX = 'tensorflowjs_models';\nconst INFO_SUFFIX = 'info';\nconst MODEL_TOPOLOGY_SUFFIX = 'model_topology';\nconst WEIGHT_SPECS_SUFFIX = 'weight_specs';\nconst WEIGHT_DATA_SUFFIX = 'weight_data';\nconst MODEL_METADATA_SUFFIX = 'model_metadata';\n\n/**\n * Purge all tensorflow.js-saved model artifacts from local storage.\n *\n * @returns Paths of the models purged.\n */\nexport function purgeLocalStorageArtifacts(): string[] {\n  if (!ENV.getBool('IS_BROWSER') ||\n      typeof window.localStorage === 'undefined') {\n    throw new Error(\n        'purgeLocalStorageModels() cannot proceed because local storage is ' +\n        'unavailable in the current environment.');\n  }\n  const LS = window.localStorage;\n  const purgedModelPaths: string[] = [];\n  for (let i = 0; i < LS.length; ++i) {\n    const key = LS.key(i);\n    const prefix = PATH_PREFIX + PATH_SEPARATOR;\n    if (key.startsWith(prefix) && key.length > prefix.length) {\n      LS.removeItem(key);\n      const modelName = getModelPathFromKey(key);\n      if (purgedModelPaths.indexOf(modelName) === -1) {\n        purgedModelPaths.push(modelName);\n      }\n    }\n  }\n  return purgedModelPaths;\n}\n\nfunction getModelKeys(path: string): {\n  info: string,\n  topology: string,\n  weightSpecs: string,\n  weightData: string,\n  modelMetadata: string\n} {\n  return {\n    info: [PATH_PREFIX, path, INFO_SUFFIX].join(PATH_SEPARATOR),\n    topology: [PATH_PREFIX, path, MODEL_TOPOLOGY_SUFFIX].join(PATH_SEPARATOR),\n    weightSpecs: [PATH_PREFIX, path, WEIGHT_SPECS_SUFFIX].join(PATH_SEPARATOR),\n    weightData: [PATH_PREFIX, path, WEIGHT_DATA_SUFFIX].join(PATH_SEPARATOR),\n    modelMetadata:\n        [PATH_PREFIX, path, MODEL_METADATA_SUFFIX].join(PATH_SEPARATOR)\n  };\n}\n\n/**\n * Get model path from a local-storage key.\n *\n * E.g., 'tensorflowjs_models/my/model/1/info' --> 'my/model/1'\n *\n * @param key\n */\nfunction getModelPathFromKey(key: string) {\n  const items = key.split(PATH_SEPARATOR);\n  if (items.length < 3) {\n    throw new Error(`Invalid key format: ${key}`);\n  }\n  return items.slice(1, items.length - 1).join(PATH_SEPARATOR);\n}\n\nfunction maybeStripScheme(key: string) {\n  return key.startsWith(BrowserLocalStorage.URL_SCHEME) ?\n      key.slice(BrowserLocalStorage.URL_SCHEME.length) :\n      key;\n}\n\ndeclare type LocalStorageKeys = {\n  info: string,\n  topology: string,\n  weightSpecs: string,\n  weightData: string,\n  modelMetadata: string\n};\n\n/**\n * IOHandler subclass: Browser Local Storage.\n *\n * See the doc string to `browserLocalStorage` for more details.\n */\nexport class BrowserLocalStorage implements IOHandler {\n  protected readonly LS: Storage;\n  protected readonly modelPath: string;\n  protected readonly keys: LocalStorageKeys;\n\n  static readonly URL_SCHEME = 'localstorage://';\n\n  constructor(modelPath: string) {\n    if (!ENV.getBool('IS_BROWSER') ||\n        typeof window.localStorage === 'undefined') {\n      // TODO(cais): Add more info about what IOHandler subtypes are\n      // available.\n      //   Maybe point to a doc page on the web and/or automatically determine\n      //   the available IOHandlers and print them in the error message.\n      throw new Error(\n          'The current environment does not support local storage.');\n    }\n    this.LS = window.localStorage;\n\n    if (modelPath == null || !modelPath) {\n      throw new Error(\n          'For local storage, modelPath must not be null, undefined or empty.');\n    }\n    this.modelPath = modelPath;\n    this.keys = getModelKeys(this.modelPath);\n  }\n\n  /**\n   * Save model artifacts to browser local storage.\n   *\n   * See the documentation to `browserLocalStorage` for details on the saved\n   * artifacts.\n   *\n   * @param modelArtifacts The model artifacts to be stored.\n   * @returns An instance of SaveResult.\n   */\n  async save(modelArtifacts: ModelArtifacts): Promise<SaveResult> {\n    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n      throw new Error(\n          'BrowserLocalStorage.save() does not support saving model topology ' +\n          'in binary formats yet.');\n    } else {\n      const topology = JSON.stringify(modelArtifacts.modelTopology);\n      const weightSpecs = JSON.stringify(modelArtifacts.weightSpecs);\n\n      const modelArtifactsInfo: ModelArtifactsInfo =\n          getModelArtifactsInfoForJSON(modelArtifacts);\n\n      try {\n        this.LS.setItem(this.keys.info, JSON.stringify(modelArtifactsInfo));\n        this.LS.setItem(this.keys.topology, topology);\n        this.LS.setItem(this.keys.weightSpecs, weightSpecs);\n        this.LS.setItem(\n            this.keys.weightData,\n            arrayBufferToBase64String(modelArtifacts.weightData));\n        this.LS.setItem(this.keys.modelMetadata, JSON.stringify({\n          format: modelArtifacts.format,\n          generatedBy: modelArtifacts.generatedBy,\n          convertedBy: modelArtifacts.convertedBy\n        }));\n\n        return {modelArtifactsInfo};\n      } catch (err) {\n        // If saving failed, clean up all items saved so far.\n        this.LS.removeItem(this.keys.info);\n        this.LS.removeItem(this.keys.topology);\n        this.LS.removeItem(this.keys.weightSpecs);\n        this.LS.removeItem(this.keys.weightData);\n        this.LS.removeItem(this.keys.modelMetadata);\n\n        throw new Error(\n            `Failed to save model '${this.modelPath}' to local storage: ` +\n            `size quota being exceeded is a possible cause of this failure: ` +\n            `modelTopologyBytes=${modelArtifactsInfo.modelTopologyBytes}, ` +\n            `weightSpecsBytes=${modelArtifactsInfo.weightSpecsBytes}, ` +\n            `weightDataBytes=${modelArtifactsInfo.weightDataBytes}.`);\n      }\n    }\n  }\n\n  /**\n   * Load a model from local storage.\n   *\n   * See the documentation to `browserLocalStorage` for details on the saved\n   * artifacts.\n   *\n   * @returns The loaded model (if loading succeeds).\n   */\n  async load(): Promise<ModelArtifacts> {\n    const info =\n        JSON.parse(this.LS.getItem(this.keys.info)) as ModelArtifactsInfo;\n    if (info == null) {\n      throw new Error(\n          `In local storage, there is no model with name '${this.modelPath}'`);\n    }\n\n    if (info.modelTopologyType !== 'JSON') {\n      throw new Error(\n          'BrowserLocalStorage does not support loading non-JSON model ' +\n          'topology yet.');\n    }\n\n    const out: ModelArtifacts = {};\n\n    // Load topology.\n    const topology = JSON.parse(this.LS.getItem(this.keys.topology));\n    if (topology == null) {\n      throw new Error(\n          `In local storage, the topology of model '${this.modelPath}' ` +\n          `is missing.`);\n    }\n    out.modelTopology = topology;\n\n    // Load weight specs.\n    const weightSpecs = JSON.parse(this.LS.getItem(this.keys.weightSpecs));\n    if (weightSpecs == null) {\n      throw new Error(\n          `In local storage, the weight specs of model '${this.modelPath}' ` +\n          `are missing.`);\n    }\n    out.weightSpecs = weightSpecs;\n\n    // Load meta-data fields.\n    const metadataString = this.LS.getItem(this.keys.modelMetadata);\n    if (metadataString != null) {\n      const metadata = JSON.parse(metadataString) as\n          {format: string, generatedBy: string, convertedBy: string};\n      out.format = metadata['format'];\n      out.generatedBy = metadata['generatedBy'];\n      out.convertedBy = metadata['convertedBy'];\n    }\n\n    // Load weight data.\n    const weightDataBase64 = this.LS.getItem(this.keys.weightData);\n    if (weightDataBase64 == null) {\n      throw new Error(\n          `In local storage, the binary weight values of model ` +\n          `'${this.modelPath}' are missing.`);\n    }\n    out.weightData = base64StringToArrayBuffer(weightDataBase64);\n\n    return out;\n  }\n}\n\nexport const localStorageRouter: IORouter = (url: string|string[]) => {\n  if (!ENV.getBool('IS_BROWSER')) {\n    return null;\n  } else {\n    if (!Array.isArray(url) && url.startsWith(BrowserLocalStorage.URL_SCHEME)) {\n      return browserLocalStorage(\n          url.slice(BrowserLocalStorage.URL_SCHEME.length));\n    } else {\n      return null;\n    }\n  }\n};\nIORouterRegistry.registerSaveRouter(localStorageRouter);\nIORouterRegistry.registerLoadRouter(localStorageRouter);\n\n/**\n * Factory function for local storage IOHandler.\n *\n * This `IOHandler` supports both `save` and `load`.\n *\n * For each model's saved artifacts, four items are saved to local storage.\n *   - `${PATH_SEPARATOR}/${modelPath}/info`: Contains meta-info about the\n *     model, such as date saved, type of the topology, size in bytes, etc.\n *   - `${PATH_SEPARATOR}/${modelPath}/topology`: Model topology. For Keras-\n *     style models, this is a stringized JSON.\n *   - `${PATH_SEPARATOR}/${modelPath}/weight_specs`: Weight specs of the\n *     model, can be used to decode the saved binary weight values (see\n *     item below).\n *   - `${PATH_SEPARATOR}/${modelPath}/weight_data`: Concatenated binary\n *     weight values, stored as a base64-encoded string.\n *\n * Saving may throw an `Error` if the total size of the artifacts exceed the\n * browser-specific quota.\n *\n * @param modelPath A unique identifier for the model to be saved. Must be a\n *   non-empty string.\n * @returns An instance of `IOHandler`, which can be used with, e.g.,\n *   `tf.Model.save`.\n */\nexport function browserLocalStorage(modelPath: string): IOHandler {\n  return new BrowserLocalStorage(modelPath);\n}\n\nexport class BrowserLocalStorageManager implements ModelStoreManager {\n  private readonly LS: Storage;\n\n  constructor() {\n    assert(\n        ENV.getBool('IS_BROWSER'),\n        () => 'Current environment is not a web browser');\n    assert(\n        typeof window.localStorage !== 'undefined',\n        () => 'Current browser does not appear to support localStorage');\n    this.LS = window.localStorage;\n  }\n\n  async listModels(): Promise<{[path: string]: ModelArtifactsInfo}> {\n    const out: {[path: string]: ModelArtifactsInfo} = {};\n    const prefix = PATH_PREFIX + PATH_SEPARATOR;\n    const suffix = PATH_SEPARATOR + INFO_SUFFIX;\n    for (let i = 0; i < this.LS.length; ++i) {\n      const key = this.LS.key(i);\n      if (key.startsWith(prefix) && key.endsWith(suffix)) {\n        const modelPath = getModelPathFromKey(key);\n        out[modelPath] = JSON.parse(this.LS.getItem(key)) as ModelArtifactsInfo;\n      }\n    }\n    return out;\n  }\n\n  async removeModel(path: string): Promise<ModelArtifactsInfo> {\n    path = maybeStripScheme(path);\n    const keys = getModelKeys(path);\n    if (this.LS.getItem(keys.info) == null) {\n      throw new Error(`Cannot find model at path '${path}'`);\n    }\n    const info = JSON.parse(this.LS.getItem(keys.info)) as ModelArtifactsInfo;\n\n    this.LS.removeItem(keys.info);\n    this.LS.removeItem(keys.topology);\n    this.LS.removeItem(keys.weightSpecs);\n    this.LS.removeItem(keys.weightData);\n    return info;\n  }\n}\n\nif (ENV.getBool('IS_BROWSER')) {\n  // Wrap the construction and registration, to guard against browsers that\n  // don't support Local Storage.\n  try {\n    ModelStoreManagerRegistry.registerManager(\n        BrowserLocalStorage.URL_SCHEME, new BrowserLocalStorageManager());\n  } catch (err) {\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * IOHandlers related to files, such as browser-triggered file downloads,\n * user-selected files in browser.\n */\n\nimport {ENV} from '../environment';\nimport {basename, concatenateArrayBuffers, getModelArtifactsInfoForJSON} from './io_utils';\nimport {IORouter, IORouterRegistry} from './router_registry';\nimport {IOHandler, ModelArtifacts, ModelJSON, SaveResult, WeightsManifestConfig, WeightsManifestEntry} from './types';\n\nconst DEFAULT_FILE_NAME_PREFIX = 'model';\nconst DEFAULT_JSON_EXTENSION_NAME = '.json';\nconst DEFAULT_WEIGHT_DATA_EXTENSION_NAME = '.weights.bin';\n\nfunction defer<T>(f: () => T): Promise<T> {\n  return new Promise(resolve => setTimeout(resolve)).then(f);\n}\n\nexport class BrowserDownloads implements IOHandler {\n  private readonly modelTopologyFileName: string;\n  private readonly weightDataFileName: string;\n  private readonly jsonAnchor: HTMLAnchorElement;\n  private readonly weightDataAnchor: HTMLAnchorElement;\n\n  static readonly URL_SCHEME = 'downloads://';\n\n  constructor(fileNamePrefix?: string) {\n    if (!ENV.getBool('IS_BROWSER')) {\n      // TODO(cais): Provide info on what IOHandlers are available under the\n      //   current environment.\n      throw new Error(\n          'browserDownloads() cannot proceed because the current environment ' +\n          'is not a browser.');\n    }\n\n    if (fileNamePrefix.startsWith(BrowserDownloads.URL_SCHEME)) {\n      fileNamePrefix = fileNamePrefix.slice(BrowserDownloads.URL_SCHEME.length);\n    }\n    if (fileNamePrefix == null || fileNamePrefix.length === 0) {\n      fileNamePrefix = DEFAULT_FILE_NAME_PREFIX;\n    }\n\n    this.modelTopologyFileName = fileNamePrefix + DEFAULT_JSON_EXTENSION_NAME;\n    this.weightDataFileName =\n        fileNamePrefix + DEFAULT_WEIGHT_DATA_EXTENSION_NAME;\n  }\n\n  async save(modelArtifacts: ModelArtifacts): Promise<SaveResult> {\n    if (typeof(document) === 'undefined') {\n      throw new Error('Browser downloads are not supported in ' +\n          'this environment since `document` is not present');\n    }\n    const weightsURL = window.URL.createObjectURL(new Blob(\n        [modelArtifacts.weightData], {type: 'application/octet-stream'}));\n\n    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n      throw new Error(\n          'BrowserDownloads.save() does not support saving model topology ' +\n          'in binary formats yet.');\n    } else {\n      const weightsManifest: WeightsManifestConfig = [{\n        paths: ['./' + this.weightDataFileName],\n        weights: modelArtifacts.weightSpecs\n      }];\n      const modelTopologyAndWeightManifest: ModelJSON = {\n        modelTopology: modelArtifacts.modelTopology,\n        format: modelArtifacts.format,\n        generatedBy: modelArtifacts.generatedBy,\n        convertedBy: modelArtifacts.convertedBy,\n        weightsManifest\n      };\n      const modelTopologyAndWeightManifestURL =\n          window.URL.createObjectURL(new Blob(\n              [JSON.stringify(modelTopologyAndWeightManifest)],\n              {type: 'application/json'}));\n\n      // If anchor elements are not provided, create them without attaching them\n      // to parents, so that the downloaded file names can be controlled.\n      const jsonAnchor = this.jsonAnchor == null ? document.createElement('a') :\n                                                   this.jsonAnchor;\n      jsonAnchor.download = this.modelTopologyFileName;\n      jsonAnchor.href = modelTopologyAndWeightManifestURL;\n      // Trigger downloads by evoking a click event on the download anchors.\n      // When multiple downloads are started synchronously, Firefox will only\n      // save the last one.\n      await defer(() => jsonAnchor.dispatchEvent(new MouseEvent('click')));\n\n      if (modelArtifacts.weightData != null) {\n        const weightDataAnchor = this.weightDataAnchor == null ?\n            document.createElement('a') :\n            this.weightDataAnchor;\n        weightDataAnchor.download = this.weightDataFileName;\n        weightDataAnchor.href = weightsURL;\n        await defer(\n            () => weightDataAnchor.dispatchEvent(new MouseEvent('click')));\n      }\n\n      return {modelArtifactsInfo: getModelArtifactsInfoForJSON(modelArtifacts)};\n    }\n  }\n}\n\nclass BrowserFiles implements IOHandler {\n  private readonly files: File[];\n\n  constructor(files: File[]) {\n    if (files == null || files.length < 1) {\n      throw new Error(\n          `When calling browserFiles, at least 1 file is required, ` +\n          `but received ${files}`);\n    }\n    this.files = files;\n  }\n\n  async load(): Promise<ModelArtifacts> {\n    const jsonFile = this.files[0];\n    const weightFiles = this.files.slice(1);\n\n    return new Promise<ModelArtifacts>((resolve, reject) => {\n      const jsonReader = new FileReader();\n      jsonReader.onload = (event: Event) => {\n        // tslint:disable-next-line:no-any\n        const modelJSON = JSON.parse((event.target as any).result) as ModelJSON;\n        const modelTopology = modelJSON.modelTopology;\n        if (modelTopology == null) {\n          reject(new Error(\n              `modelTopology field is missing from file ${jsonFile.name}`));\n          return;\n        }\n\n        if (weightFiles.length === 0) {\n          resolve({modelTopology});\n        }\n\n        const weightsManifest = modelJSON.weightsManifest;\n        if (weightsManifest == null) {\n          reject(new Error(\n              `weightManifest field is missing from file ${jsonFile.name}`));\n          return;\n        }\n\n        let pathToFile: {[path: string]: File};\n        try {\n          pathToFile =\n              this.checkManifestAndWeightFiles(weightsManifest, weightFiles);\n        } catch (err) {\n          reject(err);\n          return;\n        }\n\n        const weightSpecs: WeightsManifestEntry[] = [];\n        const paths: string[] = [];\n        const perFileBuffers: ArrayBuffer[] = [];\n        weightsManifest.forEach(weightsGroup => {\n          weightsGroup.paths.forEach(path => {\n            paths.push(path);\n            perFileBuffers.push(null);\n          });\n          weightSpecs.push(...weightsGroup.weights);\n        });\n\n        weightsManifest.forEach(weightsGroup => {\n          weightsGroup.paths.forEach(path => {\n            const weightFileReader = new FileReader();\n            weightFileReader.onload = (event: Event) => {\n              // tslint:disable-next-line:no-any\n              const weightData = (event.target as any).result as ArrayBuffer;\n              const index = paths.indexOf(path);\n              perFileBuffers[index] = weightData;\n              if (perFileBuffers.indexOf(null) === -1) {\n                resolve({\n                  modelTopology,\n                  weightSpecs,\n                  weightData: concatenateArrayBuffers(perFileBuffers),\n                });\n              }\n            };\n            weightFileReader.onerror = error =>\n                reject(`Failed to weights data from file of path '${path}'.`);\n            weightFileReader.readAsArrayBuffer(pathToFile[path]);\n          });\n        });\n      };\n      jsonReader.onerror = error => reject(\n          `Failed to read model topology and weights manifest JSON ` +\n          `from file '${jsonFile.name}'. BrowserFiles supports loading ` +\n          `Keras-style tf.Model artifacts only.`);\n      jsonReader.readAsText(jsonFile);\n    });\n  }\n\n  /**\n   * Check the compatibility between weights manifest and weight files.\n   */\n  private checkManifestAndWeightFiles(\n      manifest: WeightsManifestConfig, files: File[]): {[path: string]: File} {\n    const basenames: string[] = [];\n    const fileNames = files.map(file => basename(file.name));\n    const pathToFile: {[path: string]: File} = {};\n    for (const group of manifest) {\n      group.paths.forEach(path => {\n        const pathBasename = basename(path);\n        if (basenames.indexOf(pathBasename) !== -1) {\n          throw new Error(\n              `Duplicate file basename found in weights manifest: ` +\n              `'${pathBasename}'`);\n        }\n        basenames.push(pathBasename);\n        if (fileNames.indexOf(pathBasename) === -1) {\n          throw new Error(\n              `Weight file with basename '${pathBasename}' is not provided.`);\n        } else {\n          pathToFile[path] = files[fileNames.indexOf(pathBasename)];\n        }\n      });\n    }\n\n    if (basenames.length !== files.length) {\n      throw new Error(\n          `Mismatch in the number of files in weights manifest ` +\n          `(${basenames.length}) and the number of weight files provided ` +\n          `(${files.length}).`);\n    }\n    return pathToFile;\n  }\n}\n\nexport const browserDownloadsRouter: IORouter = (url: string|string[]) => {\n  if (!ENV.getBool('IS_BROWSER')) {\n    return null;\n  } else {\n    if (!Array.isArray(url) && url.startsWith(BrowserDownloads.URL_SCHEME)) {\n      return browserDownloads(url.slice(BrowserDownloads.URL_SCHEME.length));\n    } else {\n      return null;\n    }\n  }\n};\nIORouterRegistry.registerSaveRouter(browserDownloadsRouter);\n\n/**\n * Creates an IOHandler that triggers file downloads from the browser.\n *\n * The returned `IOHandler` instance can be used as model exporting methods such\n * as `tf.Model.save` and supports only saving.\n *\n * ```js\n * const model = tf.sequential();\n * model.add(tf.layers.dense(\n *     {units: 1, inputShape: [10], activation: 'sigmoid'}));\n * const saveResult = await model.save('downloads://mymodel');\n * // This will trigger downloading of two files:\n * //   'mymodel.json' and 'mymodel.weights.bin'.\n * console.log(saveResult);\n * ```\n *\n * @param fileNamePrefix Prefix name of the files to be downloaded. For use with\n *   `tf.Model`, `fileNamePrefix` should follow either of the following two\n *   formats:\n *   1. `null` or `undefined`, in which case the default file\n *      names will be used:\n *      - 'model.json' for the JSON file containing the model topology and\n *        weights manifest.\n *      - 'model.weights.bin' for the binary file containing the binary weight\n *        values.\n *   2. A single string or an Array of a single string, as the file name prefix.\n *      For example, if `'foo'` is provided, the downloaded JSON\n *      file and binary weights file will be named 'foo.json' and\n *      'foo.weights.bin', respectively.\n * @param config Additional configuration for triggering downloads.\n * @returns An instance of `BrowserDownloads` `IOHandler`.\n */\n/**\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nexport function browserDownloads(fileNamePrefix = 'model'): IOHandler {\n  return new BrowserDownloads(fileNamePrefix);\n}\n\n/**\n * Creates an IOHandler that loads model artifacts from user-selected files.\n *\n * This method can be used for loading from files such as user-selected files\n * in the browser.\n * When used in conjunction with `tf.loadLayersModel`, an instance of\n * `tf.LayersModel` (Keras-style) can be constructed from the loaded artifacts.\n *\n * ```js\n * // Note: This code snippet won't run properly without the actual file input\n * //   elements in the HTML DOM.\n *\n * // Suppose there are two HTML file input (`<input type=\"file\" ...>`)\n * // elements.\n * const uploadJSONInput = document.getElementById('upload-json');\n * const uploadWeightsInput = document.getElementById('upload-weights');\n * const model = await tf.loadLayersModel(tf.io.browserFiles(\n *     [uploadJSONInput.files[0], uploadWeightsInput.files[0]]));\n * ```\n *\n * @param files `File`s to load from. Currently, this function supports only\n *   loading from files that contain Keras-style models (i.e., `tf.Model`s), for\n *   which an `Array` of `File`s is expected (in that order):\n *   - A JSON file containing the model topology and weight manifest.\n *   - Optionally, One or more binary files containing the binary weights.\n *     These files must have names that match the paths in the `weightsManifest`\n *     contained by the aforementioned JSON file, or errors will be thrown\n *     during loading. These weights files have the same format as the ones\n *     generated by `tensorflowjs_converter` that comes with the `tensorflowjs`\n *     Python PIP package. If no weights files are provided, only the model\n *     topology will be loaded from the JSON file above.\n * @returns An instance of `Files` `IOHandler`.\n */\n/**\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nexport function browserFiles(files: File[]): IOHandler {\n  return new BrowserFiles(files);\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {assert} from '../util';\n\nimport {OnProgressCallback} from './types';\n\n/**\n * Monitor Promise.all progress, fire onProgress callback function.\n *\n * @param promises Promise list going to be monitored\n * @param onProgress Callback function. Fired when a promise resolved.\n * @param startFraction Optional fraction start. Default to 0.\n * @param endFraction Optional fraction end. Default to 1.\n */\nexport function monitorPromisesProgress(\n    promises: Array<Promise<{}|void>>, onProgress: OnProgressCallback,\n    startFraction?: number, endFraction?: number) {\n  checkPromises(promises);\n  startFraction = startFraction == null ? 0 : startFraction;\n  endFraction = endFraction == null ? 1 : endFraction;\n  checkFraction(startFraction, endFraction);\n  let resolvedPromise = 0;\n\n  const registerMonitor = (promise: Promise<{}>) => {\n    promise.then(value => {\n      const fraction = startFraction +\n          ++resolvedPromise / promises.length * (endFraction - startFraction);\n      // pass fraction as parameter to callback function.\n      onProgress(fraction);\n      return value;\n    });\n    return promise;\n  };\n\n  function checkPromises(promises: Array<Promise<{}|void>>): void {\n    assert(\n        promises != null && Array.isArray(promises) && promises.length > 0,\n        () => 'promises must be a none empty array');\n  }\n\n  function checkFraction(startFraction: number, endFraction: number): void {\n    assert(\n        startFraction >= 0 && startFraction <= 1,\n        () => `Progress fraction must be in range [0, 1], but ` +\n            `got startFraction ${startFraction}`);\n    assert(\n        endFraction >= 0 && endFraction <= 1,\n        () => `Progress fraction must be in range [0, 1], but ` +\n            `got endFraction ${endFraction}`);\n    assert(\n        endFraction >= startFraction,\n        () => `startFraction must be no more than endFraction, but ` +\n            `got startFraction ${startFraction} and endFraction ` +\n            `${endFraction}`);\n  }\n\n  return Promise.all(promises.map(registerMonitor));\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedTensorMap} from '../tensor_types';\nimport * as util from '../util';\n\nimport {decodeWeights} from './io_utils';\nimport {monitorPromisesProgress} from './progress';\nimport {DTYPE_VALUE_SIZE_MAP, LoadOptions, WeightsManifestConfig, WeightsManifestEntry} from './types';\n\n/**\n * Reads binary weights data from a number of URLs.\n *\n * @param fetchURLs URLs to send the HTTP requests at, using `fetch` calls.\n * @param requestOptions RequestInit (options) for the HTTP requests.\n * @param fetchFunc Optional overriding value for the `window.fetch` function.\n * @param onProgress Optional, progress callback function, fired periodically\n *   before the load is completed.\n * @returns A `Promise` of an Array of `ArrayBuffer`. The Array has the same\n *   length as `fetchURLs`.\n */\nexport async function loadWeightsAsArrayBuffer(\n    fetchURLs: string[], loadOptions?: LoadOptions): Promise<ArrayBuffer[]> {\n  if (loadOptions == null) {\n    loadOptions = {};\n  }\n\n  const fetchFunc =\n      loadOptions.fetchFunc == null ? util.fetch : loadOptions.fetchFunc;\n\n  // Create the requests for all of the weights in parallel.\n  const requests =\n      fetchURLs.map(fetchURL => fetchFunc(fetchURL, loadOptions.requestInit));\n\n  const fetchStartFraction = 0;\n  const fetchEndFraction = 0.5;\n\n  const responses = loadOptions.onProgress == null ?\n      await Promise.all(requests) :\n      await monitorPromisesProgress(\n          requests, loadOptions.onProgress, fetchStartFraction,\n          fetchEndFraction);\n\n  const bufferPromises = responses.map(response => response.arrayBuffer());\n\n  const bufferStartFraction = 0.5;\n  const bufferEndFraction = 1;\n\n  const buffers = loadOptions.onProgress == null ?\n      await Promise.all(bufferPromises) :\n      await monitorPromisesProgress(\n          bufferPromises, loadOptions.onProgress, bufferStartFraction,\n          bufferEndFraction);\n  return buffers;\n}\n\n/**\n * Reads a weights manifest JSON configuration, fetches the weights and\n * returns them as `Tensor`s.\n *\n * @param manifest The weights manifest JSON.\n * @param filePathPrefix The path prefix for filenames given in the manifest.\n *     Defaults to the empty string.\n * @param weightNames The names of the weights to be fetched.\n */\nexport async function loadWeights(\n    manifest: WeightsManifestConfig, filePathPrefix = '',\n    weightNames?: string[],\n    requestInit?: RequestInit): Promise<NamedTensorMap> {\n  // TODO(nsthorat): Groups are currently fetched atomically. If you need a\n  // single weight from a group, the whole group will be fetched. At a future\n  // date, we should support fetching only the individual shards within a\n  // group that are needed to reconstruct the requested weight.\n  // TODO(cais): Use `decodeWeights` for implementation.\n\n  const fetchWeights = (fetchUrls: string[]) =>\n      loadWeightsAsArrayBuffer(fetchUrls, {requestInit});\n  const loadWeights = weightsLoaderFactory(fetchWeights);\n\n  return loadWeights(manifest, filePathPrefix, weightNames);\n}\n\n/**\n * Creates a function, which reads a weights manifest JSON configuration,\n * fetches the weight files using the specified function and returns them as\n * `Tensor`s.\n *\n * ```js\n * // example for creating a nodejs weight loader, which reads the weight files\n * // from disk using fs.readFileSync\n *\n * import * as fs from 'fs'\n *\n * const fetchWeightsFromDisk = (filePaths: string[]) =>\n *   filePaths.map(filePath => fs.readFileSync(filePath).buffer)\n *\n * const loadWeights = tf.io.weightsLoaderFactory(fetchWeightsFromDisk)\n *\n * const manifest = JSON.parse(\n *   fs.readFileSync('./my_model-weights_manifest').toString()\n * )\n * const weightMap = await loadWeights(manifest, './')\n * ```\n * @param fetchWeightsFunction The function used for fetching the weight files.\n * @returns Weight loading function.\n */\nexport function weightsLoaderFactory(\n    fetchWeightsFunction: (fetchUrls: string[]) => Promise<ArrayBuffer[]>):\n    (manifest: WeightsManifestConfig, filePathPrefix?: string,\n     weightNames?: string[]) => Promise<NamedTensorMap> {\n  return async(\n             manifest: WeightsManifestConfig, filePathPrefix = '',\n             weightNames?: string[]): Promise<NamedTensorMap> => {\n    // Collect all the groups, weights, and their relative offsets to be\n    // fetched.\n    const groupIndicesToFetchMap = manifest.map(() => false);\n    const groupWeightsToFetch: {\n      [group: number]: Array<{\n        manifestEntry: WeightsManifestEntry; groupOffset: number;\n        sizeBytes: number;\n      }>\n    } = {};\n    const weightsFound =\n        weightNames != null ? weightNames.map(() => false) : [];\n    const allManifestWeightNames: string[] = [];\n    manifest.forEach((manifestGroupConfig, groupIndex) => {\n      let groupOffset = 0;\n      manifestGroupConfig.weights.forEach(weightsEntry => {\n        const rawDtype = ('quantization' in weightsEntry) ?\n            weightsEntry.quantization.dtype :\n            weightsEntry.dtype;\n\n        const weightsBytes = DTYPE_VALUE_SIZE_MAP[rawDtype] *\n            util.sizeFromShape(weightsEntry.shape);\n\n        const enqueueWeightsForFetchingFn = () => {\n          groupIndicesToFetchMap[groupIndex] = true;\n          if (groupWeightsToFetch[groupIndex] == null) {\n            groupWeightsToFetch[groupIndex] = [];\n          }\n\n          groupWeightsToFetch[groupIndex].push({\n            manifestEntry: weightsEntry,\n            groupOffset,\n            sizeBytes: weightsBytes\n          });\n        };\n\n        if (weightNames != null) {\n          weightNames.forEach((weightName, weightIndex) => {\n            if (weightName === weightsEntry.name) {\n              enqueueWeightsForFetchingFn();\n              weightsFound[weightIndex] = true;\n            }\n          });\n        } else {\n          enqueueWeightsForFetchingFn();\n        }\n\n        allManifestWeightNames.push(weightsEntry.name);\n        groupOffset += weightsBytes;\n      });\n    });\n\n    if (!weightsFound.every(found => found)) {\n      const weightsNotFound = weightNames.filter((_, i) => !weightsFound[i]);\n      throw new Error(\n          `Could not find weights in manifest with names: ` +\n          `${weightsNotFound.join(', ')}. \\n` +\n          `Manifest JSON has weights with names: ` +\n          `${allManifestWeightNames.join(', ')}.`);\n    }\n\n    // Convert the one-hot boolean groupId => shouldFetch map to a list of group\n    // IDs.\n    const groupIndicesToFetch =\n        groupIndicesToFetchMap.reduce((accumulator, shouldFetch, i) => {\n          if (shouldFetch) {\n            accumulator.push(i);\n          }\n          return accumulator;\n        }, []);\n\n    const fetchUrls: string[] = [];\n    groupIndicesToFetch.forEach(i => {\n      manifest[i].paths.forEach(filepath => {\n        const fetchUrl = filePathPrefix +\n            (!filePathPrefix.endsWith('/') ? '/' : '') + filepath;\n        fetchUrls.push(fetchUrl);\n      });\n    });\n    const buffers = await fetchWeightsFunction(fetchUrls);\n\n    const weightsTensorMap: NamedTensorMap = {};\n    let bufferIndexOffset = 0;\n    groupIndicesToFetch.forEach(i => {\n      const numBuffers = manifest[i].paths.length;\n\n      let groupBytes = 0;\n      for (let i = 0; i < numBuffers; i++) {\n        groupBytes += buffers[bufferIndexOffset + i].byteLength;\n      }\n\n      // Create a buffer for the whole group.\n      const groupBuffer = new ArrayBuffer(groupBytes);\n      const groupByteBuffer = new Uint8Array(groupBuffer);\n      let groupBufferOffset = 0;\n      for (let i = 0; i < numBuffers; i++) {\n        const buffer = new Uint8Array(buffers[bufferIndexOffset + i]);\n        groupByteBuffer.set(buffer, groupBufferOffset);\n        groupBufferOffset += buffer.byteLength;\n      }\n\n      const weightsEntries = groupWeightsToFetch[i];\n      weightsEntries.forEach(weightsEntry => {\n        const byteBuffer = groupBuffer.slice(\n            weightsEntry.groupOffset,\n            weightsEntry.groupOffset + weightsEntry.sizeBytes);\n        const nameToTensorMap =\n            decodeWeights(byteBuffer, [weightsEntry.manifestEntry]);\n        for (const name in nameToTensorMap) {\n          weightsTensorMap[name] = nameToTensorMap[name];\n        }\n      });\n\n      bufferIndexOffset += numBuffers;\n    });\n\n    return weightsTensorMap;\n  };\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * IOHandler implementations based on HTTP requests in the web browser.\n *\n * Uses [`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API).\n */\n\nimport {assert, fetch} from '../util';\nimport {concatenateArrayBuffers, getModelArtifactsInfoForJSON} from './io_utils';\nimport {IORouter, IORouterRegistry} from './router_registry';\nimport {IOHandler, LoadOptions, ModelArtifacts, ModelJSON, OnProgressCallback, SaveResult, WeightsManifestConfig, WeightsManifestEntry} from './types';\nimport {loadWeightsAsArrayBuffer} from './weights_loader';\n\nconst OCTET_STREAM_MIME_TYPE = 'application/octet-stream';\nconst JSON_TYPE = 'application/json';\nexport class HTTPRequest implements IOHandler {\n  protected readonly path: string;\n  protected readonly requestInit: RequestInit;\n\n  private readonly fetch: Function;\n\n  readonly DEFAULT_METHOD = 'POST';\n\n  static readonly URL_SCHEME_REGEX = /^https?:\\/\\//;\n\n  private readonly weightPathPrefix: string;\n  private readonly onProgress: OnProgressCallback;\n\n  constructor(path: string, loadOptions?: LoadOptions) {\n    if (loadOptions == null) {\n      loadOptions = {};\n    }\n    this.weightPathPrefix = loadOptions.weightPathPrefix;\n    this.onProgress = loadOptions.onProgress;\n\n    if (loadOptions.fetchFunc != null) {\n      assert(\n          typeof loadOptions.fetchFunc === 'function',\n          () => 'Must pass a function that matches the signature of ' +\n              '`fetch` (see ' +\n              'https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)');\n      this.fetch = loadOptions.fetchFunc;\n    } else {\n      this.fetch = fetch;\n    }\n\n    assert(\n        path != null && path.length > 0,\n        () => 'URL path for http must not be null, undefined or ' +\n            'empty.');\n\n    if (Array.isArray(path)) {\n      assert(\n          path.length === 2,\n          () => 'URL paths for http must have a length of 2, ' +\n              `(actual length is ${path.length}).`);\n    }\n    this.path = path;\n\n    if (loadOptions.requestInit != null &&\n        loadOptions.requestInit.body != null) {\n      throw new Error(\n          'requestInit is expected to have no pre-existing body, but has one.');\n    }\n    this.requestInit = loadOptions.requestInit || {};\n  }\n\n  async save(modelArtifacts: ModelArtifacts): Promise<SaveResult> {\n    if (modelArtifacts.modelTopology instanceof ArrayBuffer) {\n      throw new Error(\n          'BrowserHTTPRequest.save() does not support saving model topology ' +\n          'in binary formats yet.');\n    }\n\n    const init = Object.assign({method: this.DEFAULT_METHOD}, this.requestInit);\n    init.body = new FormData();\n\n    const weightsManifest: WeightsManifestConfig = [{\n      paths: ['./model.weights.bin'],\n      weights: modelArtifacts.weightSpecs,\n    }];\n    const modelTopologyAndWeightManifest: ModelJSON = {\n      modelTopology: modelArtifacts.modelTopology,\n      format: modelArtifacts.format,\n      generatedBy: modelArtifacts.generatedBy,\n      convertedBy: modelArtifacts.convertedBy,\n      weightsManifest\n    };\n\n    init.body.append(\n        'model.json',\n        new Blob(\n            [JSON.stringify(modelTopologyAndWeightManifest)],\n            {type: JSON_TYPE}),\n        'model.json');\n\n    if (modelArtifacts.weightData != null) {\n      init.body.append(\n          'model.weights.bin',\n          new Blob([modelArtifacts.weightData], {type: OCTET_STREAM_MIME_TYPE}),\n          'model.weights.bin');\n    }\n\n    const response = await this.fetch(this.path, init);\n\n    if (response.ok) {\n      return {\n        modelArtifactsInfo: getModelArtifactsInfoForJSON(modelArtifacts),\n        responses: [response],\n      };\n    } else {\n      throw new Error(\n          `BrowserHTTPRequest.save() failed due to HTTP response status ` +\n          `${response.status}.`);\n    }\n  }\n\n  /**\n   * Load model artifacts via HTTP request(s).\n   *\n   * See the documentation to `tf.io.http` for details on the saved\n   * artifacts.\n   *\n   * @returns The loaded model artifacts (if loading succeeds).\n   */\n  async load(): Promise<ModelArtifacts> {\n    const modelConfigRequest = await this.fetch(this.path, this.requestInit);\n\n    if (!modelConfigRequest.ok) {\n      throw new Error(\n          `Request to ${this.path} failed with status code ` +\n          `${modelConfigRequest.status}. Please verify this URL points to ` +\n          `the model JSON of the model to load.`);\n    }\n    let modelConfig: ModelJSON;\n    try {\n      modelConfig = await modelConfigRequest.json();\n    } catch (e) {\n      let message = `Failed to parse model JSON of response from ${this.path}.`;\n      // TODO(nsthorat): Remove this after some time when we're comfortable that\n      // .pb files are mostly gone.\n      if (this.path.endsWith('.pb')) {\n        message += ' Your path contains a .pb file extension. ' +\n            'Support for .pb models have been removed in TensorFlow.js 1.0 ' +\n            'in favor of .json models. You can re-convert your Python ' +\n            'TensorFlow model using the TensorFlow.js 1.0 conversion scripts ' +\n            'or you can convert your.pb models with the \\'pb2json\\'' +\n            'NPM script in the tensorflow/tfjs-converter repository.';\n      } else {\n        message += ' Please make sure the server is serving valid ' +\n            'JSON for this request.';\n      }\n      throw new Error(message);\n    }\n    const modelTopology = modelConfig.modelTopology;\n    const weightsManifest = modelConfig.weightsManifest;\n\n    // We do not allow both modelTopology and weightsManifest to be missing.\n    if (modelTopology == null && weightsManifest == null) {\n      throw new Error(\n          `The JSON from HTTP path ${this.path} contains neither model ` +\n          `topology or manifest for weights.`);\n    }\n\n    let weightSpecs: WeightsManifestEntry[];\n    let weightData: ArrayBuffer;\n    if (weightsManifest != null) {\n      const results = await this.loadWeights(weightsManifest);\n      [weightSpecs, weightData] = results;\n    }\n\n    return {modelTopology, weightSpecs, weightData};\n  }\n\n  private async loadWeights(weightsManifest: WeightsManifestConfig):\n      Promise<[WeightsManifestEntry[], ArrayBuffer]> {\n    const weightPath = Array.isArray(this.path) ? this.path[1] : this.path;\n    const [prefix, suffix] = parseUrl(weightPath);\n    const pathPrefix = this.weightPathPrefix || prefix;\n\n    const weightSpecs = [];\n    for (const entry of weightsManifest) {\n      weightSpecs.push(...entry.weights);\n    }\n\n    const fetchURLs: string[] = [];\n    weightsManifest.forEach(weightsGroup => {\n      weightsGroup.paths.forEach(path => {\n        fetchURLs.push(pathPrefix + path + suffix);\n      });\n    });\n    const buffers = await loadWeightsAsArrayBuffer(fetchURLs, {\n      requestInit: this.requestInit,\n      fetchFunc: this.fetch,\n      onProgress: this.onProgress\n    });\n    return [weightSpecs, concatenateArrayBuffers(buffers)];\n  }\n}\n\n/**\n * Extract the prefix and suffix of the url, where the prefix is the path before\n * the last file, and suffix is the search params after the last file.\n * ```\n * const url = 'http://tfhub.dev/model/1/tensorflowjs_model.pb?tfjs-format=file'\n * [prefix, suffix] = parseUrl(url)\n * // prefix = 'http://tfhub.dev/model/1/'\n * // suffix = '?tfjs-format=file'\n * ```\n * @param url the model url to be parsed.\n */\nexport function parseUrl(url: string): [string, string] {\n  const lastSlash = url.lastIndexOf('/');\n  const lastSearchParam = url.lastIndexOf('?');\n  const prefix = url.substring(0, lastSlash);\n  const suffix =\n      lastSearchParam > lastSlash ? url.substring(lastSearchParam) : '';\n  return [prefix + '/', suffix];\n}\n\nexport function isHTTPScheme(url: string): boolean {\n  return url.match(HTTPRequest.URL_SCHEME_REGEX) != null;\n}\n\nexport const httpRouter: IORouter =\n    (url: string, onProgress?: OnProgressCallback) => {\n      if (typeof fetch === 'undefined') {\n        // `http` uses `fetch` or `node-fetch`, if one wants to use it in\n        // an environment that is not the browser or node they have to setup a\n        // global fetch polyfill.\n        return null;\n      } else {\n        let isHTTP = true;\n        if (Array.isArray(url)) {\n          isHTTP = url.every(urlItem => isHTTPScheme(urlItem));\n        } else {\n          isHTTP = isHTTPScheme(url);\n        }\n        if (isHTTP) {\n          return http(url, {onProgress});\n        }\n      }\n      return null;\n    };\nIORouterRegistry.registerSaveRouter(httpRouter);\nIORouterRegistry.registerLoadRouter(httpRouter);\n\n/**\n * Creates an IOHandler subtype that sends model artifacts to HTTP server.\n *\n * An HTTP request of the `multipart/form-data` mime type will be sent to the\n * `path` URL. The form data includes artifacts that represent the topology\n * and/or weights of the model. In the case of Keras-style `tf.Model`, two\n * blobs (files) exist in form-data:\n *   - A JSON file consisting of `modelTopology` and `weightsManifest`.\n *   - A binary weights file consisting of the concatenated weight values.\n * These files are in the same format as the one generated by\n * [tfjs_converter](https://js.tensorflow.org/tutorials/import-keras.html).\n *\n * The following code snippet exemplifies the client-side code that uses this\n * function:\n *\n * ```js\n * const model = tf.sequential();\n * model.add(\n *     tf.layers.dense({units: 1, inputShape: [100], activation: 'sigmoid'}));\n *\n * const saveResult = await model.save(tf.io.http(\n *     'http://model-server:5000/upload', {method: 'PUT'}));\n * console.log(saveResult);\n * ```\n *\n * If the default `POST` method is to be used, without any custom parameters\n * such as headers, you can simply pass an HTTP or HTTPS URL to `model.save`:\n *\n * ```js\n * const saveResult = await model.save('http://model-server:5000/upload');\n * ```\n *\n * The following GitHub Gist\n * https://gist.github.com/dsmilkov/1b6046fd6132d7408d5257b0976f7864\n * implements a server based on [flask](https://github.com/pallets/flask) that\n * can receive the request. Upon receiving the model artifacts via the requst,\n * this particular server reconsistutes instances of [Keras\n * Models](https://keras.io/models/model/) in memory.\n *\n *\n * @param path A URL path to the model.\n *   Can be an absolute HTTP path (e.g.,\n *   'http://localhost:8000/model-upload)') or a relative path (e.g.,\n *   './model-upload').\n * @param requestInit Request configurations to be used when sending\n *    HTTP request to server using `fetch`. It can contain fields such as\n *    `method`, `credentials`, `headers`, `mode`, etc. See\n *    https://developer.mozilla.org/en-US/docs/Web/API/Request/Request\n *    for more information. `requestInit` must not have a body, because the\n * body will be set by TensorFlow.js. File blobs representing the model\n * topology (filename: 'model.json') and the weights of the model (filename:\n * 'model.weights.bin') will be appended to the body. If `requestInit` has a\n * `body`, an Error will be thrown.\n * @param loadOptions Optional configuration for the loading. It includes the\n *   following fields:\n *   - weightPathPrefix Optional, this specifies the path prefix for weight\n *     files, by default this is calculated from the path param.\n *   - fetchFunc Optional, custom `fetch` function. E.g., in Node.js,\n *     the `fetch` from node-fetch can be used here.\n *   - onProgress Optional, progress callback function, fired periodically\n *     before the load is completed.\n * @returns An instance of `IOHandler`.\n */\n/**\n * @doc {\n *   heading: 'Models',\n *   subheading: 'Loading',\n *   namespace: 'io',\n *   ignoreCI: true\n * }\n */\nexport function http(path: string, loadOptions?: LoadOptions): IOHandler {\n  return new HTTPRequest(path, loadOptions);\n}\n\n/**\n * Deprecated. Use `tf.io.http`.\n * @param path\n * @param loadOptions\n */\nexport function browserHTTPRequest(\n    path: string, loadOptions?: LoadOptions): IOHandler {\n  return http(path, loadOptions);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * IOHandlers that pass through the in-memory ModelArtifacts format.\n */\n\nimport {IOHandler, ModelArtifacts, SaveResult, TrainingConfig, WeightsManifestEntry} from './types';\n\nclass PassthroughLoader implements IOHandler {\n  constructor(\n      private readonly modelTopology?: {}|ArrayBuffer,\n      private readonly weightSpecs?: WeightsManifestEntry[],\n      private readonly weightData?: ArrayBuffer,\n      private readonly trainingConfig?: TrainingConfig) {}\n\n  async load(): Promise<ModelArtifacts> {\n    let result = {};\n    if (this.modelTopology != null) {\n      result = {modelTopology: this.modelTopology, ...result};\n    }\n    if (this.weightSpecs != null && this.weightSpecs.length > 0) {\n      result = {weightSpecs: this.weightSpecs, ...result};\n    }\n    if (this.weightData != null && this.weightData.byteLength > 0) {\n      result = {weightData: this.weightData, ...result};\n    }\n    if (this.trainingConfig != null) {\n      result = {trainingConfig: this.trainingConfig, ...result};\n    }\n    return result;\n  }\n}\n\nclass PassthroughSaver implements IOHandler {\n  constructor(\n      private readonly saveHandler:\n          (artifacts: ModelArtifacts) => Promise<SaveResult>) {}\n\n  async save(modelArtifacts: ModelArtifacts) {\n    return this.saveHandler(modelArtifacts);\n  }\n}\n\n/**\n * Creates an IOHandler that loads model artifacts from memory.\n *\n * When used in conjunction with `tf.loadLayersModel`, an instance of\n * `tf.LayersModel` (Keras-style) can be constructed from the loaded artifacts.\n *\n * ```js\n * const model = await tf.loadLayersModel(tf.io.fromMemory(\n *     modelTopology, weightSpecs, weightData));\n * ```\n *\n * @param modelTopology a object containing model topology (i.e., parsed from\n *   the JSON format).\n * @param weightSpecs An array of `WeightsManifestEntry` objects describing the\n *   names, shapes, types, and quantization of the weight data.\n * @param weightData A single `ArrayBuffer` containing the weight data,\n *   concatenated in the order described by the weightSpecs.\n * @param trainingConfig Model training configuration. Optional.\n *\n * @returns A passthrough `IOHandler` that simply loads the provided data.\n */\nexport function fromMemory(\n    modelTopology: {}, weightSpecs?: WeightsManifestEntry[],\n    weightData?: ArrayBuffer, trainingConfig?: TrainingConfig): IOHandler {\n  // TODO(cais): The arguments should probably be consolidated into a single\n  // object, with proper deprecation process. Even though this function isn't\n  // documented, it is public and being used by some downstream libraries.\n  return new PassthroughLoader(\n      modelTopology, weightSpecs, weightData, trainingConfig);\n}\n\n/**\n * Creates an IOHandler that passes saved model artifacts to a callback.\n *\n * ```js\n * function handleSave(artifacts) {\n *   // ... do something with the artifacts ...\n *   return {modelArtifactsInfo: {...}, ...};\n * }\n *\n * const saveResult = model.save(tf.io.withSaveHandler(handleSave));\n * ```\n *\n * @param saveHandler A function that accepts a `ModelArtifacts` and returns a\n *     `SaveResult`.\n */\nexport function withSaveHandler(\n    saveHandler: (artifacts: ModelArtifacts) =>\n        Promise<SaveResult>): IOHandler {\n  return new PassthroughSaver(saveHandler);\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Tensor1D, Tensor2D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {TensorLike} from '../types';\nimport * as util from '../util';\n\nimport {oneHot} from './array_ops';\nimport {op} from './operation';\n\n/**\n * Computes the confusion matrix from true labels and predicted labels.\n *\n * ```js\n * const labels = tf.tensor1d([0, 1, 2, 1, 0], 'int32');\n * const predictions = tf.tensor1d([0, 2, 2, 1, 0], 'int32');\n * const numClasses = 3;\n * const out = tf.math.confusionMatrix(labels, predictions, numClasses);\n * out.print();\n * // Expected output matrix:\n * // [[2, 0, 0],\n * //  [0, 1, 1],\n * //  [0, 0, 1]]\n * ```\n *\n * @param labels The target labels, assumed to be 0-based integers\n *   for the classes. The shape is `[numExamples]`, where\n *   `numExamples` is the number of examples included.\n * @param predictions The predicted classes, assumed to be\n *   0-based integers for the classes. Must have the same shape as `labels`.\n * @param numClasses Number of all classes, as an integer.\n *   Its value must be larger than the largest element in `labels` and\n *   `predictions`.\n * @returns The confusion matrix as a int32-type 2D tensor. The value at\n *   row `r` and column `c` is the number of times examples of actual class\n *   `r` were predicted as class `c`.\n */\n/** @doc {heading: 'Operations', subheading: 'Evaluation'} */\nexport function confusionMatrix_(\n    labels: Tensor1D|TensorLike, predictions: Tensor1D|TensorLike,\n    numClasses: number): Tensor2D {\n  const $labels = convertToTensor(labels, 'labels', 'confusionMatrix');\n  const $predictions =\n      convertToTensor(predictions, 'predictions', 'confusionMatrix');\n\n  util.assert(\n      numClasses == null || numClasses > 0 && Number.isInteger(numClasses),\n      () => `If provided, numClasses must be a positive integer, ` +\n          `but got ${numClasses}`);\n  util.assert(\n      $labels.rank === 1,\n      () => `Expected the rank of labels to be 1, but got ${$labels.rank}`);\n  util.assert(\n      $predictions.rank === 1,\n      () => `Expected the rank of predictions to be 1, ` +\n          `but got ${$predictions.rank}`);\n  util.assert(\n      $labels.shape[0] === $predictions.shape[0],\n      () => `Mismatch in the number of examples: ` +\n          `${$labels.shape[0]} vs. ${$predictions.shape[0]}. ` +\n          `Labels and predictions should have the same number of elements.`);\n  util.assert(\n      numClasses > 0 && Number.isInteger(numClasses),\n      () => `numClasses is required to be a positive integer, but got ` +\n          `${numClasses}`);\n  // TODO(cais): In the future, if oneHot supports tensors inputs for\n  //   `numClasses`, `confusionMatrix` can make `numClasses` optional.\n\n  const oneHotLabels = oneHot($labels.asType('int32'), numClasses) as Tensor2D;\n  const oneHotPredictions =\n      oneHot($predictions.asType('int32'), numClasses) as Tensor2D;\n  return oneHotLabels.transpose().matMul(oneHotPredictions).asType('int32');\n}\n\nexport const confusionMatrix = op({confusionMatrix_});\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {Tensor, Tensor2D, Tensor3D} from '../tensor';\nimport {convertToTensor} from '../tensor_util_env';\nimport {PixelData, TensorLike} from '../types';\n\nimport {op} from './operation';\n\n/**\n * Creates a `tf.Tensor` from an image.\n *\n * ```js\n * const image = new ImageData(1, 1);\n * image.data[0] = 100;\n * image.data[1] = 150;\n * image.data[2] = 200;\n * image.data[3] = 255;\n *\n * tf.browser.fromPixels(image).print();\n * ```\n *\n * @param pixels The input image to construct the tensor from. The\n * supported image types are all 4-channel. You can also pass in an image\n * object with following attributes:\n * `{data: Uint8Array; width: number; height: number}`\n * @param numChannels The number of channels of the output tensor. A\n * numChannels value less than 4 allows you to ignore channels. Defaults to\n * 3 (ignores alpha channel of input image).\n */\n/** @doc {heading: 'Browser', namespace: 'browser', ignoreCI: true} */\nfunction fromPixels_(\n    pixels: PixelData|ImageData|HTMLImageElement|HTMLCanvasElement|\n    HTMLVideoElement,\n    numChannels = 3): Tensor3D {\n  if (numChannels > 4) {\n    throw new Error(\n        'Cannot construct Tensor with more than 4 channels from pixels.');\n  }\n  return ENGINE.fromPixels(pixels, numChannels);\n}\n\n/**\n * Draws a `tf.Tensor` of pixel values to a byte array or optionally a\n * canvas.\n *\n * When the dtype of the input is 'float32', we assume values in the range\n * [0-1]. Otherwise, when input is 'int32', we assume values in the range\n * [0-255].\n *\n * Returns a promise that resolves when the canvas has been drawn to.\n *\n * @param img A rank-2 or rank-3 tensor. If rank-2, draws grayscale. If\n *     rank-3, must have depth of 1, 3 or 4. When depth of 1, draws\n * grayscale. When depth of 3, we draw with the first three components of\n * the depth dimension corresponding to r, g, b and alpha = 1. When depth of\n * 4, all four components of the depth dimension correspond to r, g, b, a.\n * @param canvas The canvas to draw to.\n */\n/** @doc {heading: 'Browser', namespace: 'browser'} */\nexport async function toPixels(\n    img: Tensor2D|Tensor3D|TensorLike,\n    canvas?: HTMLCanvasElement): Promise<Uint8ClampedArray> {\n  let $img = convertToTensor(img, 'img', 'toPixels');\n  if (!(img instanceof Tensor)) {\n    // Assume int32 if user passed a native array.\n    $img = $img.toInt();\n  }\n  if ($img.rank !== 2 && $img.rank !== 3) {\n    throw new Error(\n        `toPixels only supports rank 2 or 3 tensors, got rank ${$img.rank}.`);\n  }\n  const [height, width] = $img.shape.slice(0, 2);\n  const depth = $img.rank === 2 ? 1 : $img.shape[2];\n\n  if (depth > 4 || depth === 2) {\n    throw new Error(\n        `toPixels only supports depth of size ` +\n        `1, 3 or 4 but got ${depth}`);\n  }\n\n  const data = await $img.data();\n  const minTensor = $img.min();\n  const maxTensor = $img.max();\n  const [minVals, maxVals] =\n      await Promise.all([minTensor.data(), maxTensor.data()]);\n  const min = minVals[0];\n  const max = maxVals[0];\n  minTensor.dispose();\n  maxTensor.dispose();\n  if ($img.dtype === 'float32') {\n    if (min < 0 || max > 1) {\n      throw new Error(\n          `Tensor values for a float32 Tensor must be in the ` +\n          `range [0 - 1] but got range [${min} - ${max}].`);\n    }\n  } else if ($img.dtype === 'int32') {\n    if (min < 0 || max > 255) {\n      throw new Error(\n          `Tensor values for a int32 Tensor must be in the ` +\n          `range [0 - 255] but got range [${min} - ${max}].`);\n    }\n  } else {\n    throw new Error(\n        `Unsupported type for toPixels: ${$img.dtype}.` +\n        ` Please use float32 or int32 tensors.`);\n  }\n  const multiplier = $img.dtype === 'float32' ? 255 : 1;\n  const bytes = new Uint8ClampedArray(width * height * 4);\n\n  for (let i = 0; i < height * width; ++i) {\n    let r, g, b, a;\n    if (depth === 1) {\n      r = data[i] * multiplier;\n      g = data[i] * multiplier;\n      b = data[i] * multiplier;\n      a = 255;\n    } else if (depth === 3) {\n      r = data[i * 3] * multiplier;\n      g = data[i * 3 + 1] * multiplier;\n      b = data[i * 3 + 2] * multiplier;\n      a = 255;\n    } else if (depth === 4) {\n      r = data[i * 4] * multiplier;\n      g = data[i * 4 + 1] * multiplier;\n      b = data[i * 4 + 2] * multiplier;\n      a = data[i * 4 + 3] * multiplier;\n    }\n\n    const j = i * 4;\n    bytes[j + 0] = Math.round(r);\n    bytes[j + 1] = Math.round(g);\n    bytes[j + 2] = Math.round(b);\n    bytes[j + 3] = Math.round(a);\n  }\n\n  if (canvas != null) {\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d');\n    const imageData = new ImageData(bytes, width, height);\n    ctx.putImageData(imageData, 0, 0);\n  }\n  if ($img !== img) {\n    $img.dispose();\n  }\n  return bytes;\n}\n\nexport const fromPixels = op({fromPixels_});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {assert} from './util';\n\n/**\n * Types to support JSON-esque data structures internally.\n *\n * Internally ConfigDict's use camelCase keys and values where the\n * values are class names to be instantiated.  On the python side, these\n * will be snake_case.  Internally we allow Enums into the values for better\n * type safety, but these need to be converted to raw primitives (usually\n * strings) for round-tripping with python.\n *\n * toConfig returns the TS-friendly representation. model.toJSON() returns\n * the pythonic version as that's the portable format.  If you need to\n * python-ify a non-model level toConfig output, you'll need to use a\n * convertTsToPythonic from serialization_utils in -Layers.\n *\n */\nexport declare type ConfigDictValue =\n    boolean | number | string | null | ConfigDictArray | ConfigDict;\nexport declare interface ConfigDict {\n  [key: string]: ConfigDictValue;\n}\nexport declare interface ConfigDictArray extends Array<ConfigDictValue> {}\n\n/**\n * Type to represent the class-type of Serializable objects.\n *\n * Ie the class prototype with access to the constructor and any\n * static members/methods. Instance methods are not listed here.\n *\n * Source for this idea: https://stackoverflow.com/a/43607255\n */\nexport declare type SerializableConstructor<T extends Serializable> = {\n  // tslint:disable-next-line:no-any\n  new (...args: any[]): T; className: string; fromConfig: FromConfigMethod<T>;\n};\nexport declare type FromConfigMethod<T extends Serializable> =\n    (cls: SerializableConstructor<T>, config: ConfigDict) => T;\n\n/**\n * Serializable defines the serialization contract.\n *\n * TFJS requires serializable classes to return their className when asked\n * to avoid issues with minification.\n */\nexport abstract class Serializable {\n  /**\n   * Return the class name for this class to use in serialization contexts.\n   *\n   * Generally speaking this will be the same thing that constructor.name\n   * would have returned.  However, the class name needs to be robust\n   * against minification for serialization/deserialization to work properly.\n   *\n   * There's also places such as initializers.VarianceScaling, where\n   * implementation details between different languages led to different\n   * class hierarchies and a non-leaf node is used for serialization purposes.\n   */\n  getClassName(): string {\n    return (this.constructor as SerializableConstructor<Serializable>)\n        .className;\n  }\n\n  /**\n   * Return all the non-weight state needed to serialize this object.\n   */\n  abstract getConfig(): ConfigDict;\n\n  /**\n   * Creates an instance of T from a ConfigDict.\n   *\n   * This works for most descendants of serializable.  A few need to\n   * provide special handling.\n   * @param cls A Constructor for the class to instantiate.\n   * @param config The Configuration for the object.\n   */\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(config);\n  }\n}\n\n/**\n * Maps string keys to class constructors.\n *\n * Used during (de)serialization from the cross-language JSON format, which\n * requires the class name in the serialization format matches the class\n * names as used in Python, should it exist.\n */\nexport class SerializationMap {\n  private static instance: SerializationMap;\n  classNameMap: {\n    [className: string]:\n        [SerializableConstructor<Serializable>, FromConfigMethod<Serializable>]\n  };\n\n  private constructor() {\n    this.classNameMap = {};\n  }\n\n  /**\n   * Returns the singleton instance of the map.\n   */\n  static getMap(): SerializationMap {\n    if (SerializationMap.instance == null) {\n      SerializationMap.instance = new SerializationMap();\n    }\n    return SerializationMap.instance;\n  }\n\n  /**\n   * Registers the class as serializable.\n   */\n  static register<T extends Serializable>(cls: SerializableConstructor<T>) {\n    SerializationMap.getMap().classNameMap[cls.className] =\n        [cls, cls.fromConfig];\n  }\n}\n\n/**\n * Register a class with the serialization map of TensorFlow.js.\n *\n * This is often used for registering custom Layers, so they can be\n * serialized and deserialized.\n *\n * Example:\n *\n * ```js\n * class MyCustomLayer extends tf.layers.Layer {\n *   static className = 'MyCustomLayer';\n *\n *   constructor(config) {\n *     super(config);\n *   }\n * }\n * tf.serialization.registerClass(MyCustomLayer);\n * ```\n *\n * @param cls The class to be registered. It must have a public static member\n *   called `className` defined and the value must be a non-empty string.\n */\n/** @doc {heading: 'Models', subheading: 'Serialization', ignoreCI: true} */\nexport function registerClass<T extends Serializable>(\n    cls: SerializableConstructor<T>) {\n  assert(\n      cls.className != null,\n      () => `Class being registered does not have the static className ` +\n          `property defined.`);\n  assert(\n      typeof cls.className === 'string',\n      () => `className is required to be a string, but got type ` +\n          typeof cls.className);\n  assert(\n      cls.className.length > 0,\n      () => `Class being registered has an empty-string as its className, ` +\n          `which is disallowed.`);\n\n  SerializationMap.register(cls);\n}\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from './engine';\nimport {inferShape} from './tensor_util_env';\nimport {RecursiveArray, TensorLike, TypedArray} from './types';\nimport {arraysEqual, flatten, isString, isTypedArray} from './util';\n\nconst TEST_EPSILON_FLOAT32 = 1e-3;\nexport const TEST_EPSILON_FLOAT16 = 1e-1;\n\nexport function expectArraysClose(\n    actual: TypedArray|number|RecursiveArray<number>,\n    expected: TypedArray|number|RecursiveArray<number>, epsilon?: number) {\n  if (epsilon == null) {\n    epsilon = testEpsilon();\n  }\n  return expectArraysPredicate(\n      actual, expected, (a, b) => areClose(a as number, b as number, epsilon));\n}\n\nexport function testEpsilon() {\n  return ENGINE.backend.floatPrecision() === 32 ? TEST_EPSILON_FLOAT32 :\n                                                  TEST_EPSILON_FLOAT16;\n}\n\nfunction expectArraysPredicate(\n    actual: TensorLike, expected: TensorLike,\n    predicate: (a: {}, b: {}) => boolean) {\n  let checkClassType = true;\n  if (isTypedArray(actual) || isTypedArray(expected)) {\n    checkClassType = false;\n  }\n  if (isTypedArray(actual) && isTypedArray(expected)) {\n    checkClassType = true;\n  }\n  if (checkClassType) {\n    const aType = actual.constructor.name;\n    const bType = expected.constructor.name;\n\n    if (aType !== bType) {\n      throw new Error(\n          `Arrays are of different type. Actual: ${aType}. ` +\n          `Expected: ${bType}`);\n    }\n  }\n\n  if (Array.isArray(actual) && Array.isArray(expected)) {\n    const actualShape = inferShape(actual);\n    const expectedShape = inferShape(expected);\n    if (!arraysEqual(actualShape, expectedShape)) {\n      throw new Error(\n          `Arrays have different shapes. ` +\n          `Actual: [${actualShape}]. Expected: [${expectedShape}]`);\n    }\n  }\n\n  const actualFlat =\n      isTypedArray(actual) ? actual : flatten(actual as RecursiveArray<number>);\n  const expectedFlat = isTypedArray(expected) ?\n      expected :\n      flatten(expected as RecursiveArray<number>);\n\n  if (actualFlat.length !== expectedFlat.length) {\n    throw new Error(\n        `Arrays have different lengths actual: ${actualFlat.length} vs ` +\n        `expected: ${expectedFlat.length}.\\n` +\n        `Actual:   ${actualFlat}.\\n` +\n        `Expected: ${expectedFlat}.`);\n  }\n  for (let i = 0; i < expectedFlat.length; ++i) {\n    const a = actualFlat[i];\n    const e = expectedFlat[i];\n\n    if (!predicate(a, e)) {\n      throw new Error(\n          `Arrays differ: actual[${i}] = ${a}, expected[${i}] = ${e}.\\n` +\n          `Actual:   ${actualFlat}.\\n` +\n          `Expected: ${expectedFlat}.`);\n    }\n  }\n}\n\nexport interface DoneFn {\n  (): void;\n  fail: (message?: Error|string) => void;\n}\n\nexport function expectPromiseToFail(fn: () => Promise<{}>, done: DoneFn): void {\n  fn().then(() => done.fail(), () => done());\n}\n\nexport function expectArraysEqual(actual: TensorLike, expected: TensorLike) {\n  const exp = typeof expected === 'string' || typeof expected === 'number' ||\n          typeof expected === 'boolean' ?\n      [expected] as number[] :\n      expected as number[];\n  if (isString(actual) || isString((actual as string[])[0]) ||\n      isString(expected) || isString((expected as string[])[0])) {\n    // tslint:disable-next-line: triple-equals\n    return expectArraysPredicate(actual, exp, (a, b) => a == b);\n  }\n  return expectArraysPredicate(\n      actual, expected, (a, b) => areClose(a as number, b as number, 0));\n}\n\nexport function expectNumbersClose(a: number, e: number, epsilon?: number) {\n  if (epsilon == null) {\n    epsilon = testEpsilon();\n  }\n  if (!areClose(a, e, epsilon)) {\n    throw new Error(`Numbers differ: actual === ${a}, expected === ${e}`);\n  }\n}\n\nfunction areClose(a: number, e: number, epsilon: number): boolean {\n  if (!isFinite(a) && !isFinite(e)) {\n    return true;\n  }\n  if (isNaN(a) || isNaN(e) || Math.abs(a - e) > epsilon) {\n    return false;\n  }\n  return true;\n}\n\nexport function expectValuesInRange(\n    actual: TypedArray|number[], low: number, high: number) {\n  for (let i = 0; i < actual.length; i++) {\n    if (actual[i] < low || actual[i] > high) {\n      throw new Error(\n          `Value out of range:${actual[i]} low: ${low}, high: ${high}`);\n    }\n  }\n}\n\nexport function expectArrayBuffersEqual(\n    actual: ArrayBuffer, expected: ArrayBuffer) {\n  // Safari & Jasmine don't like comparing ArrayBuffers directly. Wrapping in\n  // a Float32Array solves this issue.\n  expect(new Float32Array(actual)).toEqual(new Float32Array(expected));\n}\n","/** @license See the LICENSE file. */\n\n// This code is auto-generated, do not modify this file!\nconst version = '1.2.2';\nexport {version};\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {dispose} from '../globals';\nimport {variableGrads} from '../gradients';\nimport {scalar} from '../ops/ops';\nimport {Serializable} from '../serialization';\nimport {Scalar, Variable} from '../tensor';\nimport {NamedTensor, NamedTensorMap} from '../tensor_types';\n\n/**\n * A variable that belongs to an optimizer.\n *\n * The `originalName` field is required for keeping track of the canonical\n * name of the variable, which is usually the name of the model weight that\n * the variable is related to plus a suffix, e.g., 'dense1/kernel/momentum'.\n * The name of the `Variable` object itself cannot be used directly due to\n * possible deduplication: Every `Variable` must have a unique name but more\n * than one optimizer objects of the same type may be created for the same model\n * or the same `Variable`.\n */\nexport interface OptimizerVariable {\n  originalName: string;\n  variable: Variable;\n}\n\n/** @doc {heading: 'Training', subheading: 'Classes', namespace: 'train'} */\nexport abstract class Optimizer extends Serializable {\n  protected iterations_: number;\n\n  /**\n   * Executes `f()` and minimizes the scalar output of `f()` by computing\n   * gradients of y with respect to the list of trainable variables provided by\n   * `varList`. If no list is provided, it defaults to all trainable variables.\n   *\n   * @param f The function to execute and whose output to minimize.\n   * @param returnCost Whether to return the scalar cost value produced by\n   * executing `f()`.\n   * @param varList An optional list of variables to update. If specified, only\n   * the trainable variables in varList will be updated by minimize. Defaults to\n   * all trainable variables.\n   */\n  /** @doc {heading: 'Training', subheading: 'Optimizers'} */\n  minimize(f: () => Scalar, returnCost = false, varList?: Variable[]): Scalar\n      |null {\n    const {value, grads} = this.computeGradients(f, varList);\n\n    if (varList != null) {\n      const gradArray: NamedTensor[] =\n          varList.map(v => ({name: v.name, tensor: grads[v.name]}));\n      this.applyGradients(gradArray);\n    } else {\n      this.applyGradients(grads);\n    }\n\n    // Dispose gradients.\n    dispose(grads);\n\n    if (returnCost) {\n      return value as Scalar;\n    } else {\n      value.dispose();\n      return null;\n    }\n  }\n\n  /**\n   * The number of iterations that this optimizer instance has been invoked for.\n   */\n  get iterations(): number {\n    if (this.iterations_ == null) {\n      this.iterations_ = 0;\n    }\n    return this.iterations_;\n  }\n\n  protected incrementIterations() {\n    this.iterations_ = this.iterations + 1;\n  }\n\n  /**\n   * Executes f() and computes the gradient of the scalar output of f() with\n   * respect to the list of trainable variables provided by `varList`. If no\n   * list is provided, it defaults to all trainable variables.\n   *\n   * @param f The function to execute and whose output to use for computing\n   * gradients with respect to variables.\n   * @param varList An optional list of variables to compute gradients with\n   * respect to. If specified, only the trainable variables in varList will have\n   * gradients computed with respect to. Defaults to all trainable variables.\n   */\n  computeGradients(f: () => Scalar, varList?: Variable[]):\n      {value: Scalar, grads: NamedTensorMap} {\n    return variableGrads(f, varList);\n  }\n\n  /**\n   * Updates variables by using the computed gradients.\n   *\n   * @param variableGradients A mapping of variable name to its gradient value.\n   */\n  abstract applyGradients(variableGradients: NamedTensorMap|\n                          NamedTensor[]): void;\n\n  /**\n   * Dispose the variables (if any) owned by this optimizer instance.\n   */\n  dispose(): void {\n    if (this.iterations_ != null) {\n      dispose(this.iterations_);\n    }\n  }\n\n  async saveIterations(): Promise<NamedTensor> {\n    if (this.iterations_ == null) {\n      this.iterations_ = 0;\n    }\n    return {\n      name: 'iter',  // Named for Python compatibility.\n      // TODO(cais): Use 'int64' type when available.\n      tensor: scalar(this.iterations_, 'int32')\n    };\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    throw new Error('getWeights() is not implemented for this optimizer yet.');\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    throw new Error(\n        `setWeights() is not implemented for this optimizer class ` +\n        `${this.getClassName()}`);\n  }\n\n  /**\n   * Extract the first element of the weight values and set it\n   * as the iterations counter variable of this instance of optimizer.\n   *\n   * @param weightValues\n   * @returns Weight values with the first element consumed and excluded.\n   */\n  protected async extractIterations(\n      weightValues: NamedTensor[]): Promise<NamedTensor[]> {\n    this.iterations_ = (await weightValues[0].tensor.data())[0];\n    return weightValues.slice(1);\n  }\n}\n\nObject.defineProperty(Optimizer, Symbol.hasInstance, {\n  value: (instance: Optimizer) => {\n    return instance.minimize != null && instance.computeGradients != null &&\n        instance.applyGradients != null;\n  }\n});\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {zerosLike} from '../ops/ops';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {NamedTensor, NamedVariableMap} from '../tensor_types';\nimport {Optimizer, OptimizerVariable} from './optimizer';\n\n/** @doclink Optimizer */\nexport class AdadeltaOptimizer extends Optimizer {\n  /** @nocollapse */\n  static className = 'AdadeltaOptimizer';\n  private accumulatedGrads: OptimizerVariable[] = [];\n  private accumulatedUpdates: OptimizerVariable[] = [];\n\n  constructor(\n      protected learningRate: number, protected rho: number,\n      protected epsilon: number = null) {\n    super();\n\n    if (epsilon == null) {\n      this.epsilon = ENGINE.backend.epsilon();\n    }\n  }\n\n  applyGradients(variableGradients: NamedVariableMap|NamedTensor[]) {\n    const variableNames = Array.isArray(variableGradients) ?\n        variableGradients.map(item => item.name) :\n        Object.keys(variableGradients);\n\n    variableNames.forEach((name, i) => {\n      const value = ENGINE.registeredVariables[name];\n      const trainable = false;\n      if (this.accumulatedGrads[i] == null) {\n        this.accumulatedGrads[i] = {\n          originalName: `${name}/accum_grad`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n      if (this.accumulatedUpdates[i] == null) {\n        this.accumulatedUpdates[i] = {\n          originalName: `${name}/accum_var`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n\n      const gradient = Array.isArray(variableGradients) ?\n          variableGradients[i].tensor :\n          variableGradients[name];\n      if (gradient == null) {\n        return;\n      }\n\n      const accumulatedGrad = this.accumulatedGrads[i].variable;\n      const accumulatedUpdate = this.accumulatedUpdates[i].variable;\n\n      tidy(() => {\n        const newAccumulatedGrad = accumulatedGrad.mul(this.rho).add(\n            gradient.square().mul(1 - this.rho));\n\n        const updates = accumulatedUpdate.add(this.epsilon)\n                            .sqrt()\n                            .div(accumulatedGrad.add(this.epsilon).sqrt())\n                            .mul(gradient);\n\n        const newAccumulatedUpdate = accumulatedUpdate.mul(this.rho).add(\n            updates.square().mul(1 - this.rho));\n\n        accumulatedGrad.assign(newAccumulatedGrad);\n        accumulatedUpdate.assign(newAccumulatedUpdate);\n\n        const newValue = updates.mul(-this.learningRate).add(value);\n        value.assign(newValue);\n      });\n    });\n    this.incrementIterations();\n  }\n\n  dispose(): void {\n    if (this.accumulatedUpdates != null) {\n      dispose(this.accumulatedGrads.map(v => v.variable));\n      dispose(this.accumulatedUpdates.map(v => v.variable));\n    }\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    // Order matters for Python compatibility.\n    const variables: OptimizerVariable[] =\n        [...this.accumulatedGrads, ...this.accumulatedUpdates];\n    return [await this.saveIterations()].concat(\n        variables.map(v => ({name: v.originalName, tensor: v.variable})));\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    const variableCount = weightValues.length / 2;\n    const trainable = false;\n    this.accumulatedGrads =\n        weightValues.slice(0, variableCount).map(v => ({\n                                                   originalName: v.name,\n                                                   variable: v.tensor.variable(\n                                                       trainable)\n                                                 }));\n    this.accumulatedUpdates =\n        weightValues.slice(variableCount, variableCount * 2)\n            .map(v => ({\n                   originalName: v.name,\n                   variable: v.tensor.variable(trainable)\n                 }));\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'rho': this.rho,\n      'epsilon': this.epsilon\n    };\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(config['learningRate'], config['rho'], config['epsilon']);\n  }\n}\nregisterClass(AdadeltaOptimizer);\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {fill} from '../ops/ops';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {NamedTensor, NamedVariableMap} from '../tensor_types';\n\nimport {Optimizer, OptimizerVariable} from './optimizer';\n\n/** @doclink Optimizer */\nexport class AdagradOptimizer extends Optimizer {\n  /** @nocollapse */\n  static className = 'Adagrad';  // Note: Name matters for Python compatibility.\n\n  private accumulatedGrads: OptimizerVariable[] = [];\n\n  constructor(\n      protected learningRate: number, private initialAccumulatorValue = 0.1) {\n    super();\n  }\n\n  applyGradients(variableGradients: NamedVariableMap|NamedTensor[]) {\n    const variableNames = Array.isArray(variableGradients) ?\n        variableGradients.map(item => item.name) :\n        Object.keys(variableGradients);\n\n    variableNames.forEach((name, i) => {\n      const value = ENGINE.registeredVariables[name];\n      if (this.accumulatedGrads[i] == null) {\n        const trainable = false;\n        this.accumulatedGrads[i] = {\n          originalName: `${name}/accumulator`,\n          variable: tidy(\n              () => fill(value.shape, this.initialAccumulatorValue)\n                        .variable(trainable))\n        };\n      }\n\n      const gradient = Array.isArray(variableGradients) ?\n          variableGradients[i].tensor :\n          variableGradients[name];\n      if (gradient == null) {\n        return;\n      }\n\n      const accumulatedGrad = this.accumulatedGrads[i].variable;\n\n      tidy(() => {\n        const newAccumulatedGrad = accumulatedGrad.add(gradient.square());\n        accumulatedGrad.assign(newAccumulatedGrad);\n\n        const newValue =\n            gradient\n                .div(newAccumulatedGrad.add(ENGINE.backend.epsilon()).sqrt())\n                .mul(-this.learningRate)\n                .add(value);\n        value.assign(newValue);\n      });\n    });\n    this.incrementIterations();\n  }\n\n  dispose(): void {\n    if (this.accumulatedGrads != null) {\n      dispose(this.accumulatedGrads.map(v => v.variable));\n    }\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    // Order matters for Python compatibility.\n    return [await this.saveIterations()].concat(this.accumulatedGrads.map(\n        v => ({name: v.originalName, tensor: v.variable})));\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    const trainable = false;\n    this.accumulatedGrads = weightValues.map(\n        v => ({originalName: v.name, variable: v.tensor.variable(trainable)}));\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'initialAccumulatorValue': this.initialAccumulatorValue,\n    };\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(config['learningRate'], config['initialAccumulatorValue']);\n  }\n}\nregisterClass(AdagradOptimizer);\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {scalar, sub, zerosLike, pow} from '../ops/ops';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {Variable} from '../tensor';\nimport {NamedTensor, NamedVariableMap} from '../tensor_types';\n\nimport {Optimizer, OptimizerVariable} from './optimizer';\n\nexport class AdamOptimizer extends Optimizer {\n  /** @nocollapse */\n  static className = 'Adam';  // Note: Name matters for Python compatibility.\n  private accBeta1: Variable;\n  private accBeta2: Variable;\n\n  private accumulatedFirstMoment: OptimizerVariable[] = [];\n  private accumulatedSecondMoment: OptimizerVariable[] = [];\n\n  constructor(\n      protected learningRate: number, protected beta1: number,\n      protected beta2: number, protected epsilon: number = null) {\n    super();\n    tidy(() => {\n      // accB* will be updated by batch.\n      this.accBeta1 = scalar(beta1).variable();\n      this.accBeta2 = scalar(beta2).variable();\n    });\n\n    if (epsilon == null) {\n      this.epsilon = ENGINE.backend.epsilon();\n    }\n  }\n\n  applyGradients(variableGradients: NamedVariableMap|NamedTensor[]) {\n    const varNames = Array.isArray(variableGradients) ?\n        variableGradients.map(v => v.name) :\n        Object.keys(variableGradients);\n    tidy(() => {\n      const oneMinusAccBeta1 = sub(1, this.accBeta1);\n      const oneMinusAccBeta2 = sub(1, this.accBeta2);\n\n      varNames.forEach((name, i) => {\n        const value = ENGINE.registeredVariables[name];\n        const trainable = false;\n        if (this.accumulatedFirstMoment[i] == null) {\n          this.accumulatedFirstMoment[i] = {\n            originalName: `${name}/m`,\n            variable: tidy(() => zerosLike(value).variable(trainable))\n          };\n        }\n        if (this.accumulatedSecondMoment[i] == null) {\n          this.accumulatedSecondMoment[i] = {\n            originalName: `${name}/v`,\n            variable: tidy(() => zerosLike(value).variable(trainable))\n          };\n        }\n\n        const gradient = Array.isArray(variableGradients) ?\n            variableGradients[i].tensor :\n            variableGradients[name];\n        if (gradient == null) {\n          return;\n        }\n\n        const firstMoment = this.accumulatedFirstMoment[i].variable;\n        const secondMoment = this.accumulatedSecondMoment[i].variable;\n\n        const newFirstMoment =\n            firstMoment.mul(this.beta1).add(gradient.mul(1 - this.beta1));\n        const newSecondMoment = secondMoment.mul(this.beta2)\n                                    .add(gradient.square().mul(1 - this.beta2));\n\n        const biasCorrectedFirstMoment = newFirstMoment.div(oneMinusAccBeta1);\n        const biasCorrectedSecondMoment = newSecondMoment.div(oneMinusAccBeta2);\n\n        firstMoment.assign(newFirstMoment);\n        secondMoment.assign(newSecondMoment);\n\n        const newValue =\n            biasCorrectedFirstMoment\n                .div(biasCorrectedSecondMoment.sqrt().add(this.epsilon))\n                .mul(-this.learningRate)\n                .add(value);\n        value.assign(newValue);\n      });\n\n      this.accBeta1.assign(this.accBeta1.mul(this.beta1));\n      this.accBeta2.assign(this.accBeta2.mul(this.beta2));\n    });\n    this.incrementIterations();\n  }\n\n  dispose(): void {\n    this.accBeta1.dispose();\n    this.accBeta2.dispose();\n\n    if (this.accumulatedFirstMoment != null) {\n      dispose(this.accumulatedFirstMoment.map(v => v.variable));\n    }\n    if (this.accumulatedSecondMoment != null) {\n      dispose(this.accumulatedSecondMoment.map(v => v.variable));\n    }\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    // Order matters for Python compatibility.\n    const variables: OptimizerVariable[] =\n        [...this.accumulatedFirstMoment, ...this.accumulatedSecondMoment];\n    return [await this.saveIterations()].concat(\n        variables.map(v => ({name: v.originalName, tensor: v.variable})));\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    tidy(() => {\n      this.accBeta1.assign(pow(this.beta1, this.iterations_ + 1));\n      this.accBeta2.assign(pow(this.beta2, this.iterations_ + 1));\n    });\n\n    const variableCount = weightValues.length / 2;\n    const trainable = false;\n    this.accumulatedFirstMoment =\n        weightValues.slice(0, variableCount).map(v => ({\n                                                   originalName: v.name,\n                                                   variable: v.tensor.variable(\n                                                       trainable)\n                                                 }));\n    this.accumulatedSecondMoment =\n        weightValues.slice(variableCount, variableCount * 2)\n            .map(v => ({\n                   originalName: v.name,\n                   variable: v.tensor.variable(trainable)\n                 }));\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'beta1': this.beta1,\n      'beta2': this.beta2,\n      'epsilon': this.epsilon,\n    };\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(\n        config['learningRate'], config['beta1'], config['beta2'],\n        config['epsilon']);\n  }\n}\nregisterClass(AdamOptimizer);\n","﻿/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {div, scalar, sub, zerosLike} from '../ops/ops';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {Variable} from '../tensor';\nimport {NamedTensor, NamedVariableMap} from '../tensor_types';\nimport {Optimizer, OptimizerVariable} from './optimizer';\n\nexport class AdamaxOptimizer extends Optimizer {\n  /** @nocollapse */\n  static className = 'Adamax';  // Note: Name matters for Python compatbility.\n  private accBeta1: Variable;\n  private iteration: Variable;\n\n  private accumulatedFirstMoment: OptimizerVariable[] = [];\n  private accumulatedWeightedInfNorm: OptimizerVariable[] = [];\n\n  constructor(\n      protected learningRate: number, protected beta1: number,\n      protected beta2: number, protected epsilon: number = null,\n      protected decay = 0.0) {\n    super();\n\n    tidy(() => {\n      this.iteration = scalar(0).variable();\n      this.accBeta1 = scalar(beta1).variable();\n    });\n\n    if (epsilon == null) {\n      this.epsilon = ENGINE.backend.epsilon();\n    }\n  }\n\n  applyGradients(variableGradients: NamedVariableMap|NamedTensor[]) {\n    const variableNames = Array.isArray(variableGradients) ?\n        variableGradients.map(item => item.name) :\n        Object.keys(variableGradients);\n\n    tidy(() => {\n      const oneMinusAccBeta1 = sub(1, this.accBeta1);\n      const lr = div(-this.learningRate, this.iteration.mul(this.decay).add(1));\n\n      variableNames.forEach((name, i) => {\n        const value = ENGINE.registeredVariables[name];\n        const trainable = false;\n        if (this.accumulatedFirstMoment[i] == null) {\n          this.accumulatedFirstMoment[i] = {\n            originalName: `${name}/m`,\n            variable: zerosLike(value).variable(trainable)\n          };\n        }\n        if (this.accumulatedWeightedInfNorm[i] == null) {\n          this.accumulatedWeightedInfNorm[i] = {\n            originalName: `${name}/v`,\n            variable: zerosLike(value).variable(trainable)\n          };\n        }\n\n        const gradient = Array.isArray(variableGradients) ?\n            variableGradients[i].tensor :\n            variableGradients[name];\n        if (gradient == null) {\n          return;\n        }\n\n        const firstMoment = this.accumulatedFirstMoment[i].variable;\n        const weightedInfNorm = this.accumulatedWeightedInfNorm[i].variable;\n\n        const newFirstMoment =\n            firstMoment.mul(this.beta1).add(gradient.mul(1 - this.beta1));\n\n        const ut0 = weightedInfNorm.mul(this.beta2);\n        const ut1 = gradient.abs();\n\n        const newWeightedInfNorm = ut0.maximum(ut1);\n\n        firstMoment.assign(newFirstMoment);\n        weightedInfNorm.assign(newWeightedInfNorm);\n\n        const newValue =\n            lr.div(oneMinusAccBeta1)\n                .mul(newFirstMoment.div(newWeightedInfNorm.add(this.epsilon)))\n                .add(value);\n\n        value.assign(newValue);\n      });\n\n      this.iteration.assign(this.iteration.add(1));\n      this.accBeta1.assign(this.accBeta1.mul(this.beta1));\n    });\n    this.incrementIterations();\n  }\n\n  dispose(): void {\n    this.accBeta1.dispose();\n    this.iteration.dispose();\n\n    if (this.accumulatedFirstMoment != null) {\n      dispose(this.accumulatedFirstMoment.map(v => v.variable));\n    }\n    if (this.accumulatedWeightedInfNorm != null) {\n      dispose(this.accumulatedWeightedInfNorm.map(v => v.variable));\n    }\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    throw new Error('getWeights() is not implemented for Adamax yet.');\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    throw new Error('setWeights() is not implemented for Adamax yet.');\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'beta1': this.beta1,\n      'beta2': this.beta2,\n      'epsilon': this.epsilon,\n      'decay': this.decay\n    };\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(\n        config['learningRate'], config['beta1'], config['beta2'],\n        config['epsilon'], config['decay']);\n  }\n}\nregisterClass(AdamaxOptimizer);\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {keep, tidy} from '../globals';\nimport {scalar} from '../ops/ops';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {Scalar} from '../tensor';\nimport {NamedTensor, NamedTensorMap} from '../tensor_types';\n\nimport {Optimizer} from './optimizer';\n\n/** @doclink Optimizer */\nexport class SGDOptimizer extends Optimizer {\n  /** @nocollapse */\n  static className = 'SGD';  // Name matters for Python compatibility.\n  protected c: Scalar;\n\n  constructor(protected learningRate: number) {\n    super();\n    this.setLearningRate(learningRate);\n  }\n\n  applyGradients(variableGradients: NamedTensorMap|NamedTensor[]) {\n    const varNames = Array.isArray(variableGradients) ?\n        variableGradients.map(v => v.name) :\n        Object.keys(variableGradients);\n    varNames.forEach((name, i) => {\n      const gradient = Array.isArray(variableGradients) ?\n          variableGradients[i].tensor :\n          variableGradients[name];\n      if (gradient == null) {\n        return;\n      }\n      const value = ENGINE.registeredVariables[name];\n      tidy(() => {\n        const newValue = this.c.mul(gradient).add(value);\n        value.assign(newValue);\n      });\n    });\n    this.incrementIterations();\n  }\n\n  /**\n   * Sets the learning rate of the optimizer.\n   */\n  setLearningRate(learningRate: number) {\n    this.learningRate = learningRate;\n    if (this.c != null) {\n      this.c.dispose();\n    }\n    this.c = keep(scalar(-learningRate));\n  }\n\n  dispose() {\n    this.c.dispose();\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    return [await this.saveIterations()];\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    if (weightValues.length !== 0) {\n      throw new Error('SGD optimizer does not have settable weights.');\n    }\n  }\n\n  getConfig(): ConfigDict {\n    return {'learningRate': this.learningRate};\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(config['learningRate']);\n  }\n}\nregisterClass(SGDOptimizer);\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {scalar, zerosLike} from '../ops/ops';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {Scalar, Tensor} from '../tensor';\nimport {NamedTensor, NamedVariableMap} from '../tensor_types';\n\nimport {OptimizerVariable} from './optimizer';\nimport {SGDOptimizer} from './sgd_optimizer';\n\n/** @doclink Optimizer */\nexport class MomentumOptimizer extends SGDOptimizer {\n  /** @nocollapse */\n  static className = 'MomentumOptimizer';\n  private m: Scalar;\n  private accumulations: OptimizerVariable[] = [];\n\n  constructor(\n      protected learningRate: number, private momentum: number,\n      private useNesterov = false) {\n    super(learningRate);\n    this.m = scalar(this.momentum);\n  }\n\n  applyGradients(variableGradients: NamedVariableMap|NamedTensor[]) {\n    const variableNames = Array.isArray(variableGradients) ?\n        variableGradients.map(item => item.name) :\n        Object.keys(variableGradients);\n\n    variableNames.forEach((name, i) => {\n      const value = ENGINE.registeredVariables[name];\n      if (this.accumulations[i] == null) {\n        const trainable = false;\n        this.accumulations[i] = {\n          originalName: `${name}/momentum`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n\n      const accumulation = this.accumulations[i].variable;\n      const gradient = Array.isArray(variableGradients) ?\n          variableGradients[i].tensor :\n          variableGradients[name];\n      if (gradient == null) {\n        return;\n      }\n\n      tidy(() => {\n        let newValue: Tensor;\n        const newAccumulation = this.m.mul(accumulation).add(gradient);\n        if (this.useNesterov) {\n          newValue =\n              this.c.mul(gradient.add(newAccumulation.mul(this.m))).add(value);\n        } else {\n          newValue = this.c.mul(newAccumulation).add(value);\n        }\n        accumulation.assign(newAccumulation);\n        value.assign(newValue);\n      });\n    });\n    this.incrementIterations();\n  }\n\n  dispose(): void {\n    this.m.dispose();\n    if (this.accumulations != null) {\n      dispose(this.accumulations.map(v => v.variable));\n    }\n  }\n\n  /**\n   * Sets the momentum of the optimizer.\n   *\n   * @param momentum\n   */\n  setMomentum(momentum: number) {\n    this.momentum = momentum;\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    // Order matters for Python compatibility.\n    return [await this.saveIterations()].concat(this.accumulations.map(\n        v => ({name: v.originalName, tensor: v.variable})));\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    const trainable = false;\n    this.accumulations = weightValues.map(\n        v => ({originalName: v.name, variable: v.tensor.variable(trainable)}));\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'momentum': this.momentum,\n      'useNesterov': this.useNesterov\n    };\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(\n        config['learningRate'], config['momentum'], config['useNesterov']);\n  }\n}\nregisterClass(MomentumOptimizer);\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {ENGINE} from '../engine';\nimport {dispose, tidy} from '../globals';\nimport {zerosLike} from '../ops/ops';\nimport {ConfigDict, registerClass, Serializable, SerializableConstructor} from '../serialization';\nimport {NamedTensor, NamedTensorMap} from '../tensor_types';\n\nimport {Optimizer, OptimizerVariable} from './optimizer';\n\n/** @doclink Optimizer */\nexport class RMSPropOptimizer extends Optimizer {\n  /** @nocollapse */\n  static className = 'RMSProp';\n  private centered: boolean;\n\n  private accumulatedMeanSquares: OptimizerVariable[] = [];\n  private accumulatedMoments: OptimizerVariable[] = [];\n  private accumulatedMeanGrads: OptimizerVariable[] = [];\n\n  constructor(\n      protected learningRate: number, protected decay = 0.9,\n      protected momentum = 0.0, protected epsilon: number = null,\n      centered = false) {\n    super();\n\n    this.centered = centered;\n\n    if (epsilon == null) {\n      this.epsilon = ENGINE.backend.epsilon();\n    }\n  }\n\n  applyGradients(variableGradients: NamedTensorMap|NamedTensor[]) {\n    const variableNames = Array.isArray(variableGradients) ?\n        variableGradients.map(item => item.name) :\n        Object.keys(variableGradients);\n\n    variableNames.forEach((name, i) => {\n      const value = ENGINE.registeredVariables[name];\n      const trainable = false;\n      if (this.accumulatedMeanSquares[i] == null) {\n        this.accumulatedMeanSquares[i] = {\n          originalName: `${name}/rms`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n      if (this.accumulatedMoments[i] == null) {\n        this.accumulatedMoments[i] = {\n          originalName: `${name}/momentum`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n      if (this.accumulatedMeanGrads[i] == null && this.centered) {\n        this.accumulatedMeanGrads[i] = {\n          originalName: `${name}/mg`,\n          variable: tidy(() => zerosLike(value).variable(trainable))\n        };\n      }\n\n      const gradient = Array.isArray(variableGradients) ?\n          variableGradients[i].tensor :\n          variableGradients[name];\n      if (gradient == null) {\n        return;\n      }\n\n      const accumulatedMeanSquare = this.accumulatedMeanSquares[i].variable;\n      const accumulatedMoments = this.accumulatedMoments[i].variable;\n      tidy(() => {\n        const newAccumulatedMeanSquare =\n            accumulatedMeanSquare.mul(this.decay)\n                .add(gradient.square().mul(1 - this.decay));\n\n        if (this.centered) {\n          const accumulatedMeanGrad = this.accumulatedMeanGrads[i].variable;\n          // Centered gradient\n          const newAccumulatedMeanGrad = accumulatedMeanGrad.mul(this.decay)\n                                             .add(gradient.mul(1 - this.decay));\n\n          const newAccumulatedMoments =\n              accumulatedMoments.mul(this.momentum)\n                  .add(gradient.mul(this.learningRate)\n                           .div(newAccumulatedMeanSquare\n                                    .sub(newAccumulatedMeanGrad.square().add(\n                                        this.epsilon))\n                                    .sqrt()));\n\n          accumulatedMeanSquare.assign(newAccumulatedMeanSquare);\n          accumulatedMeanGrad.assign(newAccumulatedMeanGrad);\n          accumulatedMoments.assign(newAccumulatedMoments);\n\n          const newValue = value.sub(newAccumulatedMoments);\n          value.assign(newValue);\n        } else {\n          // Plain gradient\n          const newAccumulatedMeanSquare =\n              accumulatedMeanSquare.mul(this.decay)\n                  .add(gradient.square().mul(1 - this.decay));\n\n          const newAccumulatedMoments =\n              accumulatedMoments.mul(this.momentum)\n                  .add(gradient.mul(this.learningRate)\n                           .div(newAccumulatedMeanSquare.add(this.epsilon)\n                                    .sqrt()));\n\n          accumulatedMeanSquare.assign(newAccumulatedMeanSquare);\n          accumulatedMoments.assign(newAccumulatedMoments);\n\n          const newValue = value.sub(newAccumulatedMoments);\n          value.assign(newValue);\n        }\n      });\n    });\n    this.incrementIterations();\n  }\n\n  dispose(): void {\n    if (this.accumulatedMeanSquares != null) {\n      dispose(this.accumulatedMeanSquares.map(v => v.variable));\n    }\n    if (this.accumulatedMeanGrads != null && this.centered) {\n      dispose(this.accumulatedMeanGrads.map(v => v.variable));\n    }\n    if (this.accumulatedMoments != null) {\n      dispose(this.accumulatedMoments.map(v => v.variable));\n    }\n  }\n\n  async getWeights(): Promise<NamedTensor[]> {\n    // Order matters for Python compatibility.\n    const variables: OptimizerVariable[] =\n        [...this.accumulatedMeanSquares, ...this.accumulatedMoments];\n    if (this.centered) {\n      variables.push(...this.accumulatedMeanGrads);\n    }\n    return [await this.saveIterations()].concat(\n        variables.map(v => ({name: v.originalName, tensor: v.variable})));\n  }\n\n  async setWeights(weightValues: NamedTensor[]): Promise<void> {\n    weightValues = await this.extractIterations(weightValues);\n    const variableCount =\n        this.centered ? weightValues.length / 3 : weightValues.length / 2;\n    const trainable = false;\n    this.accumulatedMeanSquares =\n        weightValues.slice(0, variableCount).map(v => ({\n                                                   originalName: v.name,\n                                                   variable: v.tensor.variable(\n                                                       trainable)\n                                                 }));\n    this.accumulatedMoments =\n        weightValues.slice(variableCount, variableCount * 2)\n            .map(v => ({\n                   originalName: v.name,\n                   variable: v.tensor.variable(trainable)\n                 }));\n    if (this.centered) {\n      this.accumulatedMeanGrads =\n          weightValues.slice(variableCount * 2, variableCount * 3)\n              .map(v => ({\n                     originalName: v.name,\n                     variable: v.tensor.variable(trainable)\n                   }));\n    }\n  }\n\n  getConfig(): ConfigDict {\n    return {\n      'learningRate': this.learningRate,\n      'decay': this.decay,\n      'momentum': this.momentum,\n      'epsilon': this.epsilon,\n      'centered': this.centered\n    };\n  }\n\n  /** @nocollapse */\n  static fromConfig<T extends Serializable>(\n      cls: SerializableConstructor<T>, config: ConfigDict): T {\n    return new cls(\n        config['learningRate'], config['decay'], config['momentum'],\n        config['epsilon'], config['centered']);\n  }\n}\nregisterClass(RMSPropOptimizer);\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {AdadeltaOptimizer} from './adadelta_optimizer';\nimport {AdagradOptimizer} from './adagrad_optimizer';\nimport {AdamOptimizer} from './adam_optimizer';\nimport {AdamaxOptimizer} from './adamax_optimizer';\nimport {MomentumOptimizer} from './momentum_optimizer';\nimport {RMSPropOptimizer} from './rmsprop_optimizer';\nimport {SGDOptimizer} from './sgd_optimizer';\n\nexport class OptimizerConstructors {\n  /**\n   * Constructs a `tf.SGDOptimizer` that uses stochastic gradient descent.\n   *\n   * ```js\n   * // Fit a quadratic function by learning the coefficients a, b, c.\n   * const xs = tf.tensor1d([0, 1, 2, 3]);\n   * const ys = tf.tensor1d([1.1, 5.9, 16.8, 33.9]);\n   *\n   * const a = tf.scalar(Math.random()).variable();\n   * const b = tf.scalar(Math.random()).variable();\n   * const c = tf.scalar(Math.random()).variable();\n   *\n   * // y = a * x^2 + b * x + c.\n   * const f = x => a.mul(x.square()).add(b.mul(x)).add(c);\n   * const loss = (pred, label) => pred.sub(label).square().mean();\n   *\n   * const learningRate = 0.01;\n   * const optimizer = tf.train.sgd(learningRate);\n   *\n   * // Train the model.\n   * for (let i = 0; i < 10; i++) {\n   *   optimizer.minimize(() => loss(f(xs), ys));\n   * }\n   *\n   * // Make predictions.\n   * console.log(\n   *     `a: ${a.dataSync()}, b: ${b.dataSync()}, c: ${c.dataSync()}`);\n   * const preds = f(xs).dataSync();\n   * preds.forEach((pred, i) => {\n   *   console.log(`x: ${i}, pred: ${pred}`);\n   * });\n   * ```\n   *\n   * @param learningRate The learning rate to use for the SGD algorithm.\n   */\n  /**\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static sgd(learningRate: number): SGDOptimizer {\n    return new SGDOptimizer(learningRate);\n  }\n\n  /**\n   * Constructs a `tf.MomentumOptimizer` that uses momentum gradient\n   * descent.\n   *\n   * See\n   * [http://proceedings.mlr.press/v28/sutskever13.pdf](\n   * http://proceedings.mlr.press/v28/sutskever13.pdf)\n   *\n   * @param learningRate The learning rate to use for the Momentum gradient\n   * descent algorithm.\n   * @param momentum The momentum to use for the momentum gradient descent\n   * algorithm.\n   */\n  /**\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static momentum(learningRate: number, momentum: number, useNesterov = false):\n      MomentumOptimizer {\n    return new MomentumOptimizer(learningRate, momentum, useNesterov);\n  }\n\n  /**\n   * Constructs a `tf.RMSPropOptimizer` that uses RMSProp gradient\n   * descent. This implementation uses plain momentum and is not centered\n   * version of RMSProp.\n   *\n   * See\n   * [http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf](\n   * http://www.cs.toronto.edu/~tijmen/csc321/slides/lecture_slides_lec6.pdf)\n   *\n   * @param learningRate The learning rate to use for the RMSProp gradient\n   * descent algorithm.\n   * @param decay The discounting factor for the history/coming gradient.\n   * @param momentum The momentum to use for the RMSProp gradient descent\n   * algorithm.\n   * @param epsilon Small value to avoid zero denominator.\n   * @param centered If true, gradients are normalized by the estimated\n   * variance of the gradient.\n   */\n  /**\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static rmsprop(\n      learningRate: number, decay = .9, momentum = 0.0, epsilon: number = null,\n      centered = false): RMSPropOptimizer {\n    return new RMSPropOptimizer(\n        learningRate, decay, momentum, epsilon, centered);\n  }\n\n  /**\n   * Constructs a `tf.AdamOptimizer` that uses the Adam algorithm.\n   * See [https://arxiv.org/abs/1412.6980](https://arxiv.org/abs/1412.6980)\n   *\n   * @param learningRate The learning rate to use for the Adam gradient\n   * descent algorithm.\n   * @param beta1 The exponential decay rate for the 1st moment estimates.\n   * @param beta2 The exponential decay rate for the 2nd moment estimates.\n   * @param epsilon A small constant for numerical stability.\n   */\n  /**\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static adam(\n      learningRate = 0.001, beta1 = 0.9, beta2 = 0.999,\n      epsilon: number = null): AdamOptimizer {\n    return new AdamOptimizer(learningRate, beta1, beta2, epsilon);\n  }\n\n  /**\n   * Constructs a `tf.AdadeltaOptimizer` that uses the Adadelta algorithm.\n   * See [https://arxiv.org/abs/1212.5701](https://arxiv.org/abs/1212.5701)\n   *\n   * @param learningRate The learning rate to use for the Adadelta gradient\n   * descent algorithm.\n   * @param rho The learning rate decay over each update.\n   * @param epsilon A constant epsilon used to better condition the grad\n   * update.\n   */\n  /**\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static adadelta(learningRate = .001, rho = .95, epsilon: number = null):\n      AdadeltaOptimizer {\n    return new AdadeltaOptimizer(learningRate, rho, epsilon);\n  }\n\n  /**\n   * Constructs a `tf.AdamaxOptimizer` that uses the Adamax algorithm.\n   * See [https://arxiv.org/abs/1412.6980](https://arxiv.org/abs/1412.6980)\n   *\n   * @param learningRate The learning rate to use for the Adamax gradient\n   * descent algorithm.\n   * @param beta1 The exponential decay rate for the 1st moment estimates.\n   * @param beta2 The exponential decay rate for the 2nd moment estimates.\n   * @param epsilon A small constant for numerical stability.\n   * @param decay The learning rate decay over each update.\n   */\n  /**\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static adamax(\n      learningRate = 0.002, beta1 = 0.9, beta2 = 0.999, epsilon: number = null,\n      decay = 0.0): AdamaxOptimizer {\n    return new AdamaxOptimizer(learningRate, beta1, beta2, epsilon, decay);\n  }\n\n  /**\n   * Constructs a `tf.AdagradOptimizer` that uses the Adagrad algorithm.\n   * See\n   * [http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf](\n   * http://www.jmlr.org/papers/volume12/duchi11a/duchi11a.pdf)\n   * or\n   * [http://ruder.io/optimizing-gradient-descent/index.html#adagrad](\n   * http://ruder.io/optimizing-gradient-descent/index.html#adagrad)\n   *\n   * @param learningRate The learning rate to use for the Adagrad gradient\n   * descent algorithm.\n   * @param initialAccumulatorValue Starting value for the accumulators, must be\n   * positive.\n   */\n  /**\n   * @doc {heading: 'Training', subheading: 'Optimizers', namespace: 'train'}\n   */\n  static adagrad(learningRate: number, initialAccumulatorValue = 0.1):\n      AdagradOptimizer {\n    return new AdagradOptimizer(learningRate, initialAccumulatorValue);\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// So typings can propagate.\nimport {AdadeltaOptimizer} from './optimizers/adadelta_optimizer';\nimport {AdagradOptimizer} from './optimizers/adagrad_optimizer';\nimport {AdamOptimizer} from './optimizers/adam_optimizer';\nimport {AdamaxOptimizer} from './optimizers/adamax_optimizer';\nimport {MomentumOptimizer} from './optimizers/momentum_optimizer';\nimport {OptimizerConstructors} from './optimizers/optimizer_constructors';\nimport {RMSPropOptimizer} from './optimizers/rmsprop_optimizer';\nimport {SGDOptimizer} from './optimizers/sgd_optimizer';\n\n// tslint:disable-next-line:no-unused-expression\n[MomentumOptimizer, SGDOptimizer, AdadeltaOptimizer, AdagradOptimizer,\n RMSPropOptimizer, AdamaxOptimizer, AdamOptimizer];\n\nexport const train = {\n  sgd: OptimizerConstructors.sgd,\n  momentum: OptimizerConstructors.momentum,\n  adadelta: OptimizerConstructors.adadelta,\n  adagrad: OptimizerConstructors.adagrad,\n  rmsprop: OptimizerConstructors.rmsprop,\n  adamax: OptimizerConstructors.adamax,\n  adam: OptimizerConstructors.adam\n};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nconst delayCallback: Function = (() => {\n  if (typeof requestAnimationFrame !== 'undefined') {\n    return requestAnimationFrame;\n  } else if (typeof setImmediate !== 'undefined') {\n    return setImmediate;\n  }\n  return (f: Function) => f();  // no delays\n})();\n\n/**\n * Returns a promise that resolve when a requestAnimationFrame has completed.\n *\n * On Node.js this uses setImmediate instead of requestAnimationFrame.\n *\n * This is simply a sugar method so that users can do the following:\n * `await tf.nextFrame();`\n */\n/** @doc {heading: 'Performance', subheading: 'Timing'} */\nfunction nextFrame(): Promise<void> {\n  return new Promise<void>(resolve => delayCallback(() => resolve()));\n}\n\nexport {nextFrame};\n","/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Engine is the global singleton that needs to be initialized before the rest\n// of the app.\nimport './engine';\n// Register backend-agnostic flags.\nimport './flags';\n\n// backend_cpu.ts and backend_webgl.ts are standalone files and should be\n// explicitly included here.\nimport './backends/webgl/backend_webgl';\nimport './backends/cpu/backend_cpu';\n\nimport './platforms/platform_browser';\nimport './platforms/platform_node';\n\nimport * as backend_util from './backends/backend_util';\nimport * as environment from './environment';\n// Serialization.\nimport * as io from './io/io';\nimport * as math from './math';\nimport * as browser from './ops/browser';\nimport * as serialization from './serialization';\nimport {setOpHandler} from './tensor';\nimport * as tensor_util from './tensor_util';\nimport * as test_util from './test_util';\nimport * as util from './util';\nimport {version} from './version';\nimport * as webgl from './webgl';\n\nexport {InferenceModel, ModelPredictConfig} from './model_types';\n// Optimizers.\nexport {AdadeltaOptimizer} from './optimizers/adadelta_optimizer';\nexport {AdagradOptimizer} from './optimizers/adagrad_optimizer';\nexport {AdamOptimizer} from './optimizers/adam_optimizer';\nexport {AdamaxOptimizer} from './optimizers/adamax_optimizer';\nexport {MomentumOptimizer} from './optimizers/momentum_optimizer';\nexport {Optimizer} from './optimizers/optimizer';\nexport {RMSPropOptimizer} from './optimizers/rmsprop_optimizer';\nexport {SGDOptimizer} from './optimizers/sgd_optimizer';\nexport {Scalar, Tensor, Tensor1D, Tensor2D, Tensor3D, Tensor4D, TensorBuffer, variable, Variable} from './tensor';\nexport {GradSaveFunc, NamedTensorMap, TensorContainer, TensorContainerArray, TensorContainerObject} from './tensor_types';\nexport {DataType, DataTypeMap, DataValues, Rank, ShapeMap, TensorLike} from './types';\n\nexport * from './ops/ops';\nexport {LSTMCellFunc} from './ops/lstm';\nexport {Reduction} from './ops/loss_ops';\n\nexport * from './train';\nexport * from './globals';\nexport {customGrad, grad, grads, valueAndGrad, valueAndGrads, variableGrads} from './gradients';\n\nexport {TimingInfo} from './engine';\nexport {ENV, Environment} from './environment';\nexport {Platform} from './platforms/platform';\n\nexport {version as version_core};\n\n// Top-level method exports.\nexport {nextFrame} from './browser_util';\n\n// Second level exports.\nexport {\n  browser,\n  environment,\n  io,\n  math,\n  serialization,\n  test_util,\n  util,\n  backend_util,\n  webgl,\n  tensor_util\n};\n\n// Backend specific.\nexport {KernelBackend, BackendTimingInfo, DataMover, DataStorage} from './backends/backend';\n\nimport * as ops from './ops/ops';\nsetOpHandler(ops);\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\n\n/** Properties of an Any. */\nexport declare interface IAny {\n  /** Any typeUrl */\n  typeUrl?: (string|null);\n\n  /** Any value */\n  value?: (Uint8Array|null);\n}\n\n/** DataType enum. */\nexport enum DataType {\n  DT_INVALID = 0,\n  DT_FLOAT = 1,\n  DT_DOUBLE = 2,\n  DT_INT32 = 3,\n  DT_UINT8 = 4,\n  DT_INT16 = 5,\n  DT_INT8 = 6,\n  DT_STRING = 7,\n  DT_COMPLEX64 = 8,\n  DT_INT64 = 9,\n  DT_BOOL = 10,\n  DT_QINT8 = 11,\n  DT_QUINT8 = 12,\n  DT_QINT32 = 13,\n  DT_BFLOAT16 = 14,\n  DT_FLOAT_REF = 101,\n  DT_DOUBLE_REF = 102,\n  DT_INT32_REF = 103,\n  DT_UINT8_REF = 104,\n  DT_INT16_REF = 105,\n  DT_INT8_REF = 106,\n  DT_STRING_REF = 107,\n  DT_COMPLEX64_REF = 108,\n  DT_INT64_REF = 109,\n  DT_BOOL_REF = 110,\n  DT_QINT8_REF = 111,\n  DT_QUINT8_REF = 112,\n  DT_QINT32_REF = 113,\n  DT_BFLOAT16_REF = 114\n}\n\n/** Properties of a TensorShape. */\nexport declare interface ITensorShape {\n  /** TensorShape dim */\n  dim?: (TensorShape.IDim[]|null);\n\n  /** TensorShape unknownRank */\n  unknownRank?: (boolean|null);\n}\n\nexport namespace TensorShape {\n  /** Properties of a Dim. */\n  export declare interface IDim {\n    /** Dim size */\n    size?: (number|string|null);\n\n    /** Dim name */\n    name?: (string|null);\n  }\n}\n\n/** Properties of a Tensor. */\nexport declare interface ITensor {\n  /** Tensor dtype */\n  dtype?: (DataType|null);\n\n  /** Tensor tensorShape */\n  tensorShape?: (ITensorShape|null);\n\n  /** Tensor versionNumber */\n  versionNumber?: (number|null);\n\n  /** Tensor tensorContent */\n  tensorContent?: (Uint8Array|null);\n\n  /** Tensor floatVal */\n  floatVal?: (number[]|null);\n\n  /** Tensor doubleVal */\n  doubleVal?: (number[]|null);\n\n  /** Tensor intVal */\n  intVal?: (number[]|null);\n\n  /** Tensor stringVal */\n  stringVal?: (Uint8Array[]|null);\n\n  /** Tensor scomplexVal */\n  scomplexVal?: (number[]|null);\n\n  /** Tensor int64Val */\n  int64Val?: ((number | string)[]|null);\n\n  /** Tensor boolVal */\n  boolVal?: (boolean[]|null);\n\n  /** Tensor uint32Val */\n  uint32Val?: (number[]|null);\n\n  /** Tensor uint64Val */\n  uint64Val?: ((number | string)[]|null);\n}\n\n/** Properties of an AttrValue. */\nexport declare interface IAttrValue {\n  /** AttrValue list */\n  list?: (AttrValue.IListValue|null);\n\n  /** AttrValue s */\n  s?: (string|null);\n\n  /** AttrValue i */\n  i?: (number|string|null);\n\n  /** AttrValue f */\n  f?: (number|null);\n\n  /** AttrValue b */\n  b?: (boolean|null);\n\n  /** AttrValue type */\n  type?: (DataType|null);\n\n  /** AttrValue shape */\n  shape?: (ITensorShape|null);\n\n  /** AttrValue tensor */\n  tensor?: (ITensor|null);\n\n  /** AttrValue placeholder */\n  placeholder?: (string|null);\n\n  /** AttrValue func */\n  func?: (INameAttrList|null);\n}\n\nexport namespace AttrValue {\n  /** Properties of a ListValue. */\n  export declare interface IListValue {\n    /** ListValue s */\n    s?: (string[]|null);\n\n    /** ListValue i */\n    i?: ((number | string)[]|null);\n\n    /** ListValue f */\n    f?: (number[]|null);\n\n    /** ListValue b */\n    b?: (boolean[]|null);\n\n    /** ListValue type */\n    type?: (DataType[]|null);\n\n    /** ListValue shape */\n    shape?: (ITensorShape[]|null);\n\n    /** ListValue tensor */\n    tensor?: (ITensor[]|null);\n\n    /** ListValue func */\n    func?: (INameAttrList[]|null);\n  }\n}\n\n/** Properties of a NameAttrList. */\nexport declare interface INameAttrList {\n  /** NameAttrList name */\n  name?: (string|null);\n\n  /** NameAttrList attr */\n  attr?: ({[k: string]: IAttrValue}|null);\n}\n\n/** Properties of a NodeDef. */\nexport declare interface INodeDef {\n  /** NodeDef name */\n  name?: (string|null);\n\n  /** NodeDef op */\n  op?: (string|null);\n\n  /** NodeDef input */\n  input?: (string[]|null);\n\n  /** NodeDef device */\n  device?: (string|null);\n\n  /** NodeDef attr */\n  attr?: ({[k: string]: IAttrValue}|null);\n}\n\n/** Properties of a VersionDef. */\nexport declare interface IVersionDef {\n  /** VersionDef producer */\n  producer?: (number|null);\n\n  /** VersionDef minConsumer */\n  minConsumer?: (number|null);\n\n  /** VersionDef badConsumers */\n  badConsumers?: (number[]|null);\n}\n\n/** Properties of a GraphDef. */\nexport declare interface IGraphDef {\n  /** GraphDef node */\n  node?: (INodeDef[]|null);\n\n  /** GraphDef versions */\n  versions?: (IVersionDef|null);\n\n  /** GraphDef library */\n  library?: (IFunctionDefLibrary|null);\n}\n\n/** Properties of a CollectionDef. */\nexport declare interface ICollectionDef {\n  /** CollectionDef nodeList */\n  nodeList?: (CollectionDef.INodeList|null);\n\n  /** CollectionDef bytesList */\n  bytesList?: (CollectionDef.IBytesList|null);\n\n  /** CollectionDef int64List */\n  int64List?: (CollectionDef.IInt64List|null);\n\n  /** CollectionDef floatList */\n  floatList?: (CollectionDef.IFloatList|null);\n\n  /** CollectionDef anyList */\n  anyList?: (CollectionDef.IAnyList|null);\n}\n\nexport namespace CollectionDef {\n  /** Properties of a NodeList. */\n  export declare interface INodeList {\n    /** NodeList value */\n    value?: (string[]|null);\n  }\n\n  /** Properties of a BytesList. */\n  export declare interface IBytesList {\n    /** BytesList value */\n    value?: (Uint8Array[]|null);\n  }\n\n  /** Properties of an Int64List. */\n  export declare interface IInt64List {\n    /** Int64List value */\n    value?: ((number | string)[]|null);\n  }\n\n  /** Properties of a FloatList. */\n  export declare interface IFloatList {\n    /** FloatList value */\n    value?: (number[]|null);\n  }\n\n  /** Properties of an AnyList. */\n  export declare interface IAnyList {\n    /** AnyList value */\n    value?: (IAny[]|null);\n  }\n}\n\n/** Properties of a SaverDef. */\nexport declare interface ISaverDef {\n  /** SaverDef filenameTensorName */\n  filenameTensorName?: (string|null);\n\n  /** SaverDef saveTensorName */\n  saveTensorName?: (string|null);\n\n  /** SaverDef restoreOpName */\n  restoreOpName?: (string|null);\n\n  /** SaverDef maxToKeep */\n  maxToKeep?: (number|null);\n\n  /** SaverDef sharded */\n  sharded?: (boolean|null);\n\n  /** SaverDef keepCheckpointEveryNHours */\n  keepCheckpointEveryNHours?: (number|null);\n\n  /** SaverDef version */\n  version?: (SaverDef.CheckpointFormatVersion|null);\n}\n\nexport namespace SaverDef {\n  /** CheckpointFormatVersion enum. */\n  export enum CheckpointFormatVersion {LEGACY = 0, V1 = 1, V2 = 2}\n}\n\n/** Properties of a TensorInfo. */\nexport declare interface ITensorInfo {\n  /** TensorInfo name */\n  name?: (string|null);\n\n  /** TensorInfo cooSparse */\n  cooSparse?: (TensorInfo.ICooSparse|null);\n\n  /** TensorInfo dtype */\n  dtype?: (DataType|null);\n\n  /** TensorInfo tensorShape */\n  tensorShape?: (ITensorShape|null);\n}\n\nexport namespace TensorInfo {\n  /** Properties of a CooSparse. */\n  export declare interface ICooSparse {\n    /** CooSparse valuesTensorName */\n    valuesTensorName?: (string|null);\n\n    /** CooSparse indicesTensorName */\n    indicesTensorName?: (string|null);\n\n    /** CooSparse denseShapeTensorName */\n    denseShapeTensorName?: (string|null);\n  }\n}\n\n/** Properties of a SignatureDef. */\nexport declare interface ISignatureDef {\n  /** SignatureDef inputs */\n  inputs?: ({[k: string]: ITensorInfo}|null);\n\n  /** SignatureDef outputs */\n  outputs?: ({[k: string]: ITensorInfo}|null);\n\n  /** SignatureDef methodName */\n  methodName?: (string|null);\n}\n\n/** Properties of an AssetFileDef. */\nexport declare interface IAssetFileDef {\n  /** AssetFileDef tensorInfo */\n  tensorInfo?: (ITensorInfo|null);\n\n  /** AssetFileDef filename */\n  filename?: (string|null);\n}\n\n/** Properties of an OpDef. */\nexport declare interface IOpDef {\n  /** OpDef name */\n  name?: (string|null);\n\n  /** OpDef inputArg */\n  inputArg?: (OpDef.IArgDef[]|null);\n\n  /** OpDef outputArg */\n  outputArg?: (OpDef.IArgDef[]|null);\n\n  /** OpDef attr */\n  attr?: (OpDef.IAttrDef[]|null);\n\n  /** OpDef deprecation */\n  deprecation?: (OpDef.IOpDeprecation|null);\n\n  /** OpDef summary */\n  summary?: (string|null);\n\n  /** OpDef description */\n  description?: (string|null);\n\n  /** OpDef isCommutative */\n  isCommutative?: (boolean|null);\n\n  /** OpDef isAggregate */\n  isAggregate?: (boolean|null);\n\n  /** OpDef isStateful */\n  isStateful?: (boolean|null);\n\n  /** OpDef allowsUninitializedInput */\n  allowsUninitializedInput?: (boolean|null);\n}\n\nexport namespace OpDef {\n  /** Properties of an ArgDef. */\n  export declare interface IArgDef {\n    /** ArgDef name */\n    name?: (string|null);\n\n    /** ArgDef description */\n    description?: (string|null);\n\n    /** ArgDef type */\n    type?: (DataType|null);\n\n    /** ArgDef typeAttr */\n    typeAttr?: (string|null);\n\n    /** ArgDef numberAttr */\n    numberAttr?: (string|null);\n\n    /** ArgDef typeListAttr */\n    typeListAttr?: (string|null);\n\n    /** ArgDef isRef */\n    isRef?: (boolean|null);\n  }\n\n  /** Properties of an AttrDef. */\n  export declare interface IAttrDef {\n    /** AttrDef name */\n    name?: (string|null);\n\n    /** AttrDef type */\n    type?: (string|null);\n\n    /** AttrDef defaultValue */\n    defaultValue?: (IAttrValue|null);\n\n    /** AttrDef description */\n    description?: (string|null);\n\n    /** AttrDef hasMinimum */\n    hasMinimum?: (boolean|null);\n\n    /** AttrDef minimum */\n    minimum?: (number|string|null);\n\n    /** AttrDef allowedValues */\n    allowedValues?: (IAttrValue|null);\n  }\n\n  /** Properties of an OpDeprecation. */\n  export declare interface IOpDeprecation {\n    /** OpDeprecation version */\n    version?: (number|null);\n\n    /** OpDeprecation explanation */\n    explanation?: (string|null);\n  }\n}\n\n/** Properties of an OpList. */\nexport declare interface IOpList {\n  /** OpList op */\n  op?: (IOpDef[]|null);\n}\n\n/** Properties of a MetaGraphDef. */\nexport declare interface IMetaGraphDef {\n  /** MetaGraphDef metaInfoDef */\n  metaInfoDef?: (MetaGraphDef.IMetaInfoDef|null);\n\n  /** MetaGraphDef graphDef */\n  graphDef?: (IGraphDef|null);\n\n  /** MetaGraphDef saverDef */\n  saverDef?: (ISaverDef|null);\n\n  /** MetaGraphDef collectionDef */\n  collectionDef?: ({[k: string]: ICollectionDef}|null);\n\n  /** MetaGraphDef signatureDef */\n  signatureDef?: ({[k: string]: ISignatureDef}|null);\n\n  /** MetaGraphDef assetFileDef */\n  assetFileDef?: (IAssetFileDef[]|null);\n}\n\nexport namespace MetaGraphDef {\n  /** Properties of a MetaInfoDef. */\n  export declare interface IMetaInfoDef {\n    /** MetaInfoDef metaGraphVersion */\n    metaGraphVersion?: (string|null);\n\n    /** MetaInfoDef strippedOpList */\n    strippedOpList?: (IOpList|null);\n\n    /** MetaInfoDef anyInfo */\n    anyInfo?: (IAny|null);\n\n    /** MetaInfoDef tags */\n    tags?: (string[]|null);\n\n    /** MetaInfoDef tensorflowVersion */\n    tensorflowVersion?: (string|null);\n\n    /** MetaInfoDef tensorflowGitVersion */\n    tensorflowGitVersion?: (string|null);\n  }\n}\n\n/** Properties of a SavedModel. */\nexport declare interface ISavedModel {\n  /** SavedModel savedModelSchemaVersion */\n  savedModelSchemaVersion?: (number|string|null);\n\n  /** SavedModel metaGraphs */\n  metaGraphs?: (IMetaGraphDef[]|null);\n}\n\n/** Properties of a FunctionDefLibrary. */\nexport declare interface IFunctionDefLibrary {\n  /** FunctionDefLibrary function */\n  'function'?: (IFunctionDef[]|null);\n\n  /** FunctionDefLibrary gradient */\n  gradient?: (IGradientDef[]|null);\n}\n\n/** Properties of a FunctionDef. */\nexport declare interface IFunctionDef {\n  /** FunctionDef signature */\n  signature?: (IOpDef|null);\n\n  /** FunctionDef attr */\n  attr?: ({[k: string]: IAttrValue}|null);\n\n  /** FunctionDef nodeDef */\n  nodeDef?: (INodeDef[]|null);\n\n  /** FunctionDef ret */\n  ret?: ({[k: string]: string}|null);\n}\n\n/** Properties of a GradientDef. */\nexport declare interface IGradientDef {\n  /** GradientDef functionName */\n  functionName?: (string|null);\n\n  /** GradientDef gradientFunc */\n  gradientFunc?: (string|null);\n}\n","\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpExecutor, OpMapper} from '../types';\n\nconst CUSTOM_OPS: {[key: string]: OpMapper} = {};\n\n/**\n * Register an Op for graph model executor. This allow you to register\n * TensorFlow custom op or override existing op.\n *\n * Here is an example of registering a new MatMul Op.\n * ```js\n * const customMatmul = (node) =>\n *    tf.matMul(\n *        node.inputs[0], node.inputs[1],\n *        node.attrs['transpose_a'], node.attrs['transpose_b']);\n *\n * tf.registerOp('MatMul', customMatmul);\n * ```\n * The inputs and attrs of the node object is based on the TensorFlow op\n * registry.\n *\n * @param name The Tensorflow Op name.\n * @param opFunc An op function which is called with the current graph node\n * during execution and needs to return a tensor or a list of tensors. The node\n * has the following attributes:\n *    - attr: A map from attribute name to its value\n *    - inputs: A list of input tensors\n */\n/** @doc {heading: 'Models', subheading: 'Op Registry'} */\nexport function registerOp(name: string, opFunc: OpExecutor) {\n  const opMapper: OpMapper = {\n    tfOpName: name,\n    category: 'custom',\n    inputs: [],\n    attrs: [],\n    customExecutor: opFunc\n  };\n\n  CUSTOM_OPS[name] = opMapper;\n}\n\n/**\n * Retrieve the OpMapper object for the registered op.\n *\n * @param name The Tensorflow Op name.\n */\n/** @doc {heading: 'Models', subheading: 'Op Registry'} */\n\nexport function getRegisteredOp(name: string): OpMapper {\n  return CUSTOM_OPS[name];\n}\n\n/**\n * Deregister the Op for graph model executor.\n *\n * @param name The Tensorflow Op name.\n */\n/** @doc {heading: 'Models', subheading: 'Op Registry'} */\nexport function deregisterOp(name: string) {\n  delete CUSTOM_OPS[name];\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node, ValueType} from '../types';\n\nexport function getParamValue(\n    paramName: string, node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): ValueType {\n  const inputParam = node.inputParams[paramName];\n  if (inputParam && inputParam.inputIndexStart !== undefined) {\n    const start = inputParam.inputIndexStart;\n    const end = inputParam.inputIndexEnd === 0 ?\n        undefined :\n        (inputParam.inputIndexEnd === undefined ? start + 1 :\n                                                  inputParam.inputIndexEnd);\n    if (inputParam.type === 'tensor') {\n      return getTensor(\n          node.inputNames[inputParam.inputIndexStart], tensorMap, context);\n    }\n    if (inputParam.type === 'tensors') {\n      const inputs = node.inputNames.slice(start, end);\n\n      return inputs.map(name => getTensor(name, tensorMap, context));\n    }\n    const data = Array.prototype.slice.call(\n        getTensor(node.inputNames.slice(start)[0], tensorMap, context)\n            .dataSync());\n    return inputParam.type === 'number' ? data[0] : data;\n  }\n  const attrParam = node.attrParams[paramName];\n  return attrParam && attrParam.value;\n}\n\n/**\n * Retrieve the tensor based on input name by extracting the node name and\n * output index information.\n * @param name Node input name\n * @param tensorsMap Tensors map keyed by the node\n */\nexport function getTensor(\n    name: string, tensorsMap: NamedTensorsMap,\n    context: ExecutionContext): tfc.Tensor {\n  const [nodeName, index] = parseNodeName(name);\n  const contextId = context.currentContextIds.find(contextId => {\n    return !!tensorsMap[getNodeNameWithContextId(nodeName, contextId)];\n  });\n\n  return contextId !== undefined ?\n      tensorsMap[getNodeNameWithContextId(nodeName, contextId)][index] :\n      undefined;\n}\n\n/**\n * Retrieve the tensors based on input name for current context.\n * @param name Node input name\n * @param tensorsMap Tensors map keyed by the node\n */\nexport function getTensorsForCurrentContenxt(\n    name: string, tensorsMap: NamedTensorsMap,\n    context: ExecutionContext): tfc.Tensor[] {\n  return tensorsMap[getNodeNameWithContextId(name, context.currentContextId)];\n}\n\n/**\n * Returns the node name and index from the Node input name.\n * @param inputName The input name of the node, in format of\n * node_name:output_index, i.e. MatMul:0, if the output_index is not set, it is\n * default to 0.\n */\nexport function getNodeNameAndIndex(\n    inputName: string, context?: ExecutionContext): [string, number] {\n  const [nodeName, index] = parseNodeName(inputName);\n\n  return [\n    getNodeNameWithContextId(nodeName, context && context.currentContextId),\n    index\n  ];\n}\n\nfunction getNodeNameWithContextId(name: string, contextId?: string): string {\n  return !!contextId ? `${name}-${contextId}` : name;\n}\n\nexport function parseNodeName(name: string): [string, number] {\n  const index = name.lastIndexOf(':');\n  if (index === -1) return [name, 0];\n\n  const nodeName = name.substring(0, index);\n  return [nodeName, Number(name.substring(index + 1))];\n}\n\nexport function split(arr: number[], size: number) {\n  const res = [];\n  for (let i = 0; i < arr.length; i += size) {\n    res.push(arr.slice(i, i + size));\n  }\n  return res;\n}\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Add',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'AddN',\n    'category': 'arithmetic',\n    'inputs':\n        [{'start': 0, 'end': 0, 'name': 'tensors', 'type': 'tensors'}]\n  },\n  {\n    'tfOpName': 'BiasAdd',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Sub',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'RealDiv',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Div',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'FloorDiv',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Mul',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Maximum',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'Minimum',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'Pow',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'SquaredDifference',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Mod',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'FloorMod',\n    'category': 'arithmetic',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'T',\n      'name': 'dtype',\n      'type': 'dtype',\n      'notSupported': true\n    }]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Abs',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Acos',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Asin',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Atan',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Atan2',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'y', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Ceil',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'ClipByValue',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'clip_value_min', 'name': 'clipValueMin', 'type': 'number'},\n      {'tfName': 'clip_value_max', 'name': 'clipValueMax', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'Complex',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'real', 'type': 'tensor'},\n      {'start': 1, 'name': 'imag', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'ComplexAbs',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Cos',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Cosh',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Elu',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Exp',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Floor',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Log',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Neg',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Relu',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Relu6',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}, {\n        'tfName': 'clipValueMin',\n        'name': 'clipValueMin',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'clipValueMax',\n        'name': 'clipValueMax',\n        'type': 'number',\n        'defaultValue': 6\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Selu',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Sigmoid',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Sin',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Sinh',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Sqrt',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Rsqrt',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Square',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Tan',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Tanh',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Sign',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Round',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Expm1',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Log1p',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Reciprocal',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Softplus',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Asinh',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Acosh',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Atanh',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Erf',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Prod',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axes', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'keep_dims',\n        'name': 'keepDims',\n        'type': 'bool',\n        'notSupported': true\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'LeakyRelu',\n    'category': 'basic_math',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'alpha',\n        'name': 'alpha',\n        'type': 'number',\n        'defaultValue': 0.2\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'LoopCond',\n    'category': 'control',\n    'inputs': [{'start': 0, 'name': 'pred', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Switch',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'data', 'type': 'tensor'},\n      {'start': 1, 'name': 'pred', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'Merge',\n    'category': 'control',\n    'inputs':\n        [{'start': 0, 'end': 0, 'name': 'tensors', 'type': 'tensors'}]\n  },\n  {\n    'tfOpName': 'Enter',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true},\n      {'tfName': 'frame_name', 'name': 'frameName', 'type': 'string'},\n      {'tfName': 'is_constant', 'name': 'isConstant', 'type': 'bool'}\n    ]\n  },\n  {\n    'tfOpName': 'Exit',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'NextIteration',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'size', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'},\n      {'tfName': 'element_shape', 'name': 'elementShape', 'type': 'shape'},\n      {'tfName': 'dynamic_size', 'name': 'dynamicSize', 'type': 'bool'},\n      {'tfName': 'clear_after_read', 'name': 'clearAfterRead', 'type': 'bool'},\n      {\n        'tfName': 'identical_element_shapes',\n        'name': 'identicalElementShapes',\n        'type': 'bool'\n      },\n      {'tfName': 'tensor_array_name', 'name': 'name', 'type': 'string'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayWriteV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'number'},\n      {'start': 1, 'name': 'index', 'type': 'number'},\n      {'start': 2, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 3, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayReadV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'number'},\n      {'start': 1, 'name': 'index', 'type': 'number'},\n      {'start': 2, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [{\n      'tfName': 'dtype',\n      'name': 'dtype',\n      'type': 'dtype',\n      'notSupported': true\n    }]\n  },\n  {\n    'tfOpName': 'TensorArrayGatherV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'number'},\n      {'start': 1, 'name': 'indices', 'type': 'number[]'},\n      {'start': 2, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'},\n      {'tfName': 'element_shape', 'name': 'elementShape', 'type': 'shape'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayScatterV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'number'},\n      {'start': 1, 'name': 'indices', 'type': 'number[]'},\n      {'start': 2, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 3, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorArrayConcatV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'number'},\n      {'start': 1, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'}, {\n        'tfName': 'element_shape_except0',\n        'name': 'elementShapeExcept0',\n        'type': 'shape',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArraySplitV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'number'},\n      {'start': 1, 'name': 'tensor', 'type': 'tensor'},\n      {'start': 2, 'name': 'lengths', 'type': 'number[]'},\n      {'start': 3, 'name': 'flowIn', 'type': 'number'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TensorArraySizeV3',\n    'category': 'control',\n    'inputs': [\n      {'start': 0, 'name': 'tensorArrayId', 'type': 'number'},\n      {'start': 1, 'name': 'flowIn', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayCloseV3',\n    'category': 'control',\n    'inputs': [{'start': 0, 'name': 'tensorArrayId', 'type': 'number'}]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'AvgPool',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'MaxPool',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      },\n      {'tfName': 'ksize', 'name': 'kernelSize', 'type': 'number[]'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Conv1D',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'stride', 'name': 'stride', 'type': 'number'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NWC'\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}, {\n        'tfName': 'dilation',\n        'name': 'dilation',\n        'type': 'number',\n        'defaultValue': 1\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Conv2D',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true},\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'},\n      {'tfName': 'useCudnnOnGpu', 'name': 'useCudnnOnGpu', 'type': 'bool'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'Conv2DBackpropInput',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 2, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n      {'start': 0, 'name': 'outputShape', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'DepthwiseConv2d',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'input', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'DepthwiseConv2dNative',\n    'category': 'convolution',\n    'inputs': [\n      {'start': 0, 'name': 'input', 'type': 'tensor'},\n      {'start': 1, 'name': 'filter', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'strides', 'name': 'strides', 'type': 'number[]'},\n      {'tfName': 'padding', 'name': 'pad', 'type': 'string'}, {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'defaultValue': 'NHWC'\n      },\n      {'tfName': 'dilations', 'name': 'dilations', 'type': 'number[]'}\n    ]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Fill',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'shape', 'type': 'number[]'},\n      {'start': 1, 'name': 'value', 'type': 'number'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'LinSpace',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'start', 'type': 'number'},\n      {'start': 1, 'name': 'stop', 'type': 'number'},\n      {'start': 2, 'name': 'num', 'type': 'number'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'OneHot',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'indices', 'type': 'tensor'},\n      {'start': 1, 'name': 'depth', 'type': 'number'},\n      {'start': 2, 'name': 'onValue', 'type': 'number', 'defaultValue': 1},\n      {'start': 3, 'name': 'offValue', 'type': 'number', 'defaultValue': 0},\n    ],\n    'attrs': [\n      {\n        'tfName': 'axis',\n        'name': 'axis',\n        'type': 'number',\n        'notSupported': true\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Ones',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'shape', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'OnesLike',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [{'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'RandomUniform',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'shape', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'minval',\n        'name': 'minval',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'maxval',\n        'name': 'maxval',\n        'type': 'number',\n        'defaultValue': 1\n      },\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'},\n      {'tfName': 'seed', 'name': 'seed', 'type': 'number', 'defaultValue': 0}, {\n        'tfName': 'seed2',\n        'name': 'seed2',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      },\n      {'tfName': 'T', 'name': 'T', 'type': 'number', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Range',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'start', 'type': 'number'},\n      {'start': 1, 'name': 'stop', 'type': 'number'},\n      {'start': 2, 'name': 'step', 'type': 'number', 'defaultValue': 0},\n    ],\n    'attrs': [{'tfName': 'Tidx', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'TruncatedNormal',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'shape', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'means',\n        'name': 'mean',\n        'type': 'number',\n        'defaultValue': 0.0\n      },\n      {\n        'tfName': 'stddev',\n        'name': 'stdDev',\n        'type': 'number',\n        'defaultValue': 1.0\n      },\n      {'tfName': 'seed', 'name': 'seed', 'type': 'number'}, {\n        'tfName': 'seed2',\n        'name': 'seed2',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      },\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'},\n      {'tfName': 'T', 'name': 'T', 'type': 'number', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Zeros',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'shape', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  },\n  {\n    'tfOpName': 'ZerosLike',\n    'category': 'creation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [{'tfName': 'T', 'name': 'dtype', 'type': 'dtype'}]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'NonMaxSuppressionV2',\n    'category': 'dynamic',\n    'inputs': [\n      {'start': 0, 'name': 'boxes', 'type': 'tensor'},\n      {'start': 1, 'name': 'scores', 'type': 'tensor'},\n      {'start': 2, 'name': 'maxOutputSize', 'type': 'number'},\n      {'start': 3, 'name': 'iouThreshold', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'NonMaxSuppressionV3',\n    'category': 'dynamic',\n    'inputs': [\n      {'start': 0, 'name': 'boxes', 'type': 'tensor'},\n      {'start': 1, 'name': 'scores', 'type': 'tensor'},\n      {'start': 2, 'name': 'maxOutputSize', 'type': 'number'},\n      {'start': 3, 'name': 'iouThreshold', 'type': 'number'},\n      {'start': 4, 'name': 'scoreThreshold', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'Where',\n    'category': 'dynamic',\n    'inputs': [\n      {'start': 0, 'name': 'condition', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'ListDiff',\n    'category': 'dynamic',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'y', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'T',\n      'name': 'dtype',\n      'type': 'dtype',\n      'notSupported': true\n    }]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [{\n  'tfOpName': 'TopKV2',\n  'category': 'evaluation',\n  'inputs': [\n    {'start': 0, 'name': 'x', 'type': 'tensor'},\n    {'start': 1, 'name': 'k', 'type': 'number'},\n  ],\n  'attrs': [{'tfName': 'sorted', 'name': 'sorted', 'type': 'bool'}]\n}];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'PlaceholderWithDefault',\n    'category': 'graph',\n    'inputs': [\n      {'start': 0, 'name': 'default', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'shape', 'name': 'shape', 'type': 'shape'},\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'Placeholder',\n    'category': 'graph',\n    'attrs': [\n      {'tfName': 'shape', 'name': 'shape', 'type': 'shape'},\n      {'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {'tfOpName': 'Const', 'category': 'graph'}, {\n    'tfOpName': 'Identity',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'IdentityN',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'end': 0, 'name': 'x', 'type': 'tensors'}]\n  },\n  {\n    'tfOpName': 'Snapshot',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Rank',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Size',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'Shape',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'ShapeN',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'end': 0, 'name': 'x', 'type': 'tensors'}]\n  },\n  {\n    'tfOpName': 'Print',\n    'category': 'graph',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'data', 'type': 'tensors'},\n    ],\n    'attrs': [\n      {'tfName': 'message', 'name': 'message', 'type': 'string'}, {\n        'tfName': 'first_n',\n        'name': 'firstN',\n        'type': 'number',\n        'notSupported': true\n      },\n      {\n        'tfName': 'summarize',\n        'name': 'summarize',\n        'type': 'number',\n        'defaultValue': 3\n      }\n    ]\n  },\n  {'tfOpName': 'NoOp', 'category': 'graph', 'inputs': []}, {\n    'tfOpName': 'StopGradient',\n    'category': 'graph',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'FakeQuantWithMinMaxVars',\n    'category': 'graph',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'min', 'name': 'min', 'type': 'number'},\n      {'tfName': 'max', 'name': 'max', 'type': 'number'}\n    ]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'ResizeBilinear',\n    'category': 'image',\n    'inputs': [\n      {'start': 0, 'name': 'images', 'type': 'tensor'},\n      {'start': 1, 'name': 'size', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {'tfName': 'align_corners', 'name': 'alignCorners', 'type': 'bool'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'ResizeNearestNeighbor',\n    'category': 'image',\n    'inputs': [\n      {'start': 0, 'name': 'images', 'type': 'tensor'},\n      {'start': 1, 'name': 'size', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {'tfName': 'align_corners', 'name': 'alignCorners', 'type': 'bool'},\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'CropAndResize',\n    'category': 'image',\n    'inputs': [\n      {'start': 0, 'name': 'image', 'type': 'tensor'},\n      {'start': 1, 'name': 'boxes', 'type': 'tensor'},\n      {'start': 2, 'name': 'boxInd', 'type': 'tensor'},\n      {'start': 3, 'name': 'cropSize', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {'tfName': 'method', 'name': 'method', 'type': 'string'}, {\n        'tfName': 'extrapolation_value',\n        'name': 'extrapolationValue',\n        'type': 'number'\n      }\n    ]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Equal',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'NotEqual',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Greater',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'GreaterEqual',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Less',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'LessEqual',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'LogicalAnd',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'LogicalNot',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'LogicalOr',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Select',\n    'category': 'logical',\n    'inputs': [\n      {'start': 0, 'name': 'condition', 'type': 'tensor'},\n      {'start': 1, 'name': 'a', 'type': 'tensor'},\n      {'start': 2, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'T',\n      'name': 'dtype',\n      'type': 'dtype',\n      'notSupported': true\n    }]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'MatMul',\n    'category': 'matrices',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'transpose_a',\n        'name': 'transposeA',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfName': 'transpose_b',\n        'name': 'transposeB',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'BatchMatMul',\n    'category': 'matrices',\n    'inputs': [\n      {'start': 0, 'name': 'a', 'type': 'tensor'},\n      {'start': 1, 'name': 'b', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'adj_x',\n        'name': 'transposeA',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {\n        'tfName': 'adj_y',\n        'name': 'transposeB',\n        'type': 'bool',\n        'defaultValue': false\n      },\n      {'tfName': 'T', 'name': 'dtype', 'type': 'dtype', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'Transpose',\n    'category': 'matrices',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'perm', 'type': 'number[]'},\n    ],\n    'attrs': [{\n      'tfName': 'T',\n      'name': 'dtype',\n      'type': 'dtype',\n      'notSupported': true\n    }]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'FusedBatchNorm',\n    'category': 'normalization',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'scale', 'type': 'tensor'},\n      {'start': 2, 'name': 'offset', 'type': 'tensor'},\n      {'start': 3, 'name': 'mean', 'type': 'tensor'},\n      {'start': 4, 'name': 'variance', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'epsilon',\n        'name': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.001\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FusedBatchNormV2',\n    'category': 'normalization',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'scale', 'type': 'tensor'},\n      {'start': 2, 'name': 'offset', 'type': 'tensor'},\n      {'start': 3, 'name': 'mean', 'type': 'tensor'},\n      {'start': 4, 'name': 'variance', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'epsilon',\n        'name': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.001\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'FusedBatchNormV3',\n    'category': 'normalization',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'scale', 'type': 'tensor'},\n      {'start': 2, 'name': 'offset', 'type': 'tensor'},\n      {'start': 3, 'name': 'mean', 'type': 'tensor'},\n      {'start': 4, 'name': 'variance', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'epsilon',\n        'name': 'epsilon',\n        'type': 'number',\n        'defaultValue': 0.001\n      },\n      {\n        'tfName': 'data_format',\n        'name': 'dataFormat',\n        'type': 'string',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LRN',\n    'category': 'normalization',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'depth_radius',\n        'name': 'radius',\n        'type': 'number',\n        'defaultValue': 5\n      },\n      {'tfName': 'bias', 'name': 'bias', 'type': 'number', 'defaultValue': 1.0},\n      {\n        'tfName': 'alpha',\n        'name': 'alpha',\n        'type': 'number',\n        'defaultValue': 1.0\n      },\n      {\n        'tfName': 'beta',\n        'name': 'beta',\n        'type': 'number',\n        'defaultValue': 0.5\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Softmax',\n    'category': 'normalization',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'LogSoftmax',\n    'category': 'normalization',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'SparseToDense',\n    'category': 'normalization',\n    'inputs': [\n      {'start': 0, 'name': 'sparseIndices', 'type': 'tensor'},\n      {'start': 1, 'name': 'outputShape', 'type': 'number[]'},\n      {'start': 2, 'name': 'sparseValues', 'type': 'tensor'},\n      {'start': 3, 'name': 'defaultValue', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'validate_indices',\n      'name': 'validateIndices',\n      'type': 'bool',\n      'defaultValue': true,\n      'notSupported': true\n    }]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Max',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'Mean',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'Min',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'Sum',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'All',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'Any',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  },\n  {\n    'tfOpName': 'ArgMax',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'ArgMin',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'Prod',\n    'category': 'reduction',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'},\n    ],\n    'attrs': [{'tfName': 'keep_dims', 'name': 'keepDims', 'type': 'bool'}]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'ConcatV2',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'end': -1, 'name': 'tensors', 'type': 'tensors'},\n      {'start': -1, 'name': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'Concat',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 1, 'end': 0, 'name': 'tensors', 'type': 'tensors'},\n      {'start': 0, 'name': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'GatherV2',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'tensor'},\n      {'start': 2, 'name': 'axis', 'type': 'number', 'defaultValue': 0}\n    ]\n  },\n  {\n    'tfOpName': 'Gather',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'axis', 'name': 'axis', 'type': 'number', 'defaultValue': 0}, {\n        'tfName': 'validate_indices',\n        'name': 'validateIndices',\n        'type': 'bool',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Reverse',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'dims', 'type': 'bool', 'notSupported': true}\n    ]\n  },\n  {\n    'tfOpName': 'ReverseV2',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'Slice',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'begin', 'type': 'number[]'},\n      {'start': 2, 'name': 'size', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'StridedSlice',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'begin', 'type': 'number[]'},\n      {'start': 2, 'name': 'end', 'type': 'number[]'},\n      {'start': 3, 'name': 'strides', 'type': 'number[]'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'begin_mask',\n        'name': 'beginMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'end_mask',\n        'name': 'endMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'new_axis_mask',\n        'name': 'newAxisMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'ellipsis_mask',\n        'name': 'ellipsisMask',\n        'type': 'number',\n        'defaultValue': 0\n      },\n      {\n        'tfName': 'shrink_axis_mask',\n        'name': 'shrinkAxisMask',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Pack',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'end': 0, 'name': 'tensors', 'type': 'tensors'},\n    ],\n    'attrs': [\n      {'tfName': 'axis', 'name': 'axis', 'type': 'number', 'defaultValue': 0}\n    ]\n  },\n  {\n    'tfOpName': 'Unpack',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'tensor', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'axis', 'name': 'axis', 'type': 'number', 'defaultValue': 0}, {\n        'tfName': 'num',\n        'name': 'num',\n        'type': 'number',\n        'defaultValue': 0,\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Tile',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'reps', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'Split',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'axis', 'type': 'number', 'defaultValue': 0},\n      {'start': 1, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'num_split',\n      'name': 'numOrSizeSplits',\n      'type': 'number',\n      'defaultValue': 1\n    }]\n  },\n  {\n    'tfOpName': 'SplitV',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'numOrSizeSplits', 'type': 'number[]'},\n      {'start': 2, 'name': 'axis', 'type': 'number', 'defaultValue': 0}\n    ]\n  },\n  {\n    'tfOpName': 'ScatterNd',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'indices', 'type': 'tensor'},\n      {'start': 1, 'name': 'values', 'type': 'tensor'},\n      {'start': 2, 'name': 'shape', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'GatherNd',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'indices', 'type': 'tensor'}\n    ]\n  },\n  {\n    'tfOpName': 'SparseToDense',\n    'category': 'slice_join',\n    'inputs': [\n      {'start': 0, 'name': 'sparseIndices', 'type': 'tensor'},\n      {'start': 1, 'name': 'outputShape', 'type': 'number[]'},\n      {'start': 2, 'name': 'sparseValues', 'type': 'tensor'},\n      {'start': 3, 'name': 'defaultValue', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'validate_indices',\n      'name': 'validateIndices',\n      'type': 'bool',\n      'defaultValue': false,\n      'notSupported': true\n    }]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'FFT',\n    'category': 'spectral',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'IFFT',\n    'category': 'spectral',\n    'inputs': [{'start': 0, 'name': 'x', 'type': 'tensor'}]\n  },\n  {\n    'tfOpName': 'RFFT',\n    'category': 'spectral',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'}, {\n        'start': 1,\n        'name': 'fft_length',\n        'type': 'number',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'IRFFT',\n    'category': 'spectral',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'}, {\n        'start': 1,\n        'name': 'fft_length',\n        'type': 'number',\n        'notSupported': true\n      }\n    ]\n  }\n];\n","import {OpMapper} from '../types';\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Cast',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {\n        'tfName': 'SrcT',\n        'name': 'sdtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {'tfName': 'DstT', 'name': 'dtype', 'type': 'dtype'}\n    ]\n  },\n  {\n    'tfOpName': 'ExpandDims',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'axis', 'type': 'number'}\n    ]\n  },\n  {\n    'tfOpName': 'Pad',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'padding', 'type': 'number[]'},\n    ],\n    'attrs': [{\n      'tfName': 'constant_value',\n      'name': 'constantValue',\n      'type': 'number',\n      'defaultValue': 0\n    }]\n  },\n  {\n    'tfOpName': 'PadV2',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'padding', 'type': 'number[]'}, {\n        'start': 2,\n        'name': 'constantValue',\n        'type': 'number',\n        'defaultValue': 0\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Reshape',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'shape', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'Squeeze',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [{\n      'tfName': 'axis',\n      'tfDeprecatedName': 'squeeze_dims',\n      'name': 'axis',\n      'type': 'number[]'\n    }]\n  },\n  {\n    'tfOpName': 'SpaceToBatchND',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'blockShape', 'type': 'number[]'},\n      {'start': 2, 'name': 'paddings', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'BatchToSpaceND',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n      {'start': 1, 'name': 'blockShape', 'type': 'number[]'},\n      {'start': 2, 'name': 'crops', 'type': 'number[]'}\n    ]\n  },\n  {\n    'tfOpName': 'DepthToSpace',\n    'category': 'transformation',\n    'inputs': [\n      {'start': 0, 'name': 'x', 'type': 'tensor'},\n    ],\n    'attrs': [\n      {'tfName': 'block_size', 'name': 'blockSize', 'type': 'number'},\n      {'tfName': 'data_format', 'name': 'dataFormat', 'type': 'string'}\n    ]\n  }\n];\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, ENV} from '@tensorflow/tfjs-core';\n\nimport * as tensorflow from '../data/compiled_api';\nimport {getRegisteredOp} from './custom_op/register';\n\nimport {getNodeNameAndIndex} from './executors/utils';\nimport * as arithmetic from './op_list/arithmetic';\nimport * as basicMath from './op_list/basic_math';\nimport * as control from './op_list/control';\nimport * as convolution from './op_list/convolution';\nimport * as creation from './op_list/creation';\nimport * as dynamic from './op_list/dynamic';\nimport * as evaluation from './op_list/evaluation';\nimport * as graph from './op_list/graph';\nimport * as image from './op_list/image';\nimport * as logical from './op_list/logical';\nimport * as matrices from './op_list/matrices';\nimport * as normalization from './op_list/normalization';\nimport * as reduction from './op_list/reduction';\nimport * as sliceJoin from './op_list/slice_join';\nimport * as spectral from './op_list/spectral';\nimport * as transformation from './op_list/transformation';\nimport {Graph, InputParamValue, Node, OpMapper, ParamValue} from './types';\n\nexport class OperationMapper {\n  private static _instance: OperationMapper;\n\n  private opMappers: {[key: string]: OpMapper};\n\n  // Singleton instance for the mapper\n  public static get Instance() {\n    return this._instance || (this._instance = new this());\n  }\n\n  // Loads the op mapping from the JSON file.\n  private constructor() {\n    const ops = [\n      arithmetic, basicMath, control, convolution, creation, dynamic,\n      evaluation, logical, image, graph, matrices, normalization, reduction,\n      sliceJoin, spectral, transformation\n    ];\n    const mappersJson: OpMapper[] = [].concat.apply([], ops.map(op => op.json));\n\n    this.opMappers = mappersJson.reduce<{[key: string]: OpMapper}>(\n        (map, mapper: OpMapper) => {\n          map[mapper.tfOpName] = mapper;\n          return map;\n        },\n        {});\n  }\n\n  // Converts the model from Tensorflow GraphDef to local representation for\n  // TensorFlow.js API\n  transformGraph(graph: tensorflow.IGraphDef): Graph {\n    const tfNodes = graph.node;\n    const placeholders: Node[] = [];\n    const weights: Node[] = [];\n    const nodes = tfNodes.reduce<{[key: string]: Node}>((map, node) => {\n      map[node.name] = this.mapNode(node);\n      if (node.op === 'Placeholder') {\n        placeholders.push(map[node.name]);\n      }\n      if (node.op === 'Const') {\n        weights.push(map[node.name]);\n      }\n      return map;\n    }, {});\n\n    const inputs: Node[] = [];\n    const outputs: Node[] = [];\n    const allNodes = Object.keys(nodes);\n    allNodes.forEach(key => {\n      const node = nodes[key];\n      node.inputNames.forEach(name => {\n        const [nodeName, ] = getNodeNameAndIndex(name);\n        node.inputs.push(nodes[nodeName]);\n        nodes[nodeName].children.push(node);\n      });\n      if (node.inputs.length === 0) inputs.push(node);\n    });\n\n    allNodes.forEach(key => {\n      const node = nodes[key];\n      if (node.children.length === 0) outputs.push(node);\n    });\n\n    return {nodes, inputs, outputs, weights, placeholders};\n  }\n\n  private mapNode(node: tensorflow.INodeDef): Node {\n    // Unsupported ops will cause an error at run-time (not parse time), since\n    // they may not be used by the actual execution subgraph.\n    const mapper =\n        getRegisteredOp(node.op) || this.opMappers[node.op] || {} as OpMapper;\n    if (node.attr == null) {\n      node.attr = {};\n    }\n\n    const newNode: Node = {\n      name: node.name,\n      op: node.op,\n      category: mapper.category,\n      inputNames:\n          (node.input ||\n           []).map(input => input.startsWith('^') ? input.substr(1) : input),\n      inputs: [],\n      children: [],\n      inputParams: {},\n      attrParams: {},\n      rawAttrs: node.attr\n    };\n\n    if (mapper.inputs != null) {\n      newNode.inputParams =\n          mapper.inputs.reduce<{[key: string]: InputParamValue}>(\n              (map, param) => {\n                map[param.name] = {\n                  type: param.type,\n                  inputIndexStart: param.start,\n                  inputIndexEnd: param.end\n                };\n                return map;\n              },\n              {});\n    }\n    if (mapper.attrs != null) {\n      newNode.attrParams =\n          mapper.attrs.reduce<{[key: string]: ParamValue}>((map, param) => {\n            const type = param.type;\n            let value = undefined;\n            switch (param.type) {\n              case 'string':\n                value = getStringParam(\n                    node.attr, param.tfName, param.defaultValue as string);\n\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getStringParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as string);\n                }\n                break;\n              case 'string[]':\n                value = getStringArrayParam(\n                    node.attr, param.tfName, param.defaultValue as string[]);\n\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getStringArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as string[]);\n                }\n                break;\n              case 'number':\n                value = getNumberParam(\n                    node.attr, param.tfName,\n                    (param.defaultValue || 0) as number);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getNumberParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as number);\n                }\n                break;\n              case 'number[]':\n                value = getNumericArrayParam(\n                    node.attr, param.tfName, param.defaultValue as number[]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getNumericArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as number[]);\n                }\n                break;\n              case 'bool':\n                value = getBoolParam(\n                    node.attr, param.tfName, param.defaultValue as boolean);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getBoolParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as boolean);\n                }\n                break;\n              case 'bool[]':\n                value = getBoolArrayParam(\n                    node.attr, param.tfName, param.defaultValue as boolean[]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getBoolArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as boolean[]);\n                }\n                break;\n              case 'shape':\n                value = getTensorShapeParam(\n                    node.attr, param.tfName, param.defaultValue as number[]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getTensorShapeParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as number[]);\n                }\n                break;\n              case 'shape[]':\n                value = getTensorShapeArrayParam(\n                    node.attr, param.tfName, param.defaultValue as number[][]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getTensorShapeArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as number[][]);\n                }\n                break;\n              case 'dtype':\n                value = getDtypeParam(\n                    node.attr, param.tfName, param.defaultValue as DataType);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getDtypeParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as DataType);\n                }\n                break;\n              case 'dtype[]':\n                value = getDtypeArrayParam(\n                    node.attr, param.tfName, param.defaultValue as DataType[]);\n                if (value === undefined && !!param.tfDeprecatedName) {\n                  value = getDtypeArrayParam(\n                      node.attr, param.tfDeprecatedName,\n                      param.defaultValue as DataType[]);\n                }\n                break;\n              case 'tensor':\n              case 'tensors':\n                break;\n              default:\n                throw new Error(\n                    `Unsupported param type: ${param.type} for op: ${node.op}`);\n            }\n            map[param.name] = {value, type};\n            return map;\n          }, {});\n    }\n    return newNode;\n  }\n}\n\nexport function decodeBase64(text: string): string {\n  // tslint:disable-next-line:no-any\n  const global = ENV.global as any;\n  if (typeof global.atob !== 'undefined') {\n    return global.atob(text);\n  } else if (typeof Buffer !== 'undefined') {\n    return new Buffer(text, 'base64').toString();\n  } else {\n    throw new Error(\n        'Unable to decode base64 in this environment. ' +\n        'Missing built-in atob() or Buffer()');\n  }\n}\n\nexport function parseStringParam(s: []|string, keepCase: boolean): string {\n  const value =\n      Array.isArray(s) ? String.fromCharCode.apply(null, s) : decodeBase64(s);\n  return keepCase ? value : value.toLowerCase();\n}\n\nexport function getStringParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string, def: string,\n    keepCase = false): string {\n  const param = attrs[name];\n  if (param != null) {\n    return parseStringParam(param.s, keepCase);\n  }\n  return def;\n}\n\nexport function getBoolParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: boolean): boolean {\n  const param = attrs[name];\n  return param ? param.b : def;\n}\n\nexport function getNumberParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: number): number {\n  const param = attrs[name] || {};\n  const value =\n      param['i'] != null ? param['i'] : (param['f'] != null ? param['f'] : def);\n  return (typeof value === 'number') ? value :\n                                       parseInt(value as string, 10) as number;\n}\n\nexport function parseDtypeParam(value: string|tensorflow.DataType): DataType {\n  if (typeof (value) === 'string') {\n    // tslint:disable-next-line:no-any\n    value = tensorflow.DataType[value as any];\n  }\n  switch (value) {\n    case tensorflow.DataType.DT_FLOAT:\n      return 'float32';\n    case tensorflow.DataType.DT_INT32:\n      return 'int32';\n    case tensorflow.DataType.DT_BOOL:\n      return 'bool';\n    case tensorflow.DataType.DT_DOUBLE:\n      return 'float32';\n    case tensorflow.DataType.DT_STRING:\n      return 'string';\n    default:\n      // Unknown dtype error will happen at runtime (instead of parse time),\n      // since these nodes might not be used by the actual subgraph execution.\n      return null;\n  }\n}\n\nexport function getDtypeParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: DataType): DataType {\n  const param = attrs[name];\n  if (param && param.type) {\n    return parseDtypeParam(param.type);\n  }\n  return def;\n}\n\nexport function getDtypeArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: DataType[]): DataType[] {\n  const param = attrs[name];\n  if (param && param.list && param.list.type) {\n    return param.list.type.map(v => parseDtypeParam(v));\n  }\n  return def;\n}\n\nexport function parseTensorShapeParam(shape: tensorflow.ITensorShape): number[]|\n    undefined {\n  if (shape.unknownRank) {\n    return undefined;\n  }\n  if (shape.dim != null) {\n    return shape.dim.map(\n        dim => (typeof dim.size === 'number') ?\n            dim.size :\n            parseInt(dim.size as string, 10));\n  }\n  return [];\n}\n\nexport function getTensorShapeParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def?: number[]): number[]|undefined {\n  const param = attrs[name];\n  if (param && param.shape) {\n    return parseTensorShapeParam(param.shape);\n  }\n  return def;\n}\n\nexport function getNumericArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: number[]): number[] {\n  const param = attrs[name];\n  if (param) {\n    return ((param.list.f && param.list.f.length ? param.list.f : param.list.i))\n               .map(\n                   v => (typeof v === 'number') ? v :\n                                                  parseInt(v as string, 10)) as\n        number[];\n  }\n  return def;\n}\n\nexport function getStringArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string, def: string[],\n    keepCase = false): string[] {\n  const param = attrs[name];\n  if (param && param.list && param.list.s) {\n    return param.list.s.map((v) => {\n      return parseStringParam(v, keepCase);\n    }) as string[];\n  }\n  return def;\n}\n\nexport function getTensorShapeArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: number[][]): number[][] {\n  const param = attrs[name];\n  if (param && param.list && param.list.shape) {\n    return param.list.shape.map((v) => {\n      return parseTensorShapeParam(v);\n    }) as number[][];\n  }\n  return def;\n}\n\nexport function getBoolArrayParam(\n    attrs: {[key: string]: tensorflow.IAttrValue}, name: string,\n    def: boolean[]): boolean[] {\n  const param = attrs[name];\n  if (param && param.list && param.list.b) {\n    return param.list.b;\n  }\n  return def;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, Tensor} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {getTensor} from '../executors/utils';\nimport {getBoolArrayParam, getBoolParam, getDtypeArrayParam, getDtypeParam, getNumberParam, getNumericArrayParam, getStringArrayParam, getStringParam, getTensorShapeArrayParam, getTensorShapeParam} from '../operation_mapper';\nimport {GraphNode, Node, ValueType} from '../types';\n\n/**\n * Helper class for lookup inputs and params for nodes in the model graph.\n */\nexport class NodeValueImpl implements GraphNode {\n  public readonly inputs: Tensor[] = [];\n  public readonly attrs: {[key: string]: ValueType} = {};\n  constructor(\n      private node: Node, private tensorMap: NamedTensorsMap,\n      private context: ExecutionContext) {\n    this.inputs = node.inputNames.map(name => this.getInput(name));\n    if (node.rawAttrs != null) {\n      this.attrs = Object.keys(node.rawAttrs)\n                       .reduce((attrs: {[key: string]: ValueType}, key) => {\n                         attrs[key] = this.getAttr(key);\n                         return attrs;\n                       }, {});\n    }\n  }\n\n  /**\n   * Return the value of the attribute or input param.\n   * @param name String: name of attribute or input param.\n   */\n  private getInput(name: string): Tensor {\n    return getTensor(name, this.tensorMap, this.context);\n  }\n\n  /**\n   * Return the value of the attribute or input param.\n   * @param name String: name of attribute or input param.\n   */\n  private getAttr(name: string, defaultValue?: ValueType): ValueType {\n    const value = this.node.rawAttrs[name];\n    if (value.tensor != null) {\n      return getTensor(name, this.tensorMap, this.context);\n    }\n    if (value.i != null || value.f != null) {\n      return getNumberParam(this.node.rawAttrs, name, defaultValue as number);\n    }\n    if (value.s != null) {\n      return getStringParam(this.node.rawAttrs, name, defaultValue as string);\n    }\n    if (value.b != null) {\n      return getBoolParam(this.node.rawAttrs, name, defaultValue as boolean);\n    }\n    if (value.shape != null) {\n      return getTensorShapeParam(\n          this.node.rawAttrs, name, defaultValue as number[]);\n    }\n    if (value.type != null) {\n      return getDtypeParam(this.node.rawAttrs, name, defaultValue as DataType);\n    }\n    if (value.list != null) {\n      if (value.list.i != null || value.list.f != null) {\n        return getNumericArrayParam(\n            this.node.rawAttrs, name, defaultValue as number[]);\n      }\n      if (value.list.s != null) {\n        return getStringArrayParam(\n            this.node.rawAttrs, name, defaultValue as string[]);\n      }\n      if (value.list.shape != null) {\n        return getTensorShapeArrayParam(\n            this.node.rawAttrs, name, defaultValue as number[][]);\n      }\n      if (value.list.b != null) {\n        return getBoolArrayParam(\n            this.node.rawAttrs, name, defaultValue as boolean[]);\n      }\n      if (value.list.type != null) {\n        return getDtypeArrayParam(\n            this.node.rawAttrs, name, defaultValue as DataType[]);\n      }\n    }\n\n    return defaultValue;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'BiasAdd':\n    case 'Add': {\n      return [tfc.add(\n          (getParamValue('a', node, tensorMap, context) as tfc.Tensor),\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'AddN': {\n      return [tfc.addN((\n          getParamValue('tensors', node, tensorMap, context) as tfc.Tensor[]))];\n    }\n    case 'FloorMod':\n    case 'Mod':\n      return [tfc.mod(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    case 'Mul':\n      return [tfc.mul(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    case 'RealDiv':\n    case 'Div': {\n      return [tfc.div(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'FloorDiv': {\n      return [tfc.floorDiv(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Sub': {\n      return [tfc.sub(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Minimum': {\n      return [tfc.minimum(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Maximum': {\n      return [tfc.maximum(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Pow': {\n      return [tfc.pow(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'SquaredDifference': {\n      return [tfc.squaredDifference(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'arithmetic';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue, getTensor} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'Abs':\n    case 'ComplexAbs':\n      return [tfc.abs(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Acos':\n      return [tfc.acos(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Acosh':\n      return [tfc.acosh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Asin':\n      return [tfc.asin(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Asinh':\n      return [tfc.asinh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Atan':\n      return [tfc.atan(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Atan2':\n      return [tfc.atan2(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('y', node, tensorMap, context) as tfc.Tensor)];\n    case 'Atanh':\n      return [tfc.atanh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Ceil':\n      return [tfc.ceil(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Complex':\n      return [tfc.complex(\n          getParamValue('real', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('imag', node, tensorMap, context) as tfc.Tensor)];\n    case 'Cos':\n      return [tfc.cos(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Cosh':\n      return [tfc.cosh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Elu':\n      return [tfc.elu(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Erf':\n      return [tfc.erf(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Exp':\n      return [tfc.exp(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Expm1': {\n      return [tfc.expm1(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Floor':\n      return [tfc.floor(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Log':\n      return [tfc.log(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Log1p': {\n      return [tfc.log1p(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Neg':\n      return [tfc.neg(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Reciprocal': {\n      return [tfc.reciprocal(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Relu':\n      return [tfc.relu(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Round': {\n      return [tfc.round(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Selu':\n      return [tfc.selu(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Sigmoid':\n      return [tfc.sigmoid(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Sin':\n      return [tfc.sin(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Sign': {\n      return [tfc.sign(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Sinh': {\n      return [tfc.sinh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Softplus': {\n      return [tfc.softplus(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Sqrt': {\n      return [tfc.sqrt(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Square': {\n      return [tfc.square(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Tanh': {\n      return [tfc.tanh(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Tan':\n      return [tfc.tan(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    case 'Relu6':\n    case 'ClipByValue':\n      return [tfc.clipByValue(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('clipValueMin', node, tensorMap, context) as number,\n          getParamValue('clipValueMax', node, tensorMap, context) as number)];\n    case 'Rsqrt':\n      return [tfc.rsqrt(getTensor(node.inputNames[0], tensorMap, context))];\n    case 'Prod':\n      return [tfc.prod(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('axes', node, tensorMap, context) as number[])];\n    case 'LeakyRelu':\n      return [tfc.leakyRelu(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('alpha', node, tensorMap, context) as number)];\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'basic_math';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// tslint:disable-next-line:max-line-length\nimport {concat, DataType, slice, stack, Tensor, tensor, tidy, unstack, util} from '@tensorflow/tfjs-core';\n\nexport interface TensorWithState {\n  tensor?: Tensor;\n  written?: boolean;\n  read?: boolean;\n  cleared?: boolean;\n}\n/**\n * The TensorArray object keeps an array of Tensors.  It\n * allows reading from the array and writing to the array.\n */\nexport class TensorArray {\n  private static nextId = 0;\n  private tensors: TensorWithState[] = [];\n  private closed_ = false;\n  readonly id: number;\n  constructor(\n      public readonly name: string, public readonly dtype: DataType,\n      private maxSize: number, private elementShape: number[],\n      public readonly identicalElementShapes: boolean,\n      public readonly dynamicSize: boolean,\n      public readonly clearAfterRead: boolean) {\n    this.id = TensorArray.nextId++;\n  }\n\n  get closed() {\n    return this.closed_;\n  }\n\n  /**\n   * Close the current TensorArray.\n   */\n  clearAndClose() {\n    this.tensors.forEach(tensor => tensor.tensor.dispose());\n    this.tensors = [];\n    this.closed_ = true;\n  }\n\n  size(): number {\n    return this.tensors.length;\n  }\n\n  /**\n   * Read the value at location index in the TensorArray.\n   * @param index Number the index to read from.\n   */\n  read(index: number): Tensor {\n    if (this.closed_) {\n      throw new Error(`TensorArray ${this.name} has already been closed.`);\n    }\n\n    if (index < 0 || index >= this.tensors.length) {\n      throw new Error(`Tried to read from index ${index}, but array size is: ${\n          this.tensors.length}`);\n    }\n\n    const tensorWithState = this.tensors[index];\n    if (tensorWithState.cleared) {\n      throw new Error(\n          `TensorArray ${this.name}: Could not read index ${\n              index} twice because it was cleared after a previous read ` +\n          `(perhaps try setting clear_after_read = false?).`);\n    }\n\n    if (this.clearAfterRead) {\n      tensorWithState.cleared = true;\n    }\n\n    tensorWithState.read = true;\n    return tensorWithState.tensor;\n  }\n\n  /**\n   * Helper method to read multiple tensors from the specified indices.\n   */\n  readMany(indices: number[]): Tensor[] {\n    return indices.map(index => this.read(index));\n  }\n\n  /**\n   * Write value into the index of the TensorArray.\n   * @param index number the index to write to.\n   * @param tensor\n   */\n  write(index: number, tensor: Tensor) {\n    if (this.closed_) {\n      throw new Error(`TensorArray ${this.name} has already been closed.`);\n    }\n\n    if (index < 0 || !this.dynamicSize && index >= this.maxSize) {\n      throw new Error(`Tried to write to index ${\n          index}, but array is not resizeable and size is: ${this.maxSize}`);\n    }\n\n    const t = this.tensors[index] || {};\n\n    if (tensor.dtype !== this.dtype) {\n      throw new Error(`TensorArray ${\n          this.name}: Could not write to TensorArray index ${index},\n          because the value dtype is ${\n          tensor.dtype}, but TensorArray dtype is ${this.dtype}.`);\n    }\n\n    // Set the shape for the first time write to unknow shape tensor array\n    if (this.size() === 0 &&\n        (this.elementShape == null || this.elementShape.length === 0)) {\n      this.elementShape = tensor.shape;\n    }\n\n    this.assertShapesMatchAllowUndefinedSize(\n        this.elementShape, tensor.shape,\n        `TensorArray ${this.name}: Could not write to TensorArray index ${\n            index}.`);\n\n    if (t && t.read) {\n      throw new Error(\n          `TensorArray ${this.name}: Could not write to TensorArray index ${\n              index}, because it has already been read.`);\n    }\n\n    if (t && t.written) {\n      throw new Error(\n          `TensorArray ${this.name}: Could not write to TensorArray index ${\n              index}, because it has already been written.`);\n    }\n\n    t.tensor = tensor;\n    t.written = true;\n\n    this.tensors[index] = t;\n  }\n\n  /**\n   * Helper method to write multiple tensors to the specified indices.\n   */\n  writeMany(indices: number[], tensors: Tensor[]) {\n    if (indices.length !== tensors.length) {\n      throw new Error(\n          `TensorArray ${this.name}: could not write multiple tensors,` +\n          `because the index size: ${\n              indices.length} is not the same as tensors size: ${\n              tensors.length}.`);\n    }\n\n    indices.forEach((i, index) => this.write(i, tensors[index]));\n  }\n\n  /**\n   * Return selected values in the TensorArray as a packed Tensor. All of\n   * selected values must have been written and their shapes must all match.\n   * @param [indices] number[] Optional. Taking values in [0, max_value). If the\n   *    TensorArray is not dynamic, max_value=size(). If not specified returns\n   *    all tensors in the original order.\n   * @param [dtype]\n   */\n  gather(indices?: number[], dtype?: DataType): Tensor {\n    if (!!dtype && dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but gather requested dtype ${dtype}`);\n    }\n\n    if (!indices) {\n      indices = [];\n      for (let i = 0; i < this.size(); i++) {\n        indices.push(i);\n      }\n    }\n\n    if (indices.length === 0) {\n      return tensor([], [0].concat(this.elementShape));\n    }\n\n    // Read all the PersistentTensors into a vector to keep track of\n    // their memory.\n    const tensors = this.readMany(indices);\n\n    this.assertShapesMatchAllowUndefinedSize(\n        this.elementShape, tensors[0].shape, 'TensorArray shape mismatch: ');\n\n    return stack(tensors, 0);\n  }\n\n  /**\n   * Return the values in the TensorArray as a concatenated Tensor.\n   */\n  concat(dtype?: DataType): Tensor {\n    if (!!dtype && dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but concat requested dtype ${dtype}`);\n    }\n\n    if (this.size() === 0) {\n      return tensor([], [0].concat(this.elementShape));\n    }\n\n    const indices = [];\n    for (let i = 0; i < this.size(); i++) {\n      indices.push(i);\n    }\n    // Collect all the tensors from the tensors array.\n    const tensors = this.readMany(indices);\n\n    this.assertShapesMatchAllowUndefinedSize(\n        this.elementShape, tensors[0].shape,\n        `TensorArray shape mismatch: tensor array shape (${\n            this.elementShape}) vs first tensor shape (${tensors[0].shape})`);\n\n    return concat(tensors, 0);\n  }\n\n  /**\n   * Scatter the values of a Tensor in specific indices of a TensorArray.\n   * @param indices nummber[] values in [0, max_value). If the\n   *    TensorArray is not dynamic, max_value=size().\n   * @param tensor Tensor input tensor.\n   */\n  scatter(indices: number[], tensor: Tensor) {\n    if (tensor.dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but tensor has dtype ${tensor.dtype}`);\n    }\n\n    if (indices.length !== tensor.shape[0]) {\n      throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${\n          indices.length} vs. ${tensor.shape[0]}`);\n    }\n\n    const maxIndex = Math.max(...indices);\n\n    if (!this.dynamicSize && maxIndex >= this.maxSize) {\n      throw new Error(\n          `Max index must be < array size (${maxIndex}  vs. ${this.maxSize})`);\n    }\n\n    this.writeMany(indices, unstack(tensor, 0));\n  }\n\n  /**\n   * Split the values of a Tensor into the TensorArray.\n   * @param length number[] with the lengths to use when splitting value along\n   *    its first dimension.\n   * @param tensor Tensor, the tensor to split.\n   */\n  split(length: number[], tensor: Tensor) {\n    if (tensor.dtype !== this.dtype) {\n      throw new Error(`TensorArray dtype is ${\n          this.dtype} but tensor has dtype ${tensor.dtype}`);\n    }\n    let totalLength = 0;\n    const cumulativeLengths = length.map(len => {\n      totalLength += len;\n      return totalLength;\n    });\n\n    if (totalLength !== tensor.shape[0]) {\n      throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${totalLength}, and tensor's shape is: ${tensor.shape}`);\n    }\n\n    if (!this.dynamicSize && length.length !== this.maxSize) {\n      throw new Error(\n          `TensorArray's size is not equal to the size of lengths (${\n              this.maxSize} vs. ${length.length}), ` +\n          'and the TensorArray is not marked as dynamically resizeable');\n    }\n\n    const elementPerRow = totalLength === 0 ? 0 : tensor.size / totalLength;\n    const tensors: Tensor[] = [];\n    tidy(() => {\n      tensor = tensor.reshape([1, totalLength, elementPerRow]);\n      for (let i = 0; i < length.length; ++i) {\n        const previousLength = (i === 0) ? 0 : cumulativeLengths[i - 1];\n        const indices = [0, previousLength, 0];\n        const sizes = [1, length[i], elementPerRow];\n        tensors[i] = slice(tensor, indices, sizes).reshape(this.elementShape);\n      }\n      return tensors;\n    });\n    const indices = [];\n    for (let i = 0; i < length.length; i++) {\n      indices[i] = i;\n    }\n    this.writeMany(indices, tensors);\n  }\n\n  /**\n   * This differs from util.assertShapesMatch in that it allows values of\n   * negative one, an undefined size of a dimensinon, in a shape to match\n   * anything.\n   */\n  private assertShapesMatchAllowUndefinedSize(\n      shapeA: number[], shapeB: number[], errorMessagePrefix = ''): void {\n    util.assert(\n        this.shapesEqualAllowUndefinedSize(shapeA, shapeB),\n        () =>\n            errorMessagePrefix + ` Shapes ${shapeA} and ${shapeB} must match`);\n  }\n\n  private shapesEqualAllowUndefinedSize(n1: number[], n2: number[]) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== -1 && n2[i] !== -1 && n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\nimport {scalar} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {TensorArray} from '../../executor/tensor_array';\nimport {Node} from '../types';\n\nimport {getParamValue, getTensor} from './utils';\n\nexport async function executeOp(\n    node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): Promise<tfc.Tensor[]> {\n  switch (node.op) {\n    case 'LoopCond':\n      return [\n        (getParamValue('pred', node, tensorMap, context) as tfc.Tensor).clone()\n      ];\n    case 'Switch': {\n      const pred =\n          getParamValue('pred', node, tensorMap, context) as tfc.Tensor;\n      const data =\n          getParamValue('data', node, tensorMap, context) as tfc.Tensor;\n      // Outputs nodes :0 => false, :1 => true\n      return (await pred.data())[0] ? [undefined, data.clone()] :\n                                      [data.clone(), undefined];\n    }\n    case 'Merge':\n      const inputName = node.inputNames.find(\n          name => getTensor(name, tensorMap, context) !== undefined);\n      return inputName ? [getTensor(inputName, tensorMap, context).clone()] :\n                         undefined;\n\n    case 'Enter':\n      const frameId =\n          getParamValue('frameName', node, tensorMap, context) as string;\n      const data =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      context.enterFrame(frameId);\n      return [data.clone()];\n\n    case 'Exit':\n      const tensor =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      context.exitFrame();\n      return [tensor.clone()];\n\n    case 'NextIteration':\n      const input =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      context.nextIteration();\n      return [input.clone()];\n\n    case 'TensorArrayV3':\n      const size = getParamValue('size', node, tensorMap, context) as number;\n      const dtype =\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType;\n      const elementShape =\n          getParamValue('elementShape', node, tensorMap, context) as number[];\n      const dynamicSize =\n          getParamValue('dynamicSize', node, tensorMap, context) as boolean;\n      const clearAfterRead =\n          getParamValue('clearAfterRead', node, tensorMap, context) as boolean;\n      const identicalElementShapes =\n          getParamValue('identicalElementShapes', node, tensorMap, context) as\n          boolean;\n      const name = getParamValue('name', node, tensorMap, context) as string;\n      const tensorArray = new TensorArray(\n          name, dtype, size, elementShape, identicalElementShapes, dynamicSize,\n          clearAfterRead);\n      context.addTensorArray(tensorArray);\n      return [scalar(tensorArray.id), scalar(1.0)];\n\n    case 'TensorArrayWriteV3':\n      const id =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const index = getParamValue('index', node, tensorMap, context) as number;\n      const writeTensor =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      const writeTensorArray = context.getTensorArray(id);\n      writeTensorArray.write(index, writeTensor);\n      return [scalar(1.0)];\n\n    case 'TensorArrayReadV3':\n      const readId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const readIndex =\n          getParamValue('index', node, tensorMap, context) as number;\n      const readTensorArray = context.getTensorArray(readId);\n      return [readTensorArray.read(readIndex)];\n\n    case 'TensorArrayGatherV3':\n      const gatherId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const gatherIndices =\n          getParamValue('indices', node, tensorMap, context) as number[];\n      const gatherDtype =\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType;\n      const gatherTensorArray = context.getTensorArray(gatherId);\n      return [gatherTensorArray.gather(gatherIndices, gatherDtype)];\n\n    case 'TensorArrayScatterV3':\n      const scatterId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const scatterIndices =\n          getParamValue('indices', node, tensorMap, context) as number[];\n      const scatterTensor =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      const scatterTensorArray = context.getTensorArray(scatterId);\n      scatterTensorArray.scatter(scatterIndices, scatterTensor);\n      return [scalar(1.0)];\n\n    case 'TensorArrayConcatV3':\n      const concatId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const concatTensorArray = context.getTensorArray(concatId);\n      const concatDtype =\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType;\n      return [concatTensorArray.concat(concatDtype)];\n\n    case 'TensorArraySplitV3':\n      const splitId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const splitTensor =\n          getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n      const lengths =\n          getParamValue('lengths', node, tensorMap, context) as number[];\n      const splitTensorArray = context.getTensorArray(splitId);\n      splitTensorArray.split(lengths, splitTensor);\n      return [scalar(1.0)];\n\n    case 'TensorArraySizeV3':\n      const sizeId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const sizeTensorArray = context.getTensorArray(sizeId);\n      return [scalar(sizeTensorArray.size(), 'int32')];\n\n    case 'TensorArrayCloseV3':\n      const closeId =\n          getParamValue('tensorArrayId', node, tensorMap, context) as number;\n      const closeTensorArray = context.getTensorArray(closeId);\n      closeTensorArray.clearAndClose();\n      return [];\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n}\n\nexport const CATEGORY = 'control';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): tfc.Tensor[] => {\n      switch (node.op) {\n        case 'Conv1D': {\n          const stride =\n              getParamValue('stride', node, tensorMap, context) as number;\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n          const dilation =\n              getParamValue('dilation', node, tensorMap, context) as number;\n          return [tfc.conv1d(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D,\n              getParamValue('filter', node, tensorMap, context) as tfc.Tensor3D,\n              stride, pad as 'valid' | 'same', dataFormat as 'NWC' | 'NCW',\n              dilation)];\n        }\n        case 'Conv2D': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n          const dilations =\n              getParamValue('dilations', node, tensorMap, context) as number[];\n          return [tfc.conv2d(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as tfc.Tensor4D,\n              [stride[1], stride[2]], pad as 'valid' | 'same',\n              dataFormat as 'NHWC' | 'NCHW', [dilations[1], dilations[2]])];\n        }\n        case 'Conv2DBackpropInput':\n        case 'Conv2dTranspose': {\n          const shape = getParamValue(\n                            'outputShape', node, tensorMap,\n                            context) as [number, number, number] |\n              [number, number, number, number];\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          return [tfc.conv2dTranspose(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as tfc.Tensor4D,\n              shape, [stride[1], stride[2]], pad as 'valid' | 'same')];\n        }\n        case 'DepthwiseConv2dNative':\n        case 'DepthwiseConv2d': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const dilations =\n              getParamValue('dilations', node, tensorMap, context) as number[];\n          const dataFormat =\n              (getParamValue('dataFormat', node, tensorMap, context) as string)\n                  .toUpperCase();\n\n          return [tfc.depthwiseConv2d(\n              getParamValue('input', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              getParamValue('filter', node, tensorMap, context) as tfc.Tensor4D,\n              [stride[1], stride[2]], pad as 'valid' | 'same',\n              dataFormat as 'NHWC' | 'NCHW', [dilations[1], dilations[2]])];\n        }\n\n        case 'AvgPool': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n\n          return [tfc.avgPool(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              [kernelSize[1], kernelSize[2]], [stride[1], stride[2]],\n              pad as 'valid' | 'same')];\n        }\n\n        case 'MaxPool': {\n          const stride =\n              getParamValue('strides', node, tensorMap, context) as number[];\n          const pad = getParamValue('pad', node, tensorMap, context);\n          const kernelSize =\n              getParamValue('kernelSize', node, tensorMap, context) as number[];\n\n          return [tfc.maxPool(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n                  tfc.Tensor4D,\n              [kernelSize[1], kernelSize[2]], [stride[1], stride[2]],\n              pad as 'valid' | 'same')];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'convolution';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'Fill': {\n      const shape =\n          getParamValue('shape', node, tensorMap, context) as number[];\n      const dtype =\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType;\n      const value = getParamValue('value', node, tensorMap, context) as number;\n      return [tfc.fill(shape, value, dtype)];\n    }\n    case 'LinSpace': {\n      const start = getParamValue('start', node, tensorMap, context) as number;\n      const stop = getParamValue('stop', node, tensorMap, context) as number;\n      const num = getParamValue('num', node, tensorMap, context) as number;\n      return [tfc.linspace(start, stop, num)];\n    }\n    case 'OneHot': {\n      const indices =\n          getParamValue('indices', node, tensorMap, context) as tfc.Tensor1D;\n      const depth = getParamValue('depth', node, tensorMap, context) as number;\n      const onValue =\n          getParamValue('onValue', node, tensorMap, context) as number;\n      const offValue =\n          getParamValue('offValue', node, tensorMap, context) as number;\n      return [tfc.oneHot(indices, depth, onValue, offValue)];\n    }\n    case 'Ones': {\n      return [tfc.ones(\n          getParamValue('shape', node, tensorMap, context) as number[],\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType)];\n    }\n    case 'OnesLike': {\n      return [tfc.onesLike(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'RandomUniform': {\n      return [tfc.randomUniform(\n          // tslint:disable-next-line:no-any\n          getParamValue('shape', node, tensorMap, context) as any,\n          getParamValue('minval', node, tensorMap, context) as number,\n          getParamValue('maxval', node, tensorMap, context) as number,\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType)];\n    }\n    case 'Range': {\n      const start = getParamValue('start', node, tensorMap, context) as number;\n      const stop = getParamValue('stop', node, tensorMap, context) as number;\n      const step = getParamValue('step', node, tensorMap, context) as number;\n      return [tfc.range(\n          start, stop, step,\n          getParamValue('dtype', node, tensorMap, context) as 'float32' |\n              'int32')];\n    }\n    case 'TruncatedNormal': {\n      const shape =\n          getParamValue('shape', node, tensorMap, context) as number[];\n      const mean = getParamValue('mean', node, tensorMap, context) as number;\n      const stdDev =\n          getParamValue('stdDev', node, tensorMap, context) as number;\n      const seed = getParamValue('seed', node, tensorMap, context) as number;\n      return [tfc.truncatedNormal(\n          shape, mean, stdDev,\n          getParamValue('dtype', node, tensorMap, context) as 'float32' |\n              'int32',\n          seed)];\n    }\n    case 'Zeros': {\n      return [tfc.zeros(\n          getParamValue('shape', node, tensorMap, context) as number[],\n          getParamValue('dtype', node, tensorMap, context) as tfc.DataType)];\n    }\n    case 'ZerosLike': {\n      return [tfc.zerosLike(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'creation';\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {Node} from '../types';\nimport {getParamValue} from './utils';\n\nexport async function executeOp(\n    node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): Promise<tfc.Tensor[]> {\n  switch (node.op) {\n    case 'NonMaxSuppressionV3':\n    case 'NonMaxSuppressionV2': {\n      const boxes =\n          getParamValue('boxes', node, tensorMap, context) as tfc.Tensor;\n      const scores =\n          getParamValue('scores', node, tensorMap, context) as tfc.Tensor;\n      const maxOutputSize =\n          getParamValue('maxOutputSize', node, tensorMap, context) as number;\n      const iouThreshold =\n          getParamValue('iouThreshold', node, tensorMap, context) as number;\n      const scoreThreshold =\n          getParamValue('scoreThreshold', node, tensorMap, context) as number;\n      return [await tfc.image.nonMaxSuppressionAsync(\n          boxes as tfc.Tensor2D, scores as tfc.Tensor1D, maxOutputSize,\n          iouThreshold, scoreThreshold)];\n    }\n    case 'Where': {\n      return [await tfc.whereAsync(\n          getParamValue('condition', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'ListDiff': {\n      return await tfc.setdiff1dAsync(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('y', node, tensorMap, context) as tfc.Tensor);\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n}\n\nexport const CATEGORY = 'dynamic';\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): tfc.Tensor[] => {\n      switch (node.op) {\n        case 'TopKV2': {\n          const x = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n          const k = getParamValue('k', node, tensorMap, context) as number;\n          const sorted =\n              getParamValue('sorted', node, tensorMap, context) as boolean;\n          const result = tfc.topk(x, k, sorted);\n          return [result.values, result.indices];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'evaluation';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue, getTensor} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'Const': {\n      return tensorMap[node.name];\n    }\n    case 'PlaceholderWithDefault':\n      const def =\n          getParamValue('default', node, tensorMap, context) as tfc.Tensor;\n      return [getTensor(node.name, tensorMap, context) || def];\n    case 'Placeholder':\n      return [getTensor(node.name, tensorMap, context)];\n    case 'Identity':\n    case 'StopGradient':\n    case 'FakeQuantWithMinMaxVars':  // This op is currently ignored.\n      return [\n        (getParamValue('x', node, tensorMap, context) as tfc.Tensor).clone()\n      ];\n    case 'IdentityN':\n      return (getParamValue('x', node, tensorMap, context) as tfc.Tensor[])\n          .map((t: tfc.Tensor) => t.clone());\n    case 'Snapshot':\n      const snapshot =\n          (getParamValue('x', node, tensorMap, context) as tfc.Tensor);\n      return [snapshot.clone()];\n    case 'Shape':\n      return [tfc.tensor1d(\n          (getParamValue('x', node, tensorMap, context) as tfc.Tensor).shape,\n          'int32')];\n    case 'ShapeN':\n      return (getParamValue('x', node, tensorMap, context) as tfc.Tensor[])\n          .map((t: tfc.Tensor) => tfc.tensor1d(t.shape));\n    case 'Size':\n      return [tfc.scalar(\n          (getParamValue('x', node, tensorMap, context) as tfc.Tensor).size,\n          'int32')];\n    case 'Rank':\n      return [tfc.scalar(\n          (getParamValue('x', node, tensorMap, context) as tfc.Tensor).rank,\n          'int32')];\n    case 'NoOp':\n      return [];\n    case 'Print':\n      const input = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      const data =\n          getParamValue('data', node, tensorMap, context) as tfc.Tensor[];\n      const message =\n          getParamValue('message', node, tensorMap, context) as string;\n      const summarize =\n          getParamValue('summarize', node, tensorMap, context) as number;\n      console.warn(\n          'The graph has a tf.print() operation,' +\n          'usually used for debugging, which slows down performance.');\n      console.log(message);\n      for (let i = 0; i < data.length; i++) {\n        console.log(\n            Array.prototype.slice.call(data[i].dataSync()).slice(0, summarize));\n      }\n      return [input];\n\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'graph';\n","/**\n * @license\n * Copyright 2018 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'ResizeBilinear': {\n      const images =\n          getParamValue('images', node, tensorMap, context) as tfc.Tensor;\n      const size = getParamValue('size', node, tensorMap, context) as number[];\n      const alignCorners =\n          getParamValue('alignCorners', node, tensorMap, context) as boolean;\n      return [tfc.image.resizeBilinear(\n          images as tfc.Tensor3D | tfc.Tensor4D, [size[0], size[1]],\n          alignCorners)];\n    }\n    case 'ResizeNearestNeighbor': {\n      const images =\n          getParamValue('images', node, tensorMap, context) as tfc.Tensor;\n      const size = getParamValue('size', node, tensorMap, context) as number[];\n      const alignCorners =\n          getParamValue('alignCorners', node, tensorMap, context) as boolean;\n      return [tfc.image.resizeNearestNeighbor(\n          images as tfc.Tensor3D | tfc.Tensor4D, [size[0], size[1]],\n          alignCorners)];\n    }\n    case 'CropAndResize': {\n      const image =\n          getParamValue('image', node, tensorMap, context) as tfc.Tensor;\n      const boxes =\n          getParamValue('boxes', node, tensorMap, context) as tfc.Tensor;\n      const boxInd =\n          getParamValue('boxInd', node, tensorMap, context) as tfc.Tensor;\n      const cropSize =\n          getParamValue('cropSize', node, tensorMap, context) as number[];\n      const method =\n          getParamValue('method', node, tensorMap, context) as string;\n      const extrapolationValue =\n          getParamValue('extrapolationValue', node, tensorMap, context) as\n          number;\n      return [tfc.image.cropAndResize(\n          image as tfc.Tensor4D, boxes as tfc.Tensor2D, boxInd as tfc.Tensor1D,\n          cropSize as [number, number], method as 'bilinear' | 'nearest',\n          extrapolationValue)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'image';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'Equal': {\n      return [tfc.equal(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'NotEqual': {\n      return [tfc.notEqual(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Greater': {\n      return [tfc.greater(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'GreaterEqual': {\n      return [tfc.greaterEqual(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Less': {\n      return [tfc.less(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'LessEqual': {\n      return [tfc.lessEqual(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'LogicalAnd': {\n      return [tfc.logicalAnd(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'LogicalNot': {\n      return [tfc.logicalNot(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'LogicalOr': {\n      return [tfc.logicalOr(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'Select': {\n      return [tfc.where(\n          getParamValue('condition', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'logical';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'BatchMatMul':\n    case 'MatMul':\n      return [tfc.matMul(\n          getParamValue('a', node, tensorMap, context) as tfc.Tensor2D,\n          getParamValue('b', node, tensorMap, context) as tfc.Tensor2D,\n          getParamValue('transposeA', node, tensorMap, context) as boolean,\n          getParamValue('transposeB', node, tensorMap, context) as boolean)];\n    case 'Transpose':\n      return [tfc.transpose(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('perm', node, tensorMap, context) as number[])];\n\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'matrices';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'FusedBatchNorm':\n    case 'FusedBatchNormV2': {\n      return [tfc.batchNorm(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('mean', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('variance', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('offset', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('scale', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('epsilon', node, tensorMap, context) as number)];\n    }\n    case 'FusedBatchNormV3': {\n      return [tfc.batchNorm(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('mean', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('variance', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('offset', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('scale', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('epsilon', node, tensorMap, context) as number)];\n    }\n    case 'LRN': {\n      return [tfc.localResponseNormalization(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor3D |\n              tfc.Tensor4D,\n          getParamValue('radius', node, tensorMap, context) as number,\n          getParamValue('bias', node, tensorMap, context) as number,\n          getParamValue('alpha', node, tensorMap, context) as number,\n          getParamValue('beta', node, tensorMap, context) as number)];\n    }\n    case 'Softmax': {\n      return [tfc.softmax(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'LogSoftmax': {\n      return [tfc.logSoftmax(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n    }\n    case 'SparseToDense': {\n      return [tfc.sparseToDense(\n          getParamValue('sparseIndices', node, tensorMap, context) as\n              tfc.Tensor,\n          getParamValue('outputShape', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('sparseValues', node, tensorMap, context) as number[],\n          getParamValue('defaultValue', node, tensorMap, context) as\n              tfc.Scalar)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'normalization';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'Max': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.max(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'Mean': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.mean(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'Min': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.min(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'Sum': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.sum(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'All': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.all(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'Any': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.any(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    case 'ArgMax': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      return [tfc.argMax(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis)];\n    }\n    case 'ArgMin': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      return [tfc.argMin(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis)];\n    }\n    case 'Prod': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const keepDims =\n          getParamValue('keepDims', node, tensorMap, context) as boolean;\n      return [tfc.prod(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis,\n          keepDims)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'reduction';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'ConcatV2':\n    case 'Concat': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      const inputs =\n          getParamValue('tensors', node, tensorMap, context) as tfc.Tensor[];\n      return [tfc.concat(inputs, axis)];\n    }\n    case 'GatherV2':\n    case 'Gather': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      const input = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      const indices =\n          getParamValue('indices', node, tensorMap, context) as tfc.Tensor1D;\n      return [tfc.gather(input, indices.asType('int32'), axis)];\n    }\n    case 'ReverseV2':\n    case 'Reverse': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      const input = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      return [tfc.reverse(input, axis)];\n    }\n    case 'Slice': {\n      // tslint:disable-next-line:no-any\n      const begin = getParamValue('begin', node, tensorMap, context) as any;\n      // tslint:disable-next-line:no-any\n      const size = getParamValue('size', node, tensorMap, context) as any;\n      return [tfc.slice(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, begin,\n          size)];\n    }\n    case 'StridedSlice': {\n      const begin =\n          getParamValue('begin', node, tensorMap, context) as number[];\n      const end = getParamValue('end', node, tensorMap, context) as number[];\n      const strides =\n          getParamValue('strides', node, tensorMap, context) as number[];\n      const beginMask =\n          getParamValue('beginMask', node, tensorMap, context) as number;\n      const endMask =\n          getParamValue('endMask', node, tensorMap, context) as number;\n      const ellipsisMask =\n          getParamValue('ellipsisMask', node, tensorMap, context) as number;\n      const newAxisMask =\n          getParamValue('newAxisMask', node, tensorMap, context) as number;\n      const shrinkAxisMask =\n          getParamValue('shrinkAxisMask', node, tensorMap, context) as number;\n      const tensor = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      if (begin.length === 1 && tensor.shape.length > 1) {\n        for (let i = 1; i < tensor.shape.length; i++) {\n          begin.push(0);\n          end.push(tensor.shape[i]);\n          strides.push(strides[0]);\n        }\n      }\n      return [tfc.stridedSlice(\n          tensor, begin, end, strides, beginMask, endMask, ellipsisMask,\n          newAxisMask, shrinkAxisMask)];\n    }\n    case 'Pack': {\n      return tfc.tidy(() => {\n        const axis = getParamValue('axis', node, tensorMap, context) as number;\n        const tensors =\n            getParamValue('tensors', node, tensorMap, context) as tfc.Tensor[];\n        // Reshape the tensors to the first tensor's shape if they don't match.\n        const shape = tensors[0].shape;\n        const squeezedShape = tensors[0].squeeze().shape;\n        const mapped = tensors.map(tensor => {\n          const sameShape = tfc.util.arraysEqual(tensor.shape, shape);\n          if (!sameShape &&\n              !tfc.util.arraysEqual(tensor.squeeze().shape, squeezedShape)) {\n            throw new Error('the input tensors shape does not match');\n          }\n          return sameShape ? tensor : tensor.reshape(shape);\n        });\n        return [tfc.stack(mapped, axis)];\n      });\n    }\n    case 'Unpack': {\n      return tfc.tidy(() => {\n        const axis = getParamValue('axis', node, tensorMap, context) as number;\n        const tensor =\n            getParamValue('tensor', node, tensorMap, context) as tfc.Tensor;\n        return tfc.unstack(tensor, axis);\n      });\n    }\n    case 'Tile': {\n      const reps = getParamValue('reps', node, tensorMap, context) as number[];\n      return [tfc.tile(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, reps)];\n    }\n    case 'Split':\n    case 'SplitV': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      const numOrSizeSplits =\n          getParamValue('numOrSizeSplits', node, tensorMap, context) as number |\n          number[];\n      return tfc.split(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          numOrSizeSplits, axis);\n    }\n    case 'ScatterNd': {\n      const indices =\n          getParamValue('indices', node, tensorMap, context) as tfc.Tensor;\n      const values =\n          getParamValue('values', node, tensorMap, context) as tfc.Tensor;\n      const shape =\n          getParamValue('shape', node, tensorMap, context) as number[];\n      return [tfc.scatterND(indices, values, shape)];\n    }\n    case 'GatherNd': {\n      const x = getParamValue('x', node, tensorMap, context) as tfc.Tensor;\n      const indices =\n          getParamValue('indices', node, tensorMap, context) as tfc.Tensor;\n      return [tfc.gatherND(x, indices)];\n    }\n    case 'SparseToDense': {\n      const indices =\n          getParamValue('sparseIndices', node, tensorMap, context) as\n          tfc.Tensor;\n      const shape =\n          getParamValue('outputShape', node, tensorMap, context) as number[];\n      const sparseValues =\n          getParamValue('sparseValues', node, tensorMap, context) as tfc.Tensor;\n      const defaultValue =\n          getParamValue('defaultValue', node, tensorMap, context) as tfc.Scalar;\n      return [tfc.sparseToDense(\n          indices, sparseValues, shape,\n          sparseValues.dtype === defaultValue.dtype ?\n              defaultValue :\n              defaultValue.asType(sparseValues.dtype))];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'slice_join';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue} from './utils';\n\nexport let executeOp: InternalOpExecutor =\n    (node: Node, tensorMap: NamedTensorsMap,\n     context: ExecutionContext): tfc.Tensor[] => {\n      switch (node.op) {\n        case 'FFT': {\n          return [tfc.fft(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n        }\n        case 'IFFT': {\n          return [tfc.ifft(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n        }\n        case 'RFFT': {\n          return [tfc.rfft(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n        }\n        case 'IRFFT': {\n          return [tfc.irfft(\n              getParamValue('x', node, tensorMap, context) as tfc.Tensor)];\n        }\n        default:\n          throw TypeError(`Node type ${node.op} is not implemented`);\n      }\n    };\n\nexport const CATEGORY = 'spectral';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../../data/types';\nimport {ExecutionContext} from '../../executor/execution_context';\nimport {InternalOpExecutor, Node} from '../types';\n\nimport {getParamValue, split} from './utils';\n\nexport let executeOp: InternalOpExecutor = (node: Node,\n                                            tensorMap: NamedTensorsMap,\n                                            context: ExecutionContext):\n                                               tfc.Tensor[] => {\n  switch (node.op) {\n    case 'Cast': {\n      return [tfc.cast(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('dtype', node, tensorMap, context) as 'int32' |\n              'float32' | 'bool')];\n    }\n    case 'ExpandDims': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number;\n      return [tfc.expandDims(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis)];\n    }\n    case 'Squeeze': {\n      const axis = getParamValue('axis', node, tensorMap, context) as number[];\n      return [tfc.squeeze(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor, axis)];\n    }\n\n    case 'Reshape': {\n      return [tfc.reshape(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          getParamValue('shape', node, tensorMap, context) as number[])];\n    }\n    case 'PadV2':\n    case 'Pad': {\n      return [tfc.pad(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          split(\n              getParamValue('padding', node, tensorMap, context) as number[],\n              2) as Array<[number, number]>,\n          getParamValue('constantValue', node, tensorMap, context) as number)];\n    }\n    case 'SpaceToBatchND': {\n      const blockShape =\n          getParamValue('blockShape', node, tensorMap, context) as number[];\n      const paddings = split(\n          getParamValue('paddings', node, tensorMap, context) as number[], 2);\n      return [tfc.spaceToBatchND(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          blockShape, paddings)];\n    }\n    case 'BatchToSpaceND': {\n      const blockShape =\n          getParamValue('blockShape', node, tensorMap, context) as number[];\n      const crops = split(\n          getParamValue('crops', node, tensorMap, context) as number[], 2);\n      return [tfc.batchToSpaceND(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor,\n          blockShape, crops)];\n    }\n    case 'DepthToSpace': {\n      const blockSize =\n          getParamValue('blockSize', node, tensorMap, context) as number;\n      const dataFormat =\n          (getParamValue('dataFormat', node, tensorMap, context) as\n           string).toUpperCase() as 'NHWC' |\n          'NCHW';\n      return [tfc.depthToSpace(\n          getParamValue('x', node, tensorMap, context) as tfc.Tensor4D,\n          blockSize, dataFormat)];\n    }\n    default:\n      throw TypeError(`Node type ${node.op} is not implemented`);\n  }\n};\n\nexport const CATEGORY = 'transformation';\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tfc from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../data/types';\nimport {ExecutionContext} from '../executor/execution_context';\n\nimport {NodeValueImpl} from './custom_op/node_value_impl';\nimport {getRegisteredOp} from './custom_op/register';\nimport * as arithmetic from './executors/arithmetic_executor';\nimport * as basicMath from './executors/basic_math_executor';\nimport * as control from './executors/control_executor';\nimport * as convolution from './executors/convolution_executor';\nimport * as creation from './executors/creation_executor';\nimport * as dynamic from './executors/dynamic_executor';\nimport * as evaluation from './executors/evaluation_executor';\nimport * as graph from './executors/graph_executor';\nimport * as image from './executors/image_executor';\nimport * as logical from './executors/logical_executor';\nimport * as matrices from './executors/matrices_executor';\nimport * as normalization from './executors/normalization_executor';\nimport * as reduction from './executors/reduction_executor';\nimport * as sliceJoin from './executors/slice_join_executor';\nimport * as spectral from './executors/spectral_executor';\nimport * as transformation from './executors/transformation_executor';\nimport {Node} from './types';\n\n/**\n * Executes the op defined by the node object.\n * @param node\n * @param tensorMap contains tensors for executed nodes and weights\n */\nexport function executeOp(\n    node: Node, tensorMap: NamedTensorsMap,\n    context: ExecutionContext): tfc.Tensor[]|Promise<tfc.Tensor[]> {\n  const value =\n      ((node: Node, tensorMap: NamedTensorsMap, context: ExecutionContext) => {\n        switch (node.category) {\n          case 'arithmetic':\n            return arithmetic.executeOp(node, tensorMap, context);\n          case 'basic_math':\n            return basicMath.executeOp(node, tensorMap, context);\n          case 'control':\n            return control.executeOp(node, tensorMap, context);\n          case 'convolution':\n            return convolution.executeOp(node, tensorMap, context);\n          case 'creation':\n            return creation.executeOp(node, tensorMap, context);\n          case 'dynamic':\n            return dynamic.executeOp(node, tensorMap, context);\n          case 'evaluation':\n            return evaluation.executeOp(node, tensorMap, context);\n          case 'image':\n            return image.executeOp(node, tensorMap, context);\n          case 'graph':\n            return graph.executeOp(node, tensorMap, context);\n          case 'logical':\n            return logical.executeOp(node, tensorMap, context);\n          case 'matrices':\n            return matrices.executeOp(node, tensorMap, context);\n          case 'normalization':\n            return normalization.executeOp(node, tensorMap, context);\n          case 'reduction':\n            return reduction.executeOp(node, tensorMap, context);\n          case 'slice_join':\n            return sliceJoin.executeOp(node, tensorMap, context);\n          case 'spectral':\n            return spectral.executeOp(node, tensorMap, context);\n          case 'transformation':\n            return transformation.executeOp(node, tensorMap, context);\n          case 'custom':\n            const opMapper = getRegisteredOp(node.op);\n            if (opMapper && opMapper.customExecutor) {\n              return opMapper.customExecutor(\n                  new NodeValueImpl(node, tensorMap, context));\n            } else {\n              throw TypeError(`Custom op ${node.op} is not registered.`);\n            }\n          default:\n            throw TypeError(\n                `Unknown op '${node.op}'. File an issue at ` +\n                `https://github.com/tensorflow/tfjs/issues so we can add it` +\n                `, or register a custom execution with tf.registerOp()`);\n        }\n      })(node, tensorMap, context);\n  if (value instanceof Promise) {\n    return value.then((data) => [].concat(data));\n  }\n  return [].concat(value);\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {Tensor} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap, TensorArrayMap} from '../data/types';\n\nimport {TensorArray} from './tensor_array';\n\nexport interface ExecutionContextInfo {\n  id: number;           // the unique id of the context info\n  frameName: string;    // The frame name of the loop, this comes from\n                        // the TensorFlow NodeDef.\n  iterationId: number;  // The iteration id of the loop\n}\n\n/**\n * ExecutionContext captures the runtime environment of the node. It keeps\n * track of the current frame and iteration for the control flow ops.\n *\n * For example, typical Dynamic RNN model may contain loops, for which\n * TensorFlow will generate graphs with Enter/Exit nodes to control the\n * current execution frame, and NextIteration Nodes for iteration id increment.\n * For model with branch logic, TensorFLow will generate Switch/Merge ops.\n */\nexport class ExecutionContext {\n  private rootContext = {id: 0, frameName: '', iterationId: 0};\n  private contexts: ExecutionContextInfo[] = [this.rootContext];\n  private lastId = 0;\n  private _currentContextIds: string[];\n\n  constructor(\n      public readonly weightMap: NamedTensorsMap,\n      public readonly tensorArrayMap: TensorArrayMap) {\n    this.generateCurrentContextIds();\n  }\n\n  private newFrame(id: number, frameName: string) {\n    return {id, frameName, iterationId: 0};\n  }\n\n  /**\n   * Set the current context\n   * @param contexts: ExecutionContextInfo[] the current path of execution\n   * frames\n   */\n  set currentContext(contexts: ExecutionContextInfo[]) {\n    if (this.contexts !== contexts) {\n      this.contexts = contexts;\n      this.generateCurrentContextIds();\n    }\n  }\n\n  get currentContext(): ExecutionContextInfo[] {\n    return this.contexts;\n  }\n\n  /**\n   * Returns the current context in string format.\n   */\n  get currentContextId(): string {\n    return this._currentContextIds[0];\n  }\n\n  /**\n   * Returns the current context and all parent contexts in string format.\n   * This allow access to the nodes in the current and parent frames.\n   */\n  get currentContextIds(): string[] {\n    return this._currentContextIds;\n  }\n\n  private generateCurrentContextIds() {\n    const names = [];\n    for (let i = 0; i < this.contexts.length - 1; i++) {\n      const contexts = this.contexts.slice(0, this.contexts.length - i);\n      names.push(this.contextIdforContexts(contexts));\n    }\n    names.push('');\n    this._currentContextIds = names;\n  }\n\n  private contextIdforContexts(contexts: ExecutionContextInfo[]) {\n    return contexts ?\n        contexts\n            .map(\n                context => (context.id === 0 && context.iterationId === 0) ?\n                    '' :\n                    `${context.frameName}-${context.iterationId}`)\n            .join('/') :\n        '';\n  }\n\n  /**\n   * Enter a new frame, a new context is pushed on the current context list.\n   * @param frameId new frame id\n   */\n  enterFrame(frameId: string) {\n    if (this.contexts) {\n      this.lastId++;\n      this.contexts = this.contexts.slice();\n      this.contexts.push(this.newFrame(this.lastId, frameId));\n      this._currentContextIds.unshift(this.contextIdforContexts(this.contexts));\n    }\n  }\n\n  /**\n   * Exit the current frame, the last context is removed from the current\n   * context list.\n   */\n  exitFrame() {\n    if (this.contexts && this.contexts.length > 1) {\n      this.contexts = this.contexts.slice();\n      this.contexts.splice(-1);\n      this.currentContextIds.shift();\n    } else {\n      throw new Error('Cannot exit frame, the context is empty');\n    }\n  }\n\n  /**\n   * Enter the next iteration of a loop, the iteration id of last context is\n   * increased.\n   */\n  nextIteration() {\n    if (this.contexts && this.contexts.length > 0) {\n      this.contexts = this.contexts.slice();\n      this.lastId++;\n      const context =\n          Object.assign({}, this.contexts[this.contexts.length - 1]) as\n          ExecutionContextInfo;\n      context.iterationId += 1;\n      context.id = this.lastId;\n      this.contexts.splice(-1, 1, context);\n      this._currentContextIds.splice(\n          0, 1, this.contextIdforContexts(this.contexts));\n    } else {\n      throw new Error('Cannot increase frame iteration, the context is empty');\n    }\n  }\n\n  getWeight(name: string): Tensor[] {\n    return this.weightMap[name];\n  }\n\n  addTensorArray(tensorArray: TensorArray) {\n    this.tensorArrayMap[tensorArray.id] = tensorArray;\n  }\n\n  getTensorArray(id: number): TensorArray {\n    return this.tensorArrayMap[id];\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {NamedTensorMap} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap} from '../data/types';\nimport {Graph, Node} from '../operations/types';\n\nexport interface ExecutionInfo {\n  inputs: NamedTensorMap;\n  outputs: Node[];\n  usedNodes: Set<string>;\n  missingInputs: string[];\n  dynamicNode: Node;\n  syncInputs: string[];\n}\n\n/**\n * Given graph inputs and desired outputs, find the minimal set of nodes\n * to execute in order to compute the outputs. In addition return other useful\n * info such:\n * - Missing inputs needed to compute the output.\n * - Whether the subgraph contains dynamic ops (control flow, dynamic shape).\n * - Alternative inputs in order to avoid async (dynamic op) execution.\n */\nexport function getExecutionSubgraph(\n    inputs: NamedTensorMap, outputs: Node[],\n    weightMap: NamedTensorsMap): ExecutionInfo {\n  const usedNodes = new Set<string>();\n  const missingInputs: string[] = [];\n  let dynamicNode: Node = null;\n  let syncInputs: string[] = null;\n\n  // Start with the outputs, going backwards and find all the nodes that are\n  // needed to compute those outputs.\n  const seen = new Set<string>();\n  const frontier = [...outputs];\n  while (frontier.length > 0) {\n    const node = frontier.pop();\n    if (isControlFlow(node) || isDynamicShape(node)) {\n      if (dynamicNode == null) {\n        dynamicNode = node;\n        syncInputs = dynamicNode.children.map(child => child.name)\n                         .filter(name => usedNodes.has(name));\n      }\n    }\n    usedNodes.add(node.name);\n\n    // Weights are dead end since we already have their values.\n    if (weightMap[node.name] != null) {\n      continue;\n    }\n    // This node is a dead end since it's one of the user-provided inputs.\n    if (inputs[node.name] != null) {\n      continue;\n    }\n    if (node.inputs.length === 0) {\n      missingInputs.push(node.name);\n      continue;\n    }\n    node.inputs.forEach(input => {\n      // Don't add to the frontier if it is already there.\n      if (seen.has(input.name)) {\n        return;\n      }\n      seen.add(input.name);\n      frontier.push(input);\n    });\n  }\n  return {inputs, outputs, usedNodes, missingInputs, dynamicNode, syncInputs};\n}\n\n/**\n * Given the execution info, return a list of nodes in topological order that\n * need to be executed to compute the output.\n */\nexport function getNodesInTopologicalOrder(\n    graph: Graph, weightMap: NamedTensorsMap,\n    executionInfo: ExecutionInfo): Node[] {\n  const {usedNodes, inputs} = executionInfo;\n  const frontier: Node[] = [];\n  const inputNodes = Object.keys(inputs).map(name => graph.nodes[name]);\n  inputNodes.forEach(input => {\n    if (usedNodes.has(input.name)) {\n      frontier.push(input);\n    }\n  });\n  graph.weights.forEach(weight => {\n    if (usedNodes.has(weight.name)) {\n      frontier.push(weight);\n    }\n  });\n  const seen = new Set<string>();\n  const orderedNodes: Node[] = [];\n  while (frontier.length > 0) {\n    const node = frontier.pop();\n    seen.add(node.name);\n    if (!weightMap[node.name]) {\n      orderedNodes.push(node);\n    }\n    node.children.forEach(child => {\n      if (!seen.has(child.name) && usedNodes.has(child.name) &&\n          child.inputs.every(input => seen.has(input.name))) {\n        frontier.push(child);\n      }\n    });\n  }\n  return orderedNodes;\n}\n\nconst CONTROL_FLOW_OPS = ['Switch', 'Merge', 'Enter', 'Exit', 'NextIteration'];\nconst DYNAMIC_SHAPE_OPS =\n    ['NonMaxSuppressionV2', 'NonMaxSuppressionV3', 'Where'];\n\nexport function isControlFlow(node: Node) {\n  return CONTROL_FLOW_OPS.indexOf(node.op) >= 0;\n}\n\nexport function isDynamicShape(node: Node) {\n  return DYNAMIC_SHAPE_OPS.indexOf(node.op) >= 0;\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {DataType, NamedTensorMap, Tensor, tidy, util} from '@tensorflow/tfjs-core';\n\nimport {NamedTensorsMap, TensorArrayMap, TensorInfo} from '../data/types';\nimport {getNodeNameAndIndex, getParamValue, getTensor, getTensorsForCurrentContenxt, parseNodeName} from '../operations/executors/utils';\nimport {executeOp} from '../operations/operation_executor';\nimport {Graph, Node} from '../operations/types';\n\nimport {ExecutionContext, ExecutionContextInfo} from './execution_context';\nimport {getExecutionSubgraph, getNodesInTopologicalOrder, isControlFlow} from './model_analysis';\n\ninterface NodeWithContexts {\n  contexts: ExecutionContextInfo[];\n  node: Node;\n}\n\nexport class GraphExecutor {\n  private compiledMap: Map<string, Node[]> = new Map();\n  private _weightMap: NamedTensorsMap = {};\n  private weightIds: number[];\n  private placeholders: Node[];\n  private _outputs: Node[];\n  private SEPERATOR = ',';\n  get weightMap(): NamedTensorsMap {\n    return this._weightMap;\n  }\n  set weightMap(weightMap: NamedTensorsMap) {\n    const weightIds = Object.keys(weightMap).map(\n        key => weightMap[key].map(tensor => tensor.id));\n    this.weightIds = [].concat.apply([], weightIds);\n    this._weightMap = weightMap;\n  }\n\n  get inputs(): TensorInfo[] {\n    return this.placeholders.map(node => {\n      return {\n        name: node.name,\n        shape: node.attrParams['shape'] ?\n            node.attrParams['shape'].value as number[] :\n            undefined,\n        dtype: node.attrParams['dtype'] ?\n            node.attrParams['dtype'].value as DataType :\n            undefined\n      };\n    });\n  }\n\n  get outputs(): TensorInfo[] {\n    return this._outputs.map(node => {\n      return {\n        name: node.name,\n        shape: node.attrParams['shape'] ?\n            node.attrParams['shape'].value as number[] :\n            undefined,\n        dtype: node.attrParams['dtype'] ?\n            node.attrParams['dtype'].value as DataType :\n            undefined\n      };\n    });\n  }\n\n  get inputNodes(): string[] {\n    return this.placeholders.map(node => node.name);\n  }\n\n  get outputNodes(): string[] {\n    return this.outputs.map(node => node.name);\n  }\n\n  constructor(private graph: Graph) {\n    this.placeholders = graph.placeholders;\n    this._outputs = graph.outputs;\n  }\n\n  private getCompilationKey(inputs: Node[], outputs: Node[]): string {\n    const sortedInputs = inputs.map(node => node.name).sort();\n    const sortedOutputs = outputs.map(node => node.name).sort();\n    return sortedInputs.join(this.SEPERATOR) + '--' +\n        sortedOutputs.join(this.SEPERATOR);\n  }\n\n  /**\n   * Compiles the inference graph and returns the minimal set of nodes that are\n   * required for execution, in the correct execution order.\n   */\n  private compile(inputs: NamedTensorMap, outputs: Node[]): Node[] {\n    const executionInfo = getExecutionSubgraph(inputs, outputs, this.weightMap);\n    const {missingInputs, dynamicNode, syncInputs} = executionInfo;\n    if (dynamicNode != null) {\n      throw new Error(\n          `This execution contains the node '${dynamicNode.name}', which has ` +\n          `the dynamic op '${dynamicNode.op}'. Please use ` +\n          `model.executeAsync() instead. Alternatively, to avoid the ` +\n          `dynamic ops, specify the inputs [${syncInputs}]`);\n    }\n\n    if (missingInputs.length > 0) {\n      const outNames = outputs.map(n => n.name);\n      const inNames = Object.keys(inputs);\n      throw new Error(\n          `Cannot compute the outputs [${outNames}] from the provided inputs ` +\n          `[${inNames}]. Missing the following inputs: [${missingInputs}]`);\n    }\n\n    return getNodesInTopologicalOrder(\n        this.graph, this.weightMap, executionInfo);\n  }\n\n  /**\n   * Executes the inference for given input tensors.\n   * @param inputs Tensor map for the model inputs, keyed by the input node\n   * names.\n   * @param outputs output node name from the Tensorflow model, if no outputs\n   * are specified, the default outputs of the model would be used. You can\n   * inspect intermediate nodes of the model by adding them to the outputs\n   * array.\n   */\n  execute(inputs: NamedTensorMap, outputs: string[]): Tensor[] {\n    const names = Object.keys(inputs).sort();\n    this.checkInputs(inputs);\n    this.checkInputShapeAndType(inputs);\n    this.checkOutputs(outputs);\n    const inputNodes = names.map(name => this.graph.nodes[name]);\n    const outputNodes =\n        outputs.map(name => this.graph.nodes[parseNodeName(name)[0]]);\n    const compilationKey = this.getCompilationKey(inputNodes, outputNodes);\n    // Do nothing if the compiled graph cache contains the input.\n    let orderedNodes = this.compiledMap.get(compilationKey);\n    if (orderedNodes == null) {\n      orderedNodes = this.compile(inputs, outputNodes);\n      this.compiledMap.set(compilationKey, orderedNodes);\n    }\n    const tensorArrayMap: TensorArrayMap = {};\n    return tidy(() => {\n      const context = new ExecutionContext(this._weightMap, tensorArrayMap);\n      const tensorsMap: NamedTensorsMap = {...this.weightMap};\n      Object.keys(inputs).forEach(name => {\n        tensorsMap[name] = [inputs[name]];\n      });\n      const tensorsToKeep = this.getFrozenTensorIds(tensorsMap);\n      const intermediateTensorConsumerCount: {[key: number]: number} = {};\n      for (let i = 0; i < orderedNodes.length; i++) {\n        const node = orderedNodes[i];\n        if (!tensorsMap[node.name]) {\n          const tensors = executeOp(node, tensorsMap, context) as Tensor[];\n          if (tensors instanceof Promise) {\n            throw new Error(\n                `The execution of the op '${node.op}' returned a promise. ` +\n                `Please use model.executeAsync() instead.`);\n          }\n          tensorsMap[node.name] = tensors;\n          this.checkTensorForDisposal(\n              node.name, node, tensorsMap, context, tensorsToKeep, outputs,\n              intermediateTensorConsumerCount);\n        }\n      }\n      return outputs.map(name => getTensor(name, tensorsMap, context));\n    });\n  }\n\n  private getFrozenTensorIds(tensorMap: NamedTensorsMap): Set<number> {\n    const ids = [].concat.apply(\n        [],\n        Object.keys(tensorMap)\n            .map(key => tensorMap[key])\n            .map(tensors => tensors.map(tensor => tensor.id)));\n    return new Set(ids);\n  }\n  private checkTensorForDisposal(\n      nodeName: string, node: Node, tensorMap: NamedTensorsMap,\n      context: ExecutionContext, tensorsToKeep: Set<number>,\n      outputNames: string[],\n      intermediateTensorConsumerCount: {[key: string]: number}) {\n    // Skip output nodes and any control flow nodes, since its dependency is\n    // tricky to track correctly.\n    if (node.category === 'control' || outputNames.indexOf(nodeName) !== -1) {\n      return;\n    }\n\n    tensorMap[nodeName].forEach(tensor => {\n      if (tensor != null) {\n        intermediateTensorConsumerCount[tensor.id] =\n            (intermediateTensorConsumerCount[tensor.id] || 0) +\n            node.children.length;\n      }\n    });\n    node.inputs.forEach(input => {\n      // Skip any control flow nodes, since its dependency is tricky to track\n      // correctly.\n      if (input.category !== 'control') {\n        const tensors =\n            getTensorsForCurrentContenxt(input.name, tensorMap, context);\n        if (tensors != null) {\n          tensors.forEach(tensor => {\n            if (tensor && !tensorsToKeep.has(tensor.id)) {\n              const count = intermediateTensorConsumerCount[tensor.id];\n              if (count === 1) {\n                tensor.dispose();\n                delete intermediateTensorConsumerCount[tensor.id];\n              } else if (count != null) {\n                // only intermediate nodes has count set, inputs and weights are\n                // not.\n                intermediateTensorConsumerCount[tensor.id]--;\n              }\n            }\n          });\n        }\n      }\n    });\n  }\n  /**\n   * Executes the inference for given input tensors in Async fashion.\n   * @param inputs Tensor map for the model inputs, keyed by the input node\n   * names.\n   * @param outputs output node name from the Tensorflow model, if no outputs\n   * are specified, the default outputs of the model would be used. You can\n   * inspect intermediate nodes of the model by adding them to the outputs\n   * array.\n   */\n  async executeAsync(inputs: NamedTensorMap, outputs: string[]):\n      Promise<Tensor[]> {\n    this.checkInputs(inputs);\n    this.checkInputShapeAndType(inputs);\n    const tensorArrayMap: TensorArrayMap = {};\n    const context = new ExecutionContext(this._weightMap, tensorArrayMap);\n    // Graph with control flow op requires runtime evaluation of the execution\n    // order, while without control flow the execution order is pre-determined\n    // in the compile method.\n    const tensorMap =\n        await this.executeWithControlFlow(inputs, context, outputs);\n    const results = outputs.map(name => getTensor(name, tensorMap, context));\n\n    // dispose all the intermediate tensors\n    const outputIds = new Set<number>(results.map(t => t.id));\n    const inputIds =\n        new Set<number>(Object.keys(inputs).map(name => inputs[name].id));\n    Object.keys(tensorMap).forEach(key => {\n      const tensorArray = tensorMap[key];\n      tensorArray.forEach(tensor => {\n        if (tensor && !tensor.isDisposed && !outputIds.has(tensor.id) &&\n            !inputIds.has(tensor.id) &&\n            this.weightIds.indexOf(tensor.id) === -1) {\n          tensor.dispose();\n        }\n      });\n    });\n    return results;\n  }\n\n  /**\n   * When there are control flow nodes in the graph, the graph execution use\n   * ExecutionContext to keep track of the frames and loop iterators.\n   * @param inputs placeholder tensors for the graph.\n   * @param context the execution context object for current execution.\n   */\n  private async executeWithControlFlow(\n      inputs: NamedTensorMap, context: ExecutionContext,\n      outputNames: string[]): Promise<NamedTensorsMap> {\n    const names = Object.keys(inputs);\n    const inputNodes = names.map(name => this.graph.nodes[name]);\n    const outputNodes =\n        outputNames.map(name => this.graph.nodes[parseNodeName(name)[0]]);\n    const {usedNodes, missingInputs, dynamicNode, syncInputs} =\n        getExecutionSubgraph(inputs, outputNodes, this.weightMap);\n\n    const stack: NodeWithContexts[] =\n        [...inputNodes, ...this.graph.weights].map(node => {\n          return {node, contexts: context.currentContext};\n        });\n    const tensorsMap: NamedTensorsMap = {...this.weightMap};\n    Object.keys(inputs).forEach(name => {\n      tensorsMap[name] = [inputs[name]];\n    });\n    const intermediateTensorConsumerCount: {[key: number]: number} = {};\n    const tensorsToKeep = this.getFrozenTensorIds(tensorsMap);\n    const added: {[key: string]: boolean} = {};\n    while (stack.length > 0) {\n      const promises = this.processStack(\n          inputNodes, stack, context, tensorsMap, added, tensorsToKeep,\n          outputNames, intermediateTensorConsumerCount, usedNodes);\n      await Promise.all(promises);\n    }\n    if (dynamicNode == null) {\n      console.warn(\n          `This model execution did not contain any nodes with control flow ` +\n          `or dynamic output shapes. You can use model.execute() instead.`);\n    }\n    const missingOutputs =\n        outputNodes\n            .filter(\n                node => !isControlFlow(node) &&\n                    !getTensor(node.name, tensorsMap, context))\n            .map(node => node.name);\n    if (missingOutputs.length > 0) {\n      let alternativeMsg = '';\n      if (dynamicNode != null) {\n        alternativeMsg =\n            `Alternatively, to avoid the dynamic ops, use model.execute() ` +\n            `and specify the inputs [${syncInputs}]`;\n      }\n      throw new Error(\n          `Cannot compute the outputs [${missingOutputs}] from the provided ` +\n          `inputs [${names}]. Consider providing the following inputs: ` +\n          `[${missingInputs}]. ${alternativeMsg}`);\n    }\n    return tensorsMap;\n  }\n\n  private processStack(\n      inputNodes: Node[], stack: NodeWithContexts[], context: ExecutionContext,\n      tensorMap: NamedTensorsMap, added: {[key: string]: boolean},\n      tensorsToKeep: Set<number>, outputNames: string[],\n      intermediateTensorConsumerCount: {[key: number]: number},\n      usedNodes: Set<string>) {\n    const promises: Array<Promise<Tensor[]>> = [];\n    while (stack.length > 0) {\n      const item = stack.pop();\n      context.currentContext = item.contexts;\n      let nodeName = '';\n      // The tensor of the Enter op with isConstant set should be set\n      // in the parent scope, so it will be available as constant for the\n      // whole loop.\n      if (item.node.op === 'Enter' &&\n          getParamValue('isConstant', item.node, tensorMap, context)) {\n        [nodeName] = getNodeNameAndIndex(item.node.name, context);\n      }\n\n      // only process nodes that are not provided as input nodes.\n      if (inputNodes.indexOf(item.node) === -1) {\n        const tensors = executeOp(item.node, tensorMap, context);\n        if (!nodeName) {\n          [nodeName] = getNodeNameAndIndex(item.node.name, context);\n        }\n        const currentContext = context.currentContext;\n        if (tensors instanceof Promise) {\n          promises.push(tensors.then(t => {\n            tensorMap[nodeName] = t;\n            context.currentContext = currentContext;\n            this.checkTensorForDisposal(\n                nodeName, item.node, tensorMap, context, tensorsToKeep,\n                outputNames, intermediateTensorConsumerCount);\n            this.processChildNodes(\n                item.node, stack, context, tensorMap, added, usedNodes);\n            return t;\n          }));\n        } else {\n          tensorMap[nodeName] = tensors;\n          this.checkTensorForDisposal(\n              nodeName, item.node, tensorMap, context, tensorsToKeep,\n              outputNames, intermediateTensorConsumerCount);\n          this.processChildNodes(\n              item.node, stack, context, tensorMap, added, usedNodes);\n        }\n      } else {\n        this.processChildNodes(\n            item.node, stack, context, tensorMap, added, usedNodes);\n      }\n    }\n    return promises;\n  }\n\n  private processChildNodes(\n      node: Node, stack: NodeWithContexts[], context: ExecutionContext,\n      tensorMap: NamedTensorsMap, added: {[key: string]: boolean},\n      usedNodes: Set<string>) {\n    node.children.forEach((childNode) => {\n      const [nodeName, ] = getNodeNameAndIndex(childNode.name, context);\n      if (added[nodeName] || !usedNodes.has(childNode.name)) {\n        return;\n      }\n      // Merge op can be pushed if any of its inputs has value.\n      if (childNode.op === 'Merge') {\n        if (childNode.inputNames.some(name => {\n              return !!getTensor(name, tensorMap, context);\n            })) {\n          added[nodeName] = true;\n          stack.push({contexts: context.currentContext, node: childNode});\n        }\n      } else  // Otherwise all inputs must to have value.\n          if (childNode.inputNames.every(name => {\n                return !!getTensor(name, tensorMap, context);\n              })) {\n        added[nodeName] = true;\n        stack.push({contexts: context.currentContext, node: childNode});\n      }\n    });\n  }\n\n  /**\n   * Releases the memory used by the weight tensors.\n   */\n  dispose() {\n    Object.keys(this.weightMap)\n        .forEach(\n            key => this.weightMap[key].forEach(tensor => tensor.dispose()));\n  }\n\n  private checkInputShapeAndType(inputs: NamedTensorMap) {\n    Object.keys(inputs).forEach(name => {\n      const input = inputs[name];\n      const node = this.graph.nodes[name];\n      if (node.attrParams['shape'] && node.attrParams['shape'].value) {\n        const shape = node.attrParams['shape'].value as number[];\n        const match = shape.length === input.shape.length &&\n            input.shape.every(\n                (dim, index) => shape[index] === -1 || shape[index] === dim);\n        util.assert(\n            match,\n            () => `The shape of dict['${node.name}'] provided in ` +\n                `model.execute(dict) must be [${shape}], but was ` +\n                `[${input.shape}]`);\n      }\n      if (node.attrParams['dtype'] && node.attrParams['dtype'].value) {\n        util.assert(\n            input.dtype === node.attrParams['dtype'].value as string,\n            () => `The dtype of dict['${node.name}'] provided in ` +\n                `model.execute(dict) must be ` +\n                `${node.attrParams['dtype'].value}, but was ${input.dtype}`);\n      }\n    });\n  }\n\n  private checkInputs(inputs: NamedTensorMap) {\n    const notInGraph =\n        Object.keys(inputs).filter(name => !this.graph.nodes[name]);\n    if (notInGraph.length > 0) {\n      throw new Error(\n          `The dict provided in model.execute(dict) has ` +\n          `keys: [${notInGraph}] that are not part of graph`);\n    }\n  }\n\n  private checkOutputs(outputs: string[]): void {\n    outputs.forEach(name => {\n      const [normalizedName] = parseNodeName(name);\n      if (!this.graph.nodes[normalizedName]) {\n        throw new Error(`The output '${name}' is not found in the graph`);\n      }\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {InferenceModel, io, ModelPredictConfig, NamedTensorMap, Tensor} from '@tensorflow/tfjs-core';\n\nimport * as tensorflow from '../data/compiled_api';\nimport {NamedTensorsMap, TensorInfo} from '../data/types';\nimport {OperationMapper} from '../operations/operation_mapper';\n\nimport {GraphExecutor} from './graph_executor';\n\nexport const TFHUB_SEARCH_PARAM = '?tfjs-format=file';\nexport const DEFAULT_MODEL_NAME = 'model.json';\n/**\n * A `tf.GraphModel` is a directed, acyclic graph of built from\n * SavedModel GraphDef and allows inference exeuction.\n *\n * A `tf.GraphModel` can only be created by loading from a model converted from\n * a [TensorFlow SavedModel](https://www.tensorflow.org/guide/saved_model) using\n * the command line converter tool and loaded via `tf.loadGraphModel`.\n */\n/** @doc {heading: 'Models', subheading: 'Classes'} */\nexport class GraphModel implements InferenceModel {\n  private executor: GraphExecutor;\n  private version = 'n/a';\n  private handler: io.IOHandler;\n  // Returns the version information for the tensorflow model GraphDef.\n  get modelVersion(): string {\n    return this.version;\n  }\n\n  get inputNodes(): string[] {\n    return this.executor.inputNodes;\n  }\n\n  get outputNodes(): string[] {\n    return this.executor.outputNodes;\n  }\n\n  get inputs(): TensorInfo[] {\n    return this.executor.inputs;\n  }\n\n  get outputs(): TensorInfo[] {\n    return this.executor.outputs;\n  }\n\n  get weights(): NamedTensorsMap {\n    return this.executor.weightMap;\n  }\n\n  /**\n   * @param modelUrl url for the model, or an `io.IOHandler`.\n   * @param weightManifestUrl url for the weight file generated by\n   * scripts/convert.py script.\n   * @param requestOption options for Request, which allows to send credentials\n   * and custom headers.\n   * @param onProgress Optional, progress callback function, fired periodically\n   * before the load is completed.\n   */\n  constructor(\n      private modelUrl: string|io.IOHandler,\n      private loadOptions: io.LoadOptions = {}) {\n    if (loadOptions == null) {\n      this.loadOptions = {};\n    }\n  }\n\n  private findIOHandler() {\n    const path = this.modelUrl;\n    if ((path as io.IOHandler).load != null) {\n      // Path is an IO Handler.\n      this.handler = path as io.IOHandler;\n    } else if (this.loadOptions.requestInit != null) {\n      this.handler = io.browserHTTPRequest(path as string, this.loadOptions);\n    } else {\n      const handlers =\n          io.getLoadHandlers(path as string, this.loadOptions.onProgress);\n      if (handlers.length === 0) {\n        // For backward compatibility: if no load handler can be found,\n        // assume it is a relative http path.\n        handlers.push(io.browserHTTPRequest(path as string, this.loadOptions));\n      } else if (handlers.length > 1) {\n        throw new Error(\n            `Found more than one (${handlers.length}) load handlers for ` +\n            `URL '${[path]}'`);\n      }\n      this.handler = handlers[0];\n    }\n  }\n\n  /**\n   * Loads the model and weight files, construct the in memory weight map and\n   * compile the inference graph.\n   */\n  async load(): Promise<boolean> {\n    this.findIOHandler();\n    if (this.handler.load == null) {\n      throw new Error(\n          'Cannot proceed with model loading because the IOHandler provided ' +\n          'does not have the `load` method implemented.');\n    }\n    const artifacts = await this.handler.load();\n    const graph = artifacts.modelTopology as tensorflow.IGraphDef;\n\n    this.version = `${graph.versions.producer}.${graph.versions.minConsumer}`;\n    const weightMap =\n        io.decodeWeights(artifacts.weightData, artifacts.weightSpecs);\n    this.executor =\n        new GraphExecutor(OperationMapper.Instance.transformGraph(graph));\n    this.executor.weightMap = this.convertTensorMapToTensorsMap(weightMap);\n    return true;\n  }\n\n  /**\n   * Execute the inference for the input tensors.\n   *\n   * @param input The input tensors, when there is single input for the model,\n   * inputs param should be a `tf.Tensor`. For models with mutliple inputs,\n   * inputs params should be in either `tf.Tensor`[] if the input order is\n   * fixed, or otherwise NamedTensorMap format.\n   *\n   * For model with multiple inputs, we recommend you use NamedTensorMap as the\n   * input type, if you use `tf.Tensor`[], the order of the array needs to\n   * follow the\n   * order of inputNodes array. @see {@link GraphModel.inputNodes}\n   *\n   * You can also feed any intermediate nodes using the NamedTensorMap as the\n   * input type. For example, given the graph\n   *    InputNode => Intermediate => OutputNode,\n   * you can execute the subgraph Intermediate => OutputNode by calling\n   *    model.execute('IntermediateNode' : tf.tensor(...));\n   *\n   * This is useful for models that uses tf.dynamic_rnn, where the intermediate\n   * state needs to be fed manually.\n   *\n   * For batch inference execution, the tensors for each input need to be\n   * concatenated together. For example with mobilenet, the required input shape\n   * is [1, 244, 244, 3], which represents the [batch, height, width, channel].\n   * If we are provide a batched data of 100 images, the input tensor should be\n   * in the shape of [100, 244, 244, 3].\n   *\n   * @param config Prediction configuration for specifying the batch size and\n   * output node names. Currently the batch size option is ignored for graph\n   * model.\n   *\n   * @returns Inference result tensors. The output would be single `tf.Tensor`\n   * if model has single output node, otherwise Tensor[] or NamedTensorMap[]\n   * will be returned for model with multiple outputs.\n   */\n  /** @doc {heading: 'Models', subheading: 'Classes'} */\n  predict(inputs: Tensor|Tensor[]|NamedTensorMap, config?: ModelPredictConfig):\n      Tensor|Tensor[]|NamedTensorMap {\n    return this.execute(inputs, this.outputNodes);\n  }\n\n  private normalizeInputs(inputs: Tensor|Tensor[]|\n                          NamedTensorMap): NamedTensorMap {\n    if (!(inputs instanceof Tensor) && !Array.isArray(inputs)) {\n      // The input is already a NamedTensorMap.\n      return inputs;\n    }\n    inputs = Array.isArray(inputs) ? inputs : [inputs];\n    if (inputs.length !== this.inputNodes.length) {\n      throw new Error(\n          'Input tensor count mismatch,' +\n          `the graph model has ${this.inputNodes.length} placeholders, ` +\n          `while there are ${inputs.length} input tensors.`);\n    }\n    return this.inputNodes.reduce((map, inputName, i) => {\n      map[inputName] = (inputs as Tensor[])[i];\n      return map;\n    }, {} as NamedTensorMap);\n  }\n\n  private normalizeOutputs(outputs: string|string[]): string[] {\n    outputs = outputs || this.outputNodes;\n    return !Array.isArray(outputs) ? [outputs] : outputs;\n  }\n\n  /**\n   * Executes inference for the model for given input tensors.\n   * @param inputs tensor, tensor array or tensor map of the inputs for the\n   * model, keyed by the input node names.\n   * @param outputs output node name from the Tensorflow model, if no\n   * outputs are specified, the default outputs of the model would be used.\n   * You can inspect intermediate nodes of the model by adding them to the\n   * outputs array.\n   *\n   * @returns A single tensor if provided with a single output or no outputs\n   * are provided and there is only one default output, otherwise return a\n   * tensor array. The order of the tensor array is the same as the outputs\n   * if provided, otherwise the order of outputNodes attribute of the model.\n   */\n  /** @doc {heading: 'Models', subheading: 'Classes'} */\n  execute(inputs: Tensor|Tensor[]|NamedTensorMap, outputs?: string|string[]):\n      Tensor|Tensor[] {\n    inputs = this.normalizeInputs(inputs);\n    outputs = this.normalizeOutputs(outputs);\n    const result = this.executor.execute(inputs, outputs);\n    return result.length > 1 ? result : result[0];\n  }\n  /**\n   * Executes inference for the model for given input tensors in async\n   * fashion, use this method when your model contains control flow ops.\n   * @param inputs tensor, tensor array or tensor map of the inputs for the\n   * model, keyed by the input node names.\n   * @param outputs output node name from the Tensorflow model, if no outputs\n   * are specified, the default outputs of the model would be used. You can\n   * inspect intermediate nodes of the model by adding them to the outputs\n   * array.\n   *\n   * @returns A Promise of single tensor if provided with a single output or\n   * no outputs are provided and there is only one default output, otherwise\n   * return a tensor map.\n   */\n  /** @doc {heading: 'Models', subheading: 'Classes'} */\n  async executeAsync(\n      inputs: Tensor|Tensor[]|NamedTensorMap,\n      outputs?: string|string[]): Promise<Tensor|Tensor[]> {\n    inputs = this.normalizeInputs(inputs);\n    outputs = this.normalizeOutputs(outputs);\n    const result = await this.executor.executeAsync(inputs, outputs);\n    return result.length > 1 ? result : result[0];\n  }\n\n  private convertTensorMapToTensorsMap(map: NamedTensorMap): NamedTensorsMap {\n    return Object.keys(map).reduce((newMap: NamedTensorsMap, key) => {\n      newMap[key] = [map[key]];\n      return newMap;\n    }, {});\n  }\n\n  /**\n   * Releases the memory used by the weight tensors.\n   */\n  /** @doc {heading: 'Models', subheading: 'Classes'} */\n  dispose() {\n    this.executor.dispose();\n  }\n}\n\n/**\n * Load a graph model given a URL to the model definition.\n *\n * Example of loading MobileNetV2 from a URL and making a prediction with a\n * zeros input:\n *\n * ```js\n * const modelUrl =\n *    'https://storage.googleapis.com/tfjs-models/savedmodel/mobilenet_v2_1.0_224/model.json';\n * const model = await tf.loadGraphModel(modelUrl);\n * const zeros = tf.zeros([1, 224, 224, 3]);\n * model.predict(zeros).print();\n * ```\n *\n * Example of loading MobileNetV2 from a TF Hub URL and making a prediction with\n * a zeros input:\n *\n * ```js\n * const modelUrl =\n *    'https://tfhub.dev/google/imagenet/mobilenet_v2_140_224/classification/2';\n * const model = await tf.loadGraphModel(modelUrl, {fromTFHub: true});\n * const zeros = tf.zeros([1, 224, 224, 3]);\n * model.predict(zeros).print();\n * ```\n * @param modelUrl The url or an `io.IOHandler` that loads the model.\n * @param options Options for the HTTP request, which allows to send credentials\n *    and custom headers.\n */\n/** @doc {heading: 'Models', subheading: 'Loading'} */\nexport async function loadGraphModel(\n    modelUrl: string|io.IOHandler,\n    options: io.LoadOptions = {}): Promise<GraphModel> {\n  if (modelUrl == null) {\n    throw new Error(\n        'modelUrl in loadGraphModel() cannot be null. Please provide a url ' +\n        'or an IOHandler that loads the model');\n  }\n  if (options == null) {\n    options = {};\n  }\n\n  if (options.fromTFHub) {\n    if ((modelUrl as io.IOHandler).load == null) {\n      if (!(modelUrl as string).endsWith('/')) {\n        modelUrl = (modelUrl as string) + '/';\n      }\n      modelUrl = `${modelUrl}${DEFAULT_MODEL_NAME}${TFHUB_SEARCH_PARAM}`;\n    }\n  }\n  const model = new GraphModel(modelUrl, options);\n  await model.load();\n  return model;\n}\n","// @tensorflow/tfjs-models Copyright 2019 Google\nimport*as tf from\"@tensorflow/tfjs-core\";import{util,tidy,div,sub,buffer,Tensor,browser,pad3d,scalar,concat,tensor2d,tensor}from\"@tensorflow/tfjs-core\";import{loadGraphModel}from\"@tensorflow/tfjs-converter\";var VALID_OUTPUT_STRIDES=[8,16,32];function assertValidOutputStride(e){util.assert(\"number\"==typeof e,function(){return\"outputStride is not a number\"}),util.assert(VALID_OUTPUT_STRIDES.indexOf(e)>=0,function(){return\"outputStride of \"+e+\" is invalid. It must be either 8, 16, or 32\"})}function assertValidResolution(e,t){util.assert(\"number\"==typeof e,function(){return\"resolution is not a number\"}),util.assert((e-1)%t==0,function(){return\"resolution of \"+e+\" is invalid for output stride \"+t+\".\"})}function toFloatIfInt(e){return tidy(function(){return\"int32\"===e.dtype&&(e=e.toFloat()),e=div(e,127.5),sub(e,1)})}var MobileNet=function(){function e(e,t){this.model=e;var r=this.model.inputs[0].shape;util.assert(-1===r[1]&&-1===r[2],function(){return\"Input shape [\"+r[1]+\", \"+r[2]+\"] must both be -1\"}),this.outputStride=t}return e.prototype.predict=function(e){var t=this;return tidy(function(){var r=toFloatIfInt(e).expandDims(0),n=t.model.predict(r),o=n[0],i=n[1],s=n[2],a=n[3];return{heatmapScores:i.squeeze().sigmoid(),offsets:o.squeeze(),displacementFwd:s.squeeze(),displacementBwd:a.squeeze()}})},e.prototype.dispose=function(){this.model.dispose()},e}();function half(e){return Math.floor(e/2)}var MaxHeap=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(half(e),e);)this.exchange(e,half(e)),e=half(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var r=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=r},e}();function scoreIsMaximumInLocalWindow(e,t,r,n,o,i){for(var s=i.shape,a=s[0],u=s[1],l=!0,f=Math.max(r-o,0),c=Math.min(r+o+1,a),d=f;d<c;++d){for(var p=Math.max(n-o,0),h=Math.min(n+o+1,u),m=p;m<h;++m)if(i.get(d,m,e)>t){l=!1;break}if(!l)break}return l}function buildPartWithScoreQueue(e,t,r){for(var n=r.shape,o=n[0],i=n[1],s=n[2],a=new MaxHeap(o*i*s,function(e){return e.score}),u=0;u<o;++u)for(var l=0;l<i;++l)for(var f=0;f<s;++f){var c=r.get(u,l,f);c<e||scoreIsMaximumInLocalWindow(f,c,u,l,t,r)&&a.enqueue({score:c,part:{heatmapY:u,heatmapX:l,id:f}})}return a}var partNames=[\"nose\",\"leftEye\",\"rightEye\",\"leftEar\",\"rightEar\",\"leftShoulder\",\"rightShoulder\",\"leftElbow\",\"rightElbow\",\"leftWrist\",\"rightWrist\",\"leftHip\",\"rightHip\",\"leftKnee\",\"rightKnee\",\"leftAnkle\",\"rightAnkle\"],NUM_KEYPOINTS=partNames.length,partIds=partNames.reduce(function(e,t,r){return e[t]=r,e},{}),connectedPartNames=[[\"leftHip\",\"leftShoulder\"],[\"leftElbow\",\"leftShoulder\"],[\"leftElbow\",\"leftWrist\"],[\"leftHip\",\"leftKnee\"],[\"leftKnee\",\"leftAnkle\"],[\"rightHip\",\"rightShoulder\"],[\"rightElbow\",\"rightShoulder\"],[\"rightElbow\",\"rightWrist\"],[\"rightHip\",\"rightKnee\"],[\"rightKnee\",\"rightAnkle\"],[\"leftShoulder\",\"rightShoulder\"],[\"leftHip\",\"rightHip\"]],poseChain=[[\"nose\",\"leftEye\"],[\"leftEye\",\"leftEar\"],[\"nose\",\"rightEye\"],[\"rightEye\",\"rightEar\"],[\"nose\",\"leftShoulder\"],[\"leftShoulder\",\"leftElbow\"],[\"leftElbow\",\"leftWrist\"],[\"leftShoulder\",\"leftHip\"],[\"leftHip\",\"leftKnee\"],[\"leftKnee\",\"leftAnkle\"],[\"nose\",\"rightShoulder\"],[\"rightShoulder\",\"rightElbow\"],[\"rightElbow\",\"rightWrist\"],[\"rightShoulder\",\"rightHip\"],[\"rightHip\",\"rightKnee\"],[\"rightKnee\",\"rightAnkle\"]],connectedPartIndices=connectedPartNames.map(function(e){var t=e[0],r=e[1];return[partIds[t],partIds[r]]}),partChannels=[\"left_face\",\"right_face\",\"right_upper_leg_front\",\"right_lower_leg_back\",\"right_upper_leg_back\",\"left_lower_leg_front\",\"left_upper_leg_front\",\"left_upper_leg_back\",\"left_lower_leg_back\",\"right_feet\",\"right_lower_leg_front\",\"left_feet\",\"torso_front\",\"torso_back\",\"right_upper_arm_front\",\"right_upper_arm_back\",\"right_lower_arm_back\",\"left_lower_arm_front\",\"left_upper_arm_front\",\"left_upper_arm_back\",\"left_lower_arm_back\",\"right_hand\",\"right_lower_arm_front\",\"left_hand\"];function getOffsetPoint(e,t,r,n){return{y:n.get(e,t,r),x:n.get(e,t,r+NUM_KEYPOINTS)}}function getImageCoords(e,t,r){var n=getOffsetPoint(e.heatmapY,e.heatmapX,e.id,r),o=n.y,i=n.x;return{x:e.heatmapX*t+i,y:e.heatmapY*t+o}}function clamp(e,t,r){return e<t?t:e>r?r:e}function squaredDistance(e,t,r,n){var o=r-e,i=n-t;return o*o+i*i}function addVectors(e,t){return{x:e.x+t.x,y:e.y+t.y}}var parentChildrenTuples=poseChain.map(function(e){var t=e[0],r=e[1];return[partIds[t],partIds[r]]}),parentToChildEdges=parentChildrenTuples.map(function(e){return e[1]}),childToParentEdges=parentChildrenTuples.map(function(e){return e[0]});function getDisplacement(e,t,r){var n=r.shape[2]/2;return{y:r.get(t.y,t.x,e),x:r.get(t.y,t.x,n+e)}}function getStridedIndexNearPoint(e,t,r,n){return{y:clamp(Math.round(e.y/t),0,r-1),x:clamp(Math.round(e.x/t),0,n-1)}}function traverseToTargetKeypoint(e,t,r,n,o,i,s,a){void 0===a&&(a=2);for(var u=n.shape,l=u[0],f=u[1],c=getDisplacement(e,getStridedIndexNearPoint(t.position,i,l,f),s),d=addVectors(t.position,c),p=0;p<a;p++){var h=getStridedIndexNearPoint(d,i,l,f),m=getOffsetPoint(h.y,h.x,r,o);d=addVectors({x:h.x*i,y:h.y*i},{x:m.x,y:m.y})}var g=getStridedIndexNearPoint(d,i,l,f),_=n.get(g.y,g.x,r);return{position:d,part:partNames[r],score:_}}function decodePose(e,t,r,n,o,i){var s=t.shape[2],a=parentToChildEdges.length,u=new Array(s),l=e.part,f=e.score,c=getImageCoords(l,n,r);u[l.id]={score:f,part:partNames[l.id],position:c};for(var d=a-1;d>=0;--d){var p=parentToChildEdges[d],h=childToParentEdges[d];u[p]&&!u[h]&&(u[h]=traverseToTargetKeypoint(d,u[p],h,t,r,n,i))}for(d=0;d<a;++d){p=childToParentEdges[d],h=parentToChildEdges[d];u[p]&&!u[h]&&(u[h]=traverseToTargetKeypoint(d,u[p],h,t,r,n,o))}return u}function withinNmsRadiusOfCorrespondingPoint(e,t,r,n){var o=r.x,i=r.y;return e.some(function(e){var r=e.keypoints[n].position;return squaredDistance(i,o,r.y,r.x)<=t})}function getInstanceScore(e,t,r){return r.reduce(function(r,n,o){var i=n.position,s=n.score;return withinNmsRadiusOfCorrespondingPoint(e,t,i,o)||(r+=s),r},0)/r.length}var kLocalMaximumRadius=1;function decodeMultiplePoses(e,t,r,n,o,i,s,a){void 0===s&&(s=.5),void 0===a&&(a=20);for(var u=[],l=buildPartWithScoreQueue(s,kLocalMaximumRadius,e),f=a*a;u.length<i&&!l.empty();){var c=l.dequeue();if(!withinNmsRadiusOfCorrespondingPoint(u,f,getImageCoords(c.part,o,t),c.part.id)){var d=decodePose(c,e,t,o,r,n),p=getInstanceScore(u,f,d);u.push({keypoints:d,score:p})}}return u}var __assign=function(){return(__assign=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function __awaiter(e,t,r,n){return new(r||(r=Promise))(function(o,i){function s(e){try{u(n.next(e))}catch(e){i(e)}}function a(e){try{u(n.throw(e))}catch(e){i(e)}}function u(e){e.done?o(e.value):new r(function(t){t(e.value)}).then(s,a)}u((n=n.apply(e,t||[])).next())})}function __generator(e,t){var r,n,o,i,s={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(r)throw new TypeError(\"Generator is already executing.\");for(;s;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return s.label++,{value:i[1],done:!1};case 5:s.label++,n=i[1],i=[0];continue;case 7:i=s.ops.pop(),s.trys.pop();continue;default:if(!(o=(o=s.trys).length>0&&o[o.length-1])&&(6===i[0]||2===i[0])){s=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){s.label=i[1];break}if(6===i[0]&&s.label<o[1]){s.label=o[1],o=i;break}if(o&&s.label<o[2]){s.label=o[2],s.ops.push(i);break}o[2]&&s.ops.pop(),s.trys.pop();continue}i=t.call(e,s)}catch(e){i=[6,e],n=0}finally{r=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,a])}}}function eitherPointDoesntMeetConfidence(e,t,r){return e<r||t<r}function getAdjacentKeyPoints(e,t){return connectedPartIndices.reduce(function(r,n){var o=n[0],i=n[1];return eitherPointDoesntMeetConfidence(e[o].score,e[i].score,t)?r:(r.push([e[o],e[i]]),r)},[])}var NEGATIVE_INFINITY=Number.NEGATIVE_INFINITY,POSITIVE_INFINITY=Number.POSITIVE_INFINITY;function getBoundingBox(e){return e.reduce(function(e,t){var r=e.maxX,n=e.maxY,o=e.minX,i=e.minY,s=t.position,a=s.x,u=s.y;return{maxX:Math.max(r,a),maxY:Math.max(n,u),minX:Math.min(o,a),minY:Math.min(i,u)}},{maxX:NEGATIVE_INFINITY,maxY:NEGATIVE_INFINITY,minX:POSITIVE_INFINITY,minY:POSITIVE_INFINITY})}function getBoundingBoxPoints(e){var t=getBoundingBox(e),r=t.minX,n=t.minY,o=t.maxX,i=t.maxY;return[{x:r,y:n},{x:o,y:n},{x:o,y:i},{x:r,y:i}]}function toTensorBuffer(e,t){return void 0===t&&(t=\"float32\"),__awaiter(this,void 0,void 0,function(){var r;return __generator(this,function(n){switch(n.label){case 0:return[4,e.data()];case 1:return r=n.sent(),[2,buffer(e.shape,t,r)]}})})}function toTensorBuffers3D(e){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(t){return[2,Promise.all(e.map(function(e){return toTensorBuffer(e,\"float32\")}))]})})}function scalePose(e,t,r,n,o){return void 0===n&&(n=0),void 0===o&&(o=0),{score:e.score,keypoints:e.keypoints.map(function(e){var i=e.score,s=e.part,a=e.position;return{score:i,part:s,position:{x:a.x*r+o,y:a.y*t+n}}})}}function scalePoses(e,t,r,n,o){return void 0===n&&(n=0),void 0===o&&(o=0),1===r&&1===t&&0===n&&0===o?e:e.map(function(e){return scalePose(e,t,r,n,o)})}function flipPoseHorizontal(e,t){return{score:e.score,keypoints:e.keypoints.map(function(e){var r=e.score,n=e.part,o=e.position;return{score:r,part:n,position:{x:t-1-o.x,y:o.y}}})}}function flipPosesHorizontal(e,t){return t<=0?e:e.map(function(e){return flipPoseHorizontal(e,t)})}function getInputTensorDimensions(e){return e instanceof Tensor?[e.shape[0],e.shape[1]]:[e.height,e.width]}function toInputTensor(e){return e instanceof Tensor?e:browser.fromPixels(e)}function padAndResizeTo(e,t){var r=t[0],n=t[1],o=getInputTensorDimensions(e),i=o[0],s=o[1],a=n/r,u=[0,0,0,0],l=u[0],f=u[1],c=u[2],d=u[3];return s/i<a?(l=0,f=0,c=Math.round(.5*(a*i-s)),d=Math.round(.5*(a*i-s))):(l=Math.round(.5*(1/a*s-i)),f=Math.round(.5*(1/a*s-i)),c=0,d=0),{resized:tidy(function(){var t=toInputTensor(e);return(t=pad3d(t,[[l,f],[c,d],[0,0]])).resizeBilinear([r,n])}),padding:{top:l,left:c,right:d,bottom:f}}}function scaleAndFlipPoses(e,t,r,n,o){var i=t[0],s=t[1],a=r[0],u=r[1],l=scalePoses(e,(i+n.top+n.bottom)/a,(s+n.left+n.right)/u,-n.top,-n.left);return o?flipPosesHorizontal(l,s):l}function mod(e,t){return tidy(function(){var r=e.div(scalar(t,\"int32\"));return e.sub(r.mul(scalar(t,\"int32\")))})}function argmax2d(e){var t=e.shape,r=t[0],n=t[1],o=t[2];return tidy(function(){var t=e.reshape([r*n,o]).argMax(0),i=t.div(scalar(n,\"int32\")).expandDims(1),s=mod(t,n).expandDims(1);return concat([i,s],1)})}function getPointsConfidence(e,t){for(var r=t.shape[0],n=new Float32Array(r),o=0;o<r;o++){var i=t.get(o,0),s=t.get(o,1);n[o]=e.get(i,s,o)}return n}function getOffsetPoint$1(e,t,r,n){return{y:n.get(e,t,r),x:n.get(e,t,r+NUM_KEYPOINTS)}}function getOffsetVectors(e,t){for(var r=[],n=0;n<NUM_KEYPOINTS;n++){var o=getOffsetPoint$1(e.get(n,0).valueOf(),e.get(n,1).valueOf(),n,t),i=o.x,s=o.y;r.push(s),r.push(i)}return tensor2d(r,[NUM_KEYPOINTS,2])}function getOffsetPoints(e,t,r){return tidy(function(){var n=getOffsetVectors(e,r);return e.toTensor().mul(scalar(t,\"int32\")).toFloat().add(n)})}function decodeSinglePose(e,t,r){return __awaiter(this,void 0,void 0,function(){var n,o,i,s,a,u,l,f,c,d;return __generator(this,function(p){switch(p.label){case 0:return n=0,o=argmax2d(e),[4,Promise.all([toTensorBuffer(e),toTensorBuffer(t),toTensorBuffer(o,\"int32\")])];case 1:return i=p.sent(),s=i[0],a=i[1],u=i[2],[4,toTensorBuffer(l=getOffsetPoints(u,r,a))];case 2:return f=p.sent(),c=Array.from(getPointsConfidence(s,u)),d=c.map(function(e,t){return n+=e,{position:{y:f.get(t,0),x:f.get(t,1)},part:partNames[t],score:e}}),o.dispose(),l.dispose(),[2,{keypoints:d,score:n/d.length}]}})})}var MOBILENET_BASE_URL=\"https://storage.googleapis.com/tfjs-models/savedmodel/posenet/mobilenet/\",RESNET50_BASE_URL=\"https://storage.googleapis.com/tfjs-models/savedmodel/posenet/resnet50/\";function resNet50Checkpoint(e,t){var r=\"model-stride\"+e+\".json\";return 4==t?RESNET50_BASE_URL+\"float/\"+r:RESNET50_BASE_URL+\"quant\"+t+\"/\"+r}function mobileNetCheckpoint(e,t,r){var n={1:\"100\",.75:\"075\",.5:\"050\"},o=\"model-stride\"+e+\".json\";return 4==r?MOBILENET_BASE_URL+\"float/\"+n[t]+\"/\"+o:MOBILENET_BASE_URL+\"quant\"+r+\"/\"+n[t]+\"/\"+o}function toFloatIfInt$1(e){return tidy(function(){\"int32\"===e.dtype&&(e=e.toFloat());var t=tensor([-123.15,-115.9,-103.06]);return e.add(t)})}var ResNet=function(){function e(e,t){this.model=e;var r=this.model.inputs[0].shape;util.assert(-1===r[1]&&-1===r[2],function(){return\"Input shape [\"+r[1]+\", \"+r[2]+\"] must both be equal to or -1\"}),this.outputStride=t}return e.prototype.predict=function(e){var t=this;return tidy(function(){var r=toFloatIfInt$1(e).expandDims(0),n=t.model.predict(r),o=n[0],i=n[1],s=n[2];return{heatmapScores:n[3].squeeze().sigmoid(),offsets:s.squeeze(),displacementFwd:o.squeeze(),displacementBwd:i.squeeze()}})},e.prototype.dispose=function(){this.model.dispose()},e}(),MOBILENET_V1_CONFIG={architecture:\"MobileNetV1\",outputStride:16,multiplier:.75,inputResolution:257},VALID_ARCHITECTURE=[\"MobileNetV1\",\"ResNet50\"],VALID_STRIDE={MobileNetV1:[8,16,32],ResNet50:[32,16]},VALID_INPUT_RESOLUTION=[161,193,257,289,321,353,385,417,449,481,513,801],VALID_MULTIPLIER={MobileNetV1:[.5,.75,1],ResNet50:[1]},VALID_QUANT_BYTES=[1,2,4];function validateModelConfig(e){if(null==(e=e||MOBILENET_V1_CONFIG).architecture&&(e.architecture=\"MobileNetV1\"),VALID_ARCHITECTURE.indexOf(e.architecture)<0)throw new Error(\"Invalid architecture \"+e.architecture+\". Should be one of \"+VALID_ARCHITECTURE);if(null==e.inputResolution&&(e.inputResolution=257),VALID_INPUT_RESOLUTION.indexOf(e.inputResolution)<0)throw new Error(\"Invalid inputResolution \"+e.inputResolution+\". Should be one of \"+VALID_INPUT_RESOLUTION);if(null==e.outputStride&&(e.outputStride=16),VALID_STRIDE[e.architecture].indexOf(e.outputStride)<0)throw new Error(\"Invalid outputStride \"+e.outputStride+\". Should be one of \"+VALID_STRIDE[e.architecture]+\" for architecutre \"+e.architecture+\".\");if(null==e.multiplier&&(e.multiplier=1),VALID_MULTIPLIER[e.architecture].indexOf(e.multiplier)<0)throw new Error(\"Invalid multiplier \"+e.multiplier+\". Should be one of \"+VALID_MULTIPLIER[e.architecture]+\" for architecutre \"+e.architecture+\".\");if(null==e.quantBytes&&(e.quantBytes=4),VALID_QUANT_BYTES.indexOf(e.quantBytes)<0)throw new Error(\"Invalid quantBytes \"+e.quantBytes+\". Should be one of \"+VALID_QUANT_BYTES+\" for architecutre \"+e.architecture+\".\");return e}var SINGLE_PERSON_INFERENCE_CONFIG={flipHorizontal:!1},MULTI_PERSON_INFERENCE_CONFIG={flipHorizontal:!1,maxDetections:5,scoreThreshold:.5,nmsRadius:20};function validateMultiPersonInputConfig(e){var t=e.maxDetections,r=e.scoreThreshold,n=e.nmsRadius;if(t<=0)throw new Error(\"Invalid maxDetections \"+t+\". Should be > 0\");if(r<0||r>1)throw new Error(\"Invalid scoreThreshold \"+r+\". Should be in range [0.0, 1.0]\");if(n<=0)throw new Error(\"Invalid nmsRadius \"+n+\".\")}var PoseNet=function(){function e(e,t){this.baseModel=e,this.inputResolution=t}return e.prototype.estimateMultiplePoses=function(e,t){return void 0===t&&(t=MULTI_PERSON_INFERENCE_CONFIG),__awaiter(this,void 0,void 0,function(){var r,n,o,i,s,a,u,l,f,c,d,p,h,m,g,_,I,E,v,N,y;return __generator(this,function(T){switch(T.label){case 0:return r=__assign({},MULTI_PERSON_INFERENCE_CONFIG,t),validateMultiPersonInputConfig(t),n=this.baseModel.outputStride,o=this.inputResolution,assertValidOutputStride(n),assertValidResolution(this.inputResolution,n),i=getInputTensorDimensions(e),s=i[0],a=i[1],u=padAndResizeTo(e,[o,o]),l=u.resized,f=u.padding,c=this.baseModel.predict(l),d=c.heatmapScores,p=c.offsets,h=c.displacementFwd,m=c.displacementBwd,[4,toTensorBuffers3D([d,p,h,m])];case 1:return g=T.sent(),_=g[0],I=g[1],E=g[2],v=g[3],[4,decodeMultiplePoses(_,I,E,v,n,r.maxDetections,r.scoreThreshold,r.nmsRadius)];case 2:return N=T.sent(),y=scaleAndFlipPoses(N,[s,a],[o,o],f,r.flipHorizontal),d.dispose(),p.dispose(),h.dispose(),m.dispose(),l.dispose(),[2,y]}})})},e.prototype.estimateSinglePose=function(e,t){return void 0===t&&(t=SINGLE_PERSON_INFERENCE_CONFIG),__awaiter(this,void 0,void 0,function(){var r,n,o,i,s,a,u,l,f,c,d,p,h,m,g,_;return __generator(this,function(I){switch(I.label){case 0:return r=__assign({},SINGLE_PERSON_INFERENCE_CONFIG,t),n=this.baseModel.outputStride,o=this.inputResolution,assertValidOutputStride(n),assertValidResolution(o,n),i=getInputTensorDimensions(e),s=i[0],a=i[1],u=padAndResizeTo(e,[o,o]),l=u.resized,f=u.padding,c=this.baseModel.predict(l),d=c.heatmapScores,p=c.offsets,h=c.displacementFwd,m=c.displacementBwd,[4,decodeSinglePose(d,p,n)];case 1:return g=I.sent(),_=scaleAndFlipPoses([g],[s,a],[o,o],f,r.flipHorizontal),d.dispose(),p.dispose(),h.dispose(),m.dispose(),l.dispose(),[2,_[0]]}})})},e.prototype.estimatePoses=function(e,t){return __awaiter(this,void 0,void 0,function(){return __generator(this,function(r){switch(r.label){case 0:return\"single-person\"!=t.decodingMethod?[3,2]:[4,this.estimateSinglePose(e,t)];case 1:return[2,[r.sent()]];case 2:return[2,this.estimateMultiplePoses(e,t)]}})})},e.prototype.dispose=function(){this.baseModel.dispose()},e}();function loadMobileNet(e){return __awaiter(this,void 0,void 0,function(){var t,r,n,o,i,s;return __generator(this,function(a){switch(a.label){case 0:if(t=e.outputStride,r=e.quantBytes,n=e.multiplier,null==tf)throw new Error(\"Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\\n        model.\");return o=mobileNetCheckpoint(t,n,r),[4,loadGraphModel(e.modelUrl||o)];case 1:return i=a.sent(),s=new MobileNet(i,t),[2,new PoseNet(s,e.inputResolution)]}})})}function loadResNet(e){return __awaiter(this,void 0,void 0,function(){var t,r,n,o,i;return __generator(this,function(s){switch(s.label){case 0:if(t=e.outputStride,r=e.quantBytes,null==tf)throw new Error(\"Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\\n        model.\");return n=resNet50Checkpoint(t,r),[4,loadGraphModel(e.modelUrl||n)];case 1:return o=s.sent(),i=new ResNet(o,t),[2,new PoseNet(i,e.inputResolution)]}})})}function load(e){return void 0===e&&(e=MOBILENET_V1_CONFIG),__awaiter(this,void 0,void 0,function(){return __generator(this,function(t){return\"ResNet50\"===(e=validateModelConfig(e)).architecture?[2,loadResNet(e)]:\"MobileNetV1\"===e.architecture?[2,loadMobileNet(e)]:[2,null]})})}export{decodeMultiplePoses,decodeSinglePose,MobileNet,partChannels,partIds,partNames,poseChain,load,PoseNet,VALID_INPUT_RESOLUTION,getAdjacentKeyPoints,getBoundingBox,getBoundingBoxPoints,scalePose};\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n/**\n * Handle pose estimation with PoseNet.\n */\nimport * as posenet from \"@tensorflow-models/posenet\";\n\nexport default class PoseDetection {\n  constructor(video, mobile) {\n    this.video = video;\n    this.guiState;\n    this.isMobile = mobile;\n    this.algorithm = \"single\"; // \"single\" or \"multi\"\n    this.flipHorizontal = true; // Flip on the horizontal plane because using front facing webcam\n    this.smoothFactor = 0.75; // Amount of basic smoothing, between 0 - 1\n    this.smoothPrevPose;\n    this.smoothPrevPoses = [];\n  }\n\n  async initPoseDetection() {\n    // this.net = await posenet.load(0.75); // Old version of posenet\n    this.net = await posenet.load({\n    architecture: 'MobileNetV1',\n    outputStride: 16,\n    inputResolution: 513,\n    multiplier: 0.75});\n\n  }\n\n  initGui(gui) {\n    this.guiState = {\n      algorithm: \"single-pose\",\n      smoothing: this.smoothFactor,\n      input: {\n        mobileNetArchitecture: this.isMobile ? \"0.50\" : \"0.75\",\n        outputStride: 16,\n        imageScaleFactor: 0.5\n      },\n      singlePoseDetection: {\n        minPoseConfidence: 0.25,\n        minPartConfidence: 0.5\n      },\n      multiPoseDetection: {\n        maxPoseDetections: 5,\n        minPoseConfidence: 0.15,\n        minPartConfidence: 0.1,\n        nmsRadius: 30.0\n      }\n    };\n\n    // The single-pose algorithm is faster and simpler but requires only one\n    // person to be in the frame or results will be innaccurate. Multi-pose works\n    // for more than 1 person\n    const algorithmController = gui.add(this.guiState, \"algorithm\", [\n      \"single-pose\",\n      \"multi-pose\"\n    ]).listen();\n\n    const smoothingController = gui\n      .add(this.guiState, \"smoothing\")\n      .min(0.0)\n      .max(1.0);\n\n    // The input parameters have the most effect on accuracy and speed of the\n    // network\n    let input = gui.addFolder(\"Input\");\n\n    // Architecture: there are a few PoseNet models varying in size and\n    // accuracy. 1.01 is the largest, but will be the slowest. 0.50 is the\n    // fastest, but least accurate.\n    const architectureController = input.add(\n      this.guiState.input,\n      \"mobileNetArchitecture\",\n      [\"1.01\", \"1.00\", \"0.75\", \"0.50\"]\n    );\n    // Output stride:  Internally, this parameter affects the height and width of\n    // the layers in the neural network. The lower the value of the output stride\n    // the higher the accuracy but slower the speed, the higher the value the\n    // faster the speed but lower the accuracy.\n    input.add(this.guiState.input, \"outputStride\", [8, 16, 32]);\n    // Image scale factor: What to scale the image by before feeding it through\n    // the network.\n    input\n      .add(this.guiState.input, \"imageScaleFactor\")\n      .min(0.2)\n      .max(1.0);\n    input.close();\n\n    // Pose confidence: the overall confidence in the estimation of a person's\n    // pose (i.e. a person detected in a frame)\n    // Min part confidence: the confidence that a particular estimated keypoint\n    // position is accurate (i.e. the elbow's position)\n    let single = gui.addFolder(\"Single Pose Detection\");\n    single.add(\n      this.guiState.singlePoseDetection,\n      \"minPoseConfidence\",\n      0.0,\n      1.0\n    );\n    single.add(\n      this.guiState.singlePoseDetection,\n      \"minPartConfidence\",\n      0.0,\n      1.0\n    );\n\n    let multi = gui.addFolder(\"Multi Pose Detection\");\n    multi\n      .add(this.guiState.multiPoseDetection, \"maxPoseDetections\")\n      .min(1)\n      .max(20)\n      .step(1);\n    multi.add(this.guiState.multiPoseDetection, \"minPoseConfidence\", 0.0, 1.0);\n    multi.add(this.guiState.multiPoseDetection, \"minPartConfidence\", 0.0, 1.0);\n    // nms Radius: controls the minimum distance between poses that are returned\n    // defaults to 20, which is probably fine for most use cases\n    multi\n      .add(this.guiState.multiPoseDetection, \"nmsRadius\")\n      .min(0.0)\n      .max(40.0);\n    multi.close();\n\n    architectureController.onChange((architecture) => {\n      this.guiState.changeToArchitecture = architecture;\n    });\n\n    algorithmController.onChange((value) => {\n      switch (value) {\n        case \"single-pose\":\n          multi.close();\n          single.open();\n          this.algorithm = \"single\";\n          break;\n        case \"multi-pose\":\n          single.close();\n          multi.open();\n          this.algorithm = \"multi\";\n          break;\n      }\n    });\n\n    smoothingController.onChange((value) => {\n      this.smoothFactor = value;\n    });\n  }\n\n  useMultiPose() {\n    this.guiState.algorithm = \"multi-pose\";\n    this.algorithm = \"multi\";\n  }\n\n  useSinglePose() {\n    this.guiState.algorithm = \"single-pose\";\n    this.algorithm = \"single\";\n  }\n\n  async getPoses() {\n    if (this.guiState.changeToArchitecture) {\n      // Important to purge variables and free up GPU memory\n      this.net.dispose();\n\n      // Load the PoseNet model weights for either the 0.50, 0.75, 1.00, or 1.01\n      // version\n      // PoseNet model as argument\n      this.net = await posenet.load(+this.guiState.changeToArchitecture);\n\n      this.guiState.changeToArchitecture = null;\n    }\n\n    // Scale an image down to a certain factor. Too large of an image will slow\n    // down the GPU\n    const imageScaleFactor = this.guiState.input.imageScaleFactor;\n    const outputStride = +this.guiState.input.outputStride;\n    const flipHorizonal = this.flipHorizontal;\n\n    let poses = [];\n    switch (this.algorithm) {\n      case \"single\":\n        const pose = await this.net.estimateSinglePose(this.video, {\n          flipHorizontal: this.flipHorizontal\n        });\n\n        poses.push(pose);\n        break;\n      case \"multi\":\n          poses = await this.net.estimateMultiplePoses(\n          this.video, {\n            flipHorizontal: this.flipHorizontal,\n            maxDetections: 5,\n            scoreThreshold: this.guiState.multiPoseDetection.minPartConfidence,\n            nmsRadius: this.guiState.multiPoseDetection.nmsRadius\n          });\n        break;\n    }\n\n    let newPoses = [];\n    for (let p = 0; p < poses.length; p++) {\n      let pose = poses[p];\n      pose = this.smoothPose(this.smoothFactor, pose, p);\n\n      // Add parts mapping\n      pose.parts = [];\n      pose.keypoints.forEach((point) => {\n        pose.parts[point.part] = point;\n      });\n\n      if (pose.score > this.guiState.multiPoseDetection.minPoseConfidence) {\n        newPoses.push(pose);\n      }\n    }\n    return newPoses;\n  }\n\n  getAdjacentKeyPoints(keypoints, minConfidence) {\n    return posenet.getAdjacentKeyPoints(keypoints, minConfidence);\n  }\n\n  getBoundingBox(keypoints) {\n    return posenet.getBoundingBox(keypoints);\n  }\n\n  getDistance(a, b) {\n    const distX = a.x - b.x;\n    const distY = a.y - b.y;\n    return Math.sqrt(distX ** 2 + distY ** 2);\n  }\n\n  getKeypoint(pose, part) {\n    return pose.keypoints.filter((keypoint) => keypoint.part === part)[0];\n  }\n\n  getKeypoints(pose, parts) {\n    const keypoints = {};\n    if (parts) {\n      parts.forEach((part) => {\n        keypoints[part] = this.getKeypoint(pose, part);\n      });\n    } else {\n      pose.keypoints.forEach((keypoint) => {\n        keypoints[keypoint.part] = this.getKeypoint(pose, keypoint.part);\n      });\n    }\n    return keypoints;\n  }\n\n  smoothPose(smoothFactor, pose, p) {\n    if (!this.smoothPrevPoses[p]) {\n      this.smoothPrevPoses[p] = pose;\n      return pose;\n    }\n    let smoothPrevPose = this.smoothPrevPoses[p];\n\n    const keypoints = pose.keypoints;\n    const prevKeypoints = smoothPrevPose.keypoints;\n    const smoothKeypoints = keypoints;\n\n    for (let p = 0; p < keypoints.length; p++) {\n      const pos = keypoints[p].position;\n      const prevPos = prevKeypoints[p].position;\n      const smoothPos = smoothKeypoints[p].position;\n\n      smoothPos.x = (prevPos.x - pos.x) * smoothFactor + pos.x;\n      smoothPos.y = (prevPos.y - pos.y) * smoothFactor + pos.y;\n    }\n\n    let smoothPose = {};\n    smoothPose.keypoints = smoothKeypoints;\n    smoothPose.score = pose.score;\n    this.smoothPrevPoses[p] = smoothPose;\n    return smoothPose;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Emojis\nimport head0 from '../assets/bodypieces/head/1.png';\nimport leftForearm0 from '../assets/bodypieces/leftForearm/1.png';\nimport leftShin0 from '../assets/bodypieces/leftShin/1.png';\nimport leftThigh0 from '../assets/bodypieces/leftThigh/1.png';\nimport leftUpperarm0 from '../assets/bodypieces/leftUpperarm/1.png';\nimport rightForearm0 from '../assets/bodypieces/rightForearm/1.png';\nimport rightShin0 from '../assets/bodypieces/rightShin/1.png';\nimport rightThigh0 from '../assets/bodypieces/rightThigh/1.png';\nimport rightUpperarm0 from '../assets/bodypieces/rightUpperarm/1.png';\nimport torso0 from '../assets/bodypieces/torso/1.png';\n\nlet headPaths = [head0];\nlet heads = [];\nheadPaths.forEach((path) => {\n  let img = new Image();\n  img.src = path;\n  heads.push(img);\n});\n\nlet torsoPaths = [torso0];\nlet torsos = [];\ntorsoPaths.forEach((path) => {\n  let img = new Image();\n  img.src = path;\n  torsos.push(img);\n});\n\nlet leftForearmPaths = [leftForearm0];\nlet leftForearms = [];\nleftForearmPaths.forEach((path) => {\n  let img = new Image();\n  img.src = path;\n  leftForearms.push(img);\n});\n\nlet leftShinPaths = [leftShin0];\nlet leftShins = [];\nleftShinPaths.forEach((path) => {\n  let img = new Image();\n  img.src = path;\n  leftShins.push(img);\n});\n\nlet leftThighPaths = [leftThigh0];\nlet leftThighs = [];\nleftThighPaths.forEach((path) => {\n  let img = new Image();\n  img.src = path;\n  leftThighs.push(img);\n});\n\nlet leftUpperarmPaths = [leftUpperarm0];\nlet leftUpperarms = [];\nleftUpperarmPaths.forEach((path) => {\n  let img = new Image();\n  img.src = path;\n  leftUpperarms.push(img);\n});\n\nlet rightForearmPaths = [rightForearm0];\nlet rightForearms = [];\nrightForearmPaths.forEach((path) => {\n  let img = new Image();\n  img.src = path;\n  rightForearms.push(img);\n});\n\nlet rightShinPaths = [rightShin0];\nlet rightShins = [];\nrightShinPaths.forEach((path) => {\n  let img = new Image();\n  img.src = path;\n  rightShins.push(img);\n});\n\nlet rightThighPaths = [rightThigh0];\nlet rightThighs = [];\nrightThighPaths.forEach((path) => {\n  let img = new Image();\n  img.src = path;\n  rightThighs.push(img);\n});\n\nlet rightUpperarmPaths = [rightUpperarm0];\nlet rightUpperarms = [];\nrightUpperarmPaths.forEach((path) => {\n  let img = new Image();\n  img.src = path;\n  rightUpperarms.push(img);\n});\n\nlet canvas = document.getElementById('output');\nlet ctx = canvas.getContext('2d');\n\nlet livestreamCanvas = document.getElementById('livestream');\nlet livestreamCtx = livestreamCanvas.getContext('2d');\n\nlet poseDetection;\nlet video;\nlet videoWidth, videoHeight;\n\nlet sketchGuiState = {\n  showVideo: false,\n  showSideVideo: true,\n  backgroundColor: '#ac4eff',\n  collageIndex: 0,\n  keypoints: {\n    showPoints: true,\n    pointsColor: '#ffef7a',\n    pointsStyle: 'fill',\n    pointSize: 5,\n  },\n};\n\nexport function setupSketch(\n  thePoseDetection,\n  theVideo,\n  theVideoWidth,\n  theVideoHeight\n) {\n  poseDetection = thePoseDetection;\n  video = theVideo;\n  videoWidth = theVideoWidth;\n  videoHeight = theVideoHeight;\n\n  canvas.width = videoWidth;\n  canvas.height = videoHeight;\n\n  livestreamCanvas.width = videoWidth;\n  livestreamCanvas.height = videoHeight;\n\n  sketchLoop();\n}\n\nexport function initSketchGui(gui) {\n  gui.open();\n\n  gui.add(sketchGuiState, 'showVideo');\n  let sideVideoController = gui.add(sketchGuiState, 'showSideVideo');\n  sideVideoController.onChange((newVal) => {\n    if (newVal) {\n      livestreamCanvas.style.display = 'inline-block';\n    } else {\n      livestreamCanvas.style.display = 'none';\n    }\n  });\n\n  gui.addColor(sketchGuiState, 'backgroundColor');\n  // gui.add(sketchGuiState, \"collageIndex\", [0, 1, 2]);\n\n  let keypoints = gui.addFolder('Keypoints');\n  keypoints.add(sketchGuiState.keypoints, 'showPoints');\n  keypoints.addColor(sketchGuiState.keypoints, 'pointsColor');\n  keypoints.add(sketchGuiState.keypoints, 'pointsStyle', ['fill', 'outline']);\n  keypoints\n    .add(sketchGuiState.keypoints, 'pointSize')\n    .min(1)\n    .max(200)\n    .step(1);\n  keypoints.open();\n}\n\nlet pointIndexesInOrder = [1, 2, 4, 6, 8, 10, 16, 15, 9, 7, 5, 3, 1];\nlet newArray = shuffle(pointIndexesInOrder);\n\nlet poses;\nlet getNewFrame = true;\nasync function sketchLoop() {\n  if (getNewFrame) {\n    poses = await poseDetection.getPoses();\n  }\n  getNewFrame = !getNewFrame;\n\n  let minPoseConfidence;\n  let minPartConfidence;\n\n  switch (poseDetection.guiState.algorithm) {\n    case 'single-pose':\n      minPoseConfidence = +poseDetection.guiState.singlePoseDetection\n        .minPoseConfidence;\n      minPartConfidence = +poseDetection.guiState.singlePoseDetection\n        .minPartConfidence;\n      break;\n    case 'multi-pose':\n      minPoseConfidence = +poseDetection.guiState.multiPoseDetection\n        .minPoseConfidence;\n      minPartConfidence = +poseDetection.guiState.multiPoseDetection\n        .minPartConfidence;\n      break;\n  }\n\n  ctx.save();\n\n  // Clear canvas with each loop\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  // Background\n  ctx.fillStyle = sketchGuiState.backgroundColor;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  // Draw the video on the canvas\n  if (sketchGuiState.showVideo) {\n    ctx.save();\n    ctx.scale(-1, 1);\n    ctx.translate(-canvas.width, 0);\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n    ctx.restore();\n  }\n\n  poses.forEach((pose) => {\n    let singlePose = pose;\n    let distanceScale = poseDetection.getDistance(\n      singlePose.parts.leftEye.position,\n      singlePose.parts.leftEar.position\n    );\n\n    let keypoints = pose.keypoints;\n    let score = pose.score;\n    \n    // Left arm\n    drawLimb(\n      singlePose.parts.leftShoulder,\n      singlePose.parts.leftElbow,\n      minPartConfidence,\n      leftUpperarms[sketchGuiState.collageIndex],\n      ctx\n    );\n    drawLimb(\n      singlePose.parts.leftElbow,\n      singlePose.parts.leftWrist,\n      minPartConfidence,\n      leftForearms[sketchGuiState.collageIndex],\n      ctx\n    );\n\n    // Right arm\n    drawLimb(\n      singlePose.parts.rightElbow,\n      singlePose.parts.rightWrist,\n      minPartConfidence,\n      rightForearms[sketchGuiState.collageIndex],\n      ctx\n    );\n    drawLimb(\n      singlePose.parts.rightShoulder,\n      singlePose.parts.rightElbow,\n      minPartConfidence,\n      rightUpperarms[sketchGuiState.collageIndex],\n      ctx\n    );\n\n    // Left leg\n    drawLimb(\n      singlePose.parts.leftHip,\n      singlePose.parts.leftKnee,\n      minPartConfidence,\n      leftThighs[sketchGuiState.collageIndex],\n      ctx\n    );\n    drawLimb(\n      singlePose.parts.leftKnee,\n      singlePose.parts.leftAnkle,\n      minPartConfidence,\n      leftShins[sketchGuiState.collageIndex],\n      ctx\n    );\n\n    // Right leg\n    drawLimb(\n      singlePose.parts.rightHip,\n      singlePose.parts.rightKnee,\n      minPartConfidence,\n      rightThighs[sketchGuiState.collageIndex],\n      ctx\n    );\n    drawLimb(\n      singlePose.parts.rightKnee,\n      singlePose.parts.rightAnkle,\n      minPartConfidence,\n      rightShins[sketchGuiState.collageIndex],\n      ctx\n    );\n\n    let torsoImage = torsos[sketchGuiState.collageIndex];\n\n    // Torso\n    ctx.drawImage(\n      torsoImage,\n      singlePose.parts.leftShoulder.position.x,\n      singlePose.parts.leftShoulder.position.y,\n      poseDetection.getDistance(\n        singlePose.parts.leftShoulder.position,\n        singlePose.parts.rightShoulder.position\n      ),\n      poseDetection.getDistance(\n        singlePose.parts.leftShoulder.position,\n        singlePose.parts.leftHip.position\n      )\n    );\n\n    let headImage = heads[sketchGuiState.collageIndex];\n\n    // Head\n    let headWidth = poseDetection.getDistance(\n      singlePose.parts.leftEar.position,\n      singlePose.parts.rightEar.position\n    );\n\n    let headHeight = poseDetection.getDistance(\n      singlePose.parts.rightEye.position,\n      singlePose.parts.rightShoulder.position\n    );\n\n    ctx.drawImage(\n      headImage,\n      singlePose.parts.nose.position.x - headWidth / 2,\n      singlePose.parts.leftEye.position.y - headHeight / 2,\n      headWidth,\n      headHeight\n    );\n    if (sketchGuiState.keypoints.showPoints) {\n      drawKeypoints(keypoints, minPartConfidence, ctx);\n    }\n  });\n\n  ctx.restore();\n\n  if (sketchGuiState.showSideVideo) {\n    livestreamCtx.save();\n    livestreamCtx.scale(-1, 1);\n    livestreamCtx.translate(-canvas.width, 0);\n    livestreamCtx.drawImage(video, 0, 0, canvas.width, canvas.height);\n    livestreamCtx.restore();\n  }\n\n  requestAnimationFrame(sketchLoop);\n}\n\nfunction drawLimb(part1, part2, minPartConfidence, theImage, ctx) {\n  let pos1 = part1.position;\n  let pos2 = part2.position;\n\n  if (part1.score > minPartConfidence && part2.score > minPartConfidence) {\n    let img = theImage;\n\n    let c = poseDetection.getDistance(pos1, pos2);\n    let d = Math.sqrt(\n      Math.pow(pos1.x - pos2.x, 2) + Math.pow(pos1.y + c - pos2.y, 2)\n    );\n    let rotation = Math.acos(1 - Math.pow(d, 2) / (2 * Math.pow(c, 2)));\n    if (pos2.x > pos1.x) {\n      rotation *= -1;\n    }\n\n    let w = (img.width * c) / img.height;\n    ctx.save();\n    ctx.translate(pos1.x, pos1.y);\n    ctx.rotate(rotation);\n    ctx.drawImage(img, 0, 0, w, c);\n    ctx.restore();\n  }\n}\n\nfunction shuffle(array) {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  let newArray = array.slice();\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = newArray[currentIndex];\n    newArray[currentIndex] = newArray[randomIndex];\n    newArray[randomIndex] = temporaryValue;\n  }\n\n  return newArray;\n}\n\nexport function drawPoint(ctx, y, x, r, color) {\n  ctx.beginPath();\n  ctx.arc(x, y, r, 0, 2 * Math.PI);\n  ctx.fillStyle = color;\n  ctx.strokeStyle = color;\n\n  if (sketchGuiState.keypoints.pointsStyle == 'fill') {\n    ctx.fill();\n  } else if (sketchGuiState.keypoints.pointsStyle == 'outline') {\n    ctx.stroke();\n  }\n}\n\n/**\n * Draw pose keypoints onto a canvas\n */\nexport function drawKeypoints(keypoints, minConfidence, ctx, scale = 1) {\n  for (let i = 0; i < keypoints.length; i++) {\n    const keypoint = keypoints[i];\n\n    if (keypoint.score < minConfidence) {\n      continue;\n    }\n\n    const {y, x} = keypoint.position;\n    drawPoint(\n      ctx,\n      y * scale,\n      x * scale,\n      sketchGuiState.keypoints.pointSize,\n      sketchGuiState.keypoints.pointsColor\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport dat from \"dat.gui\";\nimport PoseDetection from \"../../PoseDetection\";\nimport { setupSketch, initSketchGui } from \"./sketch\";\n\nconst videoWidth = window.innerWidth/2.8;\nconst videoHeight = window.innerWidth/2.8;\ndocument.getElementById(\"canvas-container\").style.marginTop = (window.innerHeight/2 - videoHeight/2) + 'px'\n\nconst mobile = isMobile();\n\nfunction isAndroid() {\n  return /Android/i.test(navigator.userAgent);\n}\n\nfunction isiOS() {\n  return /iPhone|iPad|iPod/i.test(navigator.userAgent);\n}\n\nfunction isMobile() {\n  return isAndroid() || isiOS();\n}\n\n/**\n * Loads a the camera to be used in the demo\n *\n */\nasync function setupCamera() {\n  if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n    throw new Error(\n      \"Browser API navigator.mediaDevices.getUserMedia not available\"\n    );\n  }\n\n  const video = document.getElementById(\"video\");\n  video.width = videoWidth;\n  video.height = videoHeight;\n\n  const stream = await navigator.mediaDevices.getUserMedia({\n    audio: false,\n    video: {\n      facingMode: \"user\",\n      width: mobile ? undefined : videoWidth,\n      height: mobile ? undefined : videoHeight\n    }\n  });\n  video.srcObject = stream;\n\n  return new Promise(resolve => {\n    video.onloadedmetadata = () => {\n      resolve(video);\n    };\n  });\n}\n\nasync function loadVideo() {\n  const video = await setupCamera();\n  video.play();\n\n  return video;\n}\n\n/**\n * Kicks off the demo by loading the posenet model, finding and loading\n * available camera devices, and setting off the detectPoseInRealTime function.\n */\nexport async function bindPage() {\n  // Load the PoseNet model weights with architecture 0.75\n  document.getElementById(\"loading\").style.display = \"none\";\n  document.getElementById(\"main\").style.display = \"block\";\n\n  let video;\n  try {\n    video = await loadVideo();\n  } catch (e) {\n    let info = document.getElementById(\"info\");\n    info.textContent =\n      \"this browser does not support video capture,\" +\n      \"or this device does not have a camera\";\n    info.style.display = \"block\";\n    throw e;\n  }\n\n  const gui = new dat.GUI({ width: 250 });\n  const detectionGui = gui.addFolder('Detection');\n  const sketchGui = gui.addFolder(\"Sketch\");\n\n  let poseDetection = new PoseDetection(video, mobile);\n  poseDetection.initPoseDetection().then(() => {\n    setupSketch(poseDetection, video, videoWidth, videoHeight);\n    initSketchGui(sketchGui);\n  });\n  poseDetection.initGui(detectionGui);\n}\n\nnavigator.getUserMedia =\n  navigator.getUserMedia ||\n  navigator.webkitGetUserMedia ||\n  navigator.mozGetUserMedia;\n// Kick off the demo\nbindPage();\n"]}